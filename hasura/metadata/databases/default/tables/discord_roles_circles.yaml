table:
  name: roles_circles
  schema: discord
object_relationships:
  - name: circle
    using:
      foreign_key_constraint_on: circle_id
insert_permissions:
  - role: api-user
    permission:
      check:
        circle:
          api_keys:
            _and:
              - hash:
                  _eq: X-Hasura-Api-Key-Hash
              - update_circle:
                  _eq: true
      set:
        circle_id: x-hasura-Circle-Id
      columns:
        - role
select_permissions:
  - role: api-user
    permission:
      columns:
        - circle_id
        - id
        - role
      filter:
        circle:
          api_keys:
            _and:
              - hash:
                  _eq: X-Hasura-Api-Key-Hash
              - read_discord:
                  _eq: true
  - role: user
    permission:
      columns:
        - circle_id
        - id
        - role
        - created_at
        - updated_at
      filter:
        circle:
          users:
            _and:
              - profile:
                  id:
                    _eq: X-Hasura-User-Id
              - deleted_at:
                  _is_null: true
update_permissions:
  - role: api-user
    permission:
      columns:
        - role
      filter:
        circle:
          api_keys:
            _and:
              - hash:
                  _eq: X-Hasura-Api-Key-Hash
              - update_circle:
                  _eq: true
      check: null
  - role: user
    permission:
      columns:
        - role
      filter:
        circle:
          users:
            _and:
              - profile:
                  id:
                    _eq: X-Hasura-User-Id
              - deleted_at:
                  _is_null: true
              - role:
                  _eq: 1
      check: null
delete_permissions:
  - role: api-user
    permission:
      backend_only: false
      filter:
        circle:
          api_keys:
            _and:
              - hash:
                  _eq: X-Hasura-Api-Key-Hash
              - update_circle:
                  _eq: true
