services:
  postgres:
    image: ankane/pgvector:latest
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - ${LOCAL_POSTGRES_PORT}:5432
    environment:
      POSTGRES_PASSWORD: ${LOCAL_POSTGRES_PASSWORD}
    command: ["postgres", "-c", "log_statement=all", "-c", "log_min_messages=debug1"]


  # Hasura
  graphql-engine:
    image: hasura/graphql-engine:v2.45.1.cli-migrations-v3
    volumes:
      - ./hasura/migrations:/hasura-migrations
      - ./hasura/metadata:/hasura-metadata
    ports:
      - ${LOCAL_HASURA_PORT:-8080}:8080
    depends_on:
      - postgres
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: postgres://${LOCAL_POSTGRES_USER}:${LOCAL_POSTGRES_PASSWORD}@postgres/${LOCAL_POSTGRES_DATABASE}
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true'
      HASURA_GRAPHQL_DEV_MODE: 'true'
      HASURA_GRAPHQL_ENABLED_LOG_TYPES: startup, http-log, webhook-log, websocket-log, query-log
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      HASURA_EVENT_SECRET: ${HASURA_EVENT_SECRET}
      # Linux (read: non macOS or Windows) users should
      # `export DOCKER_GATEWAY_HOST=172.17.0.1` to interact with the host machine's ports
      HASURA_API_BASE_URL: http://${DOCKER_GATEWAY_HOST:-host.docker.internal}:${LOCAL_WEB_PORT}/api/hasura
      HASURA_GRAPHQL_AUTH_HOOK: http://${DOCKER_GATEWAY_HOST:-host.docker.internal}:${LOCAL_WEB_PORT}/api/hasura/auth
      ## HASURA_GRAPHQL_UNAUTHORIZED_ROLE: public

networks:
  default:
    driver: bridge

volumes:
  db_data: null
  db_data_ci: null
