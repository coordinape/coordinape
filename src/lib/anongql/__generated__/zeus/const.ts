/* eslint-disable */

export const AllTypesProps: Record<string, any> = {
  Int_comparison_exp: {},
  String_comparison_exp: {},
  bigint: 'String',
  bigint_comparison_exp: {
    _eq: 'bigint',
    _gt: 'bigint',
    _gte: 'bigint',
    _in: 'bigint',
    _lt: 'bigint',
    _lte: 'bigint',
    _neq: 'bigint',
    _nin: 'bigint',
  },
  citext: 'String',
  citext_comparison_exp: {
    _eq: 'citext',
    _gt: 'citext',
    _gte: 'citext',
    _ilike: 'citext',
    _in: 'citext',
    _iregex: 'citext',
    _like: 'citext',
    _lt: 'citext',
    _lte: 'citext',
    _neq: 'citext',
    _nilike: 'citext',
    _nin: 'citext',
    _niregex: 'citext',
    _nlike: 'citext',
    _nregex: 'citext',
    _nsimilar: 'citext',
    _regex: 'citext',
    _similar: 'citext',
  },
  colinks_gives_aggregate_fields: {
    count: {
      columns: 'colinks_gives_select_column',
    },
  },
  colinks_gives_bool_exp: {
    _and: 'colinks_gives_bool_exp',
    _not: 'colinks_gives_bool_exp',
    _or: 'colinks_gives_bool_exp',
    activity_id: 'bigint_comparison_exp',
    cast_hash: 'String_comparison_exp',
    created_at: 'timestamptz_comparison_exp',
    id: 'Int_comparison_exp',
    profile_id: 'bigint_comparison_exp',
    skill: 'citext_comparison_exp',
    target_profile_id: 'bigint_comparison_exp',
    updated_at: 'timestamptz_comparison_exp',
  },
  colinks_gives_order_by: {
    activity_id: 'order_by',
    cast_hash: 'order_by',
    created_at: 'order_by',
    id: 'order_by',
    profile_id: 'order_by',
    skill: 'order_by',
    target_profile_id: 'order_by',
    updated_at: 'order_by',
  },
  colinks_gives_select_column: true,
  colinks_gives_stream_cursor_input: {
    initial_value: 'colinks_gives_stream_cursor_value_input',
    ordering: 'cursor_ordering',
  },
  colinks_gives_stream_cursor_value_input: {
    activity_id: 'bigint',
    created_at: 'timestamptz',
    profile_id: 'bigint',
    skill: 'citext',
    target_profile_id: 'bigint',
    updated_at: 'timestamptz',
  },
  cursor_ordering: true,
  order_by: true,
  query_root: {
    colinks_gives: {
      distinct_on: 'colinks_gives_select_column',
      order_by: 'colinks_gives_order_by',
      where: 'colinks_gives_bool_exp',
    },
    colinks_gives_aggregate: {
      distinct_on: 'colinks_gives_select_column',
      order_by: 'colinks_gives_order_by',
      where: 'colinks_gives_bool_exp',
    },
    colinks_gives_by_pk: {},
    price_per_share: {},
  },
  subscription_root: {
    colinks_gives: {
      distinct_on: 'colinks_gives_select_column',
      order_by: 'colinks_gives_order_by',
      where: 'colinks_gives_bool_exp',
    },
    colinks_gives_aggregate: {
      distinct_on: 'colinks_gives_select_column',
      order_by: 'colinks_gives_order_by',
      where: 'colinks_gives_bool_exp',
    },
    colinks_gives_by_pk: {},
    colinks_gives_stream: {
      cursor: 'colinks_gives_stream_cursor_input',
      where: 'colinks_gives_bool_exp',
    },
  },
  timestamptz: 'String',
  timestamptz_comparison_exp: {
    _eq: 'timestamptz',
    _gt: 'timestamptz',
    _gte: 'timestamptz',
    _in: 'timestamptz',
    _lt: 'timestamptz',
    _lte: 'timestamptz',
    _neq: 'timestamptz',
    _nin: 'timestamptz',
  },
};

export const ReturnTypes: Record<string, any> = {
  cached: {
    ttl: 'Int',
    refresh: 'Boolean',
  },
  colinks_gives: {
    activity_id: 'bigint',
    cast_hash: 'String',
    created_at: 'timestamptz',
    id: 'Int',
    profile_id: 'bigint',
    skill: 'citext',
    target_profile_id: 'bigint',
    updated_at: 'timestamptz',
  },
  colinks_gives_aggregate: {
    aggregate: 'colinks_gives_aggregate_fields',
    nodes: 'colinks_gives',
  },
  colinks_gives_aggregate_fields: {
    avg: 'colinks_gives_avg_fields',
    count: 'Int',
    max: 'colinks_gives_max_fields',
    min: 'colinks_gives_min_fields',
    stddev: 'colinks_gives_stddev_fields',
    stddev_pop: 'colinks_gives_stddev_pop_fields',
    stddev_samp: 'colinks_gives_stddev_samp_fields',
    sum: 'colinks_gives_sum_fields',
    var_pop: 'colinks_gives_var_pop_fields',
    var_samp: 'colinks_gives_var_samp_fields',
    variance: 'colinks_gives_variance_fields',
  },
  colinks_gives_avg_fields: {
    activity_id: 'Float',
    id: 'Float',
    profile_id: 'Float',
    target_profile_id: 'Float',
  },
  colinks_gives_max_fields: {
    activity_id: 'bigint',
    cast_hash: 'String',
    created_at: 'timestamptz',
    id: 'Int',
    profile_id: 'bigint',
    skill: 'citext',
    target_profile_id: 'bigint',
    updated_at: 'timestamptz',
  },
  colinks_gives_min_fields: {
    activity_id: 'bigint',
    cast_hash: 'String',
    created_at: 'timestamptz',
    id: 'Int',
    profile_id: 'bigint',
    skill: 'citext',
    target_profile_id: 'bigint',
    updated_at: 'timestamptz',
  },
  colinks_gives_stddev_fields: {
    activity_id: 'Float',
    id: 'Float',
    profile_id: 'Float',
    target_profile_id: 'Float',
  },
  colinks_gives_stddev_pop_fields: {
    activity_id: 'Float',
    id: 'Float',
    profile_id: 'Float',
    target_profile_id: 'Float',
  },
  colinks_gives_stddev_samp_fields: {
    activity_id: 'Float',
    id: 'Float',
    profile_id: 'Float',
    target_profile_id: 'Float',
  },
  colinks_gives_sum_fields: {
    activity_id: 'bigint',
    id: 'Int',
    profile_id: 'bigint',
    target_profile_id: 'bigint',
  },
  colinks_gives_var_pop_fields: {
    activity_id: 'Float',
    id: 'Float',
    profile_id: 'Float',
    target_profile_id: 'Float',
  },
  colinks_gives_var_samp_fields: {
    activity_id: 'Float',
    id: 'Float',
    profile_id: 'Float',
    target_profile_id: 'Float',
  },
  colinks_gives_variance_fields: {
    activity_id: 'Float',
    id: 'Float',
    profile_id: 'Float',
    target_profile_id: 'Float',
  },
  query_root: {
    colinks_gives: 'colinks_gives',
    colinks_gives_aggregate: 'colinks_gives_aggregate',
    colinks_gives_by_pk: 'colinks_gives',
    price_per_share: 'Float',
  },
  subscription_root: {
    colinks_gives: 'colinks_gives',
    colinks_gives_aggregate: 'colinks_gives_aggregate',
    colinks_gives_by_pk: 'colinks_gives',
    colinks_gives_stream: 'colinks_gives',
  },
};

export const Ops = {
  query: 'query_root' as const,
  subscription: 'subscription_root' as const,
};
