/* eslint-disable */
import { DebugLogger } from '../../../../common-lib/log';
const logger = new DebugLogger('zeus');

import { AllTypesProps, ReturnTypes, Ops } from './const';
export const HOST = 'http://localhost:8080/v1/graphql';

const handleFetchResponse = (response: Response): Promise<GraphQLResponse> => {
  if (!response.ok) {
    return new Promise((_, reject) => {
      response
        .text()
        .then(text => {
          try {
            reject(JSON.parse(text));
          } catch (err) {
            reject(text);
          }
        })
        .catch(reject);
    });
  }
  return response.json();
};

export const apiFetch =
  (options: fetchOptions) =>
  (query: string, variables: Record<string, unknown> = {}) => {
    const fetchOptions = options[1] || {};
    if (fetchOptions.method && fetchOptions.method === 'GET') {
      return fetch(
        `${options[0]}?query=${encodeURIComponent(query)}`,
        fetchOptions
      )
        .then(handleFetchResponse)
        .then((response: GraphQLResponse) => {
          if (response.errors) {
            throw new GraphQLError(response);
          }
          return response.data;
        });
    }
    return fetch(`${options[0]}`, {
      body: JSON.stringify({ query, variables }),
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      ...fetchOptions,
    })
      .then(handleFetchResponse)
      .then((response: GraphQLResponse) => {
        if (response.errors) {
          throw new GraphQLError(response);
        }
        return response.data;
      });
  };

export const apiSubscription = (options: chainOptions) => (query: string) => {
  try {
    const queryString = options[0] + '?query=' + encodeURIComponent(query);
    const wsString = queryString.replace('http', 'ws');
    const host = (options.length > 1 && options[1]?.websocket?.[0]) || wsString;
    const webSocketOptions = options[1]?.websocket || [host];
    const ws = new WebSocket(...webSocketOptions);
    return {
      ws,
      on: (e: (args: any) => void) => {
        ws.onmessage = (event: any) => {
          if (event.data) {
            const parsed = JSON.parse(event.data);
            const data = parsed.data;
            return e(data);
          }
        };
      },
      off: (e: (args: any) => void) => {
        ws.onclose = e;
      },
      error: (e: (args: any) => void) => {
        ws.onerror = e;
      },
      open: (e: () => void) => {
        ws.onopen = e;
      },
    };
  } catch {
    throw new Error('No websockets implemented');
  }
};

export const InternalsBuildQuery = (
  props: AllTypesPropsType,
  returns: ReturnTypesType,
  ops: Operations,
  options?: OperationOptions
) => {
  const ibb = (
    k: string,
    o: InputValueType | VType,
    p = '',
    root = true
  ): string => {
    const keyForPath = purifyGraphQLKey(k);
    const newPath = [p, keyForPath].join(SEPARATOR);
    if (!o) {
      return '';
    }
    if (typeof o === 'boolean' || typeof o === 'number') {
      return k;
    }
    if (typeof o === 'string') {
      return `${k} ${o}`;
    }
    if (Array.isArray(o)) {
      const args = InternalArgsBuilt(
        props,
        returns,
        ops,
        options?.variables?.values
      )(o[0], newPath);
      return `${ibb(args ? `${k}(${args})` : k, o[1], p, false)}`;
    }
    if (k === '__alias') {
      return Object.entries(o)
        .map(([alias, objectUnderAlias]) => {
          if (
            typeof objectUnderAlias !== 'object' ||
            Array.isArray(objectUnderAlias)
          ) {
            throw new Error(
              'Invalid alias it should be __alias:{ YOUR_ALIAS_NAME: { OPERATION_NAME: { ...selectors }}}'
            );
          }
          const operationName = Object.keys(objectUnderAlias)[0];
          const operation = objectUnderAlias[operationName];
          return ibb(`${alias}:${operationName}`, operation, p, false);
        })
        .join('\n');
    }
    const hasOperationName =
      root && options?.operationName ? ' ' + options.operationName : '';
    const hasVariables =
      root && options?.variables?.$params
        ? `(${options.variables?.$params})`
        : '';
    const keyForDirectives = o.__directives ?? '';
    return `${k} ${keyForDirectives}${hasOperationName}${hasVariables}{${Object.entries(
      o
    )
      .filter(([k]) => k !== '__directives')
      .map(e => ibb(...e, [p, `field<>${keyForPath}`].join(SEPARATOR), false))
      .join('\n')}}`;
  };
  return ibb;
};

export const Thunder =
  (fn: FetchFunction) =>
  <
    O extends keyof typeof Ops,
    R extends keyof ValueTypes = GenericOperation<O>,
  >(
    operation: O
  ) =>
  <Z extends ValueTypes[R]>(o: Z | ValueTypes[R], ops?: OperationOptions) =>
    fullChainConstruct(fn)(operation)(o as any, ops) as Promise<
      InputType<GraphQLTypes[R], Z>
    >;

export const Chain = (...options: chainOptions) => Thunder(apiFetch(options));

export const SubscriptionThunder =
  (fn: SubscriptionFunction) =>
  <
    O extends keyof typeof Ops,
    R extends keyof ValueTypes = GenericOperation<O>,
  >(
    operation: O
  ) =>
  <Z extends ValueTypes[R]>(o: Z | ValueTypes[R], ops?: OperationOptions) =>
    fullSubscriptionConstruct(fn)(operation)(
      o as any,
      ops
    ) as SubscriptionToGraphQL<Z, GraphQLTypes[R]>;

export const Subscription = (...options: chainOptions) =>
  SubscriptionThunder(apiSubscription(options));
export const Zeus = <
  Z extends ValueTypes[R],
  O extends keyof typeof Ops,
  R extends keyof ValueTypes = GenericOperation<O>,
>(
  operation: O,
  o: Z | ValueTypes[R],
  ops?: OperationOptions
) =>
  InternalsBuildQuery(
    AllTypesProps,
    ReturnTypes,
    Ops,
    ops
  )(operation, o as any);
export const Selector = <T extends keyof ValueTypes>(key: T) =>
  ZeusSelect<ValueTypes[T]>();

export const Gql = Chain(HOST);

export const fullChainConstruct =
  (fn: FetchFunction) =>
  (t: 'query' | 'mutation' | 'subscription') =>
  (o: Record<any, any>, options?: OperationOptions) => {
    const builder = InternalsBuildQuery(
      AllTypesProps,
      ReturnTypes,
      Ops,
      options
    );
    return fn(builder(t, o), options?.variables?.values);
  };

export const fullSubscriptionConstruct =
  (fn: SubscriptionFunction) =>
  (t: 'query' | 'mutation' | 'subscription') =>
  (o: Record<any, any>, options?: OperationOptions) => {
    const builder = InternalsBuildQuery(
      AllTypesProps,
      ReturnTypes,
      Ops,
      options
    );
    return fn(builder(t, o));
  };

export type AllTypesPropsType = {
  [x: string]:
    | undefined
    | boolean
    | {
        [x: string]:
          | undefined
          | string
          | {
              [x: string]: string | undefined;
            };
      };
};

export type ReturnTypesType = {
  [x: string]:
    | {
        [x: string]: string | undefined;
      }
    | undefined;
};
export type InputValueType = {
  [x: string]:
    | undefined
    | boolean
    | string
    | number
    | [any, undefined | boolean | InputValueType]
    | InputValueType;
};
export type VType =
  | undefined
  | boolean
  | string
  | number
  | [any, undefined | boolean | InputValueType]
  | InputValueType;

export type PlainType = boolean | number | string | null | undefined;
export type ZeusArgsType =
  | PlainType
  | {
      [x: string]: ZeusArgsType;
    }
  | Array<ZeusArgsType>;

export type Operations = Record<string, string | undefined>;

export type VariableDefinition = {
  [x: string]: unknown;
};

export const SEPARATOR = '|';

export type fetchOptions = Parameters<typeof fetch>;
type websocketOptions = typeof WebSocket extends new (
  ...args: infer R
) => WebSocket
  ? R
  : never;
export type chainOptions =
  | [fetchOptions[0], fetchOptions[1] & { websocket?: websocketOptions }]
  | [fetchOptions[0]];
export type FetchFunction = (
  query: string,
  variables?: Record<string, any>
) => Promise<any>;
export type SubscriptionFunction = (query: string) => any;
type NotUndefined<T> = T extends undefined ? never : T;
export type ResolverType<F> = NotUndefined<
  F extends [infer ARGS, any] ? ARGS : undefined
>;

export type OperationOptions<
  Z extends Record<string, unknown> = Record<string, unknown>,
> = {
  variables?: VariableInput<Z>;
  operationName?: string;
};

export interface GraphQLResponse {
  data?: Record<string, any>;
  errors?: Array<{
    message: string;
  }>;
}
export class GraphQLError extends Error {
  constructor(public response: GraphQLResponse) {
    super(response.errors?.map(e => e.message).join('. '));
    logger.log(JSON.stringify(response, null, 2));
  }
  toString() {
    return 'GraphQL Response Error';
  }
}
export type GenericOperation<O> = O extends keyof typeof Ops
  ? (typeof Ops)[O]
  : never;

export const purifyGraphQLKey = (k: string) =>
  k.replace(/\([^)]*\)/g, '').replace(/^[^:]*\:/g, '');

const mapPart = (p: string) => {
  const [isArg, isField] = p.split('<>');
  if (isField) {
    return {
      v: isField,
      __type: 'field',
    } as const;
  }
  return {
    v: isArg,
    __type: 'arg',
  } as const;
};

type Part = ReturnType<typeof mapPart>;

export const ResolveFromPath = (
  props: AllTypesPropsType,
  returns: ReturnTypesType,
  ops: Operations
) => {
  const ResolvePropsType = (mappedParts: Part[]) => {
    const oKey = ops[mappedParts[0].v];
    const propsP1 = oKey ? props[oKey] : props[mappedParts[0].v];
    if (typeof propsP1 === 'boolean' && mappedParts.length === 1) {
      return 'enum';
    }
    if (typeof propsP1 === 'object') {
      const propsP2 = propsP1[mappedParts[1].v];
      if (typeof propsP2 === 'string') {
        return rpp(
          `${propsP2}${SEPARATOR}${mappedParts
            .slice(2)
            .map(mp => mp.v)
            .join(SEPARATOR)}`
        );
      }
      if (typeof propsP2 === 'object') {
        const propsP3 = propsP2[mappedParts[2].v];
        if (propsP3 && mappedParts[2].__type === 'arg') {
          return rpp(
            `${propsP3}${SEPARATOR}${mappedParts
              .slice(3)
              .map(mp => mp.v)
              .join(SEPARATOR)}`
          );
        }
      }
    }
  };
  const ResolveReturnType = (mappedParts: Part[]) => {
    const oKey = ops[mappedParts[0].v];
    const returnP1 = oKey ? returns[oKey] : returns[mappedParts[0].v];
    if (typeof returnP1 === 'object') {
      const returnP2 = returnP1[mappedParts[1].v];
      if (returnP2) {
        return rpp(
          `${returnP2}${SEPARATOR}${mappedParts
            .slice(2)
            .map(mp => mp.v)
            .join(SEPARATOR)}`
        );
      }
    }
  };
  const rpp = (path: string): 'enum' | 'not' => {
    const parts = path.split(SEPARATOR).filter(l => l.length > 0);
    const mappedParts = parts.map(mapPart);
    const propsP1 = ResolvePropsType(mappedParts);
    if (propsP1) {
      return propsP1;
    }
    const returnP1 = ResolveReturnType(mappedParts);
    if (returnP1) {
      return returnP1;
    }
    return 'not';
  };
  return rpp;
};

export const InternalArgsBuilt = (
  props: AllTypesPropsType,
  returns: ReturnTypesType,
  ops: Operations,
  variables?: Record<string, unknown>
) => {
  const arb = (a: ZeusArgsType, p = '', root = true): string => {
    if (Array.isArray(a)) {
      return `[${a.map(arr => arb(arr, p, false)).join(', ')}]`;
    }
    if (typeof a === 'string') {
      if (a.startsWith('$') && variables?.[a.slice(1)]) {
        return a;
      }
      const checkType = ResolveFromPath(props, returns, ops)(p);
      if (checkType === 'enum') {
        return a;
      }
      return `${JSON.stringify(a)}`;
    }
    if (typeof a === 'object') {
      if (a === null) {
        return `null`;
      }
      const returnedObjectString = Object.entries(a)
        .filter(([, v]) => typeof v !== 'undefined')
        .map(([k, v]) => `${k}: ${arb(v, [p, k].join(SEPARATOR), false)}`)
        .join(',\n');
      if (!root) {
        return `{${returnedObjectString}}`;
      }
      return returnedObjectString;
    }
    return `${a}`;
  };
  return arb;
};

export const resolverFor = <
  X,
  T extends keyof ValueTypes,
  Z extends keyof ValueTypes[T],
>(
  type: T,
  field: Z,
  fn: (
    args: Required<ValueTypes[T]>[Z] extends [infer Input, any] ? Input : any,
    source: any
  ) => Z extends keyof ModelTypes[T]
    ? ModelTypes[T][Z] | Promise<ModelTypes[T][Z]> | X
    : any
) => fn as (args?: any, source?: any) => any;

export type SelectionFunction<V> = <T>(t: T | V) => T;
export const ZeusSelect = <T>() => ((t: unknown) => t) as SelectionFunction<T>;

export type UnwrapPromise<T> = T extends Promise<infer R> ? R : T;
export type ZeusState<T extends (...args: any[]) => Promise<any>> = NonNullable<
  UnwrapPromise<ReturnType<T>>
>;
export type ZeusHook<
  T extends (
    ...args: any[]
  ) => Record<string, (...args: any[]) => Promise<any>>,
  N extends keyof ReturnType<T>,
> = ZeusState<ReturnType<T>[N]>;

export type WithTypeNameValue<T> = T & {
  __typename?: boolean;
  __directives?: string;
};
export type AliasType<T> = WithTypeNameValue<T> & {
  __alias?: Record<string, WithTypeNameValue<T>>;
};
type DeepAnify<T> = {
  [P in keyof T]?: any;
};
type IsPayLoad<T> = T extends [any, infer PayLoad] ? PayLoad : T;
type IsArray<T, U> =
  T extends Array<infer R> ? InputType<R, U>[] : InputType<T, U>;
type FlattenArray<T> = T extends Array<infer R> ? R : T;
type BaseZeusResolver = boolean | 1 | string;

type IsInterfaced<SRC extends DeepAnify<DST>, DST> =
  FlattenArray<SRC> extends ZEUS_INTERFACES | ZEUS_UNIONS
    ? {
        [P in keyof SRC]: SRC[P] extends '__union' & infer R
          ? P extends keyof DST
            ? IsArray<
                R,
                '__typename' extends keyof DST
                  ? DST[P] & { __typename: true }
                  : DST[P]
              >
            : Record<string, unknown>
          : never;
      }[keyof DST] & {
        [P in keyof Omit<
          Pick<
            SRC,
            {
              [P in keyof DST]: SRC[P] extends '__union' & infer R ? never : P;
            }[keyof DST]
          >,
          '__typename'
        >]: IsPayLoad<DST[P]> extends BaseZeusResolver
          ? SRC[P]
          : IsArray<SRC[P], DST[P]>;
      }
    : {
        [P in keyof Pick<SRC, keyof DST>]: IsPayLoad<
          DST[P]
        > extends BaseZeusResolver
          ? SRC[P]
          : IsArray<SRC[P], DST[P]>;
      };

export type MapType<SRC, DST> =
  SRC extends DeepAnify<DST> ? IsInterfaced<SRC, DST> : never;
export type InputType<SRC, DST> =
  IsPayLoad<DST> extends { __alias: infer R }
    ? {
        [P in keyof R]: MapType<SRC, R[P]>[keyof MapType<SRC, R[P]>];
      } & MapType<SRC, Omit<IsPayLoad<DST>, '__alias'>>
    : MapType<SRC, IsPayLoad<DST>>;
export type SubscriptionToGraphQL<Z, T> = {
  ws: WebSocket;
  on: (fn: (args: InputType<T, Z>) => void) => void;
  off: (
    fn: (e: {
      data?: InputType<T, Z>;
      code?: number;
      reason?: string;
      message?: string;
    }) => void
  ) => void;
  error: (
    fn: (e: { data?: InputType<T, Z>; errors?: string[] }) => void
  ) => void;
  open: () => void;
};

export const useZeusVariables =
  <T extends {}>(variables: T) =>
  <
    Z extends {
      [P in keyof T]: unknown;
    },
  >(
    values: Z
  ) => {
    return {
      $params: Object.keys(variables)
        .map(k => `$${k}: ${variables[k as keyof T]}`)
        .join(', '),
      $: <U extends keyof Z>(variable: U) => {
        return `$${String(variable)}` as unknown as Z[U];
      },
      values,
    };
  };

export type VariableInput<Z extends Record<string, unknown>> = {
  $params: ReturnType<ReturnType<typeof useZeusVariables>>['$params'];
  values: Z;
};

type ZEUS_INTERFACES = never;
type ZEUS_UNIONS = never;

export type ValueTypes = {
  ['AcceptTOSOutput']: AliasType<{
    tos_agreed_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['AddEmailInput']: {
    co_links: boolean;
    email: string;
  };
  ['AdminUpdateUserInput']: {
    circle_id: number;
    fixed_non_receiver?: boolean | undefined | null;
    fixed_payment_amount?: number | undefined | null;
    name?: string | undefined | null;
    non_giver?: boolean | undefined | null;
    non_receiver?: boolean | undefined | null;
    profile_id: number;
    role?: number | undefined | null;
    starting_tokens?: number | undefined | null;
  };
  ['Allocation']: {
    note: string;
    recipient_id: number;
    tokens: number;
  };
  ['AllocationCsvInput']: {
    circle_id: number;
    epoch?: number | undefined | null;
    epoch_id?: number | undefined | null;
    form_gift_amount?: number | undefined | null;
    gift_token_symbol?: string | undefined | null;
    grant?: number | undefined | null;
  };
  ['AllocationCsvResponse']: AliasType<{
    file?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['Allocations']: {
    allocations?: Array<ValueTypes['Allocation']> | undefined | null;
    circle_id: number;
    user_id?: number | undefined | null;
  };
  ['AllocationsResponse']: AliasType<{
    user?: ValueTypes['users'];
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'. */
  ['Boolean_comparison_exp']: {
    _eq?: boolean | undefined | null;
    _gt?: boolean | undefined | null;
    _gte?: boolean | undefined | null;
    _in?: Array<boolean> | undefined | null;
    _is_null?: boolean | undefined | null;
    _lt?: boolean | undefined | null;
    _lte?: boolean | undefined | null;
    _neq?: boolean | undefined | null;
    _nin?: Array<boolean> | undefined | null;
  };
  ['Cast']: AliasType<{
    address?: boolean | `@${string}`;
    avatar_url?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    embeds?: ValueTypes['CastEmbed'];
    fid?: boolean | `@${string}`;
    fname?: boolean | `@${string}`;
    hash?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    like_count?: boolean | `@${string}`;
    mentioned_addresses?: ValueTypes['CastMention'];
    recast_count?: boolean | `@${string}`;
    replies_count?: boolean | `@${string}`;
    text?: boolean | `@${string}`;
    text_with_mentions?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['CastEmbed']: AliasType<{
    type?: boolean | `@${string}`;
    url?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['CastMention']: AliasType<{
    address?: boolean | `@${string}`;
    fname?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['CheckEthDenverInviteeOutput']: AliasType<{
    is_eth_denver_invitee?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['ConfirmationResponse']: AliasType<{
    success?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['ConfirmationWithErrorResponse']: AliasType<{
    error?: boolean | `@${string}`;
    success?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['CoordinapeInput']: {
    circle_id: number;
  };
  ['CreateCircleInput']: {
    circle_name: string;
    contact?: string | undefined | null;
    image_data_base64?: string | undefined | null;
    organization_id?: number | undefined | null;
    organization_name?: string | undefined | null;
    user_name: string;
  };
  ['CreateCircleResponse']: AliasType<{
    circle?: ValueTypes['circles'];
    id?: boolean | `@${string}`;
    users?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['users_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['users_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['users_bool_exp'] | undefined | null;
      },
      ValueTypes['users'],
    ];
    __typename?: boolean | `@${string}`;
  }>;
  ['CreateCoLinksGiveInput']: {
    activity_id?: number | undefined | null;
    address?: string | undefined | null;
    cast_hash?: string | undefined | null;
    skill?: string | undefined | null;
  };
  ['CreateCoLinksGiveResponse']: AliasType<{
    id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['CreateEpochInput']: {
    circle_id: number;
    grant?: number | undefined | null;
    params: ValueTypes['EpochInputParams'];
  };
  ['CreateNomineeInput']: {
    address: string;
    circle_id: number;
    description: string;
    name: string;
  };
  ['CreateNomineeResponse']: AliasType<{
    id?: boolean | `@${string}`;
    nominee?: ValueTypes['nominees'];
    __typename?: boolean | `@${string}`;
  }>;
  ['CreateOrgMembersInput']: {
    org_id: number;
    users: Array<ValueTypes['UserObj'] | undefined | null>;
  };
  ['CreateSampleCircleResponse']: AliasType<{
    circle?: ValueTypes['circles'];
    id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['CreateUserWithTokenInput']: {
    token: string;
  };
  ['CreateUsersInput']: {
    circle_id: number;
    users: Array<ValueTypes['UserObj'] | undefined | null>;
  };
  ['CreateVaultInput']: {
    chain_id: number;
    deployment_block: number;
    org_id: number;
    tx_hash: string;
    vault_address: string;
  };
  ['DeleteCircleInput']: {
    circle_id: number;
  };
  ['DeleteCoLinksGiveInput']: {
    give_id: number;
  };
  ['DeleteContributionInput']: {
    contribution_id: number;
  };
  ['DeleteEmailInput']: {
    email: string;
  };
  ['DeleteEpochInput']: {
    circle_id: number;
    id: number;
  };
  ['DeleteEpochResponse']: AliasType<{
    success?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['DeleteUserInput']: {
    circle_id: number;
    profile_id: number;
  };
  ['DeleteUsersInput']: {
    addresses: Array<string>;
    circle_id: number;
  };
  ['DeleteUsersResponse']: AliasType<{
    success?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['EndEpochInput']: {
    circle_id: number;
    id: number;
  };
  ['EpochInputParams']: {
    duration?: number | undefined | null;
    duration_unit?: string | undefined | null;
    end_date: ValueTypes['timestamptz'];
    frequency?: number | undefined | null;
    frequency_unit?: string | undefined | null;
    start_date: ValueTypes['timestamptz'];
    time_zone?: string | undefined | null;
    type: string;
    week?: number | undefined | null;
    weekday?: number | undefined | null;
  };
  ['EpochResponse']: AliasType<{
    epoch?: ValueTypes['epochs'];
    id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['GenerateApiKeyInput']: {
    circle_id: number;
    create_contributions?: boolean | undefined | null;
    create_vouches?: boolean | undefined | null;
    manage_users?: boolean | undefined | null;
    name: string;
    read_circle?: boolean | undefined | null;
    read_contributions?: boolean | undefined | null;
    read_discord?: boolean | undefined | null;
    read_epochs?: boolean | undefined | null;
    read_member_profiles?: boolean | undefined | null;
    read_nominees?: boolean | undefined | null;
    read_pending_token_gifts?: boolean | undefined | null;
    update_circle?: boolean | undefined | null;
    update_pending_token_gifts?: boolean | undefined | null;
  };
  ['GenerateApiKeyResponse']: AliasType<{
    api_key?: boolean | `@${string}`;
    circleApiKey?: ValueTypes['circle_api_keys'];
    hash?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['GetCastsInput']: {
    cast_ids?: Array<ValueTypes['bigint']> | undefined | null;
    fid?: ValueTypes['bigint'] | undefined | null;
  };
  ['GetCastsOutput']: AliasType<{
    casts?: ValueTypes['Cast'];
    __typename?: boolean | `@${string}`;
  }>;
  ['GiveCsvInput']: {
    circle_id: number;
    epoch?: number | undefined | null;
    epoch_id?: number | undefined | null;
  };
  ['GiveCsvResponse']: AliasType<{
    file?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['GuildAdmin']: AliasType<{
    address?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['GuildInfoInput']: {
    id: string;
  };
  ['GuildInfoOutput']: AliasType<{
    admins?: ValueTypes['GuildAdmin'];
    description?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    image_url?: boolean | `@${string}`;
    member_count?: boolean | `@${string}`;
    name?: boolean | `@${string}`;
    roles?: ValueTypes['GuildRole'];
    url_name?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['GuildRole']: AliasType<{
    id?: boolean | `@${string}`;
    image_url?: boolean | `@${string}`;
    member_count?: boolean | `@${string}`;
    name?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['HeadlinesOutput']: AliasType<{
    activity?: ValueTypes['activities'];
    activity_id?: boolean | `@${string}`;
    description?: boolean | `@${string}`;
    headline?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['IdInput']: {
    id: number;
  };
  /** Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'. */
  ['Int_comparison_exp']: {
    _eq?: number | undefined | null;
    _gt?: number | undefined | null;
    _gte?: number | undefined | null;
    _in?: Array<number> | undefined | null;
    _is_null?: boolean | undefined | null;
    _lt?: number | undefined | null;
    _lte?: number | undefined | null;
    _neq?: number | undefined | null;
    _nin?: Array<number> | undefined | null;
  };
  ['LogVaultTxInput']: {
    amount?: number | undefined | null;
    circle_id?: number | undefined | null;
    distribution_id?: number | undefined | null;
    org_id?: number | undefined | null;
    symbol?: string | undefined | null;
    tx_hash: string;
    tx_type: string;
    vault_id: number;
  };
  ['LogVaultTxResponse']: AliasType<{
    id?: boolean | `@${string}`;
    vault_tx_return_object?: ValueTypes['vault_transactions'];
    __typename?: boolean | `@${string}`;
  }>;
  ['LogoutResponse']: AliasType<{
    id?: boolean | `@${string}`;
    profile?: ValueTypes['profiles'];
    __typename?: boolean | `@${string}`;
  }>;
  ['MarkClaimedInput']: {
    claim_id: number;
    tx_hash: string;
  };
  ['MarkClaimedOutput']: AliasType<{
    ids?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['OrgMemberResponse']: AliasType<{
    OrgMemberResponse?: ValueTypes['org_members'];
    id?: boolean | `@${string}`;
    new?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['RedeemInviteCodeInput']: {
    code: string;
  };
  ['RequestInviteCodeInput']: {
    email: string;
  };
  ['SearchCosoulsInput']: {
    search_query: string;
  };
  ['SearchCosoulsOutput']: AliasType<{
    cosoul_ids?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['SearchProfilesInput']: {
    limit?: number | undefined | null;
    search_query: string;
  };
  ['SearchProfilesOutput']: AliasType<{
    profile_id?: boolean | `@${string}`;
    profile_public?: ValueTypes['profiles_public'];
    similarity?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['SetPrimaryEmailInput']: {
    email: string;
  };
  ['ShareInput']: {
    activity_id: number;
  };
  ['ShareOutput']: AliasType<{
    token?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['SimilarProfileInput']: {
    address: string;
  };
  ['SimilarProfileOutput']: AliasType<{
    profile_id?: boolean | `@${string}`;
    profile_public?: ValueTypes['profiles_public'];
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
  ['String_comparison_exp']: {
    _eq?: string | undefined | null;
    _gt?: string | undefined | null;
    _gte?: string | undefined | null;
    /** does the column match the given case-insensitive pattern */
    _ilike?: string | undefined | null;
    _in?: Array<string> | undefined | null;
    /** does the column match the given POSIX regular expression, case insensitive */
    _iregex?: string | undefined | null;
    _is_null?: boolean | undefined | null;
    /** does the column match the given pattern */
    _like?: string | undefined | null;
    _lt?: string | undefined | null;
    _lte?: string | undefined | null;
    _neq?: string | undefined | null;
    /** does the column NOT match the given case-insensitive pattern */
    _nilike?: string | undefined | null;
    _nin?: Array<string> | undefined | null;
    /** does the column NOT match the given POSIX regular expression, case insensitive */
    _niregex?: string | undefined | null;
    /** does the column NOT match the given pattern */
    _nlike?: string | undefined | null;
    /** does the column NOT match the given POSIX regular expression, case sensitive */
    _nregex?: string | undefined | null;
    /** does the column NOT match the given SQL regular expression */
    _nsimilar?: string | undefined | null;
    /** does the column match the given POSIX regular expression, case sensitive */
    _regex?: string | undefined | null;
    /** does the column match the given SQL regular expression */
    _similar?: string | undefined | null;
  };
  ['SuccessResponse']: AliasType<{
    success?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['SyncCoSoulInput']: {
    tx_hash: string;
  };
  ['SyncCoSoulOutput']: AliasType<{
    token_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['UpdateCircleInput']: {
    alloc_text?: string | undefined | null;
    allow_distribute_evenly?: boolean | undefined | null;
    auto_opt_out?: boolean | undefined | null;
    circle_id: number;
    cont_help_text?: string | undefined | null;
    default_opt_in?: boolean | undefined | null;
    discord_webhook?: string | undefined | null;
    fixed_payment_token_type?: string | undefined | null;
    fixed_payment_vault_id?: number | undefined | null;
    guild_id?: number | undefined | null;
    guild_role_id?: number | undefined | null;
    min_vouches?: number | undefined | null;
    name?: string | undefined | null;
    nomination_days_limit?: number | undefined | null;
    only_giver_vouch?: boolean | undefined | null;
    show_pending_gives?: boolean | undefined | null;
    team_selection?: boolean | undefined | null;
    token_name?: string | undefined | null;
    update_webhook?: boolean | undefined | null;
    vouching?: boolean | undefined | null;
    vouching_text?: string | undefined | null;
  };
  ['UpdateCircleOutput']: AliasType<{
    circle?: ValueTypes['circles'];
    id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['UpdateCircleResponse']: AliasType<{
    circle?: ValueTypes['circles'];
    id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['UpdateCircleStartingGiveInput']: {
    circle_id: number;
    starting_tokens: number;
  };
  ['UpdateContributionInput']: {
    description: string;
    id: number;
  };
  ['UpdateContributionResponse']: AliasType<{
    id?: boolean | `@${string}`;
    updateContribution_Contribution?: ValueTypes['contributions'];
    __typename?: boolean | `@${string}`;
  }>;
  ['UpdateEpochInput']: {
    circle_id: number;
    description?: string | undefined | null;
    grant?: number | undefined | null;
    id: number;
    params?: ValueTypes['EpochInputParams'] | undefined | null;
  };
  ['UpdateOrgResponse']: AliasType<{
    id?: boolean | `@${string}`;
    org?: ValueTypes['organizations'];
    __typename?: boolean | `@${string}`;
  }>;
  ['UpdateProfileInput']: {
    bio?: string | undefined | null;
    description?: string | undefined | null;
    discord_username?: string | undefined | null;
    github_username?: string | undefined | null;
    medium_username?: string | undefined | null;
    name: string;
    skills?: string | undefined | null;
    telegram_username?: string | undefined | null;
    twitter_username?: string | undefined | null;
    website?: string | undefined | null;
  };
  ['UpdateProfileResponse']: AliasType<{
    id?: boolean | `@${string}`;
    profile?: ValueTypes['profiles'];
    __typename?: boolean | `@${string}`;
  }>;
  ['UpdateTeammatesInput']: {
    circle_id: number;
    teammates: Array<number | undefined | null>;
  };
  ['UpdateTeammatesResponse']: AliasType<{
    user?: ValueTypes['users'];
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['UpdateUserInput']: {
    bio?: string | undefined | null;
    circle_id: number;
    epoch_first_visit?: boolean | undefined | null;
    non_receiver?: boolean | undefined | null;
  };
  ['UploadCircleImageInput']: {
    circle_id: number;
    image_data_base64: string;
  };
  ['UploadImageInput']: {
    url: string;
  };
  ['UploadOrgImageInput']: {
    image_data_base64: string;
    org_id: number;
  };
  ['UploadUrlResponse']: AliasType<{
    errors?: boolean | `@${string}`;
    messages?: boolean | `@${string}`;
    result?: ValueTypes['UploadUrlResult'];
    result_info?: boolean | `@${string}`;
    success?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['UploadUrlResult']: AliasType<{
    id?: boolean | `@${string}`;
    upload_url?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['UserObj']: {
    address: string;
    entrance?: string | undefined | null;
    fixed_non_receiver?: boolean | undefined | null;
    name: string;
    non_giver?: boolean | undefined | null;
    non_receiver?: boolean | undefined | null;
    role?: number | undefined | null;
    starting_tokens?: number | undefined | null;
  };
  ['UserResponse']: AliasType<{
    UserResponse?: ValueTypes['users'];
    id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['VaultResponse']: AliasType<{
    id?: boolean | `@${string}`;
    vault?: ValueTypes['vaults'];
    __typename?: boolean | `@${string}`;
  }>;
  ['VouchInput']: {
    nominee_id: number;
  };
  ['VouchOutput']: AliasType<{
    id?: boolean | `@${string}`;
    nominee?: ValueTypes['nominees'];
    __typename?: boolean | `@${string}`;
  }>;
  /** Table containing activity on our platform */
  ['activities']: AliasType<{
    action?: boolean | `@${string}`;
    /** An object relationship */
    actor_profile?: ValueTypes['profiles'];
    actor_profile_id?: boolean | `@${string}`;
    /** An object relationship */
    actor_profile_public?: ValueTypes['profiles_public'];
    /** An object relationship */
    big_question?: ValueTypes['big_questions'];
    big_question_id?: boolean | `@${string}`;
    cast_id?: boolean | `@${string}`;
    /** An object relationship */
    circle?: ValueTypes['circles'];
    circle_id?: boolean | `@${string}`;
    /** An object relationship */
    contribution?: ValueTypes['contributions'];
    contribution_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    /** An object relationship */
    enriched_cast?: ValueTypes['enriched_casts'];
    /** An object relationship */
    epoch?: ValueTypes['epochs'];
    epoch_id?: boolean | `@${string}`;
    gives?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['colinks_gives_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['colinks_gives_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['colinks_gives_bool_exp'] | undefined | null;
      },
      ValueTypes['colinks_gives'],
    ];
    gives_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['colinks_gives_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['colinks_gives_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['colinks_gives_bool_exp'] | undefined | null;
      },
      ValueTypes['colinks_gives_aggregate'],
    ];
    id?: boolean | `@${string}`;
    /** An object relationship */
    organization?: ValueTypes['organizations'];
    organization_id?: boolean | `@${string}`;
    private_stream?: boolean | `@${string}`;
    private_stream_visibility?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['private_stream_visibility_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['private_stream_visibility_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?:
          | ValueTypes['private_stream_visibility_bool_exp']
          | undefined
          | null;
      },
      ValueTypes['private_stream_visibility'],
    ];
    reaction_count?: boolean | `@${string}`;
    reactions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['reactions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['reactions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['reactions_bool_exp'] | undefined | null;
      },
      ValueTypes['reactions'],
    ];
    reactions_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['reactions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['reactions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['reactions_bool_exp'] | undefined | null;
      },
      ValueTypes['reactions_aggregate'],
    ];
    replies?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['replies_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['replies_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['replies_bool_exp'] | undefined | null;
      },
      ValueTypes['replies'],
    ];
    replies_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['replies_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['replies_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['replies_bool_exp'] | undefined | null;
      },
      ValueTypes['replies_aggregate'],
    ];
    reply_count?: boolean | `@${string}`;
    /** An object relationship */
    target_profile?: ValueTypes['profiles'];
    target_profile_id?: boolean | `@${string}`;
    /** An object relationship */
    target_profile_public?: ValueTypes['profiles_public'];
    updated_at?: boolean | `@${string}`;
    /** An object relationship */
    user?: ValueTypes['users'];
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregated selection of "activities" */
  ['activities_aggregate']: AliasType<{
    aggregate?: ValueTypes['activities_aggregate_fields'];
    nodes?: ValueTypes['activities'];
    __typename?: boolean | `@${string}`;
  }>;
  ['activities_aggregate_bool_exp']: {
    bool_and?:
      | ValueTypes['activities_aggregate_bool_exp_bool_and']
      | undefined
      | null;
    bool_or?:
      | ValueTypes['activities_aggregate_bool_exp_bool_or']
      | undefined
      | null;
    count?:
      | ValueTypes['activities_aggregate_bool_exp_count']
      | undefined
      | null;
  };
  ['activities_aggregate_bool_exp_bool_and']: {
    arguments: ValueTypes['activities_select_column_activities_aggregate_bool_exp_bool_and_arguments_columns'];
    distinct?: boolean | undefined | null;
    filter?: ValueTypes['activities_bool_exp'] | undefined | null;
    predicate: ValueTypes['Boolean_comparison_exp'];
  };
  ['activities_aggregate_bool_exp_bool_or']: {
    arguments: ValueTypes['activities_select_column_activities_aggregate_bool_exp_bool_or_arguments_columns'];
    distinct?: boolean | undefined | null;
    filter?: ValueTypes['activities_bool_exp'] | undefined | null;
    predicate: ValueTypes['Boolean_comparison_exp'];
  };
  ['activities_aggregate_bool_exp_count']: {
    arguments?:
      | Array<ValueTypes['activities_select_column']>
      | undefined
      | null;
    distinct?: boolean | undefined | null;
    filter?: ValueTypes['activities_bool_exp'] | undefined | null;
    predicate: ValueTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "activities" */
  ['activities_aggregate_fields']: AliasType<{
    avg?: ValueTypes['activities_avg_fields'];
    count?: [
      {
        columns?:
          | Array<ValueTypes['activities_select_column']>
          | undefined
          | null;
        distinct?: boolean | undefined | null;
      },
      boolean | `@${string}`,
    ];
    max?: ValueTypes['activities_max_fields'];
    min?: ValueTypes['activities_min_fields'];
    stddev?: ValueTypes['activities_stddev_fields'];
    stddev_pop?: ValueTypes['activities_stddev_pop_fields'];
    stddev_samp?: ValueTypes['activities_stddev_samp_fields'];
    sum?: ValueTypes['activities_sum_fields'];
    var_pop?: ValueTypes['activities_var_pop_fields'];
    var_samp?: ValueTypes['activities_var_samp_fields'];
    variance?: ValueTypes['activities_variance_fields'];
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "activities" */
  ['activities_aggregate_order_by']: {
    avg?: ValueTypes['activities_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['activities_max_order_by'] | undefined | null;
    min?: ValueTypes['activities_min_order_by'] | undefined | null;
    stddev?: ValueTypes['activities_stddev_order_by'] | undefined | null;
    stddev_pop?:
      | ValueTypes['activities_stddev_pop_order_by']
      | undefined
      | null;
    stddev_samp?:
      | ValueTypes['activities_stddev_samp_order_by']
      | undefined
      | null;
    sum?: ValueTypes['activities_sum_order_by'] | undefined | null;
    var_pop?: ValueTypes['activities_var_pop_order_by'] | undefined | null;
    var_samp?: ValueTypes['activities_var_samp_order_by'] | undefined | null;
    variance?: ValueTypes['activities_variance_order_by'] | undefined | null;
  };
  /** aggregate avg on columns */
  ['activities_avg_fields']: AliasType<{
    actor_profile_id?: boolean | `@${string}`;
    big_question_id?: boolean | `@${string}`;
    cast_id?: boolean | `@${string}`;
    circle_id?: boolean | `@${string}`;
    contribution_id?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    organization_id?: boolean | `@${string}`;
    reaction_count?: boolean | `@${string}`;
    reply_count?: boolean | `@${string}`;
    target_profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by avg() on columns of table "activities" */
  ['activities_avg_order_by']: {
    actor_profile_id?: ValueTypes['order_by'] | undefined | null;
    big_question_id?: ValueTypes['order_by'] | undefined | null;
    cast_id?: ValueTypes['order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    contribution_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    reaction_count?: ValueTypes['order_by'] | undefined | null;
    reply_count?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "activities". All fields are combined with a logical 'AND'. */
  ['activities_bool_exp']: {
    _and?: Array<ValueTypes['activities_bool_exp']> | undefined | null;
    _not?: ValueTypes['activities_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['activities_bool_exp']> | undefined | null;
    action?: ValueTypes['String_comparison_exp'] | undefined | null;
    actor_profile?: ValueTypes['profiles_bool_exp'] | undefined | null;
    actor_profile_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    actor_profile_public?:
      | ValueTypes['profiles_public_bool_exp']
      | undefined
      | null;
    big_question?: ValueTypes['big_questions_bool_exp'] | undefined | null;
    big_question_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    cast_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    circle?: ValueTypes['circles_bool_exp'] | undefined | null;
    circle_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    contribution?: ValueTypes['contributions_bool_exp'] | undefined | null;
    contribution_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    created_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    enriched_cast?: ValueTypes['enriched_casts_bool_exp'] | undefined | null;
    epoch?: ValueTypes['epochs_bool_exp'] | undefined | null;
    epoch_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    gives?: ValueTypes['colinks_gives_bool_exp'] | undefined | null;
    gives_aggregate?:
      | ValueTypes['colinks_gives_aggregate_bool_exp']
      | undefined
      | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    organization?: ValueTypes['organizations_bool_exp'] | undefined | null;
    organization_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    private_stream?: ValueTypes['Boolean_comparison_exp'] | undefined | null;
    private_stream_visibility?:
      | ValueTypes['private_stream_visibility_bool_exp']
      | undefined
      | null;
    reaction_count?: ValueTypes['Int_comparison_exp'] | undefined | null;
    reactions?: ValueTypes['reactions_bool_exp'] | undefined | null;
    reactions_aggregate?:
      | ValueTypes['reactions_aggregate_bool_exp']
      | undefined
      | null;
    replies?: ValueTypes['replies_bool_exp'] | undefined | null;
    replies_aggregate?:
      | ValueTypes['replies_aggregate_bool_exp']
      | undefined
      | null;
    reply_count?: ValueTypes['Int_comparison_exp'] | undefined | null;
    target_profile?: ValueTypes['profiles_bool_exp'] | undefined | null;
    target_profile_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    target_profile_public?:
      | ValueTypes['profiles_public_bool_exp']
      | undefined
      | null;
    updated_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    user?: ValueTypes['users_bool_exp'] | undefined | null;
  };
  /** aggregate max on columns */
  ['activities_max_fields']: AliasType<{
    action?: boolean | `@${string}`;
    actor_profile_id?: boolean | `@${string}`;
    big_question_id?: boolean | `@${string}`;
    cast_id?: boolean | `@${string}`;
    circle_id?: boolean | `@${string}`;
    contribution_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    organization_id?: boolean | `@${string}`;
    reaction_count?: boolean | `@${string}`;
    reply_count?: boolean | `@${string}`;
    target_profile_id?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by max() on columns of table "activities" */
  ['activities_max_order_by']: {
    action?: ValueTypes['order_by'] | undefined | null;
    actor_profile_id?: ValueTypes['order_by'] | undefined | null;
    big_question_id?: ValueTypes['order_by'] | undefined | null;
    cast_id?: ValueTypes['order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    contribution_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    reaction_count?: ValueTypes['order_by'] | undefined | null;
    reply_count?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate min on columns */
  ['activities_min_fields']: AliasType<{
    action?: boolean | `@${string}`;
    actor_profile_id?: boolean | `@${string}`;
    big_question_id?: boolean | `@${string}`;
    cast_id?: boolean | `@${string}`;
    circle_id?: boolean | `@${string}`;
    contribution_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    organization_id?: boolean | `@${string}`;
    reaction_count?: boolean | `@${string}`;
    reply_count?: boolean | `@${string}`;
    target_profile_id?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by min() on columns of table "activities" */
  ['activities_min_order_by']: {
    action?: ValueTypes['order_by'] | undefined | null;
    actor_profile_id?: ValueTypes['order_by'] | undefined | null;
    big_question_id?: ValueTypes['order_by'] | undefined | null;
    cast_id?: ValueTypes['order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    contribution_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    reaction_count?: ValueTypes['order_by'] | undefined | null;
    reply_count?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** Ordering options when selecting data from "activities". */
  ['activities_order_by']: {
    action?: ValueTypes['order_by'] | undefined | null;
    actor_profile?: ValueTypes['profiles_order_by'] | undefined | null;
    actor_profile_id?: ValueTypes['order_by'] | undefined | null;
    actor_profile_public?:
      | ValueTypes['profiles_public_order_by']
      | undefined
      | null;
    big_question?: ValueTypes['big_questions_order_by'] | undefined | null;
    big_question_id?: ValueTypes['order_by'] | undefined | null;
    cast_id?: ValueTypes['order_by'] | undefined | null;
    circle?: ValueTypes['circles_order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    contribution?: ValueTypes['contributions_order_by'] | undefined | null;
    contribution_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    enriched_cast?: ValueTypes['enriched_casts_order_by'] | undefined | null;
    epoch?: ValueTypes['epochs_order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    gives_aggregate?:
      | ValueTypes['colinks_gives_aggregate_order_by']
      | undefined
      | null;
    id?: ValueTypes['order_by'] | undefined | null;
    organization?: ValueTypes['organizations_order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    private_stream?: ValueTypes['order_by'] | undefined | null;
    private_stream_visibility_aggregate?:
      | ValueTypes['private_stream_visibility_aggregate_order_by']
      | undefined
      | null;
    reaction_count?: ValueTypes['order_by'] | undefined | null;
    reactions_aggregate?:
      | ValueTypes['reactions_aggregate_order_by']
      | undefined
      | null;
    replies_aggregate?:
      | ValueTypes['replies_aggregate_order_by']
      | undefined
      | null;
    reply_count?: ValueTypes['order_by'] | undefined | null;
    target_profile?: ValueTypes['profiles_order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
    target_profile_public?:
      | ValueTypes['profiles_public_order_by']
      | undefined
      | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    user?: ValueTypes['users_order_by'] | undefined | null;
  };
  /** select columns of table "activities" */
  ['activities_select_column']: activities_select_column;
  /** select "activities_aggregate_bool_exp_bool_and_arguments_columns" columns of table "activities" */
  ['activities_select_column_activities_aggregate_bool_exp_bool_and_arguments_columns']: activities_select_column_activities_aggregate_bool_exp_bool_and_arguments_columns;
  /** select "activities_aggregate_bool_exp_bool_or_arguments_columns" columns of table "activities" */
  ['activities_select_column_activities_aggregate_bool_exp_bool_or_arguments_columns']: activities_select_column_activities_aggregate_bool_exp_bool_or_arguments_columns;
  /** aggregate stddev on columns */
  ['activities_stddev_fields']: AliasType<{
    actor_profile_id?: boolean | `@${string}`;
    big_question_id?: boolean | `@${string}`;
    cast_id?: boolean | `@${string}`;
    circle_id?: boolean | `@${string}`;
    contribution_id?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    organization_id?: boolean | `@${string}`;
    reaction_count?: boolean | `@${string}`;
    reply_count?: boolean | `@${string}`;
    target_profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev() on columns of table "activities" */
  ['activities_stddev_order_by']: {
    actor_profile_id?: ValueTypes['order_by'] | undefined | null;
    big_question_id?: ValueTypes['order_by'] | undefined | null;
    cast_id?: ValueTypes['order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    contribution_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    reaction_count?: ValueTypes['order_by'] | undefined | null;
    reply_count?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_pop on columns */
  ['activities_stddev_pop_fields']: AliasType<{
    actor_profile_id?: boolean | `@${string}`;
    big_question_id?: boolean | `@${string}`;
    cast_id?: boolean | `@${string}`;
    circle_id?: boolean | `@${string}`;
    contribution_id?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    organization_id?: boolean | `@${string}`;
    reaction_count?: boolean | `@${string}`;
    reply_count?: boolean | `@${string}`;
    target_profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_pop() on columns of table "activities" */
  ['activities_stddev_pop_order_by']: {
    actor_profile_id?: ValueTypes['order_by'] | undefined | null;
    big_question_id?: ValueTypes['order_by'] | undefined | null;
    cast_id?: ValueTypes['order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    contribution_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    reaction_count?: ValueTypes['order_by'] | undefined | null;
    reply_count?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_samp on columns */
  ['activities_stddev_samp_fields']: AliasType<{
    actor_profile_id?: boolean | `@${string}`;
    big_question_id?: boolean | `@${string}`;
    cast_id?: boolean | `@${string}`;
    circle_id?: boolean | `@${string}`;
    contribution_id?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    organization_id?: boolean | `@${string}`;
    reaction_count?: boolean | `@${string}`;
    reply_count?: boolean | `@${string}`;
    target_profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_samp() on columns of table "activities" */
  ['activities_stddev_samp_order_by']: {
    actor_profile_id?: ValueTypes['order_by'] | undefined | null;
    big_question_id?: ValueTypes['order_by'] | undefined | null;
    cast_id?: ValueTypes['order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    contribution_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    reaction_count?: ValueTypes['order_by'] | undefined | null;
    reply_count?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "activities" */
  ['activities_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['activities_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['activities_stream_cursor_value_input']: {
    action?: string | undefined | null;
    actor_profile_id?: ValueTypes['bigint'] | undefined | null;
    big_question_id?: ValueTypes['bigint'] | undefined | null;
    cast_id?: ValueTypes['bigint'] | undefined | null;
    circle_id?: ValueTypes['bigint'] | undefined | null;
    contribution_id?: ValueTypes['bigint'] | undefined | null;
    created_at?: ValueTypes['timestamptz'] | undefined | null;
    epoch_id?: ValueTypes['bigint'] | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    organization_id?: ValueTypes['bigint'] | undefined | null;
    private_stream?: boolean | undefined | null;
    reaction_count?: number | undefined | null;
    reply_count?: number | undefined | null;
    target_profile_id?: ValueTypes['bigint'] | undefined | null;
    updated_at?: ValueTypes['timestamptz'] | undefined | null;
  };
  /** aggregate sum on columns */
  ['activities_sum_fields']: AliasType<{
    actor_profile_id?: boolean | `@${string}`;
    big_question_id?: boolean | `@${string}`;
    cast_id?: boolean | `@${string}`;
    circle_id?: boolean | `@${string}`;
    contribution_id?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    organization_id?: boolean | `@${string}`;
    reaction_count?: boolean | `@${string}`;
    reply_count?: boolean | `@${string}`;
    target_profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by sum() on columns of table "activities" */
  ['activities_sum_order_by']: {
    actor_profile_id?: ValueTypes['order_by'] | undefined | null;
    big_question_id?: ValueTypes['order_by'] | undefined | null;
    cast_id?: ValueTypes['order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    contribution_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    reaction_count?: ValueTypes['order_by'] | undefined | null;
    reply_count?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate var_pop on columns */
  ['activities_var_pop_fields']: AliasType<{
    actor_profile_id?: boolean | `@${string}`;
    big_question_id?: boolean | `@${string}`;
    cast_id?: boolean | `@${string}`;
    circle_id?: boolean | `@${string}`;
    contribution_id?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    organization_id?: boolean | `@${string}`;
    reaction_count?: boolean | `@${string}`;
    reply_count?: boolean | `@${string}`;
    target_profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_pop() on columns of table "activities" */
  ['activities_var_pop_order_by']: {
    actor_profile_id?: ValueTypes['order_by'] | undefined | null;
    big_question_id?: ValueTypes['order_by'] | undefined | null;
    cast_id?: ValueTypes['order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    contribution_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    reaction_count?: ValueTypes['order_by'] | undefined | null;
    reply_count?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate var_samp on columns */
  ['activities_var_samp_fields']: AliasType<{
    actor_profile_id?: boolean | `@${string}`;
    big_question_id?: boolean | `@${string}`;
    cast_id?: boolean | `@${string}`;
    circle_id?: boolean | `@${string}`;
    contribution_id?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    organization_id?: boolean | `@${string}`;
    reaction_count?: boolean | `@${string}`;
    reply_count?: boolean | `@${string}`;
    target_profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_samp() on columns of table "activities" */
  ['activities_var_samp_order_by']: {
    actor_profile_id?: ValueTypes['order_by'] | undefined | null;
    big_question_id?: ValueTypes['order_by'] | undefined | null;
    cast_id?: ValueTypes['order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    contribution_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    reaction_count?: ValueTypes['order_by'] | undefined | null;
    reply_count?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate variance on columns */
  ['activities_variance_fields']: AliasType<{
    actor_profile_id?: boolean | `@${string}`;
    big_question_id?: boolean | `@${string}`;
    cast_id?: boolean | `@${string}`;
    circle_id?: boolean | `@${string}`;
    contribution_id?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    organization_id?: boolean | `@${string}`;
    reaction_count?: boolean | `@${string}`;
    reply_count?: boolean | `@${string}`;
    target_profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by variance() on columns of table "activities" */
  ['activities_variance_order_by']: {
    actor_profile_id?: ValueTypes['order_by'] | undefined | null;
    big_question_id?: ValueTypes['order_by'] | undefined | null;
    cast_id?: ValueTypes['order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    contribution_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    reaction_count?: ValueTypes['order_by'] | undefined | null;
    reply_count?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** columns and relationships of "big_questions" */
  ['big_questions']: AliasType<{
    activities?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['activities_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['activities_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['activities_bool_exp'] | undefined | null;
      },
      ValueTypes['activities'],
    ];
    activities_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['activities_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['activities_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['activities_bool_exp'] | undefined | null;
      },
      ValueTypes['activities_aggregate'],
    ];
    cover_image_url?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    css_background_position?: boolean | `@${string}`;
    description?: boolean | `@${string}`;
    expire_at?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    prompt?: boolean | `@${string}`;
    publish_at?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "big_questions". All fields are combined with a logical 'AND'. */
  ['big_questions_bool_exp']: {
    _and?: Array<ValueTypes['big_questions_bool_exp']> | undefined | null;
    _not?: ValueTypes['big_questions_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['big_questions_bool_exp']> | undefined | null;
    activities?: ValueTypes['activities_bool_exp'] | undefined | null;
    activities_aggregate?:
      | ValueTypes['activities_aggregate_bool_exp']
      | undefined
      | null;
    cover_image_url?: ValueTypes['String_comparison_exp'] | undefined | null;
    created_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    css_background_position?:
      | ValueTypes['String_comparison_exp']
      | undefined
      | null;
    description?: ValueTypes['String_comparison_exp'] | undefined | null;
    expire_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    prompt?: ValueTypes['String_comparison_exp'] | undefined | null;
    publish_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
  };
  /** Ordering options when selecting data from "big_questions". */
  ['big_questions_order_by']: {
    activities_aggregate?:
      | ValueTypes['activities_aggregate_order_by']
      | undefined
      | null;
    cover_image_url?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    css_background_position?: ValueTypes['order_by'] | undefined | null;
    description?: ValueTypes['order_by'] | undefined | null;
    expire_at?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    prompt?: ValueTypes['order_by'] | undefined | null;
    publish_at?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "big_questions" */
  ['big_questions_select_column']: big_questions_select_column;
  /** Streaming cursor of the table "big_questions" */
  ['big_questions_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['big_questions_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['big_questions_stream_cursor_value_input']: {
    cover_image_url?: string | undefined | null;
    created_at?: ValueTypes['timestamp'] | undefined | null;
    css_background_position?: string | undefined | null;
    description?: string | undefined | null;
    expire_at?: ValueTypes['timestamp'] | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    prompt?: string | undefined | null;
    publish_at?: ValueTypes['timestamp'] | undefined | null;
    updated_at?: ValueTypes['timestamp'] | undefined | null;
  };
  ['bigint']: number;
  /** Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'. */
  ['bigint_array_comparison_exp']: {
    /** is the array contained in the given array value */
    _contained_in?: Array<ValueTypes['bigint']> | undefined | null;
    /** does the array contain the given value */
    _contains?: Array<ValueTypes['bigint']> | undefined | null;
    _eq?: Array<ValueTypes['bigint']> | undefined | null;
    _gt?: Array<ValueTypes['bigint']> | undefined | null;
    _gte?: Array<ValueTypes['bigint']> | undefined | null;
    _in?: Array<Array<ValueTypes['bigint']> | undefined | null>;
    _is_null?: boolean | undefined | null;
    _lt?: Array<ValueTypes['bigint']> | undefined | null;
    _lte?: Array<ValueTypes['bigint']> | undefined | null;
    _neq?: Array<ValueTypes['bigint']> | undefined | null;
    _nin?: Array<Array<ValueTypes['bigint']> | undefined | null>;
  };
  /** Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'. */
  ['bigint_comparison_exp']: {
    _eq?: ValueTypes['bigint'] | undefined | null;
    _gt?: ValueTypes['bigint'] | undefined | null;
    _gte?: ValueTypes['bigint'] | undefined | null;
    _in?: Array<ValueTypes['bigint']> | undefined | null;
    _is_null?: boolean | undefined | null;
    _lt?: ValueTypes['bigint'] | undefined | null;
    _lte?: ValueTypes['bigint'] | undefined | null;
    _neq?: ValueTypes['bigint'] | undefined | null;
    _nin?: Array<ValueTypes['bigint']> | undefined | null;
  };
  /** columns and relationships of "burns" */
  ['burns']: AliasType<{
    /** An object relationship */
    circle?: ValueTypes['circles'];
    circle_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    /** An object relationship */
    epoch?: ValueTypes['epochs'];
    epoch_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    original_amount?: boolean | `@${string}`;
    regift_percent?: boolean | `@${string}`;
    tokens_burnt?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    /** An object relationship */
    user?: ValueTypes['users'];
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "burns" */
  ['burns_aggregate_order_by']: {
    avg?: ValueTypes['burns_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['burns_max_order_by'] | undefined | null;
    min?: ValueTypes['burns_min_order_by'] | undefined | null;
    stddev?: ValueTypes['burns_stddev_order_by'] | undefined | null;
    stddev_pop?: ValueTypes['burns_stddev_pop_order_by'] | undefined | null;
    stddev_samp?: ValueTypes['burns_stddev_samp_order_by'] | undefined | null;
    sum?: ValueTypes['burns_sum_order_by'] | undefined | null;
    var_pop?: ValueTypes['burns_var_pop_order_by'] | undefined | null;
    var_samp?: ValueTypes['burns_var_samp_order_by'] | undefined | null;
    variance?: ValueTypes['burns_variance_order_by'] | undefined | null;
  };
  /** order by avg() on columns of table "burns" */
  ['burns_avg_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    original_amount?: ValueTypes['order_by'] | undefined | null;
    regift_percent?: ValueTypes['order_by'] | undefined | null;
    tokens_burnt?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "burns". All fields are combined with a logical 'AND'. */
  ['burns_bool_exp']: {
    _and?: Array<ValueTypes['burns_bool_exp']> | undefined | null;
    _not?: ValueTypes['burns_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['burns_bool_exp']> | undefined | null;
    circle?: ValueTypes['circles_bool_exp'] | undefined | null;
    circle_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    created_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    epoch?: ValueTypes['epochs_bool_exp'] | undefined | null;
    epoch_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    original_amount?: ValueTypes['Int_comparison_exp'] | undefined | null;
    regift_percent?: ValueTypes['Int_comparison_exp'] | undefined | null;
    tokens_burnt?: ValueTypes['Int_comparison_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    user?: ValueTypes['users_bool_exp'] | undefined | null;
    user_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
  };
  /** order by max() on columns of table "burns" */
  ['burns_max_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    original_amount?: ValueTypes['order_by'] | undefined | null;
    regift_percent?: ValueTypes['order_by'] | undefined | null;
    tokens_burnt?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by min() on columns of table "burns" */
  ['burns_min_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    original_amount?: ValueTypes['order_by'] | undefined | null;
    regift_percent?: ValueTypes['order_by'] | undefined | null;
    tokens_burnt?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Ordering options when selecting data from "burns". */
  ['burns_order_by']: {
    circle?: ValueTypes['circles_order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    epoch?: ValueTypes['epochs_order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    original_amount?: ValueTypes['order_by'] | undefined | null;
    regift_percent?: ValueTypes['order_by'] | undefined | null;
    tokens_burnt?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    user?: ValueTypes['users_order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "burns" */
  ['burns_select_column']: burns_select_column;
  /** order by stddev() on columns of table "burns" */
  ['burns_stddev_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    original_amount?: ValueTypes['order_by'] | undefined | null;
    regift_percent?: ValueTypes['order_by'] | undefined | null;
    tokens_burnt?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_pop() on columns of table "burns" */
  ['burns_stddev_pop_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    original_amount?: ValueTypes['order_by'] | undefined | null;
    regift_percent?: ValueTypes['order_by'] | undefined | null;
    tokens_burnt?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_samp() on columns of table "burns" */
  ['burns_stddev_samp_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    original_amount?: ValueTypes['order_by'] | undefined | null;
    regift_percent?: ValueTypes['order_by'] | undefined | null;
    tokens_burnt?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "burns" */
  ['burns_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['burns_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['burns_stream_cursor_value_input']: {
    circle_id?: ValueTypes['bigint'] | undefined | null;
    created_at?: ValueTypes['timestamp'] | undefined | null;
    epoch_id?: ValueTypes['bigint'] | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    original_amount?: number | undefined | null;
    regift_percent?: number | undefined | null;
    tokens_burnt?: number | undefined | null;
    updated_at?: ValueTypes['timestamp'] | undefined | null;
    user_id?: ValueTypes['bigint'] | undefined | null;
  };
  /** order by sum() on columns of table "burns" */
  ['burns_sum_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    original_amount?: ValueTypes['order_by'] | undefined | null;
    regift_percent?: ValueTypes['order_by'] | undefined | null;
    tokens_burnt?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by var_pop() on columns of table "burns" */
  ['burns_var_pop_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    original_amount?: ValueTypes['order_by'] | undefined | null;
    regift_percent?: ValueTypes['order_by'] | undefined | null;
    tokens_burnt?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by var_samp() on columns of table "burns" */
  ['burns_var_samp_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    original_amount?: ValueTypes['order_by'] | undefined | null;
    regift_percent?: ValueTypes['order_by'] | undefined | null;
    tokens_burnt?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by variance() on columns of table "burns" */
  ['burns_variance_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    original_amount?: ValueTypes['order_by'] | undefined | null;
    regift_percent?: ValueTypes['order_by'] | undefined | null;
    tokens_burnt?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  ['bytea']: unknown;
  /** Boolean expression to compare columns of type "bytea". All fields are combined with logical 'AND'. */
  ['bytea_comparison_exp']: {
    _eq?: ValueTypes['bytea'] | undefined | null;
    _gt?: ValueTypes['bytea'] | undefined | null;
    _gte?: ValueTypes['bytea'] | undefined | null;
    _in?: Array<ValueTypes['bytea']> | undefined | null;
    _is_null?: boolean | undefined | null;
    _lt?: ValueTypes['bytea'] | undefined | null;
    _lte?: ValueTypes['bytea'] | undefined | null;
    _neq?: ValueTypes['bytea'] | undefined | null;
    _nin?: Array<ValueTypes['bytea']> | undefined | null;
  };
  /** Circle-scoped API keys with user defined permissions to allow third parties to authenticate to Coordinape's GraphQL API. */
  ['circle_api_keys']: AliasType<{
    /** An object relationship */
    circle?: ValueTypes['circles'];
    circle_id?: boolean | `@${string}`;
    create_contributions?: boolean | `@${string}`;
    create_vouches?: boolean | `@${string}`;
    /** An object relationship */
    createdByUser?: ValueTypes['users'];
    created_at?: boolean | `@${string}`;
    created_by?: boolean | `@${string}`;
    hash?: boolean | `@${string}`;
    manage_users?: boolean | `@${string}`;
    name?: boolean | `@${string}`;
    read_circle?: boolean | `@${string}`;
    read_contributions?: boolean | `@${string}`;
    read_epochs?: boolean | `@${string}`;
    read_member_profiles?: boolean | `@${string}`;
    read_nominees?: boolean | `@${string}`;
    read_pending_token_gifts?: boolean | `@${string}`;
    update_circle?: boolean | `@${string}`;
    update_pending_token_gifts?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "circle_api_keys" */
  ['circle_api_keys_aggregate_order_by']: {
    avg?: ValueTypes['circle_api_keys_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['circle_api_keys_max_order_by'] | undefined | null;
    min?: ValueTypes['circle_api_keys_min_order_by'] | undefined | null;
    stddev?: ValueTypes['circle_api_keys_stddev_order_by'] | undefined | null;
    stddev_pop?:
      | ValueTypes['circle_api_keys_stddev_pop_order_by']
      | undefined
      | null;
    stddev_samp?:
      | ValueTypes['circle_api_keys_stddev_samp_order_by']
      | undefined
      | null;
    sum?: ValueTypes['circle_api_keys_sum_order_by'] | undefined | null;
    var_pop?: ValueTypes['circle_api_keys_var_pop_order_by'] | undefined | null;
    var_samp?:
      | ValueTypes['circle_api_keys_var_samp_order_by']
      | undefined
      | null;
    variance?:
      | ValueTypes['circle_api_keys_variance_order_by']
      | undefined
      | null;
  };
  /** order by avg() on columns of table "circle_api_keys" */
  ['circle_api_keys_avg_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "circle_api_keys". All fields are combined with a logical 'AND'. */
  ['circle_api_keys_bool_exp']: {
    _and?: Array<ValueTypes['circle_api_keys_bool_exp']> | undefined | null;
    _not?: ValueTypes['circle_api_keys_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['circle_api_keys_bool_exp']> | undefined | null;
    circle?: ValueTypes['circles_bool_exp'] | undefined | null;
    circle_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    create_contributions?:
      | ValueTypes['Boolean_comparison_exp']
      | undefined
      | null;
    create_vouches?: ValueTypes['Boolean_comparison_exp'] | undefined | null;
    createdByUser?: ValueTypes['users_bool_exp'] | undefined | null;
    created_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    created_by?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    hash?: ValueTypes['String_comparison_exp'] | undefined | null;
    manage_users?: ValueTypes['Boolean_comparison_exp'] | undefined | null;
    name?: ValueTypes['String_comparison_exp'] | undefined | null;
    read_circle?: ValueTypes['Boolean_comparison_exp'] | undefined | null;
    read_contributions?:
      | ValueTypes['Boolean_comparison_exp']
      | undefined
      | null;
    read_epochs?: ValueTypes['Boolean_comparison_exp'] | undefined | null;
    read_member_profiles?:
      | ValueTypes['Boolean_comparison_exp']
      | undefined
      | null;
    read_nominees?: ValueTypes['Boolean_comparison_exp'] | undefined | null;
    read_pending_token_gifts?:
      | ValueTypes['Boolean_comparison_exp']
      | undefined
      | null;
    update_circle?: ValueTypes['Boolean_comparison_exp'] | undefined | null;
    update_pending_token_gifts?:
      | ValueTypes['Boolean_comparison_exp']
      | undefined
      | null;
  };
  /** order by max() on columns of table "circle_api_keys" */
  ['circle_api_keys_max_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    hash?: ValueTypes['order_by'] | undefined | null;
    name?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by min() on columns of table "circle_api_keys" */
  ['circle_api_keys_min_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    hash?: ValueTypes['order_by'] | undefined | null;
    name?: ValueTypes['order_by'] | undefined | null;
  };
  /** response of any mutation on the table "circle_api_keys" */
  ['circle_api_keys_mutation_response']: AliasType<{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | `@${string}`;
    /** data from the rows affected by the mutation */
    returning?: ValueTypes['circle_api_keys'];
    __typename?: boolean | `@${string}`;
  }>;
  /** Ordering options when selecting data from "circle_api_keys". */
  ['circle_api_keys_order_by']: {
    circle?: ValueTypes['circles_order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    create_contributions?: ValueTypes['order_by'] | undefined | null;
    create_vouches?: ValueTypes['order_by'] | undefined | null;
    createdByUser?: ValueTypes['users_order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    hash?: ValueTypes['order_by'] | undefined | null;
    manage_users?: ValueTypes['order_by'] | undefined | null;
    name?: ValueTypes['order_by'] | undefined | null;
    read_circle?: ValueTypes['order_by'] | undefined | null;
    read_contributions?: ValueTypes['order_by'] | undefined | null;
    read_epochs?: ValueTypes['order_by'] | undefined | null;
    read_member_profiles?: ValueTypes['order_by'] | undefined | null;
    read_nominees?: ValueTypes['order_by'] | undefined | null;
    read_pending_token_gifts?: ValueTypes['order_by'] | undefined | null;
    update_circle?: ValueTypes['order_by'] | undefined | null;
    update_pending_token_gifts?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "circle_api_keys" */
  ['circle_api_keys_select_column']: circle_api_keys_select_column;
  /** order by stddev() on columns of table "circle_api_keys" */
  ['circle_api_keys_stddev_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_pop() on columns of table "circle_api_keys" */
  ['circle_api_keys_stddev_pop_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_samp() on columns of table "circle_api_keys" */
  ['circle_api_keys_stddev_samp_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "circle_api_keys" */
  ['circle_api_keys_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['circle_api_keys_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['circle_api_keys_stream_cursor_value_input']: {
    circle_id?: ValueTypes['bigint'] | undefined | null;
    create_contributions?: boolean | undefined | null;
    create_vouches?: boolean | undefined | null;
    created_at?: ValueTypes['timestamptz'] | undefined | null;
    created_by?: ValueTypes['bigint'] | undefined | null;
    hash?: string | undefined | null;
    manage_users?: boolean | undefined | null;
    name?: string | undefined | null;
    read_circle?: boolean | undefined | null;
    read_contributions?: boolean | undefined | null;
    read_epochs?: boolean | undefined | null;
    read_member_profiles?: boolean | undefined | null;
    read_nominees?: boolean | undefined | null;
    read_pending_token_gifts?: boolean | undefined | null;
    update_circle?: boolean | undefined | null;
    update_pending_token_gifts?: boolean | undefined | null;
  };
  /** order by sum() on columns of table "circle_api_keys" */
  ['circle_api_keys_sum_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by var_pop() on columns of table "circle_api_keys" */
  ['circle_api_keys_var_pop_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by var_samp() on columns of table "circle_api_keys" */
  ['circle_api_keys_var_samp_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by variance() on columns of table "circle_api_keys" */
  ['circle_api_keys_variance_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
  };
  /** columns and relationships of "circle_integrations" */
  ['circle_integrations']: AliasType<{
    /** An object relationship */
    circle?: ValueTypes['circles'];
    circle_id?: boolean | `@${string}`;
    data?: [
      {
        /** JSON select path */ path?: string | undefined | null;
      },
      boolean | `@${string}`,
    ];
    id?: boolean | `@${string}`;
    name?: boolean | `@${string}`;
    type?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "circle_integrations" */
  ['circle_integrations_aggregate_order_by']: {
    avg?: ValueTypes['circle_integrations_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['circle_integrations_max_order_by'] | undefined | null;
    min?: ValueTypes['circle_integrations_min_order_by'] | undefined | null;
    stddev?:
      | ValueTypes['circle_integrations_stddev_order_by']
      | undefined
      | null;
    stddev_pop?:
      | ValueTypes['circle_integrations_stddev_pop_order_by']
      | undefined
      | null;
    stddev_samp?:
      | ValueTypes['circle_integrations_stddev_samp_order_by']
      | undefined
      | null;
    sum?: ValueTypes['circle_integrations_sum_order_by'] | undefined | null;
    var_pop?:
      | ValueTypes['circle_integrations_var_pop_order_by']
      | undefined
      | null;
    var_samp?:
      | ValueTypes['circle_integrations_var_samp_order_by']
      | undefined
      | null;
    variance?:
      | ValueTypes['circle_integrations_variance_order_by']
      | undefined
      | null;
  };
  /** order by avg() on columns of table "circle_integrations" */
  ['circle_integrations_avg_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "circle_integrations". All fields are combined with a logical 'AND'. */
  ['circle_integrations_bool_exp']: {
    _and?: Array<ValueTypes['circle_integrations_bool_exp']> | undefined | null;
    _not?: ValueTypes['circle_integrations_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['circle_integrations_bool_exp']> | undefined | null;
    circle?: ValueTypes['circles_bool_exp'] | undefined | null;
    circle_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    data?: ValueTypes['json_comparison_exp'] | undefined | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    name?: ValueTypes['String_comparison_exp'] | undefined | null;
    type?: ValueTypes['String_comparison_exp'] | undefined | null;
  };
  /** unique or primary key constraints on table "circle_integrations" */
  ['circle_integrations_constraint']: circle_integrations_constraint;
  /** input type for inserting data into table "circle_integrations" */
  ['circle_integrations_insert_input']: {
    circle_id?: ValueTypes['bigint'] | undefined | null;
    data?: ValueTypes['json'] | undefined | null;
    name?: string | undefined | null;
    type?: string | undefined | null;
  };
  /** order by max() on columns of table "circle_integrations" */
  ['circle_integrations_max_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    name?: ValueTypes['order_by'] | undefined | null;
    type?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by min() on columns of table "circle_integrations" */
  ['circle_integrations_min_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    name?: ValueTypes['order_by'] | undefined | null;
    type?: ValueTypes['order_by'] | undefined | null;
  };
  /** response of any mutation on the table "circle_integrations" */
  ['circle_integrations_mutation_response']: AliasType<{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | `@${string}`;
    /** data from the rows affected by the mutation */
    returning?: ValueTypes['circle_integrations'];
    __typename?: boolean | `@${string}`;
  }>;
  /** on_conflict condition type for table "circle_integrations" */
  ['circle_integrations_on_conflict']: {
    constraint: ValueTypes['circle_integrations_constraint'];
    update_columns: Array<ValueTypes['circle_integrations_update_column']>;
    where?: ValueTypes['circle_integrations_bool_exp'] | undefined | null;
  };
  /** Ordering options when selecting data from "circle_integrations". */
  ['circle_integrations_order_by']: {
    circle?: ValueTypes['circles_order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    data?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    name?: ValueTypes['order_by'] | undefined | null;
    type?: ValueTypes['order_by'] | undefined | null;
  };
  /** primary key columns input for table: circle_integrations */
  ['circle_integrations_pk_columns_input']: {
    id: ValueTypes['bigint'];
  };
  /** select columns of table "circle_integrations" */
  ['circle_integrations_select_column']: circle_integrations_select_column;
  /** input type for updating data in table "circle_integrations" */
  ['circle_integrations_set_input']: {
    data?: ValueTypes['json'] | undefined | null;
  };
  /** order by stddev() on columns of table "circle_integrations" */
  ['circle_integrations_stddev_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_pop() on columns of table "circle_integrations" */
  ['circle_integrations_stddev_pop_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_samp() on columns of table "circle_integrations" */
  ['circle_integrations_stddev_samp_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "circle_integrations" */
  ['circle_integrations_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['circle_integrations_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['circle_integrations_stream_cursor_value_input']: {
    circle_id?: ValueTypes['bigint'] | undefined | null;
    data?: ValueTypes['json'] | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    name?: string | undefined | null;
    type?: string | undefined | null;
  };
  /** order by sum() on columns of table "circle_integrations" */
  ['circle_integrations_sum_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
  };
  /** update columns of table "circle_integrations" */
  ['circle_integrations_update_column']: circle_integrations_update_column;
  ['circle_integrations_updates']: {
    /** sets the columns of the filtered rows to the given values */
    _set?: ValueTypes['circle_integrations_set_input'] | undefined | null;
    /** filter the rows which have to be updated */
    where: ValueTypes['circle_integrations_bool_exp'];
  };
  /** order by var_pop() on columns of table "circle_integrations" */
  ['circle_integrations_var_pop_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by var_samp() on columns of table "circle_integrations" */
  ['circle_integrations_var_samp_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by variance() on columns of table "circle_integrations" */
  ['circle_integrations_variance_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
  };
  /** columns and relationships of "circle_private" */
  ['circle_private']: AliasType<{
    /** An object relationship */
    circle?: ValueTypes['circles'];
    circle_id?: boolean | `@${string}`;
    discord_webhook?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "circle_private". All fields are combined with a logical 'AND'. */
  ['circle_private_bool_exp']: {
    _and?: Array<ValueTypes['circle_private_bool_exp']> | undefined | null;
    _not?: ValueTypes['circle_private_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['circle_private_bool_exp']> | undefined | null;
    circle?: ValueTypes['circles_bool_exp'] | undefined | null;
    circle_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    discord_webhook?: ValueTypes['String_comparison_exp'] | undefined | null;
  };
  /** Ordering options when selecting data from "circle_private". */
  ['circle_private_order_by']: {
    circle?: ValueTypes['circles_order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    discord_webhook?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "circle_private" */
  ['circle_private_select_column']: circle_private_select_column;
  /** Streaming cursor of the table "circle_private" */
  ['circle_private_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['circle_private_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['circle_private_stream_cursor_value_input']: {
    circle_id?: ValueTypes['bigint'] | undefined | null;
    discord_webhook?: string | undefined | null;
  };
  /** columns and relationships of "circle_share_tokens" */
  ['circle_share_tokens']: AliasType<{
    /** An object relationship */
    circle?: ValueTypes['circles'];
    circle_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    type?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    uuid?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "circle_share_tokens". All fields are combined with a logical 'AND'. */
  ['circle_share_tokens_bool_exp']: {
    _and?: Array<ValueTypes['circle_share_tokens_bool_exp']> | undefined | null;
    _not?: ValueTypes['circle_share_tokens_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['circle_share_tokens_bool_exp']> | undefined | null;
    circle?: ValueTypes['circles_bool_exp'] | undefined | null;
    circle_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    created_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    type?: ValueTypes['Int_comparison_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    uuid?: ValueTypes['uuid_comparison_exp'] | undefined | null;
  };
  /** unique or primary key constraints on table "circle_share_tokens" */
  ['circle_share_tokens_constraint']: circle_share_tokens_constraint;
  /** input type for inserting data into table "circle_share_tokens" */
  ['circle_share_tokens_insert_input']: {
    circle_id?: ValueTypes['bigint'] | undefined | null;
    type?: number | undefined | null;
  };
  /** response of any mutation on the table "circle_share_tokens" */
  ['circle_share_tokens_mutation_response']: AliasType<{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | `@${string}`;
    /** data from the rows affected by the mutation */
    returning?: ValueTypes['circle_share_tokens'];
    __typename?: boolean | `@${string}`;
  }>;
  /** on_conflict condition type for table "circle_share_tokens" */
  ['circle_share_tokens_on_conflict']: {
    constraint: ValueTypes['circle_share_tokens_constraint'];
    update_columns: Array<ValueTypes['circle_share_tokens_update_column']>;
    where?: ValueTypes['circle_share_tokens_bool_exp'] | undefined | null;
  };
  /** Ordering options when selecting data from "circle_share_tokens". */
  ['circle_share_tokens_order_by']: {
    circle?: ValueTypes['circles_order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    type?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    uuid?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "circle_share_tokens" */
  ['circle_share_tokens_select_column']: circle_share_tokens_select_column;
  /** Streaming cursor of the table "circle_share_tokens" */
  ['circle_share_tokens_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['circle_share_tokens_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['circle_share_tokens_stream_cursor_value_input']: {
    circle_id?: ValueTypes['bigint'] | undefined | null;
    created_at?: ValueTypes['timestamptz'] | undefined | null;
    type?: number | undefined | null;
    updated_at?: ValueTypes['timestamptz'] | undefined | null;
    uuid?: ValueTypes['uuid'] | undefined | null;
  };
  /** placeholder for update columns of table "circle_share_tokens" (current role has no relevant permissions) */
  ['circle_share_tokens_update_column']: circle_share_tokens_update_column;
  /** columns and relationships of "circles" */
  ['circles']: AliasType<{
    alloc_text?: boolean | `@${string}`;
    allow_distribute_evenly?: boolean | `@${string}`;
    api_keys?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['circle_api_keys_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['circle_api_keys_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['circle_api_keys_bool_exp'] | undefined | null;
      },
      ValueTypes['circle_api_keys'],
    ];
    auto_opt_out?: boolean | `@${string}`;
    burns?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['burns_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['burns_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['burns_bool_exp'] | undefined | null;
      },
      ValueTypes['burns'],
    ];
    /** An object relationship */
    circle_private?: ValueTypes['circle_private'];
    cont_help_text?: boolean | `@${string}`;
    contributions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['contributions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['contributions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['contributions_bool_exp'] | undefined | null;
      },
      ValueTypes['contributions'],
    ];
    contributions_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['contributions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['contributions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['contributions_bool_exp'] | undefined | null;
      },
      ValueTypes['contributions_aggregate'],
    ];
    created_at?: boolean | `@${string}`;
    default_opt_in?: boolean | `@${string}`;
    deleted_at?: boolean | `@${string}`;
    epochs?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['epochs_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['epochs_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['epochs_bool_exp'] | undefined | null;
      },
      ValueTypes['epochs'],
    ];
    fixed_payment_token_type?: boolean | `@${string}`;
    fixed_payment_vault_id?: boolean | `@${string}`;
    guild_id?: boolean | `@${string}`;
    guild_role_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    integrations?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['circle_integrations_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['circle_integrations_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['circle_integrations_bool_exp'] | undefined | null;
      },
      ValueTypes['circle_integrations'],
    ];
    is_verified?: boolean | `@${string}`;
    logo?: boolean | `@${string}`;
    min_vouches?: boolean | `@${string}`;
    name?: boolean | `@${string}`;
    nomination_days_limit?: boolean | `@${string}`;
    nominees?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['nominees_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['nominees_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['nominees_bool_exp'] | undefined | null;
      },
      ValueTypes['nominees'],
    ];
    nominees_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['nominees_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['nominees_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['nominees_bool_exp'] | undefined | null;
      },
      ValueTypes['nominees_aggregate'],
    ];
    only_giver_vouch?: boolean | `@${string}`;
    /** An object relationship */
    organization?: ValueTypes['organizations'];
    organization_id?: boolean | `@${string}`;
    pending_token_gifts?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['pending_token_gifts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['pending_token_gifts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['pending_token_gifts_bool_exp'] | undefined | null;
      },
      ValueTypes['pending_token_gifts'],
    ];
    show_pending_gives?: boolean | `@${string}`;
    starting_tokens?: boolean | `@${string}`;
    team_selection?: boolean | `@${string}`;
    token_gifts?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['token_gifts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['token_gifts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['token_gifts_bool_exp'] | undefined | null;
      },
      ValueTypes['token_gifts'],
    ];
    token_gifts_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['token_gifts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['token_gifts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['token_gifts_bool_exp'] | undefined | null;
      },
      ValueTypes['token_gifts_aggregate'],
    ];
    token_name?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    users?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['users_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['users_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['users_bool_exp'] | undefined | null;
      },
      ValueTypes['users'],
    ];
    vault_transactions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['vault_transactions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['vault_transactions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['vault_transactions_bool_exp'] | undefined | null;
      },
      ValueTypes['vault_transactions'],
    ];
    vouching?: boolean | `@${string}`;
    vouching_text?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "circles" */
  ['circles_aggregate_order_by']: {
    avg?: ValueTypes['circles_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['circles_max_order_by'] | undefined | null;
    min?: ValueTypes['circles_min_order_by'] | undefined | null;
    stddev?: ValueTypes['circles_stddev_order_by'] | undefined | null;
    stddev_pop?: ValueTypes['circles_stddev_pop_order_by'] | undefined | null;
    stddev_samp?: ValueTypes['circles_stddev_samp_order_by'] | undefined | null;
    sum?: ValueTypes['circles_sum_order_by'] | undefined | null;
    var_pop?: ValueTypes['circles_var_pop_order_by'] | undefined | null;
    var_samp?: ValueTypes['circles_var_samp_order_by'] | undefined | null;
    variance?: ValueTypes['circles_variance_order_by'] | undefined | null;
  };
  /** order by avg() on columns of table "circles" */
  ['circles_avg_order_by']: {
    fixed_payment_vault_id?: ValueTypes['order_by'] | undefined | null;
    guild_id?: ValueTypes['order_by'] | undefined | null;
    guild_role_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    min_vouches?: ValueTypes['order_by'] | undefined | null;
    nomination_days_limit?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    starting_tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "circles". All fields are combined with a logical 'AND'. */
  ['circles_bool_exp']: {
    _and?: Array<ValueTypes['circles_bool_exp']> | undefined | null;
    _not?: ValueTypes['circles_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['circles_bool_exp']> | undefined | null;
    alloc_text?: ValueTypes['String_comparison_exp'] | undefined | null;
    allow_distribute_evenly?:
      | ValueTypes['Boolean_comparison_exp']
      | undefined
      | null;
    api_keys?: ValueTypes['circle_api_keys_bool_exp'] | undefined | null;
    auto_opt_out?: ValueTypes['Boolean_comparison_exp'] | undefined | null;
    burns?: ValueTypes['burns_bool_exp'] | undefined | null;
    circle_private?: ValueTypes['circle_private_bool_exp'] | undefined | null;
    cont_help_text?: ValueTypes['String_comparison_exp'] | undefined | null;
    contributions?: ValueTypes['contributions_bool_exp'] | undefined | null;
    contributions_aggregate?:
      | ValueTypes['contributions_aggregate_bool_exp']
      | undefined
      | null;
    created_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    default_opt_in?: ValueTypes['Boolean_comparison_exp'] | undefined | null;
    deleted_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    epochs?: ValueTypes['epochs_bool_exp'] | undefined | null;
    fixed_payment_token_type?:
      | ValueTypes['String_comparison_exp']
      | undefined
      | null;
    fixed_payment_vault_id?:
      | ValueTypes['Int_comparison_exp']
      | undefined
      | null;
    guild_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    guild_role_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    integrations?:
      | ValueTypes['circle_integrations_bool_exp']
      | undefined
      | null;
    is_verified?: ValueTypes['Boolean_comparison_exp'] | undefined | null;
    logo?: ValueTypes['String_comparison_exp'] | undefined | null;
    min_vouches?: ValueTypes['Int_comparison_exp'] | undefined | null;
    name?: ValueTypes['String_comparison_exp'] | undefined | null;
    nomination_days_limit?: ValueTypes['Int_comparison_exp'] | undefined | null;
    nominees?: ValueTypes['nominees_bool_exp'] | undefined | null;
    nominees_aggregate?:
      | ValueTypes['nominees_aggregate_bool_exp']
      | undefined
      | null;
    only_giver_vouch?: ValueTypes['Boolean_comparison_exp'] | undefined | null;
    organization?: ValueTypes['organizations_bool_exp'] | undefined | null;
    organization_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    pending_token_gifts?:
      | ValueTypes['pending_token_gifts_bool_exp']
      | undefined
      | null;
    show_pending_gives?:
      | ValueTypes['Boolean_comparison_exp']
      | undefined
      | null;
    starting_tokens?: ValueTypes['Int_comparison_exp'] | undefined | null;
    team_selection?: ValueTypes['Boolean_comparison_exp'] | undefined | null;
    token_gifts?: ValueTypes['token_gifts_bool_exp'] | undefined | null;
    token_gifts_aggregate?:
      | ValueTypes['token_gifts_aggregate_bool_exp']
      | undefined
      | null;
    token_name?: ValueTypes['String_comparison_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    users?: ValueTypes['users_bool_exp'] | undefined | null;
    vault_transactions?:
      | ValueTypes['vault_transactions_bool_exp']
      | undefined
      | null;
    vouching?: ValueTypes['Boolean_comparison_exp'] | undefined | null;
    vouching_text?: ValueTypes['String_comparison_exp'] | undefined | null;
  };
  /** order by max() on columns of table "circles" */
  ['circles_max_order_by']: {
    alloc_text?: ValueTypes['order_by'] | undefined | null;
    cont_help_text?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    deleted_at?: ValueTypes['order_by'] | undefined | null;
    fixed_payment_token_type?: ValueTypes['order_by'] | undefined | null;
    fixed_payment_vault_id?: ValueTypes['order_by'] | undefined | null;
    guild_id?: ValueTypes['order_by'] | undefined | null;
    guild_role_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    logo?: ValueTypes['order_by'] | undefined | null;
    min_vouches?: ValueTypes['order_by'] | undefined | null;
    name?: ValueTypes['order_by'] | undefined | null;
    nomination_days_limit?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    starting_tokens?: ValueTypes['order_by'] | undefined | null;
    token_name?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    vouching_text?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by min() on columns of table "circles" */
  ['circles_min_order_by']: {
    alloc_text?: ValueTypes['order_by'] | undefined | null;
    cont_help_text?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    deleted_at?: ValueTypes['order_by'] | undefined | null;
    fixed_payment_token_type?: ValueTypes['order_by'] | undefined | null;
    fixed_payment_vault_id?: ValueTypes['order_by'] | undefined | null;
    guild_id?: ValueTypes['order_by'] | undefined | null;
    guild_role_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    logo?: ValueTypes['order_by'] | undefined | null;
    min_vouches?: ValueTypes['order_by'] | undefined | null;
    name?: ValueTypes['order_by'] | undefined | null;
    nomination_days_limit?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    starting_tokens?: ValueTypes['order_by'] | undefined | null;
    token_name?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    vouching_text?: ValueTypes['order_by'] | undefined | null;
  };
  /** Ordering options when selecting data from "circles". */
  ['circles_order_by']: {
    alloc_text?: ValueTypes['order_by'] | undefined | null;
    allow_distribute_evenly?: ValueTypes['order_by'] | undefined | null;
    api_keys_aggregate?:
      | ValueTypes['circle_api_keys_aggregate_order_by']
      | undefined
      | null;
    auto_opt_out?: ValueTypes['order_by'] | undefined | null;
    burns_aggregate?: ValueTypes['burns_aggregate_order_by'] | undefined | null;
    circle_private?: ValueTypes['circle_private_order_by'] | undefined | null;
    cont_help_text?: ValueTypes['order_by'] | undefined | null;
    contributions_aggregate?:
      | ValueTypes['contributions_aggregate_order_by']
      | undefined
      | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    default_opt_in?: ValueTypes['order_by'] | undefined | null;
    deleted_at?: ValueTypes['order_by'] | undefined | null;
    epochs_aggregate?:
      | ValueTypes['epochs_aggregate_order_by']
      | undefined
      | null;
    fixed_payment_token_type?: ValueTypes['order_by'] | undefined | null;
    fixed_payment_vault_id?: ValueTypes['order_by'] | undefined | null;
    guild_id?: ValueTypes['order_by'] | undefined | null;
    guild_role_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    integrations_aggregate?:
      | ValueTypes['circle_integrations_aggregate_order_by']
      | undefined
      | null;
    is_verified?: ValueTypes['order_by'] | undefined | null;
    logo?: ValueTypes['order_by'] | undefined | null;
    min_vouches?: ValueTypes['order_by'] | undefined | null;
    name?: ValueTypes['order_by'] | undefined | null;
    nomination_days_limit?: ValueTypes['order_by'] | undefined | null;
    nominees_aggregate?:
      | ValueTypes['nominees_aggregate_order_by']
      | undefined
      | null;
    only_giver_vouch?: ValueTypes['order_by'] | undefined | null;
    organization?: ValueTypes['organizations_order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    pending_token_gifts_aggregate?:
      | ValueTypes['pending_token_gifts_aggregate_order_by']
      | undefined
      | null;
    show_pending_gives?: ValueTypes['order_by'] | undefined | null;
    starting_tokens?: ValueTypes['order_by'] | undefined | null;
    team_selection?: ValueTypes['order_by'] | undefined | null;
    token_gifts_aggregate?:
      | ValueTypes['token_gifts_aggregate_order_by']
      | undefined
      | null;
    token_name?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    users_aggregate?: ValueTypes['users_aggregate_order_by'] | undefined | null;
    vault_transactions_aggregate?:
      | ValueTypes['vault_transactions_aggregate_order_by']
      | undefined
      | null;
    vouching?: ValueTypes['order_by'] | undefined | null;
    vouching_text?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "circles" */
  ['circles_select_column']: circles_select_column;
  /** order by stddev() on columns of table "circles" */
  ['circles_stddev_order_by']: {
    fixed_payment_vault_id?: ValueTypes['order_by'] | undefined | null;
    guild_id?: ValueTypes['order_by'] | undefined | null;
    guild_role_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    min_vouches?: ValueTypes['order_by'] | undefined | null;
    nomination_days_limit?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    starting_tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_pop() on columns of table "circles" */
  ['circles_stddev_pop_order_by']: {
    fixed_payment_vault_id?: ValueTypes['order_by'] | undefined | null;
    guild_id?: ValueTypes['order_by'] | undefined | null;
    guild_role_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    min_vouches?: ValueTypes['order_by'] | undefined | null;
    nomination_days_limit?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    starting_tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_samp() on columns of table "circles" */
  ['circles_stddev_samp_order_by']: {
    fixed_payment_vault_id?: ValueTypes['order_by'] | undefined | null;
    guild_id?: ValueTypes['order_by'] | undefined | null;
    guild_role_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    min_vouches?: ValueTypes['order_by'] | undefined | null;
    nomination_days_limit?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    starting_tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "circles" */
  ['circles_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['circles_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['circles_stream_cursor_value_input']: {
    alloc_text?: string | undefined | null;
    allow_distribute_evenly?: boolean | undefined | null;
    auto_opt_out?: boolean | undefined | null;
    cont_help_text?: string | undefined | null;
    created_at?: ValueTypes['timestamp'] | undefined | null;
    default_opt_in?: boolean | undefined | null;
    deleted_at?: ValueTypes['timestamp'] | undefined | null;
    fixed_payment_token_type?: string | undefined | null;
    fixed_payment_vault_id?: number | undefined | null;
    guild_id?: number | undefined | null;
    guild_role_id?: number | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    is_verified?: boolean | undefined | null;
    logo?: string | undefined | null;
    min_vouches?: number | undefined | null;
    name?: string | undefined | null;
    nomination_days_limit?: number | undefined | null;
    only_giver_vouch?: boolean | undefined | null;
    organization_id?: number | undefined | null;
    show_pending_gives?: boolean | undefined | null;
    starting_tokens?: number | undefined | null;
    team_selection?: boolean | undefined | null;
    token_name?: string | undefined | null;
    updated_at?: ValueTypes['timestamp'] | undefined | null;
    vouching?: boolean | undefined | null;
    vouching_text?: string | undefined | null;
  };
  /** order by sum() on columns of table "circles" */
  ['circles_sum_order_by']: {
    fixed_payment_vault_id?: ValueTypes['order_by'] | undefined | null;
    guild_id?: ValueTypes['order_by'] | undefined | null;
    guild_role_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    min_vouches?: ValueTypes['order_by'] | undefined | null;
    nomination_days_limit?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    starting_tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by var_pop() on columns of table "circles" */
  ['circles_var_pop_order_by']: {
    fixed_payment_vault_id?: ValueTypes['order_by'] | undefined | null;
    guild_id?: ValueTypes['order_by'] | undefined | null;
    guild_role_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    min_vouches?: ValueTypes['order_by'] | undefined | null;
    nomination_days_limit?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    starting_tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by var_samp() on columns of table "circles" */
  ['circles_var_samp_order_by']: {
    fixed_payment_vault_id?: ValueTypes['order_by'] | undefined | null;
    guild_id?: ValueTypes['order_by'] | undefined | null;
    guild_role_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    min_vouches?: ValueTypes['order_by'] | undefined | null;
    nomination_days_limit?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    starting_tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by variance() on columns of table "circles" */
  ['circles_variance_order_by']: {
    fixed_payment_vault_id?: ValueTypes['order_by'] | undefined | null;
    guild_id?: ValueTypes['order_by'] | undefined | null;
    guild_role_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    min_vouches?: ValueTypes['order_by'] | undefined | null;
    nomination_days_limit?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    starting_tokens?: ValueTypes['order_by'] | undefined | null;
  };
  ['citext']: unknown;
  /** Boolean expression to compare columns of type "citext". All fields are combined with logical 'AND'. */
  ['citext_comparison_exp']: {
    _eq?: ValueTypes['citext'] | undefined | null;
    _gt?: ValueTypes['citext'] | undefined | null;
    _gte?: ValueTypes['citext'] | undefined | null;
    /** does the column match the given case-insensitive pattern */
    _ilike?: ValueTypes['citext'] | undefined | null;
    _in?: Array<ValueTypes['citext']> | undefined | null;
    /** does the column match the given POSIX regular expression, case insensitive */
    _iregex?: ValueTypes['citext'] | undefined | null;
    _is_null?: boolean | undefined | null;
    /** does the column match the given pattern */
    _like?: ValueTypes['citext'] | undefined | null;
    _lt?: ValueTypes['citext'] | undefined | null;
    _lte?: ValueTypes['citext'] | undefined | null;
    _neq?: ValueTypes['citext'] | undefined | null;
    /** does the column NOT match the given case-insensitive pattern */
    _nilike?: ValueTypes['citext'] | undefined | null;
    _nin?: Array<ValueTypes['citext']> | undefined | null;
    /** does the column NOT match the given POSIX regular expression, case insensitive */
    _niregex?: ValueTypes['citext'] | undefined | null;
    /** does the column NOT match the given pattern */
    _nlike?: ValueTypes['citext'] | undefined | null;
    /** does the column NOT match the given POSIX regular expression, case sensitive */
    _nregex?: ValueTypes['citext'] | undefined | null;
    /** does the column NOT match the given SQL regular expression */
    _nsimilar?: ValueTypes['citext'] | undefined | null;
    /** does the column match the given POSIX regular expression, case sensitive */
    _regex?: ValueTypes['citext'] | undefined | null;
    /** does the column match the given SQL regular expression */
    _similar?: ValueTypes['citext'] | undefined | null;
  };
  /** columns and relationships of "claims" */
  ['claims']: AliasType<{
    address?: boolean | `@${string}`;
    amount?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    /** An object relationship */
    distribution?: ValueTypes['distributions'];
    distribution_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    index?: boolean | `@${string}`;
    new_amount?: boolean | `@${string}`;
    /** An object relationship */
    profile?: ValueTypes['profiles'];
    profile_id?: boolean | `@${string}`;
    proof?: boolean | `@${string}`;
    txHash?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregated selection of "claims" */
  ['claims_aggregate']: AliasType<{
    aggregate?: ValueTypes['claims_aggregate_fields'];
    nodes?: ValueTypes['claims'];
    __typename?: boolean | `@${string}`;
  }>;
  ['claims_aggregate_bool_exp']: {
    count?: ValueTypes['claims_aggregate_bool_exp_count'] | undefined | null;
  };
  ['claims_aggregate_bool_exp_count']: {
    arguments?: Array<ValueTypes['claims_select_column']> | undefined | null;
    distinct?: boolean | undefined | null;
    filter?: ValueTypes['claims_bool_exp'] | undefined | null;
    predicate: ValueTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "claims" */
  ['claims_aggregate_fields']: AliasType<{
    avg?: ValueTypes['claims_avg_fields'];
    count?: [
      {
        columns?: Array<ValueTypes['claims_select_column']> | undefined | null;
        distinct?: boolean | undefined | null;
      },
      boolean | `@${string}`,
    ];
    max?: ValueTypes['claims_max_fields'];
    min?: ValueTypes['claims_min_fields'];
    stddev?: ValueTypes['claims_stddev_fields'];
    stddev_pop?: ValueTypes['claims_stddev_pop_fields'];
    stddev_samp?: ValueTypes['claims_stddev_samp_fields'];
    sum?: ValueTypes['claims_sum_fields'];
    var_pop?: ValueTypes['claims_var_pop_fields'];
    var_samp?: ValueTypes['claims_var_samp_fields'];
    variance?: ValueTypes['claims_variance_fields'];
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "claims" */
  ['claims_aggregate_order_by']: {
    avg?: ValueTypes['claims_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['claims_max_order_by'] | undefined | null;
    min?: ValueTypes['claims_min_order_by'] | undefined | null;
    stddev?: ValueTypes['claims_stddev_order_by'] | undefined | null;
    stddev_pop?: ValueTypes['claims_stddev_pop_order_by'] | undefined | null;
    stddev_samp?: ValueTypes['claims_stddev_samp_order_by'] | undefined | null;
    sum?: ValueTypes['claims_sum_order_by'] | undefined | null;
    var_pop?: ValueTypes['claims_var_pop_order_by'] | undefined | null;
    var_samp?: ValueTypes['claims_var_samp_order_by'] | undefined | null;
    variance?: ValueTypes['claims_variance_order_by'] | undefined | null;
  };
  /** input type for inserting array relation for remote table "claims" */
  ['claims_arr_rel_insert_input']: {
    data: Array<ValueTypes['claims_insert_input']>;
    /** upsert condition */
    on_conflict?: ValueTypes['claims_on_conflict'] | undefined | null;
  };
  /** aggregate avg on columns */
  ['claims_avg_fields']: AliasType<{
    amount?: boolean | `@${string}`;
    distribution_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    index?: boolean | `@${string}`;
    new_amount?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by avg() on columns of table "claims" */
  ['claims_avg_order_by']: {
    amount?: ValueTypes['order_by'] | undefined | null;
    distribution_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    index?: ValueTypes['order_by'] | undefined | null;
    new_amount?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "claims". All fields are combined with a logical 'AND'. */
  ['claims_bool_exp']: {
    _and?: Array<ValueTypes['claims_bool_exp']> | undefined | null;
    _not?: ValueTypes['claims_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['claims_bool_exp']> | undefined | null;
    address?: ValueTypes['String_comparison_exp'] | undefined | null;
    amount?: ValueTypes['numeric_comparison_exp'] | undefined | null;
    created_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    distribution?: ValueTypes['distributions_bool_exp'] | undefined | null;
    distribution_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    index?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    new_amount?: ValueTypes['numeric_comparison_exp'] | undefined | null;
    profile?: ValueTypes['profiles_bool_exp'] | undefined | null;
    profile_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    proof?: ValueTypes['String_comparison_exp'] | undefined | null;
    txHash?: ValueTypes['String_comparison_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
  };
  /** unique or primary key constraints on table "claims" */
  ['claims_constraint']: claims_constraint;
  /** input type for inserting data into table "claims" */
  ['claims_insert_input']: {
    address?: string | undefined | null;
    amount?: ValueTypes['numeric'] | undefined | null;
    distribution?:
      | ValueTypes['distributions_obj_rel_insert_input']
      | undefined
      | null;
    id?: ValueTypes['bigint'] | undefined | null;
    index?: ValueTypes['bigint'] | undefined | null;
    new_amount?: ValueTypes['numeric'] | undefined | null;
    profile_id?: ValueTypes['bigint'] | undefined | null;
    proof?: string | undefined | null;
  };
  /** aggregate max on columns */
  ['claims_max_fields']: AliasType<{
    address?: boolean | `@${string}`;
    amount?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    distribution_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    index?: boolean | `@${string}`;
    new_amount?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    proof?: boolean | `@${string}`;
    txHash?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by max() on columns of table "claims" */
  ['claims_max_order_by']: {
    address?: ValueTypes['order_by'] | undefined | null;
    amount?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    distribution_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    index?: ValueTypes['order_by'] | undefined | null;
    new_amount?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    proof?: ValueTypes['order_by'] | undefined | null;
    txHash?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate min on columns */
  ['claims_min_fields']: AliasType<{
    address?: boolean | `@${string}`;
    amount?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    distribution_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    index?: boolean | `@${string}`;
    new_amount?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    proof?: boolean | `@${string}`;
    txHash?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by min() on columns of table "claims" */
  ['claims_min_order_by']: {
    address?: ValueTypes['order_by'] | undefined | null;
    amount?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    distribution_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    index?: ValueTypes['order_by'] | undefined | null;
    new_amount?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    proof?: ValueTypes['order_by'] | undefined | null;
    txHash?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** response of any mutation on the table "claims" */
  ['claims_mutation_response']: AliasType<{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | `@${string}`;
    /** data from the rows affected by the mutation */
    returning?: ValueTypes['claims'];
    __typename?: boolean | `@${string}`;
  }>;
  /** on_conflict condition type for table "claims" */
  ['claims_on_conflict']: {
    constraint: ValueTypes['claims_constraint'];
    update_columns: Array<ValueTypes['claims_update_column']>;
    where?: ValueTypes['claims_bool_exp'] | undefined | null;
  };
  /** Ordering options when selecting data from "claims". */
  ['claims_order_by']: {
    address?: ValueTypes['order_by'] | undefined | null;
    amount?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    distribution?: ValueTypes['distributions_order_by'] | undefined | null;
    distribution_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    index?: ValueTypes['order_by'] | undefined | null;
    new_amount?: ValueTypes['order_by'] | undefined | null;
    profile?: ValueTypes['profiles_order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    proof?: ValueTypes['order_by'] | undefined | null;
    txHash?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** primary key columns input for table: claims */
  ['claims_pk_columns_input']: {
    id: ValueTypes['bigint'];
  };
  /** select columns of table "claims" */
  ['claims_select_column']: claims_select_column;
  /** input type for updating data in table "claims" */
  ['claims_set_input']: {
    txHash?: string | undefined | null;
  };
  /** aggregate stddev on columns */
  ['claims_stddev_fields']: AliasType<{
    amount?: boolean | `@${string}`;
    distribution_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    index?: boolean | `@${string}`;
    new_amount?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev() on columns of table "claims" */
  ['claims_stddev_order_by']: {
    amount?: ValueTypes['order_by'] | undefined | null;
    distribution_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    index?: ValueTypes['order_by'] | undefined | null;
    new_amount?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_pop on columns */
  ['claims_stddev_pop_fields']: AliasType<{
    amount?: boolean | `@${string}`;
    distribution_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    index?: boolean | `@${string}`;
    new_amount?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_pop() on columns of table "claims" */
  ['claims_stddev_pop_order_by']: {
    amount?: ValueTypes['order_by'] | undefined | null;
    distribution_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    index?: ValueTypes['order_by'] | undefined | null;
    new_amount?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_samp on columns */
  ['claims_stddev_samp_fields']: AliasType<{
    amount?: boolean | `@${string}`;
    distribution_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    index?: boolean | `@${string}`;
    new_amount?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_samp() on columns of table "claims" */
  ['claims_stddev_samp_order_by']: {
    amount?: ValueTypes['order_by'] | undefined | null;
    distribution_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    index?: ValueTypes['order_by'] | undefined | null;
    new_amount?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "claims" */
  ['claims_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['claims_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['claims_stream_cursor_value_input']: {
    address?: string | undefined | null;
    amount?: ValueTypes['numeric'] | undefined | null;
    created_at?: ValueTypes['timestamptz'] | undefined | null;
    distribution_id?: ValueTypes['bigint'] | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    index?: ValueTypes['bigint'] | undefined | null;
    new_amount?: ValueTypes['numeric'] | undefined | null;
    profile_id?: ValueTypes['bigint'] | undefined | null;
    proof?: string | undefined | null;
    txHash?: string | undefined | null;
    updated_at?: ValueTypes['timestamptz'] | undefined | null;
  };
  /** aggregate sum on columns */
  ['claims_sum_fields']: AliasType<{
    amount?: boolean | `@${string}`;
    distribution_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    index?: boolean | `@${string}`;
    new_amount?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by sum() on columns of table "claims" */
  ['claims_sum_order_by']: {
    amount?: ValueTypes['order_by'] | undefined | null;
    distribution_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    index?: ValueTypes['order_by'] | undefined | null;
    new_amount?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** update columns of table "claims" */
  ['claims_update_column']: claims_update_column;
  ['claims_updates']: {
    /** sets the columns of the filtered rows to the given values */
    _set?: ValueTypes['claims_set_input'] | undefined | null;
    /** filter the rows which have to be updated */
    where: ValueTypes['claims_bool_exp'];
  };
  /** aggregate var_pop on columns */
  ['claims_var_pop_fields']: AliasType<{
    amount?: boolean | `@${string}`;
    distribution_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    index?: boolean | `@${string}`;
    new_amount?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_pop() on columns of table "claims" */
  ['claims_var_pop_order_by']: {
    amount?: ValueTypes['order_by'] | undefined | null;
    distribution_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    index?: ValueTypes['order_by'] | undefined | null;
    new_amount?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate var_samp on columns */
  ['claims_var_samp_fields']: AliasType<{
    amount?: boolean | `@${string}`;
    distribution_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    index?: boolean | `@${string}`;
    new_amount?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_samp() on columns of table "claims" */
  ['claims_var_samp_order_by']: {
    amount?: ValueTypes['order_by'] | undefined | null;
    distribution_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    index?: ValueTypes['order_by'] | undefined | null;
    new_amount?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate variance on columns */
  ['claims_variance_fields']: AliasType<{
    amount?: boolean | `@${string}`;
    distribution_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    index?: boolean | `@${string}`;
    new_amount?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by variance() on columns of table "claims" */
  ['claims_variance_order_by']: {
    amount?: ValueTypes['order_by'] | undefined | null;
    distribution_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    index?: ValueTypes['order_by'] | undefined | null;
    new_amount?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** columns and relationships of "colinks_gives" */
  ['colinks_gives']: AliasType<{
    activity_id?: boolean | `@${string}`;
    attestation_uid?: boolean | `@${string}`;
    cast_hash?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    /** An object relationship */
    give_skill?: ValueTypes['skills'];
    /** An object relationship */
    giver_profile_public?: ValueTypes['profiles_public'];
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    skill?: boolean | `@${string}`;
    target_profile_id?: boolean | `@${string}`;
    /** An object relationship */
    target_profile_public?: ValueTypes['profiles_public'];
    updated_at?: boolean | `@${string}`;
    warpcast_url?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregated selection of "colinks_gives" */
  ['colinks_gives_aggregate']: AliasType<{
    aggregate?: ValueTypes['colinks_gives_aggregate_fields'];
    nodes?: ValueTypes['colinks_gives'];
    __typename?: boolean | `@${string}`;
  }>;
  ['colinks_gives_aggregate_bool_exp']: {
    count?:
      | ValueTypes['colinks_gives_aggregate_bool_exp_count']
      | undefined
      | null;
  };
  ['colinks_gives_aggregate_bool_exp_count']: {
    arguments?:
      | Array<ValueTypes['colinks_gives_select_column']>
      | undefined
      | null;
    distinct?: boolean | undefined | null;
    filter?: ValueTypes['colinks_gives_bool_exp'] | undefined | null;
    predicate: ValueTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "colinks_gives" */
  ['colinks_gives_aggregate_fields']: AliasType<{
    avg?: ValueTypes['colinks_gives_avg_fields'];
    count?: [
      {
        columns?:
          | Array<ValueTypes['colinks_gives_select_column']>
          | undefined
          | null;
        distinct?: boolean | undefined | null;
      },
      boolean | `@${string}`,
    ];
    max?: ValueTypes['colinks_gives_max_fields'];
    min?: ValueTypes['colinks_gives_min_fields'];
    stddev?: ValueTypes['colinks_gives_stddev_fields'];
    stddev_pop?: ValueTypes['colinks_gives_stddev_pop_fields'];
    stddev_samp?: ValueTypes['colinks_gives_stddev_samp_fields'];
    sum?: ValueTypes['colinks_gives_sum_fields'];
    var_pop?: ValueTypes['colinks_gives_var_pop_fields'];
    var_samp?: ValueTypes['colinks_gives_var_samp_fields'];
    variance?: ValueTypes['colinks_gives_variance_fields'];
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "colinks_gives" */
  ['colinks_gives_aggregate_order_by']: {
    avg?: ValueTypes['colinks_gives_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['colinks_gives_max_order_by'] | undefined | null;
    min?: ValueTypes['colinks_gives_min_order_by'] | undefined | null;
    stddev?: ValueTypes['colinks_gives_stddev_order_by'] | undefined | null;
    stddev_pop?:
      | ValueTypes['colinks_gives_stddev_pop_order_by']
      | undefined
      | null;
    stddev_samp?:
      | ValueTypes['colinks_gives_stddev_samp_order_by']
      | undefined
      | null;
    sum?: ValueTypes['colinks_gives_sum_order_by'] | undefined | null;
    var_pop?: ValueTypes['colinks_gives_var_pop_order_by'] | undefined | null;
    var_samp?: ValueTypes['colinks_gives_var_samp_order_by'] | undefined | null;
    variance?: ValueTypes['colinks_gives_variance_order_by'] | undefined | null;
  };
  /** aggregate avg on columns */
  ['colinks_gives_avg_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    target_profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by avg() on columns of table "colinks_gives" */
  ['colinks_gives_avg_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "colinks_gives". All fields are combined with a logical 'AND'. */
  ['colinks_gives_bool_exp']: {
    _and?: Array<ValueTypes['colinks_gives_bool_exp']> | undefined | null;
    _not?: ValueTypes['colinks_gives_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['colinks_gives_bool_exp']> | undefined | null;
    activity_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    attestation_uid?: ValueTypes['String_comparison_exp'] | undefined | null;
    cast_hash?: ValueTypes['String_comparison_exp'] | undefined | null;
    created_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    give_skill?: ValueTypes['skills_bool_exp'] | undefined | null;
    giver_profile_public?:
      | ValueTypes['profiles_public_bool_exp']
      | undefined
      | null;
    id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    profile_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    skill?: ValueTypes['citext_comparison_exp'] | undefined | null;
    target_profile_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    target_profile_public?:
      | ValueTypes['profiles_public_bool_exp']
      | undefined
      | null;
    updated_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    warpcast_url?: ValueTypes['String_comparison_exp'] | undefined | null;
  };
  /** aggregate max on columns */
  ['colinks_gives_max_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    attestation_uid?: boolean | `@${string}`;
    cast_hash?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    skill?: boolean | `@${string}`;
    target_profile_id?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    warpcast_url?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by max() on columns of table "colinks_gives" */
  ['colinks_gives_max_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    attestation_uid?: ValueTypes['order_by'] | undefined | null;
    cast_hash?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    skill?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    warpcast_url?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate min on columns */
  ['colinks_gives_min_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    attestation_uid?: boolean | `@${string}`;
    cast_hash?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    skill?: boolean | `@${string}`;
    target_profile_id?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    warpcast_url?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by min() on columns of table "colinks_gives" */
  ['colinks_gives_min_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    attestation_uid?: ValueTypes['order_by'] | undefined | null;
    cast_hash?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    skill?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    warpcast_url?: ValueTypes['order_by'] | undefined | null;
  };
  /** response of any mutation on the table "colinks_gives" */
  ['colinks_gives_mutation_response']: AliasType<{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | `@${string}`;
    /** data from the rows affected by the mutation */
    returning?: ValueTypes['colinks_gives'];
    __typename?: boolean | `@${string}`;
  }>;
  /** Ordering options when selecting data from "colinks_gives". */
  ['colinks_gives_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    attestation_uid?: ValueTypes['order_by'] | undefined | null;
    cast_hash?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    give_skill?: ValueTypes['skills_order_by'] | undefined | null;
    giver_profile_public?:
      | ValueTypes['profiles_public_order_by']
      | undefined
      | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    skill?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
    target_profile_public?:
      | ValueTypes['profiles_public_order_by']
      | undefined
      | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    warpcast_url?: ValueTypes['order_by'] | undefined | null;
  };
  /** primary key columns input for table: colinks_gives */
  ['colinks_gives_pk_columns_input']: {
    id: number;
  };
  /** select columns of table "colinks_gives" */
  ['colinks_gives_select_column']: colinks_gives_select_column;
  /** input type for updating data in table "colinks_gives" */
  ['colinks_gives_set_input']: {
    skill?: ValueTypes['citext'] | undefined | null;
  };
  /** aggregate stddev on columns */
  ['colinks_gives_stddev_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    target_profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev() on columns of table "colinks_gives" */
  ['colinks_gives_stddev_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_pop on columns */
  ['colinks_gives_stddev_pop_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    target_profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_pop() on columns of table "colinks_gives" */
  ['colinks_gives_stddev_pop_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_samp on columns */
  ['colinks_gives_stddev_samp_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    target_profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_samp() on columns of table "colinks_gives" */
  ['colinks_gives_stddev_samp_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "colinks_gives" */
  ['colinks_gives_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['colinks_gives_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['colinks_gives_stream_cursor_value_input']: {
    activity_id?: ValueTypes['bigint'] | undefined | null;
    attestation_uid?: string | undefined | null;
    cast_hash?: string | undefined | null;
    created_at?: ValueTypes['timestamptz'] | undefined | null;
    id?: number | undefined | null;
    profile_id?: ValueTypes['bigint'] | undefined | null;
    skill?: ValueTypes['citext'] | undefined | null;
    target_profile_id?: ValueTypes['bigint'] | undefined | null;
    updated_at?: ValueTypes['timestamptz'] | undefined | null;
    warpcast_url?: string | undefined | null;
  };
  /** aggregate sum on columns */
  ['colinks_gives_sum_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    target_profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by sum() on columns of table "colinks_gives" */
  ['colinks_gives_sum_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  ['colinks_gives_updates']: {
    /** sets the columns of the filtered rows to the given values */
    _set?: ValueTypes['colinks_gives_set_input'] | undefined | null;
    /** filter the rows which have to be updated */
    where: ValueTypes['colinks_gives_bool_exp'];
  };
  /** aggregate var_pop on columns */
  ['colinks_gives_var_pop_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    target_profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_pop() on columns of table "colinks_gives" */
  ['colinks_gives_var_pop_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate var_samp on columns */
  ['colinks_gives_var_samp_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    target_profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_samp() on columns of table "colinks_gives" */
  ['colinks_gives_var_samp_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate variance on columns */
  ['colinks_gives_variance_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    target_profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by variance() on columns of table "colinks_gives" */
  ['colinks_gives_variance_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** columns and relationships of "contribution_count" */
  ['contribution_count']: AliasType<{
    contributions?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "contribution_count". All fields are combined with a logical 'AND'. */
  ['contribution_count_bool_exp']: {
    _and?: Array<ValueTypes['contribution_count_bool_exp']> | undefined | null;
    _not?: ValueTypes['contribution_count_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['contribution_count_bool_exp']> | undefined | null;
    contributions?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    profile_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
  };
  /** Ordering options when selecting data from "contribution_count". */
  ['contribution_count_order_by']: {
    contributions?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "contribution_count" */
  ['contribution_count_select_column']: contribution_count_select_column;
  /** Streaming cursor of the table "contribution_count" */
  ['contribution_count_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['contribution_count_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['contribution_count_stream_cursor_value_input']: {
    contributions?: ValueTypes['bigint'] | undefined | null;
    profile_id?: ValueTypes['bigint'] | undefined | null;
  };
  /** columns and relationships of "contributions" */
  ['contributions']: AliasType<{
    /** An object relationship */
    activity?: ValueTypes['activities'];
    /** An object relationship */
    big_question?: ValueTypes['big_questions'];
    big_question_id?: boolean | `@${string}`;
    /** An object relationship */
    circle?: ValueTypes['circles'];
    circle_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    /** An object relationship */
    created_with_api_key?: ValueTypes['circle_api_keys'];
    created_with_api_key_hash?: boolean | `@${string}`;
    description?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    private_stream?: boolean | `@${string}`;
    private_stream_visibility?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['private_stream_visibility_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['private_stream_visibility_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?:
          | ValueTypes['private_stream_visibility_bool_exp']
          | undefined
          | null;
      },
      ValueTypes['private_stream_visibility'],
    ];
    /** An object relationship */
    profile?: ValueTypes['profiles'];
    profile_id?: boolean | `@${string}`;
    /** An object relationship */
    profile_public?: ValueTypes['profiles_public'];
    updated_at?: boolean | `@${string}`;
    /** An object relationship */
    user?: ValueTypes['users'];
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregated selection of "contributions" */
  ['contributions_aggregate']: AliasType<{
    aggregate?: ValueTypes['contributions_aggregate_fields'];
    nodes?: ValueTypes['contributions'];
    __typename?: boolean | `@${string}`;
  }>;
  ['contributions_aggregate_bool_exp']: {
    bool_and?:
      | ValueTypes['contributions_aggregate_bool_exp_bool_and']
      | undefined
      | null;
    bool_or?:
      | ValueTypes['contributions_aggregate_bool_exp_bool_or']
      | undefined
      | null;
    count?:
      | ValueTypes['contributions_aggregate_bool_exp_count']
      | undefined
      | null;
  };
  ['contributions_aggregate_bool_exp_bool_and']: {
    arguments: ValueTypes['contributions_select_column_contributions_aggregate_bool_exp_bool_and_arguments_columns'];
    distinct?: boolean | undefined | null;
    filter?: ValueTypes['contributions_bool_exp'] | undefined | null;
    predicate: ValueTypes['Boolean_comparison_exp'];
  };
  ['contributions_aggregate_bool_exp_bool_or']: {
    arguments: ValueTypes['contributions_select_column_contributions_aggregate_bool_exp_bool_or_arguments_columns'];
    distinct?: boolean | undefined | null;
    filter?: ValueTypes['contributions_bool_exp'] | undefined | null;
    predicate: ValueTypes['Boolean_comparison_exp'];
  };
  ['contributions_aggregate_bool_exp_count']: {
    arguments?:
      | Array<ValueTypes['contributions_select_column']>
      | undefined
      | null;
    distinct?: boolean | undefined | null;
    filter?: ValueTypes['contributions_bool_exp'] | undefined | null;
    predicate: ValueTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "contributions" */
  ['contributions_aggregate_fields']: AliasType<{
    avg?: ValueTypes['contributions_avg_fields'];
    count?: [
      {
        columns?:
          | Array<ValueTypes['contributions_select_column']>
          | undefined
          | null;
        distinct?: boolean | undefined | null;
      },
      boolean | `@${string}`,
    ];
    max?: ValueTypes['contributions_max_fields'];
    min?: ValueTypes['contributions_min_fields'];
    stddev?: ValueTypes['contributions_stddev_fields'];
    stddev_pop?: ValueTypes['contributions_stddev_pop_fields'];
    stddev_samp?: ValueTypes['contributions_stddev_samp_fields'];
    sum?: ValueTypes['contributions_sum_fields'];
    var_pop?: ValueTypes['contributions_var_pop_fields'];
    var_samp?: ValueTypes['contributions_var_samp_fields'];
    variance?: ValueTypes['contributions_variance_fields'];
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "contributions" */
  ['contributions_aggregate_order_by']: {
    avg?: ValueTypes['contributions_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['contributions_max_order_by'] | undefined | null;
    min?: ValueTypes['contributions_min_order_by'] | undefined | null;
    stddev?: ValueTypes['contributions_stddev_order_by'] | undefined | null;
    stddev_pop?:
      | ValueTypes['contributions_stddev_pop_order_by']
      | undefined
      | null;
    stddev_samp?:
      | ValueTypes['contributions_stddev_samp_order_by']
      | undefined
      | null;
    sum?: ValueTypes['contributions_sum_order_by'] | undefined | null;
    var_pop?: ValueTypes['contributions_var_pop_order_by'] | undefined | null;
    var_samp?: ValueTypes['contributions_var_samp_order_by'] | undefined | null;
    variance?: ValueTypes['contributions_variance_order_by'] | undefined | null;
  };
  /** aggregate avg on columns */
  ['contributions_avg_fields']: AliasType<{
    big_question_id?: boolean | `@${string}`;
    circle_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by avg() on columns of table "contributions" */
  ['contributions_avg_order_by']: {
    big_question_id?: ValueTypes['order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "contributions". All fields are combined with a logical 'AND'. */
  ['contributions_bool_exp']: {
    _and?: Array<ValueTypes['contributions_bool_exp']> | undefined | null;
    _not?: ValueTypes['contributions_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['contributions_bool_exp']> | undefined | null;
    activity?: ValueTypes['activities_bool_exp'] | undefined | null;
    big_question?: ValueTypes['big_questions_bool_exp'] | undefined | null;
    big_question_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    circle?: ValueTypes['circles_bool_exp'] | undefined | null;
    circle_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    created_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    created_with_api_key?:
      | ValueTypes['circle_api_keys_bool_exp']
      | undefined
      | null;
    created_with_api_key_hash?:
      | ValueTypes['String_comparison_exp']
      | undefined
      | null;
    description?: ValueTypes['String_comparison_exp'] | undefined | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    private_stream?: ValueTypes['Boolean_comparison_exp'] | undefined | null;
    private_stream_visibility?:
      | ValueTypes['private_stream_visibility_bool_exp']
      | undefined
      | null;
    profile?: ValueTypes['profiles_bool_exp'] | undefined | null;
    profile_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    profile_public?: ValueTypes['profiles_public_bool_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    user?: ValueTypes['users_bool_exp'] | undefined | null;
    user_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
  };
  /** unique or primary key constraints on table "contributions" */
  ['contributions_constraint']: contributions_constraint;
  /** input type for inserting data into table "contributions" */
  ['contributions_insert_input']: {
    big_question_id?: ValueTypes['bigint'] | undefined | null;
    circle_id?: ValueTypes['bigint'] | undefined | null;
    description?: string | undefined | null;
    private_stream?: boolean | undefined | null;
    user_id?: ValueTypes['bigint'] | undefined | null;
  };
  /** aggregate max on columns */
  ['contributions_max_fields']: AliasType<{
    big_question_id?: boolean | `@${string}`;
    circle_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    created_with_api_key_hash?: boolean | `@${string}`;
    description?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by max() on columns of table "contributions" */
  ['contributions_max_order_by']: {
    big_question_id?: ValueTypes['order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    created_with_api_key_hash?: ValueTypes['order_by'] | undefined | null;
    description?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate min on columns */
  ['contributions_min_fields']: AliasType<{
    big_question_id?: boolean | `@${string}`;
    circle_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    created_with_api_key_hash?: boolean | `@${string}`;
    description?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by min() on columns of table "contributions" */
  ['contributions_min_order_by']: {
    big_question_id?: ValueTypes['order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    created_with_api_key_hash?: ValueTypes['order_by'] | undefined | null;
    description?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** response of any mutation on the table "contributions" */
  ['contributions_mutation_response']: AliasType<{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | `@${string}`;
    /** data from the rows affected by the mutation */
    returning?: ValueTypes['contributions'];
    __typename?: boolean | `@${string}`;
  }>;
  /** on_conflict condition type for table "contributions" */
  ['contributions_on_conflict']: {
    constraint: ValueTypes['contributions_constraint'];
    update_columns: Array<ValueTypes['contributions_update_column']>;
    where?: ValueTypes['contributions_bool_exp'] | undefined | null;
  };
  /** Ordering options when selecting data from "contributions". */
  ['contributions_order_by']: {
    activity?: ValueTypes['activities_order_by'] | undefined | null;
    big_question?: ValueTypes['big_questions_order_by'] | undefined | null;
    big_question_id?: ValueTypes['order_by'] | undefined | null;
    circle?: ValueTypes['circles_order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    created_with_api_key?:
      | ValueTypes['circle_api_keys_order_by']
      | undefined
      | null;
    created_with_api_key_hash?: ValueTypes['order_by'] | undefined | null;
    description?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    private_stream?: ValueTypes['order_by'] | undefined | null;
    private_stream_visibility_aggregate?:
      | ValueTypes['private_stream_visibility_aggregate_order_by']
      | undefined
      | null;
    profile?: ValueTypes['profiles_order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    profile_public?: ValueTypes['profiles_public_order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    user?: ValueTypes['users_order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "contributions" */
  ['contributions_select_column']: contributions_select_column;
  /** select "contributions_aggregate_bool_exp_bool_and_arguments_columns" columns of table "contributions" */
  ['contributions_select_column_contributions_aggregate_bool_exp_bool_and_arguments_columns']: contributions_select_column_contributions_aggregate_bool_exp_bool_and_arguments_columns;
  /** select "contributions_aggregate_bool_exp_bool_or_arguments_columns" columns of table "contributions" */
  ['contributions_select_column_contributions_aggregate_bool_exp_bool_or_arguments_columns']: contributions_select_column_contributions_aggregate_bool_exp_bool_or_arguments_columns;
  /** aggregate stddev on columns */
  ['contributions_stddev_fields']: AliasType<{
    big_question_id?: boolean | `@${string}`;
    circle_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev() on columns of table "contributions" */
  ['contributions_stddev_order_by']: {
    big_question_id?: ValueTypes['order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_pop on columns */
  ['contributions_stddev_pop_fields']: AliasType<{
    big_question_id?: boolean | `@${string}`;
    circle_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_pop() on columns of table "contributions" */
  ['contributions_stddev_pop_order_by']: {
    big_question_id?: ValueTypes['order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_samp on columns */
  ['contributions_stddev_samp_fields']: AliasType<{
    big_question_id?: boolean | `@${string}`;
    circle_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_samp() on columns of table "contributions" */
  ['contributions_stddev_samp_order_by']: {
    big_question_id?: ValueTypes['order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "contributions" */
  ['contributions_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['contributions_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['contributions_stream_cursor_value_input']: {
    big_question_id?: ValueTypes['bigint'] | undefined | null;
    circle_id?: ValueTypes['bigint'] | undefined | null;
    created_at?: ValueTypes['timestamptz'] | undefined | null;
    created_with_api_key_hash?: string | undefined | null;
    description?: string | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    private_stream?: boolean | undefined | null;
    profile_id?: ValueTypes['bigint'] | undefined | null;
    updated_at?: ValueTypes['timestamptz'] | undefined | null;
    user_id?: ValueTypes['bigint'] | undefined | null;
  };
  /** aggregate sum on columns */
  ['contributions_sum_fields']: AliasType<{
    big_question_id?: boolean | `@${string}`;
    circle_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by sum() on columns of table "contributions" */
  ['contributions_sum_order_by']: {
    big_question_id?: ValueTypes['order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** placeholder for update columns of table "contributions" (current role has no relevant permissions) */
  ['contributions_update_column']: contributions_update_column;
  /** aggregate var_pop on columns */
  ['contributions_var_pop_fields']: AliasType<{
    big_question_id?: boolean | `@${string}`;
    circle_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_pop() on columns of table "contributions" */
  ['contributions_var_pop_order_by']: {
    big_question_id?: ValueTypes['order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate var_samp on columns */
  ['contributions_var_samp_fields']: AliasType<{
    big_question_id?: boolean | `@${string}`;
    circle_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_samp() on columns of table "contributions" */
  ['contributions_var_samp_order_by']: {
    big_question_id?: ValueTypes['order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate variance on columns */
  ['contributions_variance_fields']: AliasType<{
    big_question_id?: boolean | `@${string}`;
    circle_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by variance() on columns of table "contributions" */
  ['contributions_variance_order_by']: {
    big_question_id?: ValueTypes['order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** local db copy of last synced on-chain cosoul data */
  ['cosouls']: AliasType<{
    address?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    created_tx_hash?: boolean | `@${string}`;
    held_links?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['link_holders_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['link_holders_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['link_holders_bool_exp'] | undefined | null;
      },
      ValueTypes['link_holders'],
    ];
    held_links_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['link_holders_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['link_holders_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['link_holders_bool_exp'] | undefined | null;
      },
      ValueTypes['link_holders_aggregate'],
    ];
    id?: boolean | `@${string}`;
    link_holders?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['link_holders_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['link_holders_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['link_holders_bool_exp'] | undefined | null;
      },
      ValueTypes['link_holders'],
    ];
    link_holders_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['link_holders_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['link_holders_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['link_holders_bool_exp'] | undefined | null;
      },
      ValueTypes['link_holders_aggregate'],
    ];
    pgive?: boolean | `@${string}`;
    poaps?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['poap_holders_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['poap_holders_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['poap_holders_bool_exp'] | undefined | null;
      },
      ValueTypes['poap_holders'],
    ];
    poaps_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['poap_holders_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['poap_holders_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['poap_holders_bool_exp'] | undefined | null;
      },
      ValueTypes['poap_holders_aggregate'],
    ];
    /** An object relationship */
    profile?: ValueTypes['profiles'];
    /** An object relationship */
    profile_public?: ValueTypes['profiles_public'];
    synced_at?: boolean | `@${string}`;
    token_id?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "cosouls". All fields are combined with a logical 'AND'. */
  ['cosouls_bool_exp']: {
    _and?: Array<ValueTypes['cosouls_bool_exp']> | undefined | null;
    _not?: ValueTypes['cosouls_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['cosouls_bool_exp']> | undefined | null;
    address?: ValueTypes['citext_comparison_exp'] | undefined | null;
    created_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    created_tx_hash?: ValueTypes['String_comparison_exp'] | undefined | null;
    held_links?: ValueTypes['link_holders_bool_exp'] | undefined | null;
    held_links_aggregate?:
      | ValueTypes['link_holders_aggregate_bool_exp']
      | undefined
      | null;
    id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    link_holders?: ValueTypes['link_holders_bool_exp'] | undefined | null;
    link_holders_aggregate?:
      | ValueTypes['link_holders_aggregate_bool_exp']
      | undefined
      | null;
    pgive?: ValueTypes['Int_comparison_exp'] | undefined | null;
    poaps?: ValueTypes['poap_holders_bool_exp'] | undefined | null;
    poaps_aggregate?:
      | ValueTypes['poap_holders_aggregate_bool_exp']
      | undefined
      | null;
    profile?: ValueTypes['profiles_bool_exp'] | undefined | null;
    profile_public?: ValueTypes['profiles_public_bool_exp'] | undefined | null;
    synced_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    token_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
  };
  /** Ordering options when selecting data from "cosouls". */
  ['cosouls_order_by']: {
    address?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    created_tx_hash?: ValueTypes['order_by'] | undefined | null;
    held_links_aggregate?:
      | ValueTypes['link_holders_aggregate_order_by']
      | undefined
      | null;
    id?: ValueTypes['order_by'] | undefined | null;
    link_holders_aggregate?:
      | ValueTypes['link_holders_aggregate_order_by']
      | undefined
      | null;
    pgive?: ValueTypes['order_by'] | undefined | null;
    poaps_aggregate?:
      | ValueTypes['poap_holders_aggregate_order_by']
      | undefined
      | null;
    profile?: ValueTypes['profiles_order_by'] | undefined | null;
    profile_public?: ValueTypes['profiles_public_order_by'] | undefined | null;
    synced_at?: ValueTypes['order_by'] | undefined | null;
    token_id?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "cosouls" */
  ['cosouls_select_column']: cosouls_select_column;
  /** Streaming cursor of the table "cosouls" */
  ['cosouls_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['cosouls_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['cosouls_stream_cursor_value_input']: {
    address?: ValueTypes['citext'] | undefined | null;
    created_at?: ValueTypes['timestamptz'] | undefined | null;
    created_tx_hash?: string | undefined | null;
    id?: number | undefined | null;
    pgive?: number | undefined | null;
    synced_at?: ValueTypes['timestamptz'] | undefined | null;
    token_id?: number | undefined | null;
    updated_at?: ValueTypes['timestamptz'] | undefined | null;
  };
  /** ordering argument of a cursor */
  ['cursor_ordering']: cursor_ordering;
  ['date']: unknown;
  /** Boolean expression to compare columns of type "date". All fields are combined with logical 'AND'. */
  ['date_comparison_exp']: {
    _eq?: ValueTypes['date'] | undefined | null;
    _gt?: ValueTypes['date'] | undefined | null;
    _gte?: ValueTypes['date'] | undefined | null;
    _in?: Array<ValueTypes['date']> | undefined | null;
    _is_null?: boolean | undefined | null;
    _lt?: ValueTypes['date'] | undefined | null;
    _lte?: ValueTypes['date'] | undefined | null;
    _neq?: ValueTypes['date'] | undefined | null;
    _nin?: Array<ValueTypes['date']> | undefined | null;
  };
  /** Vault Distributions */
  ['distributions']: AliasType<{
    claims?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['claims_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['claims_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['claims_bool_exp'] | undefined | null;
      },
      ValueTypes['claims'],
    ];
    claims_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['claims_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['claims_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['claims_bool_exp'] | undefined | null;
      },
      ValueTypes['claims_aggregate'],
    ];
    created_at?: boolean | `@${string}`;
    created_by?: boolean | `@${string}`;
    distribution_epoch_id?: boolean | `@${string}`;
    distribution_json?: [
      {
        /** JSON select path */ path?: string | undefined | null;
      },
      boolean | `@${string}`,
    ];
    distribution_type?: boolean | `@${string}`;
    /** An object relationship */
    epoch?: ValueTypes['epochs'];
    epoch_id?: boolean | `@${string}`;
    fixed_amount?: boolean | `@${string}`;
    gift_amount?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    merkle_root?: boolean | `@${string}`;
    /** An object relationship */
    profile?: ValueTypes['profiles'];
    total_amount?: boolean | `@${string}`;
    tx_hash?: boolean | `@${string}`;
    /** An object relationship */
    vault?: ValueTypes['vaults'];
    vault_id?: boolean | `@${string}`;
    vault_transactions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['vault_transactions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['vault_transactions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['vault_transactions_bool_exp'] | undefined | null;
      },
      ValueTypes['vault_transactions'],
    ];
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregated selection of "distributions" */
  ['distributions_aggregate']: AliasType<{
    aggregate?: ValueTypes['distributions_aggregate_fields'];
    nodes?: ValueTypes['distributions'];
    __typename?: boolean | `@${string}`;
  }>;
  ['distributions_aggregate_bool_exp']: {
    count?:
      | ValueTypes['distributions_aggregate_bool_exp_count']
      | undefined
      | null;
  };
  ['distributions_aggregate_bool_exp_count']: {
    arguments?:
      | Array<ValueTypes['distributions_select_column']>
      | undefined
      | null;
    distinct?: boolean | undefined | null;
    filter?: ValueTypes['distributions_bool_exp'] | undefined | null;
    predicate: ValueTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "distributions" */
  ['distributions_aggregate_fields']: AliasType<{
    avg?: ValueTypes['distributions_avg_fields'];
    count?: [
      {
        columns?:
          | Array<ValueTypes['distributions_select_column']>
          | undefined
          | null;
        distinct?: boolean | undefined | null;
      },
      boolean | `@${string}`,
    ];
    max?: ValueTypes['distributions_max_fields'];
    min?: ValueTypes['distributions_min_fields'];
    stddev?: ValueTypes['distributions_stddev_fields'];
    stddev_pop?: ValueTypes['distributions_stddev_pop_fields'];
    stddev_samp?: ValueTypes['distributions_stddev_samp_fields'];
    sum?: ValueTypes['distributions_sum_fields'];
    var_pop?: ValueTypes['distributions_var_pop_fields'];
    var_samp?: ValueTypes['distributions_var_samp_fields'];
    variance?: ValueTypes['distributions_variance_fields'];
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "distributions" */
  ['distributions_aggregate_order_by']: {
    avg?: ValueTypes['distributions_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['distributions_max_order_by'] | undefined | null;
    min?: ValueTypes['distributions_min_order_by'] | undefined | null;
    stddev?: ValueTypes['distributions_stddev_order_by'] | undefined | null;
    stddev_pop?:
      | ValueTypes['distributions_stddev_pop_order_by']
      | undefined
      | null;
    stddev_samp?:
      | ValueTypes['distributions_stddev_samp_order_by']
      | undefined
      | null;
    sum?: ValueTypes['distributions_sum_order_by'] | undefined | null;
    var_pop?: ValueTypes['distributions_var_pop_order_by'] | undefined | null;
    var_samp?: ValueTypes['distributions_var_samp_order_by'] | undefined | null;
    variance?: ValueTypes['distributions_variance_order_by'] | undefined | null;
  };
  /** aggregate avg on columns */
  ['distributions_avg_fields']: AliasType<{
    created_by?: boolean | `@${string}`;
    distribution_epoch_id?: boolean | `@${string}`;
    distribution_type?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    fixed_amount?: boolean | `@${string}`;
    gift_amount?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    vault_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by avg() on columns of table "distributions" */
  ['distributions_avg_order_by']: {
    created_by?: ValueTypes['order_by'] | undefined | null;
    distribution_epoch_id?: ValueTypes['order_by'] | undefined | null;
    distribution_type?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    fixed_amount?: ValueTypes['order_by'] | undefined | null;
    gift_amount?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    vault_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "distributions". All fields are combined with a logical 'AND'. */
  ['distributions_bool_exp']: {
    _and?: Array<ValueTypes['distributions_bool_exp']> | undefined | null;
    _not?: ValueTypes['distributions_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['distributions_bool_exp']> | undefined | null;
    claims?: ValueTypes['claims_bool_exp'] | undefined | null;
    claims_aggregate?:
      | ValueTypes['claims_aggregate_bool_exp']
      | undefined
      | null;
    created_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    created_by?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    distribution_epoch_id?:
      | ValueTypes['bigint_comparison_exp']
      | undefined
      | null;
    distribution_json?: ValueTypes['jsonb_comparison_exp'] | undefined | null;
    distribution_type?: ValueTypes['Int_comparison_exp'] | undefined | null;
    epoch?: ValueTypes['epochs_bool_exp'] | undefined | null;
    epoch_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    fixed_amount?: ValueTypes['numeric_comparison_exp'] | undefined | null;
    gift_amount?: ValueTypes['numeric_comparison_exp'] | undefined | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    merkle_root?: ValueTypes['String_comparison_exp'] | undefined | null;
    profile?: ValueTypes['profiles_bool_exp'] | undefined | null;
    total_amount?: ValueTypes['String_comparison_exp'] | undefined | null;
    tx_hash?: ValueTypes['String_comparison_exp'] | undefined | null;
    vault?: ValueTypes['vaults_bool_exp'] | undefined | null;
    vault_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    vault_transactions?:
      | ValueTypes['vault_transactions_bool_exp']
      | undefined
      | null;
  };
  /** unique or primary key constraints on table "distributions" */
  ['distributions_constraint']: distributions_constraint;
  /** input type for incrementing numeric columns in table "distributions" */
  ['distributions_inc_input']: {
    distribution_epoch_id?: ValueTypes['bigint'] | undefined | null;
  };
  /** input type for inserting data into table "distributions" */
  ['distributions_insert_input']: {
    claims?: ValueTypes['claims_arr_rel_insert_input'] | undefined | null;
    distribution_epoch_id?: ValueTypes['bigint'] | undefined | null;
    distribution_json?: ValueTypes['jsonb'] | undefined | null;
    distribution_type?: number | undefined | null;
    epoch_id?: ValueTypes['bigint'] | undefined | null;
    fixed_amount?: ValueTypes['numeric'] | undefined | null;
    gift_amount?: ValueTypes['numeric'] | undefined | null;
    merkle_root?: string | undefined | null;
    total_amount?: string | undefined | null;
    vault_id?: ValueTypes['bigint'] | undefined | null;
  };
  /** aggregate max on columns */
  ['distributions_max_fields']: AliasType<{
    created_at?: boolean | `@${string}`;
    created_by?: boolean | `@${string}`;
    distribution_epoch_id?: boolean | `@${string}`;
    distribution_type?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    fixed_amount?: boolean | `@${string}`;
    gift_amount?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    merkle_root?: boolean | `@${string}`;
    total_amount?: boolean | `@${string}`;
    tx_hash?: boolean | `@${string}`;
    vault_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by max() on columns of table "distributions" */
  ['distributions_max_order_by']: {
    created_at?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    distribution_epoch_id?: ValueTypes['order_by'] | undefined | null;
    distribution_type?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    fixed_amount?: ValueTypes['order_by'] | undefined | null;
    gift_amount?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    merkle_root?: ValueTypes['order_by'] | undefined | null;
    total_amount?: ValueTypes['order_by'] | undefined | null;
    tx_hash?: ValueTypes['order_by'] | undefined | null;
    vault_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate min on columns */
  ['distributions_min_fields']: AliasType<{
    created_at?: boolean | `@${string}`;
    created_by?: boolean | `@${string}`;
    distribution_epoch_id?: boolean | `@${string}`;
    distribution_type?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    fixed_amount?: boolean | `@${string}`;
    gift_amount?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    merkle_root?: boolean | `@${string}`;
    total_amount?: boolean | `@${string}`;
    tx_hash?: boolean | `@${string}`;
    vault_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by min() on columns of table "distributions" */
  ['distributions_min_order_by']: {
    created_at?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    distribution_epoch_id?: ValueTypes['order_by'] | undefined | null;
    distribution_type?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    fixed_amount?: ValueTypes['order_by'] | undefined | null;
    gift_amount?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    merkle_root?: ValueTypes['order_by'] | undefined | null;
    total_amount?: ValueTypes['order_by'] | undefined | null;
    tx_hash?: ValueTypes['order_by'] | undefined | null;
    vault_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** response of any mutation on the table "distributions" */
  ['distributions_mutation_response']: AliasType<{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | `@${string}`;
    /** data from the rows affected by the mutation */
    returning?: ValueTypes['distributions'];
    __typename?: boolean | `@${string}`;
  }>;
  /** input type for inserting object relation for remote table "distributions" */
  ['distributions_obj_rel_insert_input']: {
    data: ValueTypes['distributions_insert_input'];
    /** upsert condition */
    on_conflict?: ValueTypes['distributions_on_conflict'] | undefined | null;
  };
  /** on_conflict condition type for table "distributions" */
  ['distributions_on_conflict']: {
    constraint: ValueTypes['distributions_constraint'];
    update_columns: Array<ValueTypes['distributions_update_column']>;
    where?: ValueTypes['distributions_bool_exp'] | undefined | null;
  };
  /** Ordering options when selecting data from "distributions". */
  ['distributions_order_by']: {
    claims_aggregate?:
      | ValueTypes['claims_aggregate_order_by']
      | undefined
      | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    distribution_epoch_id?: ValueTypes['order_by'] | undefined | null;
    distribution_json?: ValueTypes['order_by'] | undefined | null;
    distribution_type?: ValueTypes['order_by'] | undefined | null;
    epoch?: ValueTypes['epochs_order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    fixed_amount?: ValueTypes['order_by'] | undefined | null;
    gift_amount?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    merkle_root?: ValueTypes['order_by'] | undefined | null;
    profile?: ValueTypes['profiles_order_by'] | undefined | null;
    total_amount?: ValueTypes['order_by'] | undefined | null;
    tx_hash?: ValueTypes['order_by'] | undefined | null;
    vault?: ValueTypes['vaults_order_by'] | undefined | null;
    vault_id?: ValueTypes['order_by'] | undefined | null;
    vault_transactions_aggregate?:
      | ValueTypes['vault_transactions_aggregate_order_by']
      | undefined
      | null;
  };
  /** primary key columns input for table: distributions */
  ['distributions_pk_columns_input']: {
    id: ValueTypes['bigint'];
  };
  /** select columns of table "distributions" */
  ['distributions_select_column']: distributions_select_column;
  /** input type for updating data in table "distributions" */
  ['distributions_set_input']: {
    distribution_epoch_id?: ValueTypes['bigint'] | undefined | null;
    tx_hash?: string | undefined | null;
  };
  /** aggregate stddev on columns */
  ['distributions_stddev_fields']: AliasType<{
    created_by?: boolean | `@${string}`;
    distribution_epoch_id?: boolean | `@${string}`;
    distribution_type?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    fixed_amount?: boolean | `@${string}`;
    gift_amount?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    vault_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev() on columns of table "distributions" */
  ['distributions_stddev_order_by']: {
    created_by?: ValueTypes['order_by'] | undefined | null;
    distribution_epoch_id?: ValueTypes['order_by'] | undefined | null;
    distribution_type?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    fixed_amount?: ValueTypes['order_by'] | undefined | null;
    gift_amount?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    vault_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_pop on columns */
  ['distributions_stddev_pop_fields']: AliasType<{
    created_by?: boolean | `@${string}`;
    distribution_epoch_id?: boolean | `@${string}`;
    distribution_type?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    fixed_amount?: boolean | `@${string}`;
    gift_amount?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    vault_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_pop() on columns of table "distributions" */
  ['distributions_stddev_pop_order_by']: {
    created_by?: ValueTypes['order_by'] | undefined | null;
    distribution_epoch_id?: ValueTypes['order_by'] | undefined | null;
    distribution_type?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    fixed_amount?: ValueTypes['order_by'] | undefined | null;
    gift_amount?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    vault_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_samp on columns */
  ['distributions_stddev_samp_fields']: AliasType<{
    created_by?: boolean | `@${string}`;
    distribution_epoch_id?: boolean | `@${string}`;
    distribution_type?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    fixed_amount?: boolean | `@${string}`;
    gift_amount?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    vault_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_samp() on columns of table "distributions" */
  ['distributions_stddev_samp_order_by']: {
    created_by?: ValueTypes['order_by'] | undefined | null;
    distribution_epoch_id?: ValueTypes['order_by'] | undefined | null;
    distribution_type?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    fixed_amount?: ValueTypes['order_by'] | undefined | null;
    gift_amount?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    vault_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "distributions" */
  ['distributions_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['distributions_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['distributions_stream_cursor_value_input']: {
    created_at?: ValueTypes['timestamp'] | undefined | null;
    created_by?: ValueTypes['bigint'] | undefined | null;
    distribution_epoch_id?: ValueTypes['bigint'] | undefined | null;
    distribution_json?: ValueTypes['jsonb'] | undefined | null;
    distribution_type?: number | undefined | null;
    epoch_id?: ValueTypes['bigint'] | undefined | null;
    fixed_amount?: ValueTypes['numeric'] | undefined | null;
    gift_amount?: ValueTypes['numeric'] | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    merkle_root?: string | undefined | null;
    total_amount?: string | undefined | null;
    tx_hash?: string | undefined | null;
    vault_id?: ValueTypes['bigint'] | undefined | null;
  };
  /** aggregate sum on columns */
  ['distributions_sum_fields']: AliasType<{
    created_by?: boolean | `@${string}`;
    distribution_epoch_id?: boolean | `@${string}`;
    distribution_type?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    fixed_amount?: boolean | `@${string}`;
    gift_amount?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    vault_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by sum() on columns of table "distributions" */
  ['distributions_sum_order_by']: {
    created_by?: ValueTypes['order_by'] | undefined | null;
    distribution_epoch_id?: ValueTypes['order_by'] | undefined | null;
    distribution_type?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    fixed_amount?: ValueTypes['order_by'] | undefined | null;
    gift_amount?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    vault_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** update columns of table "distributions" */
  ['distributions_update_column']: distributions_update_column;
  ['distributions_updates']: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: ValueTypes['distributions_inc_input'] | undefined | null;
    /** sets the columns of the filtered rows to the given values */
    _set?: ValueTypes['distributions_set_input'] | undefined | null;
    /** filter the rows which have to be updated */
    where: ValueTypes['distributions_bool_exp'];
  };
  /** aggregate var_pop on columns */
  ['distributions_var_pop_fields']: AliasType<{
    created_by?: boolean | `@${string}`;
    distribution_epoch_id?: boolean | `@${string}`;
    distribution_type?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    fixed_amount?: boolean | `@${string}`;
    gift_amount?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    vault_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_pop() on columns of table "distributions" */
  ['distributions_var_pop_order_by']: {
    created_by?: ValueTypes['order_by'] | undefined | null;
    distribution_epoch_id?: ValueTypes['order_by'] | undefined | null;
    distribution_type?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    fixed_amount?: ValueTypes['order_by'] | undefined | null;
    gift_amount?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    vault_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate var_samp on columns */
  ['distributions_var_samp_fields']: AliasType<{
    created_by?: boolean | `@${string}`;
    distribution_epoch_id?: boolean | `@${string}`;
    distribution_type?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    fixed_amount?: boolean | `@${string}`;
    gift_amount?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    vault_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_samp() on columns of table "distributions" */
  ['distributions_var_samp_order_by']: {
    created_by?: ValueTypes['order_by'] | undefined | null;
    distribution_epoch_id?: ValueTypes['order_by'] | undefined | null;
    distribution_type?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    fixed_amount?: ValueTypes['order_by'] | undefined | null;
    gift_amount?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    vault_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate variance on columns */
  ['distributions_variance_fields']: AliasType<{
    created_by?: boolean | `@${string}`;
    distribution_epoch_id?: boolean | `@${string}`;
    distribution_type?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    fixed_amount?: boolean | `@${string}`;
    gift_amount?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    vault_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by variance() on columns of table "distributions" */
  ['distributions_variance_order_by']: {
    created_by?: ValueTypes['order_by'] | undefined | null;
    distribution_epoch_id?: ValueTypes['order_by'] | undefined | null;
    distribution_type?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    fixed_amount?: ValueTypes['order_by'] | undefined | null;
    gift_amount?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    vault_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** columns and relationships of "emails" */
  ['emails']: AliasType<{
    email?: boolean | `@${string}`;
    primary?: boolean | `@${string}`;
    /** An object relationship */
    profile?: ValueTypes['profiles'];
    verified_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "emails" */
  ['emails_aggregate_order_by']: {
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['emails_max_order_by'] | undefined | null;
    min?: ValueTypes['emails_min_order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "emails". All fields are combined with a logical 'AND'. */
  ['emails_bool_exp']: {
    _and?: Array<ValueTypes['emails_bool_exp']> | undefined | null;
    _not?: ValueTypes['emails_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['emails_bool_exp']> | undefined | null;
    email?: ValueTypes['citext_comparison_exp'] | undefined | null;
    primary?: ValueTypes['Boolean_comparison_exp'] | undefined | null;
    profile?: ValueTypes['profiles_bool_exp'] | undefined | null;
    verified_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
  };
  /** order by max() on columns of table "emails" */
  ['emails_max_order_by']: {
    email?: ValueTypes['order_by'] | undefined | null;
    verified_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by min() on columns of table "emails" */
  ['emails_min_order_by']: {
    email?: ValueTypes['order_by'] | undefined | null;
    verified_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** Ordering options when selecting data from "emails". */
  ['emails_order_by']: {
    email?: ValueTypes['order_by'] | undefined | null;
    primary?: ValueTypes['order_by'] | undefined | null;
    profile?: ValueTypes['profiles_order_by'] | undefined | null;
    verified_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "emails" */
  ['emails_select_column']: emails_select_column;
  /** Streaming cursor of the table "emails" */
  ['emails_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['emails_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['emails_stream_cursor_value_input']: {
    email?: ValueTypes['citext'] | undefined | null;
    primary?: boolean | undefined | null;
    verified_at?: ValueTypes['timestamp'] | undefined | null;
  };
  /** farcaster casts that we actually care about, with some materialized fields */
  ['enriched_casts']: AliasType<{
    created_at?: boolean | `@${string}`;
    deleted_at?: boolean | `@${string}`;
    embeds?: [
      {
        /** JSON select path */ path?: string | undefined | null;
      },
      boolean | `@${string}`,
    ];
    fid?: boolean | `@${string}`;
    hash?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    mentions?: boolean | `@${string}`;
    mentions_positions?: boolean | `@${string}`;
    parent_fid?: boolean | `@${string}`;
    parent_hash?: boolean | `@${string}`;
    parent_url?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    /** An object relationship */
    profile_public?: ValueTypes['profiles_public'];
    reactions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['farcaster_reactions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['farcaster_reactions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['farcaster_reactions_bool_exp'] | undefined | null;
      },
      ValueTypes['farcaster_reactions'],
    ];
    reactions_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['farcaster_reactions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['farcaster_reactions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['farcaster_reactions_bool_exp'] | undefined | null;
      },
      ValueTypes['farcaster_reactions_aggregate'],
    ];
    replies?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['farcaster_casts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['farcaster_casts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['farcaster_casts_bool_exp'] | undefined | null;
      },
      ValueTypes['farcaster_casts'],
    ];
    replies_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['farcaster_casts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['farcaster_casts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['farcaster_casts_bool_exp'] | undefined | null;
      },
      ValueTypes['farcaster_casts_aggregate'],
    ];
    root_parent_hash?: boolean | `@${string}`;
    root_parent_url?: boolean | `@${string}`;
    text?: boolean | `@${string}`;
    timestamp?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "enriched_casts". All fields are combined with a logical 'AND'. */
  ['enriched_casts_bool_exp']: {
    _and?: Array<ValueTypes['enriched_casts_bool_exp']> | undefined | null;
    _not?: ValueTypes['enriched_casts_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['enriched_casts_bool_exp']> | undefined | null;
    created_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    deleted_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    embeds?: ValueTypes['jsonb_comparison_exp'] | undefined | null;
    fid?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    hash?: ValueTypes['bytea_comparison_exp'] | undefined | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    mentions?: ValueTypes['bigint_array_comparison_exp'] | undefined | null;
    mentions_positions?:
      | ValueTypes['smallint_array_comparison_exp']
      | undefined
      | null;
    parent_fid?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    parent_hash?: ValueTypes['bytea_comparison_exp'] | undefined | null;
    parent_url?: ValueTypes['String_comparison_exp'] | undefined | null;
    profile_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    profile_public?: ValueTypes['profiles_public_bool_exp'] | undefined | null;
    reactions?: ValueTypes['farcaster_reactions_bool_exp'] | undefined | null;
    reactions_aggregate?:
      | ValueTypes['farcaster_reactions_aggregate_bool_exp']
      | undefined
      | null;
    replies?: ValueTypes['farcaster_casts_bool_exp'] | undefined | null;
    replies_aggregate?:
      | ValueTypes['farcaster_casts_aggregate_bool_exp']
      | undefined
      | null;
    root_parent_hash?: ValueTypes['bytea_comparison_exp'] | undefined | null;
    root_parent_url?: ValueTypes['String_comparison_exp'] | undefined | null;
    text?: ValueTypes['String_comparison_exp'] | undefined | null;
    timestamp?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
  };
  /** Ordering options when selecting data from "enriched_casts". */
  ['enriched_casts_order_by']: {
    created_at?: ValueTypes['order_by'] | undefined | null;
    deleted_at?: ValueTypes['order_by'] | undefined | null;
    embeds?: ValueTypes['order_by'] | undefined | null;
    fid?: ValueTypes['order_by'] | undefined | null;
    hash?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    mentions?: ValueTypes['order_by'] | undefined | null;
    mentions_positions?: ValueTypes['order_by'] | undefined | null;
    parent_fid?: ValueTypes['order_by'] | undefined | null;
    parent_hash?: ValueTypes['order_by'] | undefined | null;
    parent_url?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    profile_public?: ValueTypes['profiles_public_order_by'] | undefined | null;
    reactions_aggregate?:
      | ValueTypes['farcaster_reactions_aggregate_order_by']
      | undefined
      | null;
    replies_aggregate?:
      | ValueTypes['farcaster_casts_aggregate_order_by']
      | undefined
      | null;
    root_parent_hash?: ValueTypes['order_by'] | undefined | null;
    root_parent_url?: ValueTypes['order_by'] | undefined | null;
    text?: ValueTypes['order_by'] | undefined | null;
    timestamp?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "enriched_casts" */
  ['enriched_casts_select_column']: enriched_casts_select_column;
  /** Streaming cursor of the table "enriched_casts" */
  ['enriched_casts_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['enriched_casts_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['enriched_casts_stream_cursor_value_input']: {
    created_at?: ValueTypes['timestamp'] | undefined | null;
    deleted_at?: ValueTypes['timestamp'] | undefined | null;
    embeds?: ValueTypes['jsonb'] | undefined | null;
    fid?: ValueTypes['bigint'] | undefined | null;
    hash?: ValueTypes['bytea'] | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    mentions?: Array<ValueTypes['bigint']> | undefined | null;
    mentions_positions?: Array<ValueTypes['smallint']> | undefined | null;
    parent_fid?: ValueTypes['bigint'] | undefined | null;
    parent_hash?: ValueTypes['bytea'] | undefined | null;
    parent_url?: string | undefined | null;
    profile_id?: ValueTypes['bigint'] | undefined | null;
    root_parent_hash?: ValueTypes['bytea'] | undefined | null;
    root_parent_url?: string | undefined | null;
    text?: string | undefined | null;
    timestamp?: ValueTypes['timestamp'] | undefined | null;
    updated_at?: ValueTypes['timestamp'] | undefined | null;
  };
  /** columns and relationships of "epoch_pgive_data" */
  ['epoch_pgive_data']: AliasType<{
    active_months?: boolean | `@${string}`;
    active_months_bonus?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    /** An object relationship */
    epoch?: ValueTypes['epochs'];
    epoch_id?: boolean | `@${string}`;
    gives_receiver_base?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    notes_bonus?: boolean | `@${string}`;
    pgive?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "epoch_pgive_data". All fields are combined with a logical 'AND'. */
  ['epoch_pgive_data_bool_exp']: {
    _and?: Array<ValueTypes['epoch_pgive_data_bool_exp']> | undefined | null;
    _not?: ValueTypes['epoch_pgive_data_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['epoch_pgive_data_bool_exp']> | undefined | null;
    active_months?: ValueTypes['Int_comparison_exp'] | undefined | null;
    active_months_bonus?:
      | ValueTypes['numeric_comparison_exp']
      | undefined
      | null;
    created_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    epoch?: ValueTypes['epochs_bool_exp'] | undefined | null;
    epoch_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    gives_receiver_base?:
      | ValueTypes['numeric_comparison_exp']
      | undefined
      | null;
    id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    notes_bonus?: ValueTypes['numeric_comparison_exp'] | undefined | null;
    pgive?: ValueTypes['numeric_comparison_exp'] | undefined | null;
  };
  /** Ordering options when selecting data from "epoch_pgive_data". */
  ['epoch_pgive_data_order_by']: {
    active_months?: ValueTypes['order_by'] | undefined | null;
    active_months_bonus?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    epoch?: ValueTypes['epochs_order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    gives_receiver_base?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    notes_bonus?: ValueTypes['order_by'] | undefined | null;
    pgive?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "epoch_pgive_data" */
  ['epoch_pgive_data_select_column']: epoch_pgive_data_select_column;
  /** Streaming cursor of the table "epoch_pgive_data" */
  ['epoch_pgive_data_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['epoch_pgive_data_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['epoch_pgive_data_stream_cursor_value_input']: {
    active_months?: number | undefined | null;
    active_months_bonus?: ValueTypes['numeric'] | undefined | null;
    created_at?: ValueTypes['timestamptz'] | undefined | null;
    epoch_id?: number | undefined | null;
    gives_receiver_base?: ValueTypes['numeric'] | undefined | null;
    id?: number | undefined | null;
    notes_bonus?: ValueTypes['numeric'] | undefined | null;
    pgive?: ValueTypes['numeric'] | undefined | null;
  };
  /** columns and relationships of "epoches" */
  ['epochs']: AliasType<{
    activities?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['activities_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['activities_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['activities_bool_exp'] | undefined | null;
      },
      ValueTypes['activities'],
    ];
    activities_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['activities_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['activities_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['activities_bool_exp'] | undefined | null;
      },
      ValueTypes['activities_aggregate'],
    ];
    burns?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['burns_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['burns_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['burns_bool_exp'] | undefined | null;
      },
      ValueTypes['burns'],
    ];
    /** An object relationship */
    circle?: ValueTypes['circles'];
    circle_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    days?: boolean | `@${string}`;
    description?: boolean | `@${string}`;
    distributions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['distributions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['distributions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['distributions_bool_exp'] | undefined | null;
      },
      ValueTypes['distributions'],
    ];
    distributions_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['distributions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['distributions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['distributions_bool_exp'] | undefined | null;
      },
      ValueTypes['distributions_aggregate'],
    ];
    end_date?: boolean | `@${string}`;
    ended?: boolean | `@${string}`;
    epoch_pending_token_gifts?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['pending_token_gifts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['pending_token_gifts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['pending_token_gifts_bool_exp'] | undefined | null;
      },
      ValueTypes['pending_token_gifts'],
    ];
    grant?: boolean | `@${string}`;
    histories?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['histories_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['histories_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['histories_bool_exp'] | undefined | null;
      },
      ValueTypes['histories'],
    ];
    id?: boolean | `@${string}`;
    member_epoch_pgives?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['member_epoch_pgives_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['member_epoch_pgives_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['member_epoch_pgives_bool_exp'] | undefined | null;
      },
      ValueTypes['member_epoch_pgives'],
    ];
    member_epoch_pgives_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['member_epoch_pgives_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['member_epoch_pgives_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['member_epoch_pgives_bool_exp'] | undefined | null;
      },
      ValueTypes['member_epoch_pgives_aggregate'],
    ];
    notified_before_end?: boolean | `@${string}`;
    notified_end?: boolean | `@${string}`;
    notified_start?: boolean | `@${string}`;
    number?: boolean | `@${string}`;
    /** An object relationship */
    pgive_data?: ValueTypes['epoch_pgive_data'];
    repeat?: boolean | `@${string}`;
    repeat_data?: [
      {
        /** JSON select path */ path?: string | undefined | null;
      },
      boolean | `@${string}`,
    ];
    repeat_day_of_month?: boolean | `@${string}`;
    start_date?: boolean | `@${string}`;
    token_gifts?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['token_gifts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['token_gifts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['token_gifts_bool_exp'] | undefined | null;
      },
      ValueTypes['token_gifts'],
    ];
    token_gifts_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['token_gifts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['token_gifts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['token_gifts_bool_exp'] | undefined | null;
      },
      ValueTypes['token_gifts_aggregate'],
    ];
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "epoches" */
  ['epochs_aggregate_order_by']: {
    avg?: ValueTypes['epochs_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['epochs_max_order_by'] | undefined | null;
    min?: ValueTypes['epochs_min_order_by'] | undefined | null;
    stddev?: ValueTypes['epochs_stddev_order_by'] | undefined | null;
    stddev_pop?: ValueTypes['epochs_stddev_pop_order_by'] | undefined | null;
    stddev_samp?: ValueTypes['epochs_stddev_samp_order_by'] | undefined | null;
    sum?: ValueTypes['epochs_sum_order_by'] | undefined | null;
    var_pop?: ValueTypes['epochs_var_pop_order_by'] | undefined | null;
    var_samp?: ValueTypes['epochs_var_samp_order_by'] | undefined | null;
    variance?: ValueTypes['epochs_variance_order_by'] | undefined | null;
  };
  /** order by avg() on columns of table "epoches" */
  ['epochs_avg_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    days?: ValueTypes['order_by'] | undefined | null;
    grant?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    number?: ValueTypes['order_by'] | undefined | null;
    repeat?: ValueTypes['order_by'] | undefined | null;
    repeat_day_of_month?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "epoches". All fields are combined with a logical 'AND'. */
  ['epochs_bool_exp']: {
    _and?: Array<ValueTypes['epochs_bool_exp']> | undefined | null;
    _not?: ValueTypes['epochs_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['epochs_bool_exp']> | undefined | null;
    activities?: ValueTypes['activities_bool_exp'] | undefined | null;
    activities_aggregate?:
      | ValueTypes['activities_aggregate_bool_exp']
      | undefined
      | null;
    burns?: ValueTypes['burns_bool_exp'] | undefined | null;
    circle?: ValueTypes['circles_bool_exp'] | undefined | null;
    circle_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    created_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    days?: ValueTypes['Int_comparison_exp'] | undefined | null;
    description?: ValueTypes['String_comparison_exp'] | undefined | null;
    distributions?: ValueTypes['distributions_bool_exp'] | undefined | null;
    distributions_aggregate?:
      | ValueTypes['distributions_aggregate_bool_exp']
      | undefined
      | null;
    end_date?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    ended?: ValueTypes['Boolean_comparison_exp'] | undefined | null;
    epoch_pending_token_gifts?:
      | ValueTypes['pending_token_gifts_bool_exp']
      | undefined
      | null;
    grant?: ValueTypes['numeric_comparison_exp'] | undefined | null;
    histories?: ValueTypes['histories_bool_exp'] | undefined | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    member_epoch_pgives?:
      | ValueTypes['member_epoch_pgives_bool_exp']
      | undefined
      | null;
    member_epoch_pgives_aggregate?:
      | ValueTypes['member_epoch_pgives_aggregate_bool_exp']
      | undefined
      | null;
    notified_before_end?:
      | ValueTypes['timestamp_comparison_exp']
      | undefined
      | null;
    notified_end?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    notified_start?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    number?: ValueTypes['Int_comparison_exp'] | undefined | null;
    pgive_data?: ValueTypes['epoch_pgive_data_bool_exp'] | undefined | null;
    repeat?: ValueTypes['Int_comparison_exp'] | undefined | null;
    repeat_data?: ValueTypes['jsonb_comparison_exp'] | undefined | null;
    repeat_day_of_month?: ValueTypes['Int_comparison_exp'] | undefined | null;
    start_date?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    token_gifts?: ValueTypes['token_gifts_bool_exp'] | undefined | null;
    token_gifts_aggregate?:
      | ValueTypes['token_gifts_aggregate_bool_exp']
      | undefined
      | null;
    updated_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
  };
  /** order by max() on columns of table "epoches" */
  ['epochs_max_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    days?: ValueTypes['order_by'] | undefined | null;
    description?: ValueTypes['order_by'] | undefined | null;
    end_date?: ValueTypes['order_by'] | undefined | null;
    grant?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    notified_before_end?: ValueTypes['order_by'] | undefined | null;
    notified_end?: ValueTypes['order_by'] | undefined | null;
    notified_start?: ValueTypes['order_by'] | undefined | null;
    number?: ValueTypes['order_by'] | undefined | null;
    repeat?: ValueTypes['order_by'] | undefined | null;
    repeat_day_of_month?: ValueTypes['order_by'] | undefined | null;
    start_date?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by min() on columns of table "epoches" */
  ['epochs_min_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    days?: ValueTypes['order_by'] | undefined | null;
    description?: ValueTypes['order_by'] | undefined | null;
    end_date?: ValueTypes['order_by'] | undefined | null;
    grant?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    notified_before_end?: ValueTypes['order_by'] | undefined | null;
    notified_end?: ValueTypes['order_by'] | undefined | null;
    notified_start?: ValueTypes['order_by'] | undefined | null;
    number?: ValueTypes['order_by'] | undefined | null;
    repeat?: ValueTypes['order_by'] | undefined | null;
    repeat_day_of_month?: ValueTypes['order_by'] | undefined | null;
    start_date?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** response of any mutation on the table "epoches" */
  ['epochs_mutation_response']: AliasType<{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | `@${string}`;
    /** data from the rows affected by the mutation */
    returning?: ValueTypes['epochs'];
    __typename?: boolean | `@${string}`;
  }>;
  /** Ordering options when selecting data from "epoches". */
  ['epochs_order_by']: {
    activities_aggregate?:
      | ValueTypes['activities_aggregate_order_by']
      | undefined
      | null;
    burns_aggregate?: ValueTypes['burns_aggregate_order_by'] | undefined | null;
    circle?: ValueTypes['circles_order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    days?: ValueTypes['order_by'] | undefined | null;
    description?: ValueTypes['order_by'] | undefined | null;
    distributions_aggregate?:
      | ValueTypes['distributions_aggregate_order_by']
      | undefined
      | null;
    end_date?: ValueTypes['order_by'] | undefined | null;
    ended?: ValueTypes['order_by'] | undefined | null;
    epoch_pending_token_gifts_aggregate?:
      | ValueTypes['pending_token_gifts_aggregate_order_by']
      | undefined
      | null;
    grant?: ValueTypes['order_by'] | undefined | null;
    histories_aggregate?:
      | ValueTypes['histories_aggregate_order_by']
      | undefined
      | null;
    id?: ValueTypes['order_by'] | undefined | null;
    member_epoch_pgives_aggregate?:
      | ValueTypes['member_epoch_pgives_aggregate_order_by']
      | undefined
      | null;
    notified_before_end?: ValueTypes['order_by'] | undefined | null;
    notified_end?: ValueTypes['order_by'] | undefined | null;
    notified_start?: ValueTypes['order_by'] | undefined | null;
    number?: ValueTypes['order_by'] | undefined | null;
    pgive_data?: ValueTypes['epoch_pgive_data_order_by'] | undefined | null;
    repeat?: ValueTypes['order_by'] | undefined | null;
    repeat_data?: ValueTypes['order_by'] | undefined | null;
    repeat_day_of_month?: ValueTypes['order_by'] | undefined | null;
    start_date?: ValueTypes['order_by'] | undefined | null;
    token_gifts_aggregate?:
      | ValueTypes['token_gifts_aggregate_order_by']
      | undefined
      | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** primary key columns input for table: epoches */
  ['epochs_pk_columns_input']: {
    id: ValueTypes['bigint'];
  };
  /** select columns of table "epoches" */
  ['epochs_select_column']: epochs_select_column;
  /** input type for updating data in table "epoches" */
  ['epochs_set_input']: {
    description?: string | undefined | null;
  };
  /** order by stddev() on columns of table "epoches" */
  ['epochs_stddev_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    days?: ValueTypes['order_by'] | undefined | null;
    grant?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    number?: ValueTypes['order_by'] | undefined | null;
    repeat?: ValueTypes['order_by'] | undefined | null;
    repeat_day_of_month?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_pop() on columns of table "epoches" */
  ['epochs_stddev_pop_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    days?: ValueTypes['order_by'] | undefined | null;
    grant?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    number?: ValueTypes['order_by'] | undefined | null;
    repeat?: ValueTypes['order_by'] | undefined | null;
    repeat_day_of_month?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_samp() on columns of table "epoches" */
  ['epochs_stddev_samp_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    days?: ValueTypes['order_by'] | undefined | null;
    grant?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    number?: ValueTypes['order_by'] | undefined | null;
    repeat?: ValueTypes['order_by'] | undefined | null;
    repeat_day_of_month?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "epochs" */
  ['epochs_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['epochs_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['epochs_stream_cursor_value_input']: {
    circle_id?: number | undefined | null;
    created_at?: ValueTypes['timestamp'] | undefined | null;
    days?: number | undefined | null;
    description?: string | undefined | null;
    end_date?: ValueTypes['timestamptz'] | undefined | null;
    ended?: boolean | undefined | null;
    grant?: ValueTypes['numeric'] | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    notified_before_end?: ValueTypes['timestamp'] | undefined | null;
    notified_end?: ValueTypes['timestamp'] | undefined | null;
    notified_start?: ValueTypes['timestamp'] | undefined | null;
    number?: number | undefined | null;
    repeat?: number | undefined | null;
    repeat_data?: ValueTypes['jsonb'] | undefined | null;
    repeat_day_of_month?: number | undefined | null;
    start_date?: ValueTypes['timestamptz'] | undefined | null;
    updated_at?: ValueTypes['timestamp'] | undefined | null;
  };
  /** order by sum() on columns of table "epoches" */
  ['epochs_sum_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    days?: ValueTypes['order_by'] | undefined | null;
    grant?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    number?: ValueTypes['order_by'] | undefined | null;
    repeat?: ValueTypes['order_by'] | undefined | null;
    repeat_day_of_month?: ValueTypes['order_by'] | undefined | null;
  };
  ['epochs_updates']: {
    /** sets the columns of the filtered rows to the given values */
    _set?: ValueTypes['epochs_set_input'] | undefined | null;
    /** filter the rows which have to be updated */
    where: ValueTypes['epochs_bool_exp'];
  };
  /** order by var_pop() on columns of table "epoches" */
  ['epochs_var_pop_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    days?: ValueTypes['order_by'] | undefined | null;
    grant?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    number?: ValueTypes['order_by'] | undefined | null;
    repeat?: ValueTypes['order_by'] | undefined | null;
    repeat_day_of_month?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by var_samp() on columns of table "epoches" */
  ['epochs_var_samp_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    days?: ValueTypes['order_by'] | undefined | null;
    grant?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    number?: ValueTypes['order_by'] | undefined | null;
    repeat?: ValueTypes['order_by'] | undefined | null;
    repeat_day_of_month?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by variance() on columns of table "epoches" */
  ['epochs_variance_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    days?: ValueTypes['order_by'] | undefined | null;
    grant?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    number?: ValueTypes['order_by'] | undefined | null;
    repeat?: ValueTypes['order_by'] | undefined | null;
    repeat_day_of_month?: ValueTypes['order_by'] | undefined | null;
  };
  /** columns and relationships of "farcaster_accounts" */
  ['farcaster_accounts']: AliasType<{
    bio_text?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    custody_address?: boolean | `@${string}`;
    fid?: boolean | `@${string}`;
    followers_count?: boolean | `@${string}`;
    following_count?: boolean | `@${string}`;
    name?: boolean | `@${string}`;
    pfp_url?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    /** An object relationship */
    profile_public?: ValueTypes['profiles'];
    updated_at?: boolean | `@${string}`;
    username?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "farcaster_accounts". All fields are combined with a logical 'AND'. */
  ['farcaster_accounts_bool_exp']: {
    _and?: Array<ValueTypes['farcaster_accounts_bool_exp']> | undefined | null;
    _not?: ValueTypes['farcaster_accounts_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['farcaster_accounts_bool_exp']> | undefined | null;
    bio_text?: ValueTypes['String_comparison_exp'] | undefined | null;
    created_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    custody_address?: ValueTypes['String_comparison_exp'] | undefined | null;
    fid?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    followers_count?: ValueTypes['Int_comparison_exp'] | undefined | null;
    following_count?: ValueTypes['Int_comparison_exp'] | undefined | null;
    name?: ValueTypes['String_comparison_exp'] | undefined | null;
    pfp_url?: ValueTypes['String_comparison_exp'] | undefined | null;
    profile_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    profile_public?: ValueTypes['profiles_bool_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    username?: ValueTypes['String_comparison_exp'] | undefined | null;
  };
  /** response of any mutation on the table "farcaster_accounts" */
  ['farcaster_accounts_mutation_response']: AliasType<{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | `@${string}`;
    /** data from the rows affected by the mutation */
    returning?: ValueTypes['farcaster_accounts'];
    __typename?: boolean | `@${string}`;
  }>;
  /** Ordering options when selecting data from "farcaster_accounts". */
  ['farcaster_accounts_order_by']: {
    bio_text?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    custody_address?: ValueTypes['order_by'] | undefined | null;
    fid?: ValueTypes['order_by'] | undefined | null;
    followers_count?: ValueTypes['order_by'] | undefined | null;
    following_count?: ValueTypes['order_by'] | undefined | null;
    name?: ValueTypes['order_by'] | undefined | null;
    pfp_url?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    profile_public?: ValueTypes['profiles_order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    username?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "farcaster_accounts" */
  ['farcaster_accounts_select_column']: farcaster_accounts_select_column;
  /** Streaming cursor of the table "farcaster_accounts" */
  ['farcaster_accounts_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['farcaster_accounts_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['farcaster_accounts_stream_cursor_value_input']: {
    bio_text?: string | undefined | null;
    created_at?: ValueTypes['timestamptz'] | undefined | null;
    custody_address?: string | undefined | null;
    fid?: ValueTypes['bigint'] | undefined | null;
    followers_count?: number | undefined | null;
    following_count?: number | undefined | null;
    name?: string | undefined | null;
    pfp_url?: string | undefined | null;
    profile_id?: ValueTypes['bigint'] | undefined | null;
    updated_at?: ValueTypes['timestamptz'] | undefined | null;
    username?: string | undefined | null;
  };
  /** columns and relationships of "farcaster.casts" */
  ['farcaster_casts']: AliasType<{
    created_at?: boolean | `@${string}`;
    deleted_at?: boolean | `@${string}`;
    embeds?: [
      {
        /** JSON select path */ path?: string | undefined | null;
      },
      boolean | `@${string}`,
    ];
    /** An object relationship */
    farcaster_account?: ValueTypes['farcaster_accounts'];
    fid?: boolean | `@${string}`;
    hash?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    mentions?: boolean | `@${string}`;
    mentions_positions?: boolean | `@${string}`;
    parent_fid?: boolean | `@${string}`;
    parent_hash?: boolean | `@${string}`;
    parent_url?: boolean | `@${string}`;
    reactions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['farcaster_reactions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['farcaster_reactions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['farcaster_reactions_bool_exp'] | undefined | null;
      },
      ValueTypes['farcaster_reactions'],
    ];
    reactions_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['farcaster_reactions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['farcaster_reactions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['farcaster_reactions_bool_exp'] | undefined | null;
      },
      ValueTypes['farcaster_reactions_aggregate'],
    ];
    replies?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['farcaster_casts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['farcaster_casts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['farcaster_casts_bool_exp'] | undefined | null;
      },
      ValueTypes['farcaster_casts'],
    ];
    replies_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['farcaster_casts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['farcaster_casts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['farcaster_casts_bool_exp'] | undefined | null;
      },
      ValueTypes['farcaster_casts_aggregate'],
    ];
    root_parent_hash?: boolean | `@${string}`;
    root_parent_url?: boolean | `@${string}`;
    text?: boolean | `@${string}`;
    timestamp?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregated selection of "farcaster.casts" */
  ['farcaster_casts_aggregate']: AliasType<{
    aggregate?: ValueTypes['farcaster_casts_aggregate_fields'];
    nodes?: ValueTypes['farcaster_casts'];
    __typename?: boolean | `@${string}`;
  }>;
  ['farcaster_casts_aggregate_bool_exp']: {
    count?:
      | ValueTypes['farcaster_casts_aggregate_bool_exp_count']
      | undefined
      | null;
  };
  ['farcaster_casts_aggregate_bool_exp_count']: {
    arguments?:
      | Array<ValueTypes['farcaster_casts_select_column']>
      | undefined
      | null;
    distinct?: boolean | undefined | null;
    filter?: ValueTypes['farcaster_casts_bool_exp'] | undefined | null;
    predicate: ValueTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "farcaster.casts" */
  ['farcaster_casts_aggregate_fields']: AliasType<{
    avg?: ValueTypes['farcaster_casts_avg_fields'];
    count?: [
      {
        columns?:
          | Array<ValueTypes['farcaster_casts_select_column']>
          | undefined
          | null;
        distinct?: boolean | undefined | null;
      },
      boolean | `@${string}`,
    ];
    max?: ValueTypes['farcaster_casts_max_fields'];
    min?: ValueTypes['farcaster_casts_min_fields'];
    stddev?: ValueTypes['farcaster_casts_stddev_fields'];
    stddev_pop?: ValueTypes['farcaster_casts_stddev_pop_fields'];
    stddev_samp?: ValueTypes['farcaster_casts_stddev_samp_fields'];
    sum?: ValueTypes['farcaster_casts_sum_fields'];
    var_pop?: ValueTypes['farcaster_casts_var_pop_fields'];
    var_samp?: ValueTypes['farcaster_casts_var_samp_fields'];
    variance?: ValueTypes['farcaster_casts_variance_fields'];
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "farcaster.casts" */
  ['farcaster_casts_aggregate_order_by']: {
    avg?: ValueTypes['farcaster_casts_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['farcaster_casts_max_order_by'] | undefined | null;
    min?: ValueTypes['farcaster_casts_min_order_by'] | undefined | null;
    stddev?: ValueTypes['farcaster_casts_stddev_order_by'] | undefined | null;
    stddev_pop?:
      | ValueTypes['farcaster_casts_stddev_pop_order_by']
      | undefined
      | null;
    stddev_samp?:
      | ValueTypes['farcaster_casts_stddev_samp_order_by']
      | undefined
      | null;
    sum?: ValueTypes['farcaster_casts_sum_order_by'] | undefined | null;
    var_pop?: ValueTypes['farcaster_casts_var_pop_order_by'] | undefined | null;
    var_samp?:
      | ValueTypes['farcaster_casts_var_samp_order_by']
      | undefined
      | null;
    variance?:
      | ValueTypes['farcaster_casts_variance_order_by']
      | undefined
      | null;
  };
  /** aggregate avg on columns */
  ['farcaster_casts_avg_fields']: AliasType<{
    fid?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    parent_fid?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by avg() on columns of table "farcaster.casts" */
  ['farcaster_casts_avg_order_by']: {
    fid?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    parent_fid?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "farcaster.casts". All fields are combined with a logical 'AND'. */
  ['farcaster_casts_bool_exp']: {
    _and?: Array<ValueTypes['farcaster_casts_bool_exp']> | undefined | null;
    _not?: ValueTypes['farcaster_casts_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['farcaster_casts_bool_exp']> | undefined | null;
    created_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    deleted_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    embeds?: ValueTypes['jsonb_comparison_exp'] | undefined | null;
    farcaster_account?:
      | ValueTypes['farcaster_accounts_bool_exp']
      | undefined
      | null;
    fid?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    hash?: ValueTypes['bytea_comparison_exp'] | undefined | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    mentions?: ValueTypes['bigint_array_comparison_exp'] | undefined | null;
    mentions_positions?:
      | ValueTypes['smallint_array_comparison_exp']
      | undefined
      | null;
    parent_fid?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    parent_hash?: ValueTypes['bytea_comparison_exp'] | undefined | null;
    parent_url?: ValueTypes['String_comparison_exp'] | undefined | null;
    reactions?: ValueTypes['farcaster_reactions_bool_exp'] | undefined | null;
    reactions_aggregate?:
      | ValueTypes['farcaster_reactions_aggregate_bool_exp']
      | undefined
      | null;
    replies?: ValueTypes['farcaster_casts_bool_exp'] | undefined | null;
    replies_aggregate?:
      | ValueTypes['farcaster_casts_aggregate_bool_exp']
      | undefined
      | null;
    root_parent_hash?: ValueTypes['bytea_comparison_exp'] | undefined | null;
    root_parent_url?: ValueTypes['String_comparison_exp'] | undefined | null;
    text?: ValueTypes['String_comparison_exp'] | undefined | null;
    timestamp?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
  };
  /** aggregate max on columns */
  ['farcaster_casts_max_fields']: AliasType<{
    created_at?: boolean | `@${string}`;
    deleted_at?: boolean | `@${string}`;
    fid?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    mentions?: boolean | `@${string}`;
    mentions_positions?: boolean | `@${string}`;
    parent_fid?: boolean | `@${string}`;
    parent_url?: boolean | `@${string}`;
    root_parent_url?: boolean | `@${string}`;
    text?: boolean | `@${string}`;
    timestamp?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by max() on columns of table "farcaster.casts" */
  ['farcaster_casts_max_order_by']: {
    created_at?: ValueTypes['order_by'] | undefined | null;
    deleted_at?: ValueTypes['order_by'] | undefined | null;
    fid?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    mentions?: ValueTypes['order_by'] | undefined | null;
    mentions_positions?: ValueTypes['order_by'] | undefined | null;
    parent_fid?: ValueTypes['order_by'] | undefined | null;
    parent_url?: ValueTypes['order_by'] | undefined | null;
    root_parent_url?: ValueTypes['order_by'] | undefined | null;
    text?: ValueTypes['order_by'] | undefined | null;
    timestamp?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate min on columns */
  ['farcaster_casts_min_fields']: AliasType<{
    created_at?: boolean | `@${string}`;
    deleted_at?: boolean | `@${string}`;
    fid?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    mentions?: boolean | `@${string}`;
    mentions_positions?: boolean | `@${string}`;
    parent_fid?: boolean | `@${string}`;
    parent_url?: boolean | `@${string}`;
    root_parent_url?: boolean | `@${string}`;
    text?: boolean | `@${string}`;
    timestamp?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by min() on columns of table "farcaster.casts" */
  ['farcaster_casts_min_order_by']: {
    created_at?: ValueTypes['order_by'] | undefined | null;
    deleted_at?: ValueTypes['order_by'] | undefined | null;
    fid?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    mentions?: ValueTypes['order_by'] | undefined | null;
    mentions_positions?: ValueTypes['order_by'] | undefined | null;
    parent_fid?: ValueTypes['order_by'] | undefined | null;
    parent_url?: ValueTypes['order_by'] | undefined | null;
    root_parent_url?: ValueTypes['order_by'] | undefined | null;
    text?: ValueTypes['order_by'] | undefined | null;
    timestamp?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** Ordering options when selecting data from "farcaster.casts". */
  ['farcaster_casts_order_by']: {
    created_at?: ValueTypes['order_by'] | undefined | null;
    deleted_at?: ValueTypes['order_by'] | undefined | null;
    embeds?: ValueTypes['order_by'] | undefined | null;
    farcaster_account?:
      | ValueTypes['farcaster_accounts_order_by']
      | undefined
      | null;
    fid?: ValueTypes['order_by'] | undefined | null;
    hash?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    mentions?: ValueTypes['order_by'] | undefined | null;
    mentions_positions?: ValueTypes['order_by'] | undefined | null;
    parent_fid?: ValueTypes['order_by'] | undefined | null;
    parent_hash?: ValueTypes['order_by'] | undefined | null;
    parent_url?: ValueTypes['order_by'] | undefined | null;
    reactions_aggregate?:
      | ValueTypes['farcaster_reactions_aggregate_order_by']
      | undefined
      | null;
    replies_aggregate?:
      | ValueTypes['farcaster_casts_aggregate_order_by']
      | undefined
      | null;
    root_parent_hash?: ValueTypes['order_by'] | undefined | null;
    root_parent_url?: ValueTypes['order_by'] | undefined | null;
    text?: ValueTypes['order_by'] | undefined | null;
    timestamp?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "farcaster.casts" */
  ['farcaster_casts_select_column']: farcaster_casts_select_column;
  /** aggregate stddev on columns */
  ['farcaster_casts_stddev_fields']: AliasType<{
    fid?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    parent_fid?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev() on columns of table "farcaster.casts" */
  ['farcaster_casts_stddev_order_by']: {
    fid?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    parent_fid?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_pop on columns */
  ['farcaster_casts_stddev_pop_fields']: AliasType<{
    fid?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    parent_fid?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_pop() on columns of table "farcaster.casts" */
  ['farcaster_casts_stddev_pop_order_by']: {
    fid?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    parent_fid?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_samp on columns */
  ['farcaster_casts_stddev_samp_fields']: AliasType<{
    fid?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    parent_fid?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_samp() on columns of table "farcaster.casts" */
  ['farcaster_casts_stddev_samp_order_by']: {
    fid?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    parent_fid?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "farcaster_casts" */
  ['farcaster_casts_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['farcaster_casts_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['farcaster_casts_stream_cursor_value_input']: {
    created_at?: ValueTypes['timestamp'] | undefined | null;
    deleted_at?: ValueTypes['timestamp'] | undefined | null;
    embeds?: ValueTypes['jsonb'] | undefined | null;
    fid?: ValueTypes['bigint'] | undefined | null;
    hash?: ValueTypes['bytea'] | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    mentions?: Array<ValueTypes['bigint']> | undefined | null;
    mentions_positions?: Array<ValueTypes['smallint']> | undefined | null;
    parent_fid?: ValueTypes['bigint'] | undefined | null;
    parent_hash?: ValueTypes['bytea'] | undefined | null;
    parent_url?: string | undefined | null;
    root_parent_hash?: ValueTypes['bytea'] | undefined | null;
    root_parent_url?: string | undefined | null;
    text?: string | undefined | null;
    timestamp?: ValueTypes['timestamp'] | undefined | null;
    updated_at?: ValueTypes['timestamp'] | undefined | null;
  };
  /** aggregate sum on columns */
  ['farcaster_casts_sum_fields']: AliasType<{
    fid?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    parent_fid?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by sum() on columns of table "farcaster.casts" */
  ['farcaster_casts_sum_order_by']: {
    fid?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    parent_fid?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate var_pop on columns */
  ['farcaster_casts_var_pop_fields']: AliasType<{
    fid?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    parent_fid?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_pop() on columns of table "farcaster.casts" */
  ['farcaster_casts_var_pop_order_by']: {
    fid?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    parent_fid?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate var_samp on columns */
  ['farcaster_casts_var_samp_fields']: AliasType<{
    fid?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    parent_fid?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_samp() on columns of table "farcaster.casts" */
  ['farcaster_casts_var_samp_order_by']: {
    fid?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    parent_fid?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate variance on columns */
  ['farcaster_casts_variance_fields']: AliasType<{
    fid?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    parent_fid?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by variance() on columns of table "farcaster.casts" */
  ['farcaster_casts_variance_order_by']: {
    fid?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    parent_fid?: ValueTypes['order_by'] | undefined | null;
  };
  /** columns and relationships of "farcaster.reactions" */
  ['farcaster_reactions']: AliasType<{
    created_at?: boolean | `@${string}`;
    deleted_at?: boolean | `@${string}`;
    fid?: boolean | `@${string}`;
    hash?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    reaction_type?: boolean | `@${string}`;
    target_fid?: boolean | `@${string}`;
    target_hash?: boolean | `@${string}`;
    target_url?: boolean | `@${string}`;
    timestamp?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregated selection of "farcaster.reactions" */
  ['farcaster_reactions_aggregate']: AliasType<{
    aggregate?: ValueTypes['farcaster_reactions_aggregate_fields'];
    nodes?: ValueTypes['farcaster_reactions'];
    __typename?: boolean | `@${string}`;
  }>;
  ['farcaster_reactions_aggregate_bool_exp']: {
    count?:
      | ValueTypes['farcaster_reactions_aggregate_bool_exp_count']
      | undefined
      | null;
  };
  ['farcaster_reactions_aggregate_bool_exp_count']: {
    arguments?:
      | Array<ValueTypes['farcaster_reactions_select_column']>
      | undefined
      | null;
    distinct?: boolean | undefined | null;
    filter?: ValueTypes['farcaster_reactions_bool_exp'] | undefined | null;
    predicate: ValueTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "farcaster.reactions" */
  ['farcaster_reactions_aggregate_fields']: AliasType<{
    avg?: ValueTypes['farcaster_reactions_avg_fields'];
    count?: [
      {
        columns?:
          | Array<ValueTypes['farcaster_reactions_select_column']>
          | undefined
          | null;
        distinct?: boolean | undefined | null;
      },
      boolean | `@${string}`,
    ];
    max?: ValueTypes['farcaster_reactions_max_fields'];
    min?: ValueTypes['farcaster_reactions_min_fields'];
    stddev?: ValueTypes['farcaster_reactions_stddev_fields'];
    stddev_pop?: ValueTypes['farcaster_reactions_stddev_pop_fields'];
    stddev_samp?: ValueTypes['farcaster_reactions_stddev_samp_fields'];
    sum?: ValueTypes['farcaster_reactions_sum_fields'];
    var_pop?: ValueTypes['farcaster_reactions_var_pop_fields'];
    var_samp?: ValueTypes['farcaster_reactions_var_samp_fields'];
    variance?: ValueTypes['farcaster_reactions_variance_fields'];
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "farcaster.reactions" */
  ['farcaster_reactions_aggregate_order_by']: {
    avg?: ValueTypes['farcaster_reactions_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['farcaster_reactions_max_order_by'] | undefined | null;
    min?: ValueTypes['farcaster_reactions_min_order_by'] | undefined | null;
    stddev?:
      | ValueTypes['farcaster_reactions_stddev_order_by']
      | undefined
      | null;
    stddev_pop?:
      | ValueTypes['farcaster_reactions_stddev_pop_order_by']
      | undefined
      | null;
    stddev_samp?:
      | ValueTypes['farcaster_reactions_stddev_samp_order_by']
      | undefined
      | null;
    sum?: ValueTypes['farcaster_reactions_sum_order_by'] | undefined | null;
    var_pop?:
      | ValueTypes['farcaster_reactions_var_pop_order_by']
      | undefined
      | null;
    var_samp?:
      | ValueTypes['farcaster_reactions_var_samp_order_by']
      | undefined
      | null;
    variance?:
      | ValueTypes['farcaster_reactions_variance_order_by']
      | undefined
      | null;
  };
  /** aggregate avg on columns */
  ['farcaster_reactions_avg_fields']: AliasType<{
    fid?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    reaction_type?: boolean | `@${string}`;
    target_fid?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by avg() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_avg_order_by']: {
    fid?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    reaction_type?: ValueTypes['order_by'] | undefined | null;
    target_fid?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "farcaster.reactions". All fields are combined with a logical 'AND'. */
  ['farcaster_reactions_bool_exp']: {
    _and?: Array<ValueTypes['farcaster_reactions_bool_exp']> | undefined | null;
    _not?: ValueTypes['farcaster_reactions_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['farcaster_reactions_bool_exp']> | undefined | null;
    created_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    deleted_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    fid?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    hash?: ValueTypes['bytea_comparison_exp'] | undefined | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    reaction_type?: ValueTypes['smallint_comparison_exp'] | undefined | null;
    target_fid?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    target_hash?: ValueTypes['bytea_comparison_exp'] | undefined | null;
    target_url?: ValueTypes['String_comparison_exp'] | undefined | null;
    timestamp?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
  };
  /** aggregate max on columns */
  ['farcaster_reactions_max_fields']: AliasType<{
    created_at?: boolean | `@${string}`;
    deleted_at?: boolean | `@${string}`;
    fid?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    reaction_type?: boolean | `@${string}`;
    target_fid?: boolean | `@${string}`;
    target_url?: boolean | `@${string}`;
    timestamp?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by max() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_max_order_by']: {
    created_at?: ValueTypes['order_by'] | undefined | null;
    deleted_at?: ValueTypes['order_by'] | undefined | null;
    fid?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    reaction_type?: ValueTypes['order_by'] | undefined | null;
    target_fid?: ValueTypes['order_by'] | undefined | null;
    target_url?: ValueTypes['order_by'] | undefined | null;
    timestamp?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate min on columns */
  ['farcaster_reactions_min_fields']: AliasType<{
    created_at?: boolean | `@${string}`;
    deleted_at?: boolean | `@${string}`;
    fid?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    reaction_type?: boolean | `@${string}`;
    target_fid?: boolean | `@${string}`;
    target_url?: boolean | `@${string}`;
    timestamp?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by min() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_min_order_by']: {
    created_at?: ValueTypes['order_by'] | undefined | null;
    deleted_at?: ValueTypes['order_by'] | undefined | null;
    fid?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    reaction_type?: ValueTypes['order_by'] | undefined | null;
    target_fid?: ValueTypes['order_by'] | undefined | null;
    target_url?: ValueTypes['order_by'] | undefined | null;
    timestamp?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** Ordering options when selecting data from "farcaster.reactions". */
  ['farcaster_reactions_order_by']: {
    created_at?: ValueTypes['order_by'] | undefined | null;
    deleted_at?: ValueTypes['order_by'] | undefined | null;
    fid?: ValueTypes['order_by'] | undefined | null;
    hash?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    reaction_type?: ValueTypes['order_by'] | undefined | null;
    target_fid?: ValueTypes['order_by'] | undefined | null;
    target_hash?: ValueTypes['order_by'] | undefined | null;
    target_url?: ValueTypes['order_by'] | undefined | null;
    timestamp?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "farcaster.reactions" */
  ['farcaster_reactions_select_column']: farcaster_reactions_select_column;
  /** aggregate stddev on columns */
  ['farcaster_reactions_stddev_fields']: AliasType<{
    fid?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    reaction_type?: boolean | `@${string}`;
    target_fid?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_stddev_order_by']: {
    fid?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    reaction_type?: ValueTypes['order_by'] | undefined | null;
    target_fid?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_pop on columns */
  ['farcaster_reactions_stddev_pop_fields']: AliasType<{
    fid?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    reaction_type?: boolean | `@${string}`;
    target_fid?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_pop() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_stddev_pop_order_by']: {
    fid?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    reaction_type?: ValueTypes['order_by'] | undefined | null;
    target_fid?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_samp on columns */
  ['farcaster_reactions_stddev_samp_fields']: AliasType<{
    fid?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    reaction_type?: boolean | `@${string}`;
    target_fid?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_samp() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_stddev_samp_order_by']: {
    fid?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    reaction_type?: ValueTypes['order_by'] | undefined | null;
    target_fid?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "farcaster_reactions" */
  ['farcaster_reactions_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['farcaster_reactions_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['farcaster_reactions_stream_cursor_value_input']: {
    created_at?: ValueTypes['timestamp'] | undefined | null;
    deleted_at?: ValueTypes['timestamp'] | undefined | null;
    fid?: ValueTypes['bigint'] | undefined | null;
    hash?: ValueTypes['bytea'] | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    reaction_type?: ValueTypes['smallint'] | undefined | null;
    target_fid?: ValueTypes['bigint'] | undefined | null;
    target_hash?: ValueTypes['bytea'] | undefined | null;
    target_url?: string | undefined | null;
    timestamp?: ValueTypes['timestamp'] | undefined | null;
    updated_at?: ValueTypes['timestamp'] | undefined | null;
  };
  /** aggregate sum on columns */
  ['farcaster_reactions_sum_fields']: AliasType<{
    fid?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    reaction_type?: boolean | `@${string}`;
    target_fid?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by sum() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_sum_order_by']: {
    fid?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    reaction_type?: ValueTypes['order_by'] | undefined | null;
    target_fid?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate var_pop on columns */
  ['farcaster_reactions_var_pop_fields']: AliasType<{
    fid?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    reaction_type?: boolean | `@${string}`;
    target_fid?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_pop() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_var_pop_order_by']: {
    fid?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    reaction_type?: ValueTypes['order_by'] | undefined | null;
    target_fid?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate var_samp on columns */
  ['farcaster_reactions_var_samp_fields']: AliasType<{
    fid?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    reaction_type?: boolean | `@${string}`;
    target_fid?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_samp() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_var_samp_order_by']: {
    fid?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    reaction_type?: ValueTypes['order_by'] | undefined | null;
    target_fid?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate variance on columns */
  ['farcaster_reactions_variance_fields']: AliasType<{
    fid?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    reaction_type?: boolean | `@${string}`;
    target_fid?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by variance() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_variance_order_by']: {
    fid?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    reaction_type?: ValueTypes['order_by'] | undefined | null;
    target_fid?: ValueTypes['order_by'] | undefined | null;
  };
  ['float8']: unknown;
  /** Boolean expression to compare columns of type "float8". All fields are combined with logical 'AND'. */
  ['float8_comparison_exp']: {
    _eq?: ValueTypes['float8'] | undefined | null;
    _gt?: ValueTypes['float8'] | undefined | null;
    _gte?: ValueTypes['float8'] | undefined | null;
    _in?: Array<ValueTypes['float8']> | undefined | null;
    _is_null?: boolean | undefined | null;
    _lt?: ValueTypes['float8'] | undefined | null;
    _lte?: ValueTypes['float8'] | undefined | null;
    _neq?: ValueTypes['float8'] | undefined | null;
    _nin?: Array<ValueTypes['float8']> | undefined | null;
  };
  /** columns and relationships of "gift_private" */
  ['gift_private']: AliasType<{
    gift_id?: boolean | `@${string}`;
    note?: boolean | `@${string}`;
    /** An object relationship */
    recipient?: ValueTypes['users'];
    recipient_id?: boolean | `@${string}`;
    /** An object relationship */
    sender?: ValueTypes['users'];
    sender_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "gift_private". All fields are combined with a logical 'AND'. */
  ['gift_private_bool_exp']: {
    _and?: Array<ValueTypes['gift_private_bool_exp']> | undefined | null;
    _not?: ValueTypes['gift_private_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['gift_private_bool_exp']> | undefined | null;
    gift_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    note?: ValueTypes['String_comparison_exp'] | undefined | null;
    recipient?: ValueTypes['users_bool_exp'] | undefined | null;
    recipient_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    sender?: ValueTypes['users_bool_exp'] | undefined | null;
    sender_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
  };
  /** Ordering options when selecting data from "gift_private". */
  ['gift_private_order_by']: {
    gift_id?: ValueTypes['order_by'] | undefined | null;
    note?: ValueTypes['order_by'] | undefined | null;
    recipient?: ValueTypes['users_order_by'] | undefined | null;
    recipient_id?: ValueTypes['order_by'] | undefined | null;
    sender?: ValueTypes['users_order_by'] | undefined | null;
    sender_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "gift_private" */
  ['gift_private_select_column']: gift_private_select_column;
  /** Streaming cursor of the table "gift_private" */
  ['gift_private_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['gift_private_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['gift_private_stream_cursor_value_input']: {
    gift_id?: ValueTypes['bigint'] | undefined | null;
    note?: string | undefined | null;
    recipient_id?: ValueTypes['bigint'] | undefined | null;
    sender_id?: ValueTypes['bigint'] | undefined | null;
  };
  /** columns and relationships of "github_accounts" */
  ['github_accounts']: AliasType<{
    avatar_url?: boolean | `@${string}`;
    github_id?: boolean | `@${string}`;
    /** An object relationship */
    profile?: ValueTypes['profiles'];
    profile_id?: boolean | `@${string}`;
    username?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "github_accounts". All fields are combined with a logical 'AND'. */
  ['github_accounts_bool_exp']: {
    _and?: Array<ValueTypes['github_accounts_bool_exp']> | undefined | null;
    _not?: ValueTypes['github_accounts_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['github_accounts_bool_exp']> | undefined | null;
    avatar_url?: ValueTypes['String_comparison_exp'] | undefined | null;
    github_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    profile?: ValueTypes['profiles_bool_exp'] | undefined | null;
    profile_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    username?: ValueTypes['String_comparison_exp'] | undefined | null;
  };
  /** response of any mutation on the table "github_accounts" */
  ['github_accounts_mutation_response']: AliasType<{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | `@${string}`;
    /** data from the rows affected by the mutation */
    returning?: ValueTypes['github_accounts'];
    __typename?: boolean | `@${string}`;
  }>;
  /** Ordering options when selecting data from "github_accounts". */
  ['github_accounts_order_by']: {
    avatar_url?: ValueTypes['order_by'] | undefined | null;
    github_id?: ValueTypes['order_by'] | undefined | null;
    profile?: ValueTypes['profiles_order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    username?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "github_accounts" */
  ['github_accounts_select_column']: github_accounts_select_column;
  /** Streaming cursor of the table "github_accounts" */
  ['github_accounts_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['github_accounts_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['github_accounts_stream_cursor_value_input']: {
    avatar_url?: string | undefined | null;
    github_id?: ValueTypes['bigint'] | undefined | null;
    profile_id?: ValueTypes['bigint'] | undefined | null;
    username?: string | undefined | null;
  };
  /** columns and relationships of "histories" */
  ['histories']: AliasType<{
    bio?: boolean | `@${string}`;
    /** An object relationship */
    circle?: ValueTypes['circles'];
    /** An object relationship */
    epoch?: ValueTypes['epochs'];
    id?: boolean | `@${string}`;
    /** An object relationship */
    user?: ValueTypes['users'];
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "histories" */
  ['histories_aggregate_order_by']: {
    avg?: ValueTypes['histories_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['histories_max_order_by'] | undefined | null;
    min?: ValueTypes['histories_min_order_by'] | undefined | null;
    stddev?: ValueTypes['histories_stddev_order_by'] | undefined | null;
    stddev_pop?: ValueTypes['histories_stddev_pop_order_by'] | undefined | null;
    stddev_samp?:
      | ValueTypes['histories_stddev_samp_order_by']
      | undefined
      | null;
    sum?: ValueTypes['histories_sum_order_by'] | undefined | null;
    var_pop?: ValueTypes['histories_var_pop_order_by'] | undefined | null;
    var_samp?: ValueTypes['histories_var_samp_order_by'] | undefined | null;
    variance?: ValueTypes['histories_variance_order_by'] | undefined | null;
  };
  /** order by avg() on columns of table "histories" */
  ['histories_avg_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "histories". All fields are combined with a logical 'AND'. */
  ['histories_bool_exp']: {
    _and?: Array<ValueTypes['histories_bool_exp']> | undefined | null;
    _not?: ValueTypes['histories_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['histories_bool_exp']> | undefined | null;
    bio?: ValueTypes['String_comparison_exp'] | undefined | null;
    circle?: ValueTypes['circles_bool_exp'] | undefined | null;
    epoch?: ValueTypes['epochs_bool_exp'] | undefined | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    user?: ValueTypes['users_bool_exp'] | undefined | null;
  };
  /** order by max() on columns of table "histories" */
  ['histories_max_order_by']: {
    bio?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by min() on columns of table "histories" */
  ['histories_min_order_by']: {
    bio?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Ordering options when selecting data from "histories". */
  ['histories_order_by']: {
    bio?: ValueTypes['order_by'] | undefined | null;
    circle?: ValueTypes['circles_order_by'] | undefined | null;
    epoch?: ValueTypes['epochs_order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    user?: ValueTypes['users_order_by'] | undefined | null;
  };
  /** select columns of table "histories" */
  ['histories_select_column']: histories_select_column;
  /** order by stddev() on columns of table "histories" */
  ['histories_stddev_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_pop() on columns of table "histories" */
  ['histories_stddev_pop_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_samp() on columns of table "histories" */
  ['histories_stddev_samp_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "histories" */
  ['histories_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['histories_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['histories_stream_cursor_value_input']: {
    bio?: string | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
  };
  /** order by sum() on columns of table "histories" */
  ['histories_sum_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by var_pop() on columns of table "histories" */
  ['histories_var_pop_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by var_samp() on columns of table "histories" */
  ['histories_var_samp_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by variance() on columns of table "histories" */
  ['histories_variance_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Invite codes table for restricting access to app */
  ['invite_codes']: AliasType<{
    code?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    /** An object relationship */
    invited?: ValueTypes['profiles_public'];
    invited_id?: boolean | `@${string}`;
    /** An object relationship */
    inviter?: ValueTypes['profiles_public'];
    inviter_id?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregated selection of "invite_codes" */
  ['invite_codes_aggregate']: AliasType<{
    aggregate?: ValueTypes['invite_codes_aggregate_fields'];
    nodes?: ValueTypes['invite_codes'];
    __typename?: boolean | `@${string}`;
  }>;
  ['invite_codes_aggregate_bool_exp']: {
    count?:
      | ValueTypes['invite_codes_aggregate_bool_exp_count']
      | undefined
      | null;
  };
  ['invite_codes_aggregate_bool_exp_count']: {
    arguments?:
      | Array<ValueTypes['invite_codes_select_column']>
      | undefined
      | null;
    distinct?: boolean | undefined | null;
    filter?: ValueTypes['invite_codes_bool_exp'] | undefined | null;
    predicate: ValueTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "invite_codes" */
  ['invite_codes_aggregate_fields']: AliasType<{
    avg?: ValueTypes['invite_codes_avg_fields'];
    count?: [
      {
        columns?:
          | Array<ValueTypes['invite_codes_select_column']>
          | undefined
          | null;
        distinct?: boolean | undefined | null;
      },
      boolean | `@${string}`,
    ];
    max?: ValueTypes['invite_codes_max_fields'];
    min?: ValueTypes['invite_codes_min_fields'];
    stddev?: ValueTypes['invite_codes_stddev_fields'];
    stddev_pop?: ValueTypes['invite_codes_stddev_pop_fields'];
    stddev_samp?: ValueTypes['invite_codes_stddev_samp_fields'];
    sum?: ValueTypes['invite_codes_sum_fields'];
    var_pop?: ValueTypes['invite_codes_var_pop_fields'];
    var_samp?: ValueTypes['invite_codes_var_samp_fields'];
    variance?: ValueTypes['invite_codes_variance_fields'];
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "invite_codes" */
  ['invite_codes_aggregate_order_by']: {
    avg?: ValueTypes['invite_codes_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['invite_codes_max_order_by'] | undefined | null;
    min?: ValueTypes['invite_codes_min_order_by'] | undefined | null;
    stddev?: ValueTypes['invite_codes_stddev_order_by'] | undefined | null;
    stddev_pop?:
      | ValueTypes['invite_codes_stddev_pop_order_by']
      | undefined
      | null;
    stddev_samp?:
      | ValueTypes['invite_codes_stddev_samp_order_by']
      | undefined
      | null;
    sum?: ValueTypes['invite_codes_sum_order_by'] | undefined | null;
    var_pop?: ValueTypes['invite_codes_var_pop_order_by'] | undefined | null;
    var_samp?: ValueTypes['invite_codes_var_samp_order_by'] | undefined | null;
    variance?: ValueTypes['invite_codes_variance_order_by'] | undefined | null;
  };
  /** aggregate avg on columns */
  ['invite_codes_avg_fields']: AliasType<{
    invited_id?: boolean | `@${string}`;
    inviter_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by avg() on columns of table "invite_codes" */
  ['invite_codes_avg_order_by']: {
    invited_id?: ValueTypes['order_by'] | undefined | null;
    inviter_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "invite_codes". All fields are combined with a logical 'AND'. */
  ['invite_codes_bool_exp']: {
    _and?: Array<ValueTypes['invite_codes_bool_exp']> | undefined | null;
    _not?: ValueTypes['invite_codes_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['invite_codes_bool_exp']> | undefined | null;
    code?: ValueTypes['citext_comparison_exp'] | undefined | null;
    created_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    invited?: ValueTypes['profiles_public_bool_exp'] | undefined | null;
    invited_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    inviter?: ValueTypes['profiles_public_bool_exp'] | undefined | null;
    inviter_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
  };
  /** aggregate max on columns */
  ['invite_codes_max_fields']: AliasType<{
    code?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    invited_id?: boolean | `@${string}`;
    inviter_id?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by max() on columns of table "invite_codes" */
  ['invite_codes_max_order_by']: {
    code?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    invited_id?: ValueTypes['order_by'] | undefined | null;
    inviter_id?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate min on columns */
  ['invite_codes_min_fields']: AliasType<{
    code?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    invited_id?: boolean | `@${string}`;
    inviter_id?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by min() on columns of table "invite_codes" */
  ['invite_codes_min_order_by']: {
    code?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    invited_id?: ValueTypes['order_by'] | undefined | null;
    inviter_id?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** Ordering options when selecting data from "invite_codes". */
  ['invite_codes_order_by']: {
    code?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    invited?: ValueTypes['profiles_public_order_by'] | undefined | null;
    invited_id?: ValueTypes['order_by'] | undefined | null;
    inviter?: ValueTypes['profiles_public_order_by'] | undefined | null;
    inviter_id?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "invite_codes" */
  ['invite_codes_select_column']: invite_codes_select_column;
  /** aggregate stddev on columns */
  ['invite_codes_stddev_fields']: AliasType<{
    invited_id?: boolean | `@${string}`;
    inviter_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev() on columns of table "invite_codes" */
  ['invite_codes_stddev_order_by']: {
    invited_id?: ValueTypes['order_by'] | undefined | null;
    inviter_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_pop on columns */
  ['invite_codes_stddev_pop_fields']: AliasType<{
    invited_id?: boolean | `@${string}`;
    inviter_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_pop() on columns of table "invite_codes" */
  ['invite_codes_stddev_pop_order_by']: {
    invited_id?: ValueTypes['order_by'] | undefined | null;
    inviter_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_samp on columns */
  ['invite_codes_stddev_samp_fields']: AliasType<{
    invited_id?: boolean | `@${string}`;
    inviter_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_samp() on columns of table "invite_codes" */
  ['invite_codes_stddev_samp_order_by']: {
    invited_id?: ValueTypes['order_by'] | undefined | null;
    inviter_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "invite_codes" */
  ['invite_codes_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['invite_codes_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['invite_codes_stream_cursor_value_input']: {
    code?: ValueTypes['citext'] | undefined | null;
    created_at?: ValueTypes['timestamptz'] | undefined | null;
    invited_id?: ValueTypes['bigint'] | undefined | null;
    inviter_id?: ValueTypes['bigint'] | undefined | null;
    updated_at?: ValueTypes['timestamptz'] | undefined | null;
  };
  /** aggregate sum on columns */
  ['invite_codes_sum_fields']: AliasType<{
    invited_id?: boolean | `@${string}`;
    inviter_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by sum() on columns of table "invite_codes" */
  ['invite_codes_sum_order_by']: {
    invited_id?: ValueTypes['order_by'] | undefined | null;
    inviter_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate var_pop on columns */
  ['invite_codes_var_pop_fields']: AliasType<{
    invited_id?: boolean | `@${string}`;
    inviter_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_pop() on columns of table "invite_codes" */
  ['invite_codes_var_pop_order_by']: {
    invited_id?: ValueTypes['order_by'] | undefined | null;
    inviter_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate var_samp on columns */
  ['invite_codes_var_samp_fields']: AliasType<{
    invited_id?: boolean | `@${string}`;
    inviter_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_samp() on columns of table "invite_codes" */
  ['invite_codes_var_samp_order_by']: {
    invited_id?: ValueTypes['order_by'] | undefined | null;
    inviter_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate variance on columns */
  ['invite_codes_variance_fields']: AliasType<{
    invited_id?: boolean | `@${string}`;
    inviter_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by variance() on columns of table "invite_codes" */
  ['invite_codes_variance_order_by']: {
    invited_id?: ValueTypes['order_by'] | undefined | null;
    inviter_id?: ValueTypes['order_by'] | undefined | null;
  };
  ['json']: unknown;
  /** Boolean expression to compare columns of type "json". All fields are combined with logical 'AND'. */
  ['json_comparison_exp']: {
    _eq?: ValueTypes['json'] | undefined | null;
    _gt?: ValueTypes['json'] | undefined | null;
    _gte?: ValueTypes['json'] | undefined | null;
    _in?: Array<ValueTypes['json']> | undefined | null;
    _is_null?: boolean | undefined | null;
    _lt?: ValueTypes['json'] | undefined | null;
    _lte?: ValueTypes['json'] | undefined | null;
    _neq?: ValueTypes['json'] | undefined | null;
    _nin?: Array<ValueTypes['json']> | undefined | null;
  };
  ['jsonb']: unknown;
  ['jsonb_cast_exp']: {
    String?: ValueTypes['String_comparison_exp'] | undefined | null;
  };
  /** Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'. */
  ['jsonb_comparison_exp']: {
    _cast?: ValueTypes['jsonb_cast_exp'] | undefined | null;
    /** is the column contained in the given json value */
    _contained_in?: ValueTypes['jsonb'] | undefined | null;
    /** does the column contain the given json value at the top level */
    _contains?: ValueTypes['jsonb'] | undefined | null;
    _eq?: ValueTypes['jsonb'] | undefined | null;
    _gt?: ValueTypes['jsonb'] | undefined | null;
    _gte?: ValueTypes['jsonb'] | undefined | null;
    /** does the string exist as a top-level key in the column */
    _has_key?: string | undefined | null;
    /** do all of these strings exist as top-level keys in the column */
    _has_keys_all?: Array<string> | undefined | null;
    /** do any of these strings exist as top-level keys in the column */
    _has_keys_any?: Array<string> | undefined | null;
    _in?: Array<ValueTypes['jsonb']> | undefined | null;
    _is_null?: boolean | undefined | null;
    _lt?: ValueTypes['jsonb'] | undefined | null;
    _lte?: ValueTypes['jsonb'] | undefined | null;
    _neq?: ValueTypes['jsonb'] | undefined | null;
    _nin?: Array<ValueTypes['jsonb']> | undefined | null;
  };
  /** tracks the amount of keys an address holds in a given subject. updated with data from the key_tx table */
  ['link_holders']: AliasType<{
    amount?: boolean | `@${string}`;
    holder?: boolean | `@${string}`;
    /** An object relationship */
    holder_cosoul?: ValueTypes['cosouls'];
    /** An object relationship */
    holder_profile_public?: ValueTypes['profiles_public'];
    target?: boolean | `@${string}`;
    /** An object relationship */
    target_cosoul?: ValueTypes['cosouls'];
    /** An object relationship */
    target_profile_public?: ValueTypes['profiles_public'];
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregated selection of "link_holders" */
  ['link_holders_aggregate']: AliasType<{
    aggregate?: ValueTypes['link_holders_aggregate_fields'];
    nodes?: ValueTypes['link_holders'];
    __typename?: boolean | `@${string}`;
  }>;
  ['link_holders_aggregate_bool_exp']: {
    count?:
      | ValueTypes['link_holders_aggregate_bool_exp_count']
      | undefined
      | null;
  };
  ['link_holders_aggregate_bool_exp_count']: {
    arguments?:
      | Array<ValueTypes['link_holders_select_column']>
      | undefined
      | null;
    distinct?: boolean | undefined | null;
    filter?: ValueTypes['link_holders_bool_exp'] | undefined | null;
    predicate: ValueTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "link_holders" */
  ['link_holders_aggregate_fields']: AliasType<{
    avg?: ValueTypes['link_holders_avg_fields'];
    count?: [
      {
        columns?:
          | Array<ValueTypes['link_holders_select_column']>
          | undefined
          | null;
        distinct?: boolean | undefined | null;
      },
      boolean | `@${string}`,
    ];
    max?: ValueTypes['link_holders_max_fields'];
    min?: ValueTypes['link_holders_min_fields'];
    stddev?: ValueTypes['link_holders_stddev_fields'];
    stddev_pop?: ValueTypes['link_holders_stddev_pop_fields'];
    stddev_samp?: ValueTypes['link_holders_stddev_samp_fields'];
    sum?: ValueTypes['link_holders_sum_fields'];
    var_pop?: ValueTypes['link_holders_var_pop_fields'];
    var_samp?: ValueTypes['link_holders_var_samp_fields'];
    variance?: ValueTypes['link_holders_variance_fields'];
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "link_holders" */
  ['link_holders_aggregate_order_by']: {
    avg?: ValueTypes['link_holders_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['link_holders_max_order_by'] | undefined | null;
    min?: ValueTypes['link_holders_min_order_by'] | undefined | null;
    stddev?: ValueTypes['link_holders_stddev_order_by'] | undefined | null;
    stddev_pop?:
      | ValueTypes['link_holders_stddev_pop_order_by']
      | undefined
      | null;
    stddev_samp?:
      | ValueTypes['link_holders_stddev_samp_order_by']
      | undefined
      | null;
    sum?: ValueTypes['link_holders_sum_order_by'] | undefined | null;
    var_pop?: ValueTypes['link_holders_var_pop_order_by'] | undefined | null;
    var_samp?: ValueTypes['link_holders_var_samp_order_by'] | undefined | null;
    variance?: ValueTypes['link_holders_variance_order_by'] | undefined | null;
  };
  /** aggregate avg on columns */
  ['link_holders_avg_fields']: AliasType<{
    amount?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by avg() on columns of table "link_holders" */
  ['link_holders_avg_order_by']: {
    amount?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "link_holders". All fields are combined with a logical 'AND'. */
  ['link_holders_bool_exp']: {
    _and?: Array<ValueTypes['link_holders_bool_exp']> | undefined | null;
    _not?: ValueTypes['link_holders_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['link_holders_bool_exp']> | undefined | null;
    amount?: ValueTypes['Int_comparison_exp'] | undefined | null;
    holder?: ValueTypes['citext_comparison_exp'] | undefined | null;
    holder_cosoul?: ValueTypes['cosouls_bool_exp'] | undefined | null;
    holder_profile_public?:
      | ValueTypes['profiles_public_bool_exp']
      | undefined
      | null;
    target?: ValueTypes['citext_comparison_exp'] | undefined | null;
    target_cosoul?: ValueTypes['cosouls_bool_exp'] | undefined | null;
    target_profile_public?:
      | ValueTypes['profiles_public_bool_exp']
      | undefined
      | null;
    updated_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
  };
  /** aggregate max on columns */
  ['link_holders_max_fields']: AliasType<{
    amount?: boolean | `@${string}`;
    holder?: boolean | `@${string}`;
    target?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by max() on columns of table "link_holders" */
  ['link_holders_max_order_by']: {
    amount?: ValueTypes['order_by'] | undefined | null;
    holder?: ValueTypes['order_by'] | undefined | null;
    target?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate min on columns */
  ['link_holders_min_fields']: AliasType<{
    amount?: boolean | `@${string}`;
    holder?: boolean | `@${string}`;
    target?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by min() on columns of table "link_holders" */
  ['link_holders_min_order_by']: {
    amount?: ValueTypes['order_by'] | undefined | null;
    holder?: ValueTypes['order_by'] | undefined | null;
    target?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** Ordering options when selecting data from "link_holders". */
  ['link_holders_order_by']: {
    amount?: ValueTypes['order_by'] | undefined | null;
    holder?: ValueTypes['order_by'] | undefined | null;
    holder_cosoul?: ValueTypes['cosouls_order_by'] | undefined | null;
    holder_profile_public?:
      | ValueTypes['profiles_public_order_by']
      | undefined
      | null;
    target?: ValueTypes['order_by'] | undefined | null;
    target_cosoul?: ValueTypes['cosouls_order_by'] | undefined | null;
    target_profile_public?:
      | ValueTypes['profiles_public_order_by']
      | undefined
      | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "link_holders" */
  ['link_holders_select_column']: link_holders_select_column;
  /** aggregate stddev on columns */
  ['link_holders_stddev_fields']: AliasType<{
    amount?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev() on columns of table "link_holders" */
  ['link_holders_stddev_order_by']: {
    amount?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_pop on columns */
  ['link_holders_stddev_pop_fields']: AliasType<{
    amount?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_pop() on columns of table "link_holders" */
  ['link_holders_stddev_pop_order_by']: {
    amount?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_samp on columns */
  ['link_holders_stddev_samp_fields']: AliasType<{
    amount?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_samp() on columns of table "link_holders" */
  ['link_holders_stddev_samp_order_by']: {
    amount?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "link_holders" */
  ['link_holders_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['link_holders_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['link_holders_stream_cursor_value_input']: {
    amount?: number | undefined | null;
    holder?: ValueTypes['citext'] | undefined | null;
    target?: ValueTypes['citext'] | undefined | null;
    updated_at?: ValueTypes['timestamptz'] | undefined | null;
  };
  /** aggregate sum on columns */
  ['link_holders_sum_fields']: AliasType<{
    amount?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by sum() on columns of table "link_holders" */
  ['link_holders_sum_order_by']: {
    amount?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate var_pop on columns */
  ['link_holders_var_pop_fields']: AliasType<{
    amount?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_pop() on columns of table "link_holders" */
  ['link_holders_var_pop_order_by']: {
    amount?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate var_samp on columns */
  ['link_holders_var_samp_fields']: AliasType<{
    amount?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_samp() on columns of table "link_holders" */
  ['link_holders_var_samp_order_by']: {
    amount?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate variance on columns */
  ['link_holders_variance_fields']: AliasType<{
    amount?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by variance() on columns of table "link_holders" */
  ['link_holders_variance_order_by']: {
    amount?: ValueTypes['order_by'] | undefined | null;
  };
  /** columns and relationships of "link_tx" */
  ['link_tx']: AliasType<{
    buy?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    eth_amount?: boolean | `@${string}`;
    holder?: boolean | `@${string}`;
    /** An object relationship */
    holder_profile?: ValueTypes['profiles_public'];
    link_amount?: boolean | `@${string}`;
    protocol_fee_amount?: boolean | `@${string}`;
    supply?: boolean | `@${string}`;
    target?: boolean | `@${string}`;
    target_fee_amount?: boolean | `@${string}`;
    /** An object relationship */
    target_profile?: ValueTypes['profiles_public'];
    tx_hash?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "link_tx". All fields are combined with a logical 'AND'. */
  ['link_tx_bool_exp']: {
    _and?: Array<ValueTypes['link_tx_bool_exp']> | undefined | null;
    _not?: ValueTypes['link_tx_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['link_tx_bool_exp']> | undefined | null;
    buy?: ValueTypes['Boolean_comparison_exp'] | undefined | null;
    created_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    eth_amount?: ValueTypes['String_comparison_exp'] | undefined | null;
    holder?: ValueTypes['citext_comparison_exp'] | undefined | null;
    holder_profile?: ValueTypes['profiles_public_bool_exp'] | undefined | null;
    link_amount?: ValueTypes['String_comparison_exp'] | undefined | null;
    protocol_fee_amount?:
      | ValueTypes['String_comparison_exp']
      | undefined
      | null;
    supply?: ValueTypes['numeric_comparison_exp'] | undefined | null;
    target?: ValueTypes['citext_comparison_exp'] | undefined | null;
    target_fee_amount?: ValueTypes['String_comparison_exp'] | undefined | null;
    target_profile?: ValueTypes['profiles_public_bool_exp'] | undefined | null;
    tx_hash?: ValueTypes['citext_comparison_exp'] | undefined | null;
  };
  /** Ordering options when selecting data from "link_tx". */
  ['link_tx_order_by']: {
    buy?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    eth_amount?: ValueTypes['order_by'] | undefined | null;
    holder?: ValueTypes['order_by'] | undefined | null;
    holder_profile?: ValueTypes['profiles_public_order_by'] | undefined | null;
    link_amount?: ValueTypes['order_by'] | undefined | null;
    protocol_fee_amount?: ValueTypes['order_by'] | undefined | null;
    supply?: ValueTypes['order_by'] | undefined | null;
    target?: ValueTypes['order_by'] | undefined | null;
    target_fee_amount?: ValueTypes['order_by'] | undefined | null;
    target_profile?: ValueTypes['profiles_public_order_by'] | undefined | null;
    tx_hash?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "link_tx" */
  ['link_tx_select_column']: link_tx_select_column;
  /** Streaming cursor of the table "link_tx" */
  ['link_tx_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['link_tx_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['link_tx_stream_cursor_value_input']: {
    buy?: boolean | undefined | null;
    created_at?: ValueTypes['timestamptz'] | undefined | null;
    eth_amount?: string | undefined | null;
    holder?: ValueTypes['citext'] | undefined | null;
    link_amount?: string | undefined | null;
    protocol_fee_amount?: string | undefined | null;
    supply?: ValueTypes['numeric'] | undefined | null;
    target?: ValueTypes['citext'] | undefined | null;
    target_fee_amount?: string | undefined | null;
    tx_hash?: ValueTypes['citext'] | undefined | null;
  };
  /** columns and relationships of "linkedin_accounts" */
  ['linkedin_accounts']: AliasType<{
    name?: boolean | `@${string}`;
    picture?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "linkedin_accounts". All fields are combined with a logical 'AND'. */
  ['linkedin_accounts_bool_exp']: {
    _and?: Array<ValueTypes['linkedin_accounts_bool_exp']> | undefined | null;
    _not?: ValueTypes['linkedin_accounts_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['linkedin_accounts_bool_exp']> | undefined | null;
    name?: ValueTypes['String_comparison_exp'] | undefined | null;
    picture?: ValueTypes['String_comparison_exp'] | undefined | null;
    profile_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
  };
  /** response of any mutation on the table "linkedin_accounts" */
  ['linkedin_accounts_mutation_response']: AliasType<{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | `@${string}`;
    /** data from the rows affected by the mutation */
    returning?: ValueTypes['linkedin_accounts'];
    __typename?: boolean | `@${string}`;
  }>;
  /** Ordering options when selecting data from "linkedin_accounts". */
  ['linkedin_accounts_order_by']: {
    name?: ValueTypes['order_by'] | undefined | null;
    picture?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "linkedin_accounts" */
  ['linkedin_accounts_select_column']: linkedin_accounts_select_column;
  /** Streaming cursor of the table "linkedin_accounts" */
  ['linkedin_accounts_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['linkedin_accounts_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['linkedin_accounts_stream_cursor_value_input']: {
    name?: string | undefined | null;
    picture?: string | undefined | null;
    profile_id?: ValueTypes['bigint'] | undefined | null;
  };
  /** columns and relationships of "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts']: AliasType<{
    earnings?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    /** An object relationship */
    locked_token_distribution?: ValueTypes['locked_token_distributions'];
    locked_token_distribution_id?: boolean | `@${string}`;
    /** An object relationship */
    profile?: ValueTypes['profiles'];
    profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_aggregate_order_by']: {
    avg?:
      | ValueTypes['locked_token_distribution_gifts_avg_order_by']
      | undefined
      | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?:
      | ValueTypes['locked_token_distribution_gifts_max_order_by']
      | undefined
      | null;
    min?:
      | ValueTypes['locked_token_distribution_gifts_min_order_by']
      | undefined
      | null;
    stddev?:
      | ValueTypes['locked_token_distribution_gifts_stddev_order_by']
      | undefined
      | null;
    stddev_pop?:
      | ValueTypes['locked_token_distribution_gifts_stddev_pop_order_by']
      | undefined
      | null;
    stddev_samp?:
      | ValueTypes['locked_token_distribution_gifts_stddev_samp_order_by']
      | undefined
      | null;
    sum?:
      | ValueTypes['locked_token_distribution_gifts_sum_order_by']
      | undefined
      | null;
    var_pop?:
      | ValueTypes['locked_token_distribution_gifts_var_pop_order_by']
      | undefined
      | null;
    var_samp?:
      | ValueTypes['locked_token_distribution_gifts_var_samp_order_by']
      | undefined
      | null;
    variance?:
      | ValueTypes['locked_token_distribution_gifts_variance_order_by']
      | undefined
      | null;
  };
  /** input type for inserting array relation for remote table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_arr_rel_insert_input']: {
    data: Array<ValueTypes['locked_token_distribution_gifts_insert_input']>;
    /** upsert condition */
    on_conflict?:
      | ValueTypes['locked_token_distribution_gifts_on_conflict']
      | undefined
      | null;
  };
  /** order by avg() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_avg_order_by']: {
    earnings?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    locked_token_distribution_id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "locked_token_distribution_gifts". All fields are combined with a logical 'AND'. */
  ['locked_token_distribution_gifts_bool_exp']: {
    _and?:
      | Array<ValueTypes['locked_token_distribution_gifts_bool_exp']>
      | undefined
      | null;
    _not?:
      | ValueTypes['locked_token_distribution_gifts_bool_exp']
      | undefined
      | null;
    _or?:
      | Array<ValueTypes['locked_token_distribution_gifts_bool_exp']>
      | undefined
      | null;
    earnings?: ValueTypes['numeric_comparison_exp'] | undefined | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    locked_token_distribution?:
      | ValueTypes['locked_token_distributions_bool_exp']
      | undefined
      | null;
    locked_token_distribution_id?:
      | ValueTypes['bigint_comparison_exp']
      | undefined
      | null;
    profile?: ValueTypes['profiles_bool_exp'] | undefined | null;
    profile_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
  };
  /** unique or primary key constraints on table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_constraint']: locked_token_distribution_gifts_constraint;
  /** input type for inserting data into table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_insert_input']: {
    earnings?: ValueTypes['numeric'] | undefined | null;
    locked_token_distribution?:
      | ValueTypes['locked_token_distributions_obj_rel_insert_input']
      | undefined
      | null;
    locked_token_distribution_id?: ValueTypes['bigint'] | undefined | null;
    profile_id?: ValueTypes['bigint'] | undefined | null;
  };
  /** order by max() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_max_order_by']: {
    earnings?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    locked_token_distribution_id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by min() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_min_order_by']: {
    earnings?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    locked_token_distribution_id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** response of any mutation on the table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_mutation_response']: AliasType<{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | `@${string}`;
    /** data from the rows affected by the mutation */
    returning?: ValueTypes['locked_token_distribution_gifts'];
    __typename?: boolean | `@${string}`;
  }>;
  /** on_conflict condition type for table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_on_conflict']: {
    constraint: ValueTypes['locked_token_distribution_gifts_constraint'];
    update_columns: Array<
      ValueTypes['locked_token_distribution_gifts_update_column']
    >;
    where?:
      | ValueTypes['locked_token_distribution_gifts_bool_exp']
      | undefined
      | null;
  };
  /** Ordering options when selecting data from "locked_token_distribution_gifts". */
  ['locked_token_distribution_gifts_order_by']: {
    earnings?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    locked_token_distribution?:
      | ValueTypes['locked_token_distributions_order_by']
      | undefined
      | null;
    locked_token_distribution_id?: ValueTypes['order_by'] | undefined | null;
    profile?: ValueTypes['profiles_order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_select_column']: locked_token_distribution_gifts_select_column;
  /** order by stddev() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_stddev_order_by']: {
    earnings?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    locked_token_distribution_id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_pop() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_stddev_pop_order_by']: {
    earnings?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    locked_token_distribution_id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_samp() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_stddev_samp_order_by']: {
    earnings?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    locked_token_distribution_id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['locked_token_distribution_gifts_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['locked_token_distribution_gifts_stream_cursor_value_input']: {
    earnings?: ValueTypes['numeric'] | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    locked_token_distribution_id?: ValueTypes['bigint'] | undefined | null;
    profile_id?: ValueTypes['bigint'] | undefined | null;
  };
  /** order by sum() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_sum_order_by']: {
    earnings?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    locked_token_distribution_id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** placeholder for update columns of table "locked_token_distribution_gifts" (current role has no relevant permissions) */
  ['locked_token_distribution_gifts_update_column']: locked_token_distribution_gifts_update_column;
  /** order by var_pop() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_var_pop_order_by']: {
    earnings?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    locked_token_distribution_id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by var_samp() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_var_samp_order_by']: {
    earnings?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    locked_token_distribution_id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by variance() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_variance_order_by']: {
    earnings?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    locked_token_distribution_id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** columns and relationships of "locked_token_distributions" */
  ['locked_token_distributions']: AliasType<{
    chain_id?: boolean | `@${string}`;
    distributed_by?: boolean | `@${string}`;
    /** An object relationship */
    epoch?: ValueTypes['epochs'];
    epoch_id?: boolean | `@${string}`;
    gift_amount?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    locked_token_distribution_gifts?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['locked_token_distribution_gifts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['locked_token_distribution_gifts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?:
          | ValueTypes['locked_token_distribution_gifts_bool_exp']
          | undefined
          | null;
      },
      ValueTypes['locked_token_distribution_gifts'],
    ];
    /** An object relationship */
    profile?: ValueTypes['profiles'];
    token_contract_address?: boolean | `@${string}`;
    token_decimals?: boolean | `@${string}`;
    token_symbol?: boolean | `@${string}`;
    tx_hash?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "locked_token_distributions". All fields are combined with a logical 'AND'. */
  ['locked_token_distributions_bool_exp']: {
    _and?:
      | Array<ValueTypes['locked_token_distributions_bool_exp']>
      | undefined
      | null;
    _not?: ValueTypes['locked_token_distributions_bool_exp'] | undefined | null;
    _or?:
      | Array<ValueTypes['locked_token_distributions_bool_exp']>
      | undefined
      | null;
    chain_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    distributed_by?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    epoch?: ValueTypes['epochs_bool_exp'] | undefined | null;
    epoch_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    gift_amount?: ValueTypes['numeric_comparison_exp'] | undefined | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    locked_token_distribution_gifts?:
      | ValueTypes['locked_token_distribution_gifts_bool_exp']
      | undefined
      | null;
    profile?: ValueTypes['profiles_bool_exp'] | undefined | null;
    token_contract_address?:
      | ValueTypes['String_comparison_exp']
      | undefined
      | null;
    token_decimals?: ValueTypes['Int_comparison_exp'] | undefined | null;
    token_symbol?: ValueTypes['String_comparison_exp'] | undefined | null;
    tx_hash?: ValueTypes['String_comparison_exp'] | undefined | null;
  };
  /** unique or primary key constraints on table "locked_token_distributions" */
  ['locked_token_distributions_constraint']: locked_token_distributions_constraint;
  /** input type for inserting data into table "locked_token_distributions" */
  ['locked_token_distributions_insert_input']: {
    chain_id?: number | undefined | null;
    epoch_id?: ValueTypes['bigint'] | undefined | null;
    gift_amount?: ValueTypes['numeric'] | undefined | null;
    locked_token_distribution_gifts?:
      | ValueTypes['locked_token_distribution_gifts_arr_rel_insert_input']
      | undefined
      | null;
    token_contract_address?: string | undefined | null;
    token_decimals?: number | undefined | null;
    token_symbol?: string | undefined | null;
    tx_hash?: string | undefined | null;
  };
  /** response of any mutation on the table "locked_token_distributions" */
  ['locked_token_distributions_mutation_response']: AliasType<{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | `@${string}`;
    /** data from the rows affected by the mutation */
    returning?: ValueTypes['locked_token_distributions'];
    __typename?: boolean | `@${string}`;
  }>;
  /** input type for inserting object relation for remote table "locked_token_distributions" */
  ['locked_token_distributions_obj_rel_insert_input']: {
    data: ValueTypes['locked_token_distributions_insert_input'];
    /** upsert condition */
    on_conflict?:
      | ValueTypes['locked_token_distributions_on_conflict']
      | undefined
      | null;
  };
  /** on_conflict condition type for table "locked_token_distributions" */
  ['locked_token_distributions_on_conflict']: {
    constraint: ValueTypes['locked_token_distributions_constraint'];
    update_columns: Array<
      ValueTypes['locked_token_distributions_update_column']
    >;
    where?:
      | ValueTypes['locked_token_distributions_bool_exp']
      | undefined
      | null;
  };
  /** Ordering options when selecting data from "locked_token_distributions". */
  ['locked_token_distributions_order_by']: {
    chain_id?: ValueTypes['order_by'] | undefined | null;
    distributed_by?: ValueTypes['order_by'] | undefined | null;
    epoch?: ValueTypes['epochs_order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    gift_amount?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    locked_token_distribution_gifts_aggregate?:
      | ValueTypes['locked_token_distribution_gifts_aggregate_order_by']
      | undefined
      | null;
    profile?: ValueTypes['profiles_order_by'] | undefined | null;
    token_contract_address?: ValueTypes['order_by'] | undefined | null;
    token_decimals?: ValueTypes['order_by'] | undefined | null;
    token_symbol?: ValueTypes['order_by'] | undefined | null;
    tx_hash?: ValueTypes['order_by'] | undefined | null;
  };
  /** primary key columns input for table: locked_token_distributions */
  ['locked_token_distributions_pk_columns_input']: {
    id: ValueTypes['bigint'];
  };
  /** select columns of table "locked_token_distributions" */
  ['locked_token_distributions_select_column']: locked_token_distributions_select_column;
  /** input type for updating data in table "locked_token_distributions" */
  ['locked_token_distributions_set_input']: {
    tx_hash?: string | undefined | null;
  };
  /** Streaming cursor of the table "locked_token_distributions" */
  ['locked_token_distributions_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['locked_token_distributions_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['locked_token_distributions_stream_cursor_value_input']: {
    chain_id?: number | undefined | null;
    distributed_by?: ValueTypes['bigint'] | undefined | null;
    epoch_id?: ValueTypes['bigint'] | undefined | null;
    gift_amount?: ValueTypes['numeric'] | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    token_contract_address?: string | undefined | null;
    token_decimals?: number | undefined | null;
    token_symbol?: string | undefined | null;
    tx_hash?: string | undefined | null;
  };
  /** update columns of table "locked_token_distributions" */
  ['locked_token_distributions_update_column']: locked_token_distributions_update_column;
  ['locked_token_distributions_updates']: {
    /** sets the columns of the filtered rows to the given values */
    _set?:
      | ValueTypes['locked_token_distributions_set_input']
      | undefined
      | null;
    /** filter the rows which have to be updated */
    where: ValueTypes['locked_token_distributions_bool_exp'];
  };
  /** columns and relationships of "member_circle_pgives" */
  ['member_circle_pgives']: AliasType<{
    /** An object relationship */
    circle?: ValueTypes['circles'];
    circle_id?: boolean | `@${string}`;
    epochs?: boolean | `@${string}`;
    pgive?: boolean | `@${string}`;
    /** An object relationship */
    user?: ValueTypes['users'];
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "member_circle_pgives". All fields are combined with a logical 'AND'. */
  ['member_circle_pgives_bool_exp']: {
    _and?:
      | Array<ValueTypes['member_circle_pgives_bool_exp']>
      | undefined
      | null;
    _not?: ValueTypes['member_circle_pgives_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['member_circle_pgives_bool_exp']> | undefined | null;
    circle?: ValueTypes['circles_bool_exp'] | undefined | null;
    circle_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    epochs?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    pgive?: ValueTypes['numeric_comparison_exp'] | undefined | null;
    user?: ValueTypes['users_bool_exp'] | undefined | null;
    user_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
  };
  /** Ordering options when selecting data from "member_circle_pgives". */
  ['member_circle_pgives_order_by']: {
    circle?: ValueTypes['circles_order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epochs?: ValueTypes['order_by'] | undefined | null;
    pgive?: ValueTypes['order_by'] | undefined | null;
    user?: ValueTypes['users_order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "member_circle_pgives" */
  ['member_circle_pgives_select_column']: member_circle_pgives_select_column;
  /** Streaming cursor of the table "member_circle_pgives" */
  ['member_circle_pgives_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['member_circle_pgives_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['member_circle_pgives_stream_cursor_value_input']: {
    circle_id?: number | undefined | null;
    epochs?: ValueTypes['bigint'] | undefined | null;
    pgive?: ValueTypes['numeric'] | undefined | null;
    user_id?: number | undefined | null;
  };
  /** member allocated pgives per epoch */
  ['member_epoch_pgives']: AliasType<{
    /** An object relationship */
    circle?: ValueTypes['circles'];
    circle_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    /** An object relationship */
    epoch?: ValueTypes['epochs'];
    epoch_id?: boolean | `@${string}`;
    gives_received?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    normalized_pgive?: boolean | `@${string}`;
    opt_out_bonus?: boolean | `@${string}`;
    /** An object relationship */
    organization?: ValueTypes['organizations'];
    organization_id?: boolean | `@${string}`;
    pgive?: boolean | `@${string}`;
    /** An object relationship */
    user?: ValueTypes['users'];
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregated selection of "member_epoch_pgives" */
  ['member_epoch_pgives_aggregate']: AliasType<{
    aggregate?: ValueTypes['member_epoch_pgives_aggregate_fields'];
    nodes?: ValueTypes['member_epoch_pgives'];
    __typename?: boolean | `@${string}`;
  }>;
  ['member_epoch_pgives_aggregate_bool_exp']: {
    count?:
      | ValueTypes['member_epoch_pgives_aggregate_bool_exp_count']
      | undefined
      | null;
  };
  ['member_epoch_pgives_aggregate_bool_exp_count']: {
    arguments?:
      | Array<ValueTypes['member_epoch_pgives_select_column']>
      | undefined
      | null;
    distinct?: boolean | undefined | null;
    filter?: ValueTypes['member_epoch_pgives_bool_exp'] | undefined | null;
    predicate: ValueTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "member_epoch_pgives" */
  ['member_epoch_pgives_aggregate_fields']: AliasType<{
    avg?: ValueTypes['member_epoch_pgives_avg_fields'];
    count?: [
      {
        columns?:
          | Array<ValueTypes['member_epoch_pgives_select_column']>
          | undefined
          | null;
        distinct?: boolean | undefined | null;
      },
      boolean | `@${string}`,
    ];
    max?: ValueTypes['member_epoch_pgives_max_fields'];
    min?: ValueTypes['member_epoch_pgives_min_fields'];
    stddev?: ValueTypes['member_epoch_pgives_stddev_fields'];
    stddev_pop?: ValueTypes['member_epoch_pgives_stddev_pop_fields'];
    stddev_samp?: ValueTypes['member_epoch_pgives_stddev_samp_fields'];
    sum?: ValueTypes['member_epoch_pgives_sum_fields'];
    var_pop?: ValueTypes['member_epoch_pgives_var_pop_fields'];
    var_samp?: ValueTypes['member_epoch_pgives_var_samp_fields'];
    variance?: ValueTypes['member_epoch_pgives_variance_fields'];
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "member_epoch_pgives" */
  ['member_epoch_pgives_aggregate_order_by']: {
    avg?: ValueTypes['member_epoch_pgives_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['member_epoch_pgives_max_order_by'] | undefined | null;
    min?: ValueTypes['member_epoch_pgives_min_order_by'] | undefined | null;
    stddev?:
      | ValueTypes['member_epoch_pgives_stddev_order_by']
      | undefined
      | null;
    stddev_pop?:
      | ValueTypes['member_epoch_pgives_stddev_pop_order_by']
      | undefined
      | null;
    stddev_samp?:
      | ValueTypes['member_epoch_pgives_stddev_samp_order_by']
      | undefined
      | null;
    sum?: ValueTypes['member_epoch_pgives_sum_order_by'] | undefined | null;
    var_pop?:
      | ValueTypes['member_epoch_pgives_var_pop_order_by']
      | undefined
      | null;
    var_samp?:
      | ValueTypes['member_epoch_pgives_var_samp_order_by']
      | undefined
      | null;
    variance?:
      | ValueTypes['member_epoch_pgives_variance_order_by']
      | undefined
      | null;
  };
  /** aggregate avg on columns */
  ['member_epoch_pgives_avg_fields']: AliasType<{
    circle_id?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    gives_received?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    normalized_pgive?: boolean | `@${string}`;
    opt_out_bonus?: boolean | `@${string}`;
    organization_id?: boolean | `@${string}`;
    pgive?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by avg() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_avg_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    gives_received?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    normalized_pgive?: ValueTypes['order_by'] | undefined | null;
    opt_out_bonus?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    pgive?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "member_epoch_pgives". All fields are combined with a logical 'AND'. */
  ['member_epoch_pgives_bool_exp']: {
    _and?: Array<ValueTypes['member_epoch_pgives_bool_exp']> | undefined | null;
    _not?: ValueTypes['member_epoch_pgives_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['member_epoch_pgives_bool_exp']> | undefined | null;
    circle?: ValueTypes['circles_bool_exp'] | undefined | null;
    circle_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    created_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    epoch?: ValueTypes['epochs_bool_exp'] | undefined | null;
    epoch_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    gives_received?: ValueTypes['Int_comparison_exp'] | undefined | null;
    id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    normalized_pgive?: ValueTypes['numeric_comparison_exp'] | undefined | null;
    opt_out_bonus?: ValueTypes['numeric_comparison_exp'] | undefined | null;
    organization?: ValueTypes['organizations_bool_exp'] | undefined | null;
    organization_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    pgive?: ValueTypes['numeric_comparison_exp'] | undefined | null;
    user?: ValueTypes['users_bool_exp'] | undefined | null;
    user_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
  };
  /** aggregate max on columns */
  ['member_epoch_pgives_max_fields']: AliasType<{
    circle_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    gives_received?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    normalized_pgive?: boolean | `@${string}`;
    opt_out_bonus?: boolean | `@${string}`;
    organization_id?: boolean | `@${string}`;
    pgive?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by max() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_max_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    gives_received?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    normalized_pgive?: ValueTypes['order_by'] | undefined | null;
    opt_out_bonus?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    pgive?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate min on columns */
  ['member_epoch_pgives_min_fields']: AliasType<{
    circle_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    gives_received?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    normalized_pgive?: boolean | `@${string}`;
    opt_out_bonus?: boolean | `@${string}`;
    organization_id?: boolean | `@${string}`;
    pgive?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by min() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_min_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    gives_received?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    normalized_pgive?: ValueTypes['order_by'] | undefined | null;
    opt_out_bonus?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    pgive?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Ordering options when selecting data from "member_epoch_pgives". */
  ['member_epoch_pgives_order_by']: {
    circle?: ValueTypes['circles_order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    epoch?: ValueTypes['epochs_order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    gives_received?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    normalized_pgive?: ValueTypes['order_by'] | undefined | null;
    opt_out_bonus?: ValueTypes['order_by'] | undefined | null;
    organization?: ValueTypes['organizations_order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    pgive?: ValueTypes['order_by'] | undefined | null;
    user?: ValueTypes['users_order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_select_column']: member_epoch_pgives_select_column;
  /** aggregate stddev on columns */
  ['member_epoch_pgives_stddev_fields']: AliasType<{
    circle_id?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    gives_received?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    normalized_pgive?: boolean | `@${string}`;
    opt_out_bonus?: boolean | `@${string}`;
    organization_id?: boolean | `@${string}`;
    pgive?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_stddev_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    gives_received?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    normalized_pgive?: ValueTypes['order_by'] | undefined | null;
    opt_out_bonus?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    pgive?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_pop on columns */
  ['member_epoch_pgives_stddev_pop_fields']: AliasType<{
    circle_id?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    gives_received?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    normalized_pgive?: boolean | `@${string}`;
    opt_out_bonus?: boolean | `@${string}`;
    organization_id?: boolean | `@${string}`;
    pgive?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_pop() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_stddev_pop_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    gives_received?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    normalized_pgive?: ValueTypes['order_by'] | undefined | null;
    opt_out_bonus?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    pgive?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_samp on columns */
  ['member_epoch_pgives_stddev_samp_fields']: AliasType<{
    circle_id?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    gives_received?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    normalized_pgive?: boolean | `@${string}`;
    opt_out_bonus?: boolean | `@${string}`;
    organization_id?: boolean | `@${string}`;
    pgive?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_samp() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_stddev_samp_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    gives_received?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    normalized_pgive?: ValueTypes['order_by'] | undefined | null;
    opt_out_bonus?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    pgive?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "member_epoch_pgives" */
  ['member_epoch_pgives_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['member_epoch_pgives_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['member_epoch_pgives_stream_cursor_value_input']: {
    circle_id?: number | undefined | null;
    created_at?: ValueTypes['timestamptz'] | undefined | null;
    epoch_id?: number | undefined | null;
    gives_received?: number | undefined | null;
    id?: number | undefined | null;
    normalized_pgive?: ValueTypes['numeric'] | undefined | null;
    opt_out_bonus?: ValueTypes['numeric'] | undefined | null;
    organization_id?: number | undefined | null;
    pgive?: ValueTypes['numeric'] | undefined | null;
    user_id?: number | undefined | null;
  };
  /** aggregate sum on columns */
  ['member_epoch_pgives_sum_fields']: AliasType<{
    circle_id?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    gives_received?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    normalized_pgive?: boolean | `@${string}`;
    opt_out_bonus?: boolean | `@${string}`;
    organization_id?: boolean | `@${string}`;
    pgive?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by sum() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_sum_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    gives_received?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    normalized_pgive?: ValueTypes['order_by'] | undefined | null;
    opt_out_bonus?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    pgive?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate var_pop on columns */
  ['member_epoch_pgives_var_pop_fields']: AliasType<{
    circle_id?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    gives_received?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    normalized_pgive?: boolean | `@${string}`;
    opt_out_bonus?: boolean | `@${string}`;
    organization_id?: boolean | `@${string}`;
    pgive?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_pop() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_var_pop_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    gives_received?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    normalized_pgive?: ValueTypes['order_by'] | undefined | null;
    opt_out_bonus?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    pgive?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate var_samp on columns */
  ['member_epoch_pgives_var_samp_fields']: AliasType<{
    circle_id?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    gives_received?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    normalized_pgive?: boolean | `@${string}`;
    opt_out_bonus?: boolean | `@${string}`;
    organization_id?: boolean | `@${string}`;
    pgive?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_samp() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_var_samp_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    gives_received?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    normalized_pgive?: ValueTypes['order_by'] | undefined | null;
    opt_out_bonus?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    pgive?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate variance on columns */
  ['member_epoch_pgives_variance_fields']: AliasType<{
    circle_id?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    gives_received?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    normalized_pgive?: boolean | `@${string}`;
    opt_out_bonus?: boolean | `@${string}`;
    organization_id?: boolean | `@${string}`;
    pgive?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by variance() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_variance_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    gives_received?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    normalized_pgive?: ValueTypes['order_by'] | undefined | null;
    opt_out_bonus?: ValueTypes['order_by'] | undefined | null;
    organization_id?: ValueTypes['order_by'] | undefined | null;
    pgive?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** mutation root */
  ['mutation_root']: AliasType<{
    /** Accept Terms of Service action */
    acceptTOS?: ValueTypes['AcceptTOSOutput'];
    addEmail?: [
      { payload: ValueTypes['AddEmailInput'] },
      ValueTypes['ConfirmationResponse'],
    ];
    /** adds a farcaster account to a users profile */
    addFarcaster?: ValueTypes['ConfirmationWithErrorResponse'];
    adminUpdateUser?: [
      { payload: ValueTypes['AdminUpdateUserInput'] },
      ValueTypes['UserResponse'],
    ];
    allocationCsv?: [
      { payload: ValueTypes['AllocationCsvInput'] },
      ValueTypes['AllocationCsvResponse'],
    ];
    createCircle?: [
      { payload: ValueTypes['CreateCircleInput'] },
      ValueTypes['CreateCircleResponse'],
    ];
    createCoLinksGive?: [
      { payload: ValueTypes['CreateCoLinksGiveInput'] },
      ValueTypes['CreateCoLinksGiveResponse'],
    ];
    createEpoch?: [
      { payload: ValueTypes['CreateEpochInput'] },
      ValueTypes['EpochResponse'],
    ];
    createNominee?: [
      { payload: ValueTypes['CreateNomineeInput'] },
      ValueTypes['CreateNomineeResponse'],
    ];
    createOrgMembers?: [
      { payload: ValueTypes['CreateOrgMembersInput'] },
      ValueTypes['OrgMemberResponse'],
    ];
    createSampleCircle?: ValueTypes['CreateSampleCircleResponse'];
    createUserWithToken?: [
      { payload: ValueTypes['CreateUserWithTokenInput'] },
      ValueTypes['UserResponse'],
    ];
    createUsers?: [
      { payload: ValueTypes['CreateUsersInput'] },
      ValueTypes['UserResponse'],
    ];
    createVault?: [
      { payload: ValueTypes['CreateVaultInput'] },
      ValueTypes['VaultResponse'],
    ];
    createVaultTx?: [
      { payload: ValueTypes['LogVaultTxInput'] },
      ValueTypes['LogVaultTxResponse'],
    ];
    deleteCircle?: [
      { payload: ValueTypes['DeleteCircleInput'] },
      ValueTypes['ConfirmationResponse'],
    ];
    deleteCoLinksGive?: [
      { payload: ValueTypes['DeleteCoLinksGiveInput'] },
      ValueTypes['SuccessResponse'],
    ];
    deleteContribution?: [
      { payload: ValueTypes['DeleteContributionInput'] },
      ValueTypes['ConfirmationResponse'],
    ];
    deleteEmail?: [
      { payload: ValueTypes['DeleteEmailInput'] },
      ValueTypes['ConfirmationResponse'],
    ];
    deleteEpoch?: [
      { payload: ValueTypes['DeleteEpochInput'] },
      ValueTypes['DeleteEpochResponse'],
    ];
    deleteOrgMember?: [
      { payload: ValueTypes['IdInput'] },
      ValueTypes['ConfirmationResponse'],
    ];
    deleteUser?: [
      { payload: ValueTypes['DeleteUserInput'] },
      ValueTypes['ConfirmationResponse'],
    ];
    deleteUsers?: [
      { payload: ValueTypes['DeleteUsersInput'] },
      ValueTypes['DeleteUsersResponse'],
    ];
    delete_circle_api_keys?: [
      {
        /** filter the rows which have to be deleted */
        where: ValueTypes['circle_api_keys_bool_exp'];
      },
      ValueTypes['circle_api_keys_mutation_response'],
    ];
    delete_circle_api_keys_by_pk?: [
      { hash: string },
      ValueTypes['circle_api_keys'],
    ];
    delete_circle_integrations?: [
      {
        /** filter the rows which have to be deleted */
        where: ValueTypes['circle_integrations_bool_exp'];
      },
      ValueTypes['circle_integrations_mutation_response'],
    ];
    delete_circle_integrations_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['circle_integrations'],
    ];
    delete_circle_share_tokens?: [
      {
        /** filter the rows which have to be deleted */
        where: ValueTypes['circle_share_tokens_bool_exp'];
      },
      ValueTypes['circle_share_tokens_mutation_response'],
    ];
    delete_circle_share_tokens_by_pk?: [
      { circle_id: ValueTypes['bigint']; type: number },
      ValueTypes['circle_share_tokens'],
    ];
    delete_farcaster_accounts?: [
      {
        /** filter the rows which have to be deleted */
        where: ValueTypes['farcaster_accounts_bool_exp'];
      },
      ValueTypes['farcaster_accounts_mutation_response'],
    ];
    delete_farcaster_accounts_by_pk?: [
      { profile_id: ValueTypes['bigint'] },
      ValueTypes['farcaster_accounts'],
    ];
    delete_github_accounts?: [
      {
        /** filter the rows which have to be deleted */
        where: ValueTypes['github_accounts_bool_exp'];
      },
      ValueTypes['github_accounts_mutation_response'],
    ];
    delete_github_accounts_by_pk?: [
      { profile_id: ValueTypes['bigint'] },
      ValueTypes['github_accounts'],
    ];
    delete_linkedin_accounts?: [
      {
        /** filter the rows which have to be deleted */
        where: ValueTypes['linkedin_accounts_bool_exp'];
      },
      ValueTypes['linkedin_accounts_mutation_response'],
    ];
    delete_linkedin_accounts_by_pk?: [
      { profile_id: ValueTypes['bigint'] },
      ValueTypes['linkedin_accounts'],
    ];
    delete_mutes?: [
      {
        /** filter the rows which have to be deleted */
        where: ValueTypes['mutes_bool_exp'];
      },
      ValueTypes['mutes_mutation_response'],
    ];
    delete_mutes_by_pk?: [
      {
        profile_id: ValueTypes['bigint'];
        target_profile_id: ValueTypes['bigint'];
      },
      ValueTypes['mutes'],
    ];
    delete_org_share_tokens?: [
      {
        /** filter the rows which have to be deleted */
        where: ValueTypes['org_share_tokens_bool_exp'];
      },
      ValueTypes['org_share_tokens_mutation_response'],
    ];
    delete_org_share_tokens_by_pk?: [
      { org_id: ValueTypes['bigint']; type: number },
      ValueTypes['org_share_tokens'],
    ];
    delete_pending_vault_transactions?: [
      {
        /** filter the rows which have to be deleted */
        where: ValueTypes['pending_vault_transactions_bool_exp'];
      },
      ValueTypes['pending_vault_transactions_mutation_response'],
    ];
    delete_pending_vault_transactions_by_pk?: [
      { tx_hash: string },
      ValueTypes['pending_vault_transactions'],
    ];
    delete_profile_skills?: [
      {
        /** filter the rows which have to be deleted */
        where: ValueTypes['profile_skills_bool_exp'];
      },
      ValueTypes['profile_skills_mutation_response'],
    ];
    delete_profile_skills_by_pk?: [
      { profile_id: number; skill_name: ValueTypes['citext'] },
      ValueTypes['profile_skills'],
    ];
    delete_reactions?: [
      {
        /** filter the rows which have to be deleted */
        where: ValueTypes['reactions_bool_exp'];
      },
      ValueTypes['reactions_mutation_response'],
    ];
    delete_reactions_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['reactions'],
    ];
    delete_replies_reactions?: [
      {
        /** filter the rows which have to be deleted */
        where: ValueTypes['replies_reactions_bool_exp'];
      },
      ValueTypes['replies_reactions_mutation_response'],
    ];
    delete_replies_reactions_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['replies_reactions'],
    ];
    delete_twitter_accounts?: [
      {
        /** filter the rows which have to be deleted */
        where: ValueTypes['twitter_accounts_bool_exp'];
      },
      ValueTypes['twitter_accounts_mutation_response'],
    ];
    delete_twitter_accounts_by_pk?: [
      { profile_id: number },
      ValueTypes['twitter_accounts'],
    ];
    endEpoch?: [
      { payload: ValueTypes['EndEpochInput'] },
      ValueTypes['EpochResponse'],
    ];
    generateApiKey?: [
      { payload: ValueTypes['GenerateApiKeyInput'] },
      ValueTypes['GenerateApiKeyResponse'],
    ];
    generateOneTimeUpload?: ValueTypes['UploadUrlResponse'];
    giveCsv?: [
      { payload: ValueTypes['GiveCsvInput'] },
      ValueTypes['GiveCsvResponse'],
    ];
    insert_circle_integrations?: [
      {
        /** the rows to be inserted */
        objects: Array<
          ValueTypes['circle_integrations_insert_input']
        > /** upsert condition */;
        on_conflict?:
          | ValueTypes['circle_integrations_on_conflict']
          | undefined
          | null;
      },
      ValueTypes['circle_integrations_mutation_response'],
    ];
    insert_circle_integrations_one?: [
      {
        /** the row to be inserted */
        object: ValueTypes['circle_integrations_insert_input'] /** upsert condition */;
        on_conflict?:
          | ValueTypes['circle_integrations_on_conflict']
          | undefined
          | null;
      },
      ValueTypes['circle_integrations'],
    ];
    insert_circle_share_tokens?: [
      {
        /** the rows to be inserted */
        objects: Array<
          ValueTypes['circle_share_tokens_insert_input']
        > /** upsert condition */;
        on_conflict?:
          | ValueTypes['circle_share_tokens_on_conflict']
          | undefined
          | null;
      },
      ValueTypes['circle_share_tokens_mutation_response'],
    ];
    insert_circle_share_tokens_one?: [
      {
        /** the row to be inserted */
        object: ValueTypes['circle_share_tokens_insert_input'] /** upsert condition */;
        on_conflict?:
          | ValueTypes['circle_share_tokens_on_conflict']
          | undefined
          | null;
      },
      ValueTypes['circle_share_tokens'],
    ];
    insert_claims?: [
      {
        /** the rows to be inserted */
        objects: Array<
          ValueTypes['claims_insert_input']
        > /** upsert condition */;
        on_conflict?: ValueTypes['claims_on_conflict'] | undefined | null;
      },
      ValueTypes['claims_mutation_response'],
    ];
    insert_claims_one?: [
      {
        /** the row to be inserted */
        object: ValueTypes['claims_insert_input'] /** upsert condition */;
        on_conflict?: ValueTypes['claims_on_conflict'] | undefined | null;
      },
      ValueTypes['claims'],
    ];
    insert_contributions?: [
      {
        /** the rows to be inserted */
        objects: Array<
          ValueTypes['contributions_insert_input']
        > /** upsert condition */;
        on_conflict?:
          | ValueTypes['contributions_on_conflict']
          | undefined
          | null;
      },
      ValueTypes['contributions_mutation_response'],
    ];
    insert_contributions_one?: [
      {
        /** the row to be inserted */
        object: ValueTypes['contributions_insert_input'] /** upsert condition */;
        on_conflict?:
          | ValueTypes['contributions_on_conflict']
          | undefined
          | null;
      },
      ValueTypes['contributions'],
    ];
    insert_distributions?: [
      {
        /** the rows to be inserted */
        objects: Array<
          ValueTypes['distributions_insert_input']
        > /** upsert condition */;
        on_conflict?:
          | ValueTypes['distributions_on_conflict']
          | undefined
          | null;
      },
      ValueTypes['distributions_mutation_response'],
    ];
    insert_distributions_one?: [
      {
        /** the row to be inserted */
        object: ValueTypes['distributions_insert_input'] /** upsert condition */;
        on_conflict?:
          | ValueTypes['distributions_on_conflict']
          | undefined
          | null;
      },
      ValueTypes['distributions'],
    ];
    insert_locked_token_distribution_gifts?: [
      {
        /** the rows to be inserted */
        objects: Array<
          ValueTypes['locked_token_distribution_gifts_insert_input']
        > /** upsert condition */;
        on_conflict?:
          | ValueTypes['locked_token_distribution_gifts_on_conflict']
          | undefined
          | null;
      },
      ValueTypes['locked_token_distribution_gifts_mutation_response'],
    ];
    insert_locked_token_distribution_gifts_one?: [
      {
        /** the row to be inserted */
        object: ValueTypes['locked_token_distribution_gifts_insert_input'] /** upsert condition */;
        on_conflict?:
          | ValueTypes['locked_token_distribution_gifts_on_conflict']
          | undefined
          | null;
      },
      ValueTypes['locked_token_distribution_gifts'],
    ];
    insert_locked_token_distributions?: [
      {
        /** the rows to be inserted */
        objects: Array<
          ValueTypes['locked_token_distributions_insert_input']
        > /** upsert condition */;
        on_conflict?:
          | ValueTypes['locked_token_distributions_on_conflict']
          | undefined
          | null;
      },
      ValueTypes['locked_token_distributions_mutation_response'],
    ];
    insert_locked_token_distributions_one?: [
      {
        /** the row to be inserted */
        object: ValueTypes['locked_token_distributions_insert_input'] /** upsert condition */;
        on_conflict?:
          | ValueTypes['locked_token_distributions_on_conflict']
          | undefined
          | null;
      },
      ValueTypes['locked_token_distributions'],
    ];
    insert_mutes?: [
      {
        /** the rows to be inserted */
        objects: Array<
          ValueTypes['mutes_insert_input']
        > /** upsert condition */;
        on_conflict?: ValueTypes['mutes_on_conflict'] | undefined | null;
      },
      ValueTypes['mutes_mutation_response'],
    ];
    insert_mutes_one?: [
      {
        /** the row to be inserted */
        object: ValueTypes['mutes_insert_input'] /** upsert condition */;
        on_conflict?: ValueTypes['mutes_on_conflict'] | undefined | null;
      },
      ValueTypes['mutes'],
    ];
    insert_org_share_tokens?: [
      {
        /** the rows to be inserted */
        objects: Array<
          ValueTypes['org_share_tokens_insert_input']
        > /** upsert condition */;
        on_conflict?:
          | ValueTypes['org_share_tokens_on_conflict']
          | undefined
          | null;
      },
      ValueTypes['org_share_tokens_mutation_response'],
    ];
    insert_org_share_tokens_one?: [
      {
        /** the row to be inserted */
        object: ValueTypes['org_share_tokens_insert_input'] /** upsert condition */;
        on_conflict?:
          | ValueTypes['org_share_tokens_on_conflict']
          | undefined
          | null;
      },
      ValueTypes['org_share_tokens'],
    ];
    insert_pending_vault_transactions?: [
      {
        /** the rows to be inserted */
        objects: Array<
          ValueTypes['pending_vault_transactions_insert_input']
        > /** upsert condition */;
        on_conflict?:
          | ValueTypes['pending_vault_transactions_on_conflict']
          | undefined
          | null;
      },
      ValueTypes['pending_vault_transactions_mutation_response'],
    ];
    insert_pending_vault_transactions_one?: [
      {
        /** the row to be inserted */
        object: ValueTypes['pending_vault_transactions_insert_input'] /** upsert condition */;
        on_conflict?:
          | ValueTypes['pending_vault_transactions_on_conflict']
          | undefined
          | null;
      },
      ValueTypes['pending_vault_transactions'],
    ];
    insert_profile_skills?: [
      {
        /** the rows to be inserted */
        objects: Array<
          ValueTypes['profile_skills_insert_input']
        > /** upsert condition */;
        on_conflict?:
          | ValueTypes['profile_skills_on_conflict']
          | undefined
          | null;
      },
      ValueTypes['profile_skills_mutation_response'],
    ];
    insert_profile_skills_one?: [
      {
        /** the row to be inserted */
        object: ValueTypes['profile_skills_insert_input'] /** upsert condition */;
        on_conflict?:
          | ValueTypes['profile_skills_on_conflict']
          | undefined
          | null;
      },
      ValueTypes['profile_skills'],
    ];
    insert_reactions?: [
      {
        /** the rows to be inserted */
        objects: Array<
          ValueTypes['reactions_insert_input']
        > /** upsert condition */;
        on_conflict?: ValueTypes['reactions_on_conflict'] | undefined | null;
      },
      ValueTypes['reactions_mutation_response'],
    ];
    insert_reactions_one?: [
      {
        /** the row to be inserted */
        object: ValueTypes['reactions_insert_input'] /** upsert condition */;
        on_conflict?: ValueTypes['reactions_on_conflict'] | undefined | null;
      },
      ValueTypes['reactions'],
    ];
    insert_replies?: [
      {
        /** the rows to be inserted */
        objects: Array<
          ValueTypes['replies_insert_input']
        > /** upsert condition */;
        on_conflict?: ValueTypes['replies_on_conflict'] | undefined | null;
      },
      ValueTypes['replies_mutation_response'],
    ];
    insert_replies_one?: [
      {
        /** the row to be inserted */
        object: ValueTypes['replies_insert_input'] /** upsert condition */;
        on_conflict?: ValueTypes['replies_on_conflict'] | undefined | null;
      },
      ValueTypes['replies'],
    ];
    insert_replies_reactions?: [
      {
        /** the rows to be inserted */
        objects: Array<
          ValueTypes['replies_reactions_insert_input']
        > /** upsert condition */;
        on_conflict?:
          | ValueTypes['replies_reactions_on_conflict']
          | undefined
          | null;
      },
      ValueTypes['replies_reactions_mutation_response'],
    ];
    insert_replies_reactions_one?: [
      {
        /** the row to be inserted */
        object: ValueTypes['replies_reactions_insert_input'] /** upsert condition */;
        on_conflict?:
          | ValueTypes['replies_reactions_on_conflict']
          | undefined
          | null;
      },
      ValueTypes['replies_reactions'],
    ];
    insert_skills?: [
      {
        /** the rows to be inserted */
        objects: Array<
          ValueTypes['skills_insert_input']
        > /** upsert condition */;
        on_conflict?: ValueTypes['skills_on_conflict'] | undefined | null;
      },
      ValueTypes['skills_mutation_response'],
    ];
    insert_skills_one?: [
      {
        /** the row to be inserted */
        object: ValueTypes['skills_insert_input'] /** upsert condition */;
        on_conflict?: ValueTypes['skills_on_conflict'] | undefined | null;
      },
      ValueTypes['skills'],
    ];
    logoutUser?: ValueTypes['LogoutResponse'];
    markClaimed?: [
      { payload: ValueTypes['MarkClaimedInput'] },
      ValueTypes['MarkClaimedOutput'],
    ];
    redeemInviteCode?: [
      { payload: ValueTypes['RedeemInviteCodeInput'] },
      ValueTypes['ConfirmationWithErrorResponse'],
    ];
    requestInviteCode?: [
      { payload: ValueTypes['RequestInviteCodeInput'] },
      ValueTypes['ConfirmationWithErrorResponse'],
    ];
    restoreCoordinape?: [
      { payload: ValueTypes['CoordinapeInput'] },
      ValueTypes['ConfirmationResponse'],
    ];
    setPrimaryEmail?: [
      { payload: ValueTypes['SetPrimaryEmailInput'] },
      ValueTypes['ConfirmationResponse'],
    ];
    share?: [{ payload: ValueTypes['ShareInput'] }, ValueTypes['ShareOutput']];
    syncCoSoul?: [
      { payload: ValueTypes['SyncCoSoulInput'] },
      ValueTypes['SyncCoSoulOutput'],
    ];
    /** syncLinks */
    syncLinks?: ValueTypes['ConfirmationResponse'];
    updateAllocations?: [
      { payload: ValueTypes['Allocations'] },
      ValueTypes['AllocationsResponse'],
    ];
    updateCircle?: [
      { payload: ValueTypes['UpdateCircleInput'] },
      ValueTypes['UpdateCircleOutput'],
    ];
    updateCircleStartingGive?: [
      { payload: ValueTypes['UpdateCircleStartingGiveInput'] },
      ValueTypes['ConfirmationResponse'],
    ];
    updateContribution?: [
      { payload: ValueTypes['UpdateContributionInput'] },
      ValueTypes['UpdateContributionResponse'],
    ];
    updateEpoch?: [
      { payload: ValueTypes['UpdateEpochInput'] },
      ValueTypes['EpochResponse'],
    ];
    updateProfile?: [
      { payload: ValueTypes['UpdateProfileInput'] },
      ValueTypes['UpdateProfileResponse'],
    ];
    /** updateRepScore */
    updateRepScore?: ValueTypes['ConfirmationResponse'];
    updateTeammates?: [
      { payload: ValueTypes['UpdateTeammatesInput'] },
      ValueTypes['UpdateTeammatesResponse'],
    ];
    updateUser?: [
      { payload: ValueTypes['UpdateUserInput'] },
      ValueTypes['UserResponse'],
    ];
    update_circle_integrations?: [
      {
        /** sets the columns of the filtered rows to the given values */
        _set?:
          | ValueTypes['circle_integrations_set_input']
          | undefined
          | null /** filter the rows which have to be updated */;
        where: ValueTypes['circle_integrations_bool_exp'];
      },
      ValueTypes['circle_integrations_mutation_response'],
    ];
    update_circle_integrations_by_pk?: [
      {
        /** sets the columns of the filtered rows to the given values */
        _set?: ValueTypes['circle_integrations_set_input'] | undefined | null;
        pk_columns: ValueTypes['circle_integrations_pk_columns_input'];
      },
      ValueTypes['circle_integrations'],
    ];
    update_circle_integrations_many?: [
      {
        /** updates to execute, in order */
        updates: Array<ValueTypes['circle_integrations_updates']>;
      },
      ValueTypes['circle_integrations_mutation_response'],
    ];
    update_claims?: [
      {
        /** sets the columns of the filtered rows to the given values */
        _set?:
          | ValueTypes['claims_set_input']
          | undefined
          | null /** filter the rows which have to be updated */;
        where: ValueTypes['claims_bool_exp'];
      },
      ValueTypes['claims_mutation_response'],
    ];
    update_claims_by_pk?: [
      {
        /** sets the columns of the filtered rows to the given values */
        _set?: ValueTypes['claims_set_input'] | undefined | null;
        pk_columns: ValueTypes['claims_pk_columns_input'];
      },
      ValueTypes['claims'],
    ];
    update_claims_many?: [
      {
        /** updates to execute, in order */
        updates: Array<ValueTypes['claims_updates']>;
      },
      ValueTypes['claims_mutation_response'],
    ];
    update_colinks_gives?: [
      {
        /** sets the columns of the filtered rows to the given values */
        _set?:
          | ValueTypes['colinks_gives_set_input']
          | undefined
          | null /** filter the rows which have to be updated */;
        where: ValueTypes['colinks_gives_bool_exp'];
      },
      ValueTypes['colinks_gives_mutation_response'],
    ];
    update_colinks_gives_by_pk?: [
      {
        /** sets the columns of the filtered rows to the given values */
        _set?: ValueTypes['colinks_gives_set_input'] | undefined | null;
        pk_columns: ValueTypes['colinks_gives_pk_columns_input'];
      },
      ValueTypes['colinks_gives'],
    ];
    update_colinks_gives_many?: [
      {
        /** updates to execute, in order */
        updates: Array<ValueTypes['colinks_gives_updates']>;
      },
      ValueTypes['colinks_gives_mutation_response'],
    ];
    update_distributions?: [
      {
        /** increments the numeric columns with given value of the filtered values */
        _inc?:
          | ValueTypes['distributions_inc_input']
          | undefined
          | null /** sets the columns of the filtered rows to the given values */;
        _set?:
          | ValueTypes['distributions_set_input']
          | undefined
          | null /** filter the rows which have to be updated */;
        where: ValueTypes['distributions_bool_exp'];
      },
      ValueTypes['distributions_mutation_response'],
    ];
    update_distributions_by_pk?: [
      {
        /** increments the numeric columns with given value of the filtered values */
        _inc?:
          | ValueTypes['distributions_inc_input']
          | undefined
          | null /** sets the columns of the filtered rows to the given values */;
        _set?: ValueTypes['distributions_set_input'] | undefined | null;
        pk_columns: ValueTypes['distributions_pk_columns_input'];
      },
      ValueTypes['distributions'],
    ];
    update_distributions_many?: [
      {
        /** updates to execute, in order */
        updates: Array<ValueTypes['distributions_updates']>;
      },
      ValueTypes['distributions_mutation_response'],
    ];
    update_epochs?: [
      {
        /** sets the columns of the filtered rows to the given values */
        _set?:
          | ValueTypes['epochs_set_input']
          | undefined
          | null /** filter the rows which have to be updated */;
        where: ValueTypes['epochs_bool_exp'];
      },
      ValueTypes['epochs_mutation_response'],
    ];
    update_epochs_by_pk?: [
      {
        /** sets the columns of the filtered rows to the given values */
        _set?: ValueTypes['epochs_set_input'] | undefined | null;
        pk_columns: ValueTypes['epochs_pk_columns_input'];
      },
      ValueTypes['epochs'],
    ];
    update_epochs_many?: [
      {
        /** updates to execute, in order */
        updates: Array<ValueTypes['epochs_updates']>;
      },
      ValueTypes['epochs_mutation_response'],
    ];
    update_locked_token_distributions?: [
      {
        /** sets the columns of the filtered rows to the given values */
        _set?:
          | ValueTypes['locked_token_distributions_set_input']
          | undefined
          | null /** filter the rows which have to be updated */;
        where: ValueTypes['locked_token_distributions_bool_exp'];
      },
      ValueTypes['locked_token_distributions_mutation_response'],
    ];
    update_locked_token_distributions_by_pk?: [
      {
        /** sets the columns of the filtered rows to the given values */
        _set?:
          | ValueTypes['locked_token_distributions_set_input']
          | undefined
          | null;
        pk_columns: ValueTypes['locked_token_distributions_pk_columns_input'];
      },
      ValueTypes['locked_token_distributions'],
    ];
    update_locked_token_distributions_many?: [
      {
        /** updates to execute, in order */
        updates: Array<ValueTypes['locked_token_distributions_updates']>;
      },
      ValueTypes['locked_token_distributions_mutation_response'],
    ];
    update_org_members?: [
      {
        /** sets the columns of the filtered rows to the given values */
        _set?:
          | ValueTypes['org_members_set_input']
          | undefined
          | null /** filter the rows which have to be updated */;
        where: ValueTypes['org_members_bool_exp'];
      },
      ValueTypes['org_members_mutation_response'],
    ];
    update_org_members_by_pk?: [
      {
        /** sets the columns of the filtered rows to the given values */
        _set?: ValueTypes['org_members_set_input'] | undefined | null;
        pk_columns: ValueTypes['org_members_pk_columns_input'];
      },
      ValueTypes['org_members'],
    ];
    update_org_members_many?: [
      {
        /** updates to execute, in order */
        updates: Array<ValueTypes['org_members_updates']>;
      },
      ValueTypes['org_members_mutation_response'],
    ];
    update_organizations?: [
      {
        /** increments the numeric columns with given value of the filtered values */
        _inc?:
          | ValueTypes['organizations_inc_input']
          | undefined
          | null /** sets the columns of the filtered rows to the given values */;
        _set?:
          | ValueTypes['organizations_set_input']
          | undefined
          | null /** filter the rows which have to be updated */;
        where: ValueTypes['organizations_bool_exp'];
      },
      ValueTypes['organizations_mutation_response'],
    ];
    update_organizations_by_pk?: [
      {
        /** increments the numeric columns with given value of the filtered values */
        _inc?:
          | ValueTypes['organizations_inc_input']
          | undefined
          | null /** sets the columns of the filtered rows to the given values */;
        _set?: ValueTypes['organizations_set_input'] | undefined | null;
        pk_columns: ValueTypes['organizations_pk_columns_input'];
      },
      ValueTypes['organizations'],
    ];
    update_organizations_many?: [
      {
        /** updates to execute, in order */
        updates: Array<ValueTypes['organizations_updates']>;
      },
      ValueTypes['organizations_mutation_response'],
    ];
    update_profiles?: [
      {
        /** increments the numeric columns with given value of the filtered values */
        _inc?:
          | ValueTypes['profiles_inc_input']
          | undefined
          | null /** sets the columns of the filtered rows to the given values */;
        _set?:
          | ValueTypes['profiles_set_input']
          | undefined
          | null /** filter the rows which have to be updated */;
        where: ValueTypes['profiles_bool_exp'];
      },
      ValueTypes['profiles_mutation_response'],
    ];
    update_profiles_by_pk?: [
      {
        /** increments the numeric columns with given value of the filtered values */
        _inc?:
          | ValueTypes['profiles_inc_input']
          | undefined
          | null /** sets the columns of the filtered rows to the given values */;
        _set?: ValueTypes['profiles_set_input'] | undefined | null;
        pk_columns: ValueTypes['profiles_pk_columns_input'];
      },
      ValueTypes['profiles'],
    ];
    update_profiles_many?: [
      {
        /** updates to execute, in order */
        updates: Array<ValueTypes['profiles_updates']>;
      },
      ValueTypes['profiles_mutation_response'],
    ];
    update_profiles_private?: [
      {
        /** sets the columns of the filtered rows to the given values */
        _set?:
          | ValueTypes['profiles_private_set_input']
          | undefined
          | null /** filter the rows which have to be updated */;
        where: ValueTypes['profiles_private_bool_exp'];
      },
      ValueTypes['profiles_private_mutation_response'],
    ];
    update_profiles_private_many?: [
      {
        /** updates to execute, in order */
        updates: Array<ValueTypes['profiles_private_updates']>;
      },
      ValueTypes['profiles_private_mutation_response'],
    ];
    update_replies?: [
      {
        /** sets the columns of the filtered rows to the given values */
        _set?:
          | ValueTypes['replies_set_input']
          | undefined
          | null /** filter the rows which have to be updated */;
        where: ValueTypes['replies_bool_exp'];
      },
      ValueTypes['replies_mutation_response'],
    ];
    update_replies_by_pk?: [
      {
        /** sets the columns of the filtered rows to the given values */
        _set?: ValueTypes['replies_set_input'] | undefined | null;
        pk_columns: ValueTypes['replies_pk_columns_input'];
      },
      ValueTypes['replies'],
    ];
    update_replies_many?: [
      {
        /** updates to execute, in order */
        updates: Array<ValueTypes['replies_updates']>;
      },
      ValueTypes['replies_mutation_response'],
    ];
    uploadCircleLogo?: [
      { payload: ValueTypes['UploadCircleImageInput'] },
      ValueTypes['UpdateCircleResponse'],
    ];
    uploadOrgLogo?: [
      { payload: ValueTypes['UploadOrgImageInput'] },
      ValueTypes['UpdateOrgResponse'],
    ];
    uploadProfileAvatar?: [
      { payload: ValueTypes['UploadImageInput'] },
      ValueTypes['UpdateProfileResponse'],
    ];
    uploadProfileBackground?: [
      { payload: ValueTypes['UploadImageInput'] },
      ValueTypes['UpdateProfileResponse'],
    ];
    vouch?: [{ payload: ValueTypes['VouchInput'] }, ValueTypes['VouchOutput']];
    __typename?: boolean | `@${string}`;
  }>;
  /** Table of one profile muting another profile */
  ['mutes']: AliasType<{
    created_at?: boolean | `@${string}`;
    /** An object relationship */
    profile?: ValueTypes['profiles_public'];
    profile_id?: boolean | `@${string}`;
    /** An object relationship */
    target_profile?: ValueTypes['profiles_public'];
    target_profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "mutes" */
  ['mutes_aggregate_order_by']: {
    avg?: ValueTypes['mutes_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['mutes_max_order_by'] | undefined | null;
    min?: ValueTypes['mutes_min_order_by'] | undefined | null;
    stddev?: ValueTypes['mutes_stddev_order_by'] | undefined | null;
    stddev_pop?: ValueTypes['mutes_stddev_pop_order_by'] | undefined | null;
    stddev_samp?: ValueTypes['mutes_stddev_samp_order_by'] | undefined | null;
    sum?: ValueTypes['mutes_sum_order_by'] | undefined | null;
    var_pop?: ValueTypes['mutes_var_pop_order_by'] | undefined | null;
    var_samp?: ValueTypes['mutes_var_samp_order_by'] | undefined | null;
    variance?: ValueTypes['mutes_variance_order_by'] | undefined | null;
  };
  /** order by avg() on columns of table "mutes" */
  ['mutes_avg_order_by']: {
    profile_id?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "mutes". All fields are combined with a logical 'AND'. */
  ['mutes_bool_exp']: {
    _and?: Array<ValueTypes['mutes_bool_exp']> | undefined | null;
    _not?: ValueTypes['mutes_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['mutes_bool_exp']> | undefined | null;
    created_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    profile?: ValueTypes['profiles_public_bool_exp'] | undefined | null;
    profile_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    target_profile?: ValueTypes['profiles_public_bool_exp'] | undefined | null;
    target_profile_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
  };
  /** unique or primary key constraints on table "mutes" */
  ['mutes_constraint']: mutes_constraint;
  /** input type for inserting data into table "mutes" */
  ['mutes_insert_input']: {
    profile_id?: ValueTypes['bigint'] | undefined | null;
    target_profile_id?: ValueTypes['bigint'] | undefined | null;
  };
  /** order by max() on columns of table "mutes" */
  ['mutes_max_order_by']: {
    created_at?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by min() on columns of table "mutes" */
  ['mutes_min_order_by']: {
    created_at?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** response of any mutation on the table "mutes" */
  ['mutes_mutation_response']: AliasType<{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | `@${string}`;
    /** data from the rows affected by the mutation */
    returning?: ValueTypes['mutes'];
    __typename?: boolean | `@${string}`;
  }>;
  /** on_conflict condition type for table "mutes" */
  ['mutes_on_conflict']: {
    constraint: ValueTypes['mutes_constraint'];
    update_columns: Array<ValueTypes['mutes_update_column']>;
    where?: ValueTypes['mutes_bool_exp'] | undefined | null;
  };
  /** Ordering options when selecting data from "mutes". */
  ['mutes_order_by']: {
    created_at?: ValueTypes['order_by'] | undefined | null;
    profile?: ValueTypes['profiles_public_order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    target_profile?: ValueTypes['profiles_public_order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "mutes" */
  ['mutes_select_column']: mutes_select_column;
  /** order by stddev() on columns of table "mutes" */
  ['mutes_stddev_order_by']: {
    profile_id?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_pop() on columns of table "mutes" */
  ['mutes_stddev_pop_order_by']: {
    profile_id?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_samp() on columns of table "mutes" */
  ['mutes_stddev_samp_order_by']: {
    profile_id?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "mutes" */
  ['mutes_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['mutes_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['mutes_stream_cursor_value_input']: {
    created_at?: ValueTypes['timestamptz'] | undefined | null;
    profile_id?: ValueTypes['bigint'] | undefined | null;
    target_profile_id?: ValueTypes['bigint'] | undefined | null;
  };
  /** order by sum() on columns of table "mutes" */
  ['mutes_sum_order_by']: {
    profile_id?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** placeholder for update columns of table "mutes" (current role has no relevant permissions) */
  ['mutes_update_column']: mutes_update_column;
  /** order by var_pop() on columns of table "mutes" */
  ['mutes_var_pop_order_by']: {
    profile_id?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by var_samp() on columns of table "mutes" */
  ['mutes_var_samp_order_by']: {
    profile_id?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by variance() on columns of table "mutes" */
  ['mutes_variance_order_by']: {
    profile_id?: ValueTypes['order_by'] | undefined | null;
    target_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** columns and relationships of "nft_collections" */
  ['nft_collections']: AliasType<{
    address?: boolean | `@${string}`;
    banner_image_url?: boolean | `@${string}`;
    external_url?: boolean | `@${string}`;
    name?: boolean | `@${string}`;
    slug?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "nft_collections". All fields are combined with a logical 'AND'. */
  ['nft_collections_bool_exp']: {
    _and?: Array<ValueTypes['nft_collections_bool_exp']> | undefined | null;
    _not?: ValueTypes['nft_collections_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['nft_collections_bool_exp']> | undefined | null;
    address?: ValueTypes['citext_comparison_exp'] | undefined | null;
    banner_image_url?: ValueTypes['String_comparison_exp'] | undefined | null;
    external_url?: ValueTypes['String_comparison_exp'] | undefined | null;
    name?: ValueTypes['String_comparison_exp'] | undefined | null;
    slug?: ValueTypes['String_comparison_exp'] | undefined | null;
  };
  /** Ordering options when selecting data from "nft_collections". */
  ['nft_collections_order_by']: {
    address?: ValueTypes['order_by'] | undefined | null;
    banner_image_url?: ValueTypes['order_by'] | undefined | null;
    external_url?: ValueTypes['order_by'] | undefined | null;
    name?: ValueTypes['order_by'] | undefined | null;
    slug?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "nft_collections" */
  ['nft_collections_select_column']: nft_collections_select_column;
  /** Streaming cursor of the table "nft_collections" */
  ['nft_collections_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['nft_collections_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['nft_collections_stream_cursor_value_input']: {
    address?: ValueTypes['citext'] | undefined | null;
    banner_image_url?: string | undefined | null;
    external_url?: string | undefined | null;
    name?: string | undefined | null;
    slug?: string | undefined | null;
  };
  /** columns and relationships of "nft_holdings" */
  ['nft_holdings']: AliasType<{
    address?: boolean | `@${string}`;
    /** An object relationship */
    collection?: ValueTypes['nft_collections'];
    contract?: boolean | `@${string}`;
    image_url?: boolean | `@${string}`;
    name?: boolean | `@${string}`;
    /** An object relationship */
    profile?: ValueTypes['profiles_public'];
    token_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "nft_holdings". All fields are combined with a logical 'AND'. */
  ['nft_holdings_bool_exp']: {
    _and?: Array<ValueTypes['nft_holdings_bool_exp']> | undefined | null;
    _not?: ValueTypes['nft_holdings_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['nft_holdings_bool_exp']> | undefined | null;
    address?: ValueTypes['citext_comparison_exp'] | undefined | null;
    collection?: ValueTypes['nft_collections_bool_exp'] | undefined | null;
    contract?: ValueTypes['citext_comparison_exp'] | undefined | null;
    image_url?: ValueTypes['String_comparison_exp'] | undefined | null;
    name?: ValueTypes['String_comparison_exp'] | undefined | null;
    profile?: ValueTypes['profiles_public_bool_exp'] | undefined | null;
    token_id?: ValueTypes['String_comparison_exp'] | undefined | null;
  };
  /** Ordering options when selecting data from "nft_holdings". */
  ['nft_holdings_order_by']: {
    address?: ValueTypes['order_by'] | undefined | null;
    collection?: ValueTypes['nft_collections_order_by'] | undefined | null;
    contract?: ValueTypes['order_by'] | undefined | null;
    image_url?: ValueTypes['order_by'] | undefined | null;
    name?: ValueTypes['order_by'] | undefined | null;
    profile?: ValueTypes['profiles_public_order_by'] | undefined | null;
    token_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "nft_holdings" */
  ['nft_holdings_select_column']: nft_holdings_select_column;
  /** Streaming cursor of the table "nft_holdings" */
  ['nft_holdings_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['nft_holdings_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['nft_holdings_stream_cursor_value_input']: {
    address?: ValueTypes['citext'] | undefined | null;
    contract?: ValueTypes['citext'] | undefined | null;
    image_url?: string | undefined | null;
    name?: string | undefined | null;
    token_id?: string | undefined | null;
  };
  /** columns and relationships of "nominees" */
  ['nominees']: AliasType<{
    address?: boolean | `@${string}`;
    /** An object relationship */
    circle?: ValueTypes['circles'];
    circle_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    description?: boolean | `@${string}`;
    ended?: boolean | `@${string}`;
    expiry_date?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    nominated_by_user_id?: boolean | `@${string}`;
    nominated_date?: boolean | `@${string}`;
    nominations?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['vouches_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['vouches_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['vouches_bool_exp'] | undefined | null;
      },
      ValueTypes['vouches'],
    ];
    /** An object relationship */
    nominator?: ValueTypes['users'];
    /** An object relationship */
    profile?: ValueTypes['profiles'];
    updated_at?: boolean | `@${string}`;
    /** An object relationship */
    user?: ValueTypes['users'];
    user_id?: boolean | `@${string}`;
    vouches_required?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregated selection of "nominees" */
  ['nominees_aggregate']: AliasType<{
    aggregate?: ValueTypes['nominees_aggregate_fields'];
    nodes?: ValueTypes['nominees'];
    __typename?: boolean | `@${string}`;
  }>;
  ['nominees_aggregate_bool_exp']: {
    bool_and?:
      | ValueTypes['nominees_aggregate_bool_exp_bool_and']
      | undefined
      | null;
    bool_or?:
      | ValueTypes['nominees_aggregate_bool_exp_bool_or']
      | undefined
      | null;
    count?: ValueTypes['nominees_aggregate_bool_exp_count'] | undefined | null;
  };
  ['nominees_aggregate_bool_exp_bool_and']: {
    arguments: ValueTypes['nominees_select_column_nominees_aggregate_bool_exp_bool_and_arguments_columns'];
    distinct?: boolean | undefined | null;
    filter?: ValueTypes['nominees_bool_exp'] | undefined | null;
    predicate: ValueTypes['Boolean_comparison_exp'];
  };
  ['nominees_aggregate_bool_exp_bool_or']: {
    arguments: ValueTypes['nominees_select_column_nominees_aggregate_bool_exp_bool_or_arguments_columns'];
    distinct?: boolean | undefined | null;
    filter?: ValueTypes['nominees_bool_exp'] | undefined | null;
    predicate: ValueTypes['Boolean_comparison_exp'];
  };
  ['nominees_aggregate_bool_exp_count']: {
    arguments?: Array<ValueTypes['nominees_select_column']> | undefined | null;
    distinct?: boolean | undefined | null;
    filter?: ValueTypes['nominees_bool_exp'] | undefined | null;
    predicate: ValueTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "nominees" */
  ['nominees_aggregate_fields']: AliasType<{
    avg?: ValueTypes['nominees_avg_fields'];
    count?: [
      {
        columns?:
          | Array<ValueTypes['nominees_select_column']>
          | undefined
          | null;
        distinct?: boolean | undefined | null;
      },
      boolean | `@${string}`,
    ];
    max?: ValueTypes['nominees_max_fields'];
    min?: ValueTypes['nominees_min_fields'];
    stddev?: ValueTypes['nominees_stddev_fields'];
    stddev_pop?: ValueTypes['nominees_stddev_pop_fields'];
    stddev_samp?: ValueTypes['nominees_stddev_samp_fields'];
    sum?: ValueTypes['nominees_sum_fields'];
    var_pop?: ValueTypes['nominees_var_pop_fields'];
    var_samp?: ValueTypes['nominees_var_samp_fields'];
    variance?: ValueTypes['nominees_variance_fields'];
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "nominees" */
  ['nominees_aggregate_order_by']: {
    avg?: ValueTypes['nominees_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['nominees_max_order_by'] | undefined | null;
    min?: ValueTypes['nominees_min_order_by'] | undefined | null;
    stddev?: ValueTypes['nominees_stddev_order_by'] | undefined | null;
    stddev_pop?: ValueTypes['nominees_stddev_pop_order_by'] | undefined | null;
    stddev_samp?:
      | ValueTypes['nominees_stddev_samp_order_by']
      | undefined
      | null;
    sum?: ValueTypes['nominees_sum_order_by'] | undefined | null;
    var_pop?: ValueTypes['nominees_var_pop_order_by'] | undefined | null;
    var_samp?: ValueTypes['nominees_var_samp_order_by'] | undefined | null;
    variance?: ValueTypes['nominees_variance_order_by'] | undefined | null;
  };
  /** aggregate avg on columns */
  ['nominees_avg_fields']: AliasType<{
    circle_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    nominated_by_user_id?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    vouches_required?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by avg() on columns of table "nominees" */
  ['nominees_avg_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    nominated_by_user_id?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
    vouches_required?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "nominees". All fields are combined with a logical 'AND'. */
  ['nominees_bool_exp']: {
    _and?: Array<ValueTypes['nominees_bool_exp']> | undefined | null;
    _not?: ValueTypes['nominees_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['nominees_bool_exp']> | undefined | null;
    address?: ValueTypes['String_comparison_exp'] | undefined | null;
    circle?: ValueTypes['circles_bool_exp'] | undefined | null;
    circle_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    created_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    description?: ValueTypes['String_comparison_exp'] | undefined | null;
    ended?: ValueTypes['Boolean_comparison_exp'] | undefined | null;
    expiry_date?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    nominated_by_user_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    nominated_date?: ValueTypes['date_comparison_exp'] | undefined | null;
    nominations?: ValueTypes['vouches_bool_exp'] | undefined | null;
    nominator?: ValueTypes['users_bool_exp'] | undefined | null;
    profile?: ValueTypes['profiles_bool_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    user?: ValueTypes['users_bool_exp'] | undefined | null;
    user_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    vouches_required?: ValueTypes['Int_comparison_exp'] | undefined | null;
  };
  /** aggregate max on columns */
  ['nominees_max_fields']: AliasType<{
    address?: boolean | `@${string}`;
    circle_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    description?: boolean | `@${string}`;
    expiry_date?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    nominated_by_user_id?: boolean | `@${string}`;
    nominated_date?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    vouches_required?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by max() on columns of table "nominees" */
  ['nominees_max_order_by']: {
    address?: ValueTypes['order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    description?: ValueTypes['order_by'] | undefined | null;
    expiry_date?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    nominated_by_user_id?: ValueTypes['order_by'] | undefined | null;
    nominated_date?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
    vouches_required?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate min on columns */
  ['nominees_min_fields']: AliasType<{
    address?: boolean | `@${string}`;
    circle_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    description?: boolean | `@${string}`;
    expiry_date?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    nominated_by_user_id?: boolean | `@${string}`;
    nominated_date?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    vouches_required?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by min() on columns of table "nominees" */
  ['nominees_min_order_by']: {
    address?: ValueTypes['order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    description?: ValueTypes['order_by'] | undefined | null;
    expiry_date?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    nominated_by_user_id?: ValueTypes['order_by'] | undefined | null;
    nominated_date?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
    vouches_required?: ValueTypes['order_by'] | undefined | null;
  };
  /** Ordering options when selecting data from "nominees". */
  ['nominees_order_by']: {
    address?: ValueTypes['order_by'] | undefined | null;
    circle?: ValueTypes['circles_order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    description?: ValueTypes['order_by'] | undefined | null;
    ended?: ValueTypes['order_by'] | undefined | null;
    expiry_date?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    nominated_by_user_id?: ValueTypes['order_by'] | undefined | null;
    nominated_date?: ValueTypes['order_by'] | undefined | null;
    nominations_aggregate?:
      | ValueTypes['vouches_aggregate_order_by']
      | undefined
      | null;
    nominator?: ValueTypes['users_order_by'] | undefined | null;
    profile?: ValueTypes['profiles_order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    user?: ValueTypes['users_order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
    vouches_required?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "nominees" */
  ['nominees_select_column']: nominees_select_column;
  /** select "nominees_aggregate_bool_exp_bool_and_arguments_columns" columns of table "nominees" */
  ['nominees_select_column_nominees_aggregate_bool_exp_bool_and_arguments_columns']: nominees_select_column_nominees_aggregate_bool_exp_bool_and_arguments_columns;
  /** select "nominees_aggregate_bool_exp_bool_or_arguments_columns" columns of table "nominees" */
  ['nominees_select_column_nominees_aggregate_bool_exp_bool_or_arguments_columns']: nominees_select_column_nominees_aggregate_bool_exp_bool_or_arguments_columns;
  /** aggregate stddev on columns */
  ['nominees_stddev_fields']: AliasType<{
    circle_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    nominated_by_user_id?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    vouches_required?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev() on columns of table "nominees" */
  ['nominees_stddev_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    nominated_by_user_id?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
    vouches_required?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_pop on columns */
  ['nominees_stddev_pop_fields']: AliasType<{
    circle_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    nominated_by_user_id?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    vouches_required?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_pop() on columns of table "nominees" */
  ['nominees_stddev_pop_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    nominated_by_user_id?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
    vouches_required?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_samp on columns */
  ['nominees_stddev_samp_fields']: AliasType<{
    circle_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    nominated_by_user_id?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    vouches_required?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_samp() on columns of table "nominees" */
  ['nominees_stddev_samp_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    nominated_by_user_id?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
    vouches_required?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "nominees" */
  ['nominees_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['nominees_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['nominees_stream_cursor_value_input']: {
    address?: string | undefined | null;
    circle_id?: number | undefined | null;
    created_at?: ValueTypes['timestamp'] | undefined | null;
    description?: string | undefined | null;
    ended?: boolean | undefined | null;
    expiry_date?: ValueTypes['timestamp'] | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    nominated_by_user_id?: number | undefined | null;
    nominated_date?: ValueTypes['date'] | undefined | null;
    updated_at?: ValueTypes['timestamp'] | undefined | null;
    user_id?: number | undefined | null;
    vouches_required?: number | undefined | null;
  };
  /** aggregate sum on columns */
  ['nominees_sum_fields']: AliasType<{
    circle_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    nominated_by_user_id?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    vouches_required?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by sum() on columns of table "nominees" */
  ['nominees_sum_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    nominated_by_user_id?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
    vouches_required?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate var_pop on columns */
  ['nominees_var_pop_fields']: AliasType<{
    circle_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    nominated_by_user_id?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    vouches_required?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_pop() on columns of table "nominees" */
  ['nominees_var_pop_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    nominated_by_user_id?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
    vouches_required?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate var_samp on columns */
  ['nominees_var_samp_fields']: AliasType<{
    circle_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    nominated_by_user_id?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    vouches_required?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_samp() on columns of table "nominees" */
  ['nominees_var_samp_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    nominated_by_user_id?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
    vouches_required?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate variance on columns */
  ['nominees_variance_fields']: AliasType<{
    circle_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    nominated_by_user_id?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    vouches_required?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by variance() on columns of table "nominees" */
  ['nominees_variance_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    nominated_by_user_id?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
    vouches_required?: ValueTypes['order_by'] | undefined | null;
  };
  /** columns and relationships of "note_count" */
  ['note_count']: AliasType<{
    notes?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "note_count". All fields are combined with a logical 'AND'. */
  ['note_count_bool_exp']: {
    _and?: Array<ValueTypes['note_count_bool_exp']> | undefined | null;
    _not?: ValueTypes['note_count_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['note_count_bool_exp']> | undefined | null;
    notes?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    profile_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
  };
  /** Ordering options when selecting data from "note_count". */
  ['note_count_order_by']: {
    notes?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "note_count" */
  ['note_count_select_column']: note_count_select_column;
  /** Streaming cursor of the table "note_count" */
  ['note_count_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['note_count_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['note_count_stream_cursor_value_input']: {
    notes?: ValueTypes['bigint'] | undefined | null;
    profile_id?: ValueTypes['bigint'] | undefined | null;
  };
  /** columns and relationships of "notifications" */
  ['notifications']: AliasType<{
    /** An object relationship */
    actor_profile_public?: ValueTypes['profiles_public'];
    created_at?: boolean | `@${string}`;
    /** An object relationship */
    give?: ValueTypes['colinks_gives'];
    id?: boolean | `@${string}`;
    invite_joined_id?: boolean | `@${string}`;
    /** An object relationship */
    invited_profile_public?: ValueTypes['profiles_public'];
    /** An object relationship */
    link_tx?: ValueTypes['link_tx'];
    link_tx_hash?: boolean | `@${string}`;
    /** An object relationship */
    mention_post?: ValueTypes['contributions'];
    mention_post_id?: boolean | `@${string}`;
    /** An object relationship */
    mention_reply?: ValueTypes['replies'];
    mention_reply_id?: boolean | `@${string}`;
    /** An object relationship */
    profile?: ValueTypes['profiles'];
    profile_id?: boolean | `@${string}`;
    /** An object relationship */
    reaction?: ValueTypes['reactions'];
    reaction_id?: boolean | `@${string}`;
    /** An object relationship */
    reply?: ValueTypes['replies'];
    reply_id?: boolean | `@${string}`;
    /** An object relationship */
    reply_reaction?: ValueTypes['replies_reactions'];
    reply_reaction_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregated selection of "notifications" */
  ['notifications_aggregate']: AliasType<{
    aggregate?: ValueTypes['notifications_aggregate_fields'];
    nodes?: ValueTypes['notifications'];
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregate fields of "notifications" */
  ['notifications_aggregate_fields']: AliasType<{
    avg?: ValueTypes['notifications_avg_fields'];
    count?: [
      {
        columns?:
          | Array<ValueTypes['notifications_select_column']>
          | undefined
          | null;
        distinct?: boolean | undefined | null;
      },
      boolean | `@${string}`,
    ];
    max?: ValueTypes['notifications_max_fields'];
    min?: ValueTypes['notifications_min_fields'];
    stddev?: ValueTypes['notifications_stddev_fields'];
    stddev_pop?: ValueTypes['notifications_stddev_pop_fields'];
    stddev_samp?: ValueTypes['notifications_stddev_samp_fields'];
    sum?: ValueTypes['notifications_sum_fields'];
    var_pop?: ValueTypes['notifications_var_pop_fields'];
    var_samp?: ValueTypes['notifications_var_samp_fields'];
    variance?: ValueTypes['notifications_variance_fields'];
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregate avg on columns */
  ['notifications_avg_fields']: AliasType<{
    id?: boolean | `@${string}`;
    invite_joined_id?: boolean | `@${string}`;
    mention_post_id?: boolean | `@${string}`;
    mention_reply_id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    reaction_id?: boolean | `@${string}`;
    reply_id?: boolean | `@${string}`;
    reply_reaction_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "notifications". All fields are combined with a logical 'AND'. */
  ['notifications_bool_exp']: {
    _and?: Array<ValueTypes['notifications_bool_exp']> | undefined | null;
    _not?: ValueTypes['notifications_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['notifications_bool_exp']> | undefined | null;
    actor_profile_public?:
      | ValueTypes['profiles_public_bool_exp']
      | undefined
      | null;
    created_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    give?: ValueTypes['colinks_gives_bool_exp'] | undefined | null;
    id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    invite_joined_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    invited_profile_public?:
      | ValueTypes['profiles_public_bool_exp']
      | undefined
      | null;
    link_tx?: ValueTypes['link_tx_bool_exp'] | undefined | null;
    link_tx_hash?: ValueTypes['citext_comparison_exp'] | undefined | null;
    mention_post?: ValueTypes['contributions_bool_exp'] | undefined | null;
    mention_post_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    mention_reply?: ValueTypes['replies_bool_exp'] | undefined | null;
    mention_reply_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    profile?: ValueTypes['profiles_bool_exp'] | undefined | null;
    profile_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    reaction?: ValueTypes['reactions_bool_exp'] | undefined | null;
    reaction_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    reply?: ValueTypes['replies_bool_exp'] | undefined | null;
    reply_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    reply_reaction?:
      | ValueTypes['replies_reactions_bool_exp']
      | undefined
      | null;
    reply_reaction_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
  };
  /** aggregate max on columns */
  ['notifications_max_fields']: AliasType<{
    created_at?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    invite_joined_id?: boolean | `@${string}`;
    link_tx_hash?: boolean | `@${string}`;
    mention_post_id?: boolean | `@${string}`;
    mention_reply_id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    reaction_id?: boolean | `@${string}`;
    reply_id?: boolean | `@${string}`;
    reply_reaction_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregate min on columns */
  ['notifications_min_fields']: AliasType<{
    created_at?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    invite_joined_id?: boolean | `@${string}`;
    link_tx_hash?: boolean | `@${string}`;
    mention_post_id?: boolean | `@${string}`;
    mention_reply_id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    reaction_id?: boolean | `@${string}`;
    reply_id?: boolean | `@${string}`;
    reply_reaction_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Ordering options when selecting data from "notifications". */
  ['notifications_order_by']: {
    actor_profile_public?:
      | ValueTypes['profiles_public_order_by']
      | undefined
      | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    give?: ValueTypes['colinks_gives_order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    invite_joined_id?: ValueTypes['order_by'] | undefined | null;
    invited_profile_public?:
      | ValueTypes['profiles_public_order_by']
      | undefined
      | null;
    link_tx?: ValueTypes['link_tx_order_by'] | undefined | null;
    link_tx_hash?: ValueTypes['order_by'] | undefined | null;
    mention_post?: ValueTypes['contributions_order_by'] | undefined | null;
    mention_post_id?: ValueTypes['order_by'] | undefined | null;
    mention_reply?: ValueTypes['replies_order_by'] | undefined | null;
    mention_reply_id?: ValueTypes['order_by'] | undefined | null;
    profile?: ValueTypes['profiles_order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    reaction?: ValueTypes['reactions_order_by'] | undefined | null;
    reaction_id?: ValueTypes['order_by'] | undefined | null;
    reply?: ValueTypes['replies_order_by'] | undefined | null;
    reply_id?: ValueTypes['order_by'] | undefined | null;
    reply_reaction?:
      | ValueTypes['replies_reactions_order_by']
      | undefined
      | null;
    reply_reaction_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "notifications" */
  ['notifications_select_column']: notifications_select_column;
  /** aggregate stddev on columns */
  ['notifications_stddev_fields']: AliasType<{
    id?: boolean | `@${string}`;
    invite_joined_id?: boolean | `@${string}`;
    mention_post_id?: boolean | `@${string}`;
    mention_reply_id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    reaction_id?: boolean | `@${string}`;
    reply_id?: boolean | `@${string}`;
    reply_reaction_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregate stddev_pop on columns */
  ['notifications_stddev_pop_fields']: AliasType<{
    id?: boolean | `@${string}`;
    invite_joined_id?: boolean | `@${string}`;
    mention_post_id?: boolean | `@${string}`;
    mention_reply_id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    reaction_id?: boolean | `@${string}`;
    reply_id?: boolean | `@${string}`;
    reply_reaction_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregate stddev_samp on columns */
  ['notifications_stddev_samp_fields']: AliasType<{
    id?: boolean | `@${string}`;
    invite_joined_id?: boolean | `@${string}`;
    mention_post_id?: boolean | `@${string}`;
    mention_reply_id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    reaction_id?: boolean | `@${string}`;
    reply_id?: boolean | `@${string}`;
    reply_reaction_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Streaming cursor of the table "notifications" */
  ['notifications_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['notifications_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['notifications_stream_cursor_value_input']: {
    created_at?: ValueTypes['timestamptz'] | undefined | null;
    id?: number | undefined | null;
    invite_joined_id?: ValueTypes['bigint'] | undefined | null;
    link_tx_hash?: ValueTypes['citext'] | undefined | null;
    mention_post_id?: number | undefined | null;
    mention_reply_id?: number | undefined | null;
    profile_id?: ValueTypes['bigint'] | undefined | null;
    reaction_id?: ValueTypes['bigint'] | undefined | null;
    reply_id?: number | undefined | null;
    reply_reaction_id?: ValueTypes['bigint'] | undefined | null;
  };
  /** aggregate sum on columns */
  ['notifications_sum_fields']: AliasType<{
    id?: boolean | `@${string}`;
    invite_joined_id?: boolean | `@${string}`;
    mention_post_id?: boolean | `@${string}`;
    mention_reply_id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    reaction_id?: boolean | `@${string}`;
    reply_id?: boolean | `@${string}`;
    reply_reaction_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregate var_pop on columns */
  ['notifications_var_pop_fields']: AliasType<{
    id?: boolean | `@${string}`;
    invite_joined_id?: boolean | `@${string}`;
    mention_post_id?: boolean | `@${string}`;
    mention_reply_id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    reaction_id?: boolean | `@${string}`;
    reply_id?: boolean | `@${string}`;
    reply_reaction_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregate var_samp on columns */
  ['notifications_var_samp_fields']: AliasType<{
    id?: boolean | `@${string}`;
    invite_joined_id?: boolean | `@${string}`;
    mention_post_id?: boolean | `@${string}`;
    mention_reply_id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    reaction_id?: boolean | `@${string}`;
    reply_id?: boolean | `@${string}`;
    reply_reaction_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregate variance on columns */
  ['notifications_variance_fields']: AliasType<{
    id?: boolean | `@${string}`;
    invite_joined_id?: boolean | `@${string}`;
    mention_post_id?: boolean | `@${string}`;
    mention_reply_id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    reaction_id?: boolean | `@${string}`;
    reply_id?: boolean | `@${string}`;
    reply_reaction_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  ['numeric']: unknown;
  /** Boolean expression to compare columns of type "numeric". All fields are combined with logical 'AND'. */
  ['numeric_comparison_exp']: {
    _eq?: ValueTypes['numeric'] | undefined | null;
    _gt?: ValueTypes['numeric'] | undefined | null;
    _gte?: ValueTypes['numeric'] | undefined | null;
    _in?: Array<ValueTypes['numeric']> | undefined | null;
    _is_null?: boolean | undefined | null;
    _lt?: ValueTypes['numeric'] | undefined | null;
    _lte?: ValueTypes['numeric'] | undefined | null;
    _neq?: ValueTypes['numeric'] | undefined | null;
    _nin?: Array<ValueTypes['numeric']> | undefined | null;
  };
  /** column ordering options */
  ['order_by']: order_by;
  /** columns and relationships of "org_members" */
  ['org_members']: AliasType<{
    created_at?: boolean | `@${string}`;
    deleted_at?: boolean | `@${string}`;
    hidden?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    org_id?: boolean | `@${string}`;
    /** An object relationship */
    organization?: ValueTypes['organizations'];
    /** An object relationship */
    profile?: ValueTypes['profiles'];
    profile_id?: boolean | `@${string}`;
    role?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "org_members" */
  ['org_members_aggregate_order_by']: {
    avg?: ValueTypes['org_members_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['org_members_max_order_by'] | undefined | null;
    min?: ValueTypes['org_members_min_order_by'] | undefined | null;
    stddev?: ValueTypes['org_members_stddev_order_by'] | undefined | null;
    stddev_pop?:
      | ValueTypes['org_members_stddev_pop_order_by']
      | undefined
      | null;
    stddev_samp?:
      | ValueTypes['org_members_stddev_samp_order_by']
      | undefined
      | null;
    sum?: ValueTypes['org_members_sum_order_by'] | undefined | null;
    var_pop?: ValueTypes['org_members_var_pop_order_by'] | undefined | null;
    var_samp?: ValueTypes['org_members_var_samp_order_by'] | undefined | null;
    variance?: ValueTypes['org_members_variance_order_by'] | undefined | null;
  };
  /** order by avg() on columns of table "org_members" */
  ['org_members_avg_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
    org_id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    role?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "org_members". All fields are combined with a logical 'AND'. */
  ['org_members_bool_exp']: {
    _and?: Array<ValueTypes['org_members_bool_exp']> | undefined | null;
    _not?: ValueTypes['org_members_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['org_members_bool_exp']> | undefined | null;
    created_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    deleted_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    hidden?: ValueTypes['Boolean_comparison_exp'] | undefined | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    org_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    organization?: ValueTypes['organizations_bool_exp'] | undefined | null;
    profile?: ValueTypes['profiles_bool_exp'] | undefined | null;
    profile_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    role?: ValueTypes['Int_comparison_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
  };
  /** order by max() on columns of table "org_members" */
  ['org_members_max_order_by']: {
    created_at?: ValueTypes['order_by'] | undefined | null;
    deleted_at?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    org_id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    role?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by min() on columns of table "org_members" */
  ['org_members_min_order_by']: {
    created_at?: ValueTypes['order_by'] | undefined | null;
    deleted_at?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    org_id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    role?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** response of any mutation on the table "org_members" */
  ['org_members_mutation_response']: AliasType<{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | `@${string}`;
    /** data from the rows affected by the mutation */
    returning?: ValueTypes['org_members'];
    __typename?: boolean | `@${string}`;
  }>;
  /** Ordering options when selecting data from "org_members". */
  ['org_members_order_by']: {
    created_at?: ValueTypes['order_by'] | undefined | null;
    deleted_at?: ValueTypes['order_by'] | undefined | null;
    hidden?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    org_id?: ValueTypes['order_by'] | undefined | null;
    organization?: ValueTypes['organizations_order_by'] | undefined | null;
    profile?: ValueTypes['profiles_order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    role?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** primary key columns input for table: org_members */
  ['org_members_pk_columns_input']: {
    id: ValueTypes['bigint'];
  };
  /** select columns of table "org_members" */
  ['org_members_select_column']: org_members_select_column;
  /** input type for updating data in table "org_members" */
  ['org_members_set_input']: {
    hidden?: boolean | undefined | null;
  };
  /** order by stddev() on columns of table "org_members" */
  ['org_members_stddev_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
    org_id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    role?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_pop() on columns of table "org_members" */
  ['org_members_stddev_pop_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
    org_id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    role?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_samp() on columns of table "org_members" */
  ['org_members_stddev_samp_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
    org_id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    role?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "org_members" */
  ['org_members_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['org_members_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['org_members_stream_cursor_value_input']: {
    created_at?: ValueTypes['timestamp'] | undefined | null;
    deleted_at?: ValueTypes['timestamp'] | undefined | null;
    hidden?: boolean | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    org_id?: ValueTypes['bigint'] | undefined | null;
    profile_id?: ValueTypes['bigint'] | undefined | null;
    role?: number | undefined | null;
    updated_at?: ValueTypes['timestamp'] | undefined | null;
  };
  /** order by sum() on columns of table "org_members" */
  ['org_members_sum_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
    org_id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    role?: ValueTypes['order_by'] | undefined | null;
  };
  ['org_members_updates']: {
    /** sets the columns of the filtered rows to the given values */
    _set?: ValueTypes['org_members_set_input'] | undefined | null;
    /** filter the rows which have to be updated */
    where: ValueTypes['org_members_bool_exp'];
  };
  /** order by var_pop() on columns of table "org_members" */
  ['org_members_var_pop_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
    org_id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    role?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by var_samp() on columns of table "org_members" */
  ['org_members_var_samp_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
    org_id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    role?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by variance() on columns of table "org_members" */
  ['org_members_variance_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
    org_id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    role?: ValueTypes['order_by'] | undefined | null;
  };
  /** columns and relationships of "org_share_tokens" */
  ['org_share_tokens']: AliasType<{
    created_at?: boolean | `@${string}`;
    org_id?: boolean | `@${string}`;
    /** An object relationship */
    organization?: ValueTypes['organizations'];
    type?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    uuid?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "org_share_tokens". All fields are combined with a logical 'AND'. */
  ['org_share_tokens_bool_exp']: {
    _and?: Array<ValueTypes['org_share_tokens_bool_exp']> | undefined | null;
    _not?: ValueTypes['org_share_tokens_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['org_share_tokens_bool_exp']> | undefined | null;
    created_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    org_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    organization?: ValueTypes['organizations_bool_exp'] | undefined | null;
    type?: ValueTypes['Int_comparison_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    uuid?: ValueTypes['uuid_comparison_exp'] | undefined | null;
  };
  /** unique or primary key constraints on table "org_share_tokens" */
  ['org_share_tokens_constraint']: org_share_tokens_constraint;
  /** input type for inserting data into table "org_share_tokens" */
  ['org_share_tokens_insert_input']: {
    org_id?: ValueTypes['bigint'] | undefined | null;
    type?: number | undefined | null;
  };
  /** response of any mutation on the table "org_share_tokens" */
  ['org_share_tokens_mutation_response']: AliasType<{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | `@${string}`;
    /** data from the rows affected by the mutation */
    returning?: ValueTypes['org_share_tokens'];
    __typename?: boolean | `@${string}`;
  }>;
  /** on_conflict condition type for table "org_share_tokens" */
  ['org_share_tokens_on_conflict']: {
    constraint: ValueTypes['org_share_tokens_constraint'];
    update_columns: Array<ValueTypes['org_share_tokens_update_column']>;
    where?: ValueTypes['org_share_tokens_bool_exp'] | undefined | null;
  };
  /** Ordering options when selecting data from "org_share_tokens". */
  ['org_share_tokens_order_by']: {
    created_at?: ValueTypes['order_by'] | undefined | null;
    org_id?: ValueTypes['order_by'] | undefined | null;
    organization?: ValueTypes['organizations_order_by'] | undefined | null;
    type?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    uuid?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "org_share_tokens" */
  ['org_share_tokens_select_column']: org_share_tokens_select_column;
  /** Streaming cursor of the table "org_share_tokens" */
  ['org_share_tokens_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['org_share_tokens_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['org_share_tokens_stream_cursor_value_input']: {
    created_at?: ValueTypes['timestamptz'] | undefined | null;
    org_id?: ValueTypes['bigint'] | undefined | null;
    type?: number | undefined | null;
    updated_at?: ValueTypes['timestamptz'] | undefined | null;
    uuid?: ValueTypes['uuid'] | undefined | null;
  };
  /** placeholder for update columns of table "org_share_tokens" (current role has no relevant permissions) */
  ['org_share_tokens_update_column']: org_share_tokens_update_column;
  /** columns and relationships of "organizations" */
  ['organizations']: AliasType<{
    circles?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['circles_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['circles_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['circles_bool_exp'] | undefined | null;
      },
      ValueTypes['circles'],
    ];
    created_at?: boolean | `@${string}`;
    created_by?: boolean | `@${string}`;
    guild_id?: boolean | `@${string}`;
    guild_role_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    logo?: boolean | `@${string}`;
    members?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['org_members_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['org_members_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['org_members_bool_exp'] | undefined | null;
      },
      ValueTypes['org_members'],
    ];
    name?: boolean | `@${string}`;
    /** An object relationship */
    profile?: ValueTypes['profiles'];
    /** Indicates a test/sample/sandbox org */
    sample?: boolean | `@${string}`;
    telegram_id?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    vaults?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['vaults_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['vaults_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['vaults_bool_exp'] | undefined | null;
      },
      ValueTypes['vaults'],
    ];
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "organizations". All fields are combined with a logical 'AND'. */
  ['organizations_bool_exp']: {
    _and?: Array<ValueTypes['organizations_bool_exp']> | undefined | null;
    _not?: ValueTypes['organizations_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['organizations_bool_exp']> | undefined | null;
    circles?: ValueTypes['circles_bool_exp'] | undefined | null;
    created_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    created_by?: ValueTypes['Int_comparison_exp'] | undefined | null;
    guild_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    guild_role_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    logo?: ValueTypes['String_comparison_exp'] | undefined | null;
    members?: ValueTypes['org_members_bool_exp'] | undefined | null;
    name?: ValueTypes['String_comparison_exp'] | undefined | null;
    profile?: ValueTypes['profiles_bool_exp'] | undefined | null;
    sample?: ValueTypes['Boolean_comparison_exp'] | undefined | null;
    telegram_id?: ValueTypes['String_comparison_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    vaults?: ValueTypes['vaults_bool_exp'] | undefined | null;
  };
  /** input type for incrementing numeric columns in table "organizations" */
  ['organizations_inc_input']: {
    guild_id?: number | undefined | null;
    guild_role_id?: number | undefined | null;
  };
  /** response of any mutation on the table "organizations" */
  ['organizations_mutation_response']: AliasType<{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | `@${string}`;
    /** data from the rows affected by the mutation */
    returning?: ValueTypes['organizations'];
    __typename?: boolean | `@${string}`;
  }>;
  /** Ordering options when selecting data from "organizations". */
  ['organizations_order_by']: {
    circles_aggregate?:
      | ValueTypes['circles_aggregate_order_by']
      | undefined
      | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    guild_id?: ValueTypes['order_by'] | undefined | null;
    guild_role_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    logo?: ValueTypes['order_by'] | undefined | null;
    members_aggregate?:
      | ValueTypes['org_members_aggregate_order_by']
      | undefined
      | null;
    name?: ValueTypes['order_by'] | undefined | null;
    profile?: ValueTypes['profiles_order_by'] | undefined | null;
    sample?: ValueTypes['order_by'] | undefined | null;
    telegram_id?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    vaults_aggregate?:
      | ValueTypes['vaults_aggregate_order_by']
      | undefined
      | null;
  };
  /** primary key columns input for table: organizations */
  ['organizations_pk_columns_input']: {
    id: ValueTypes['bigint'];
  };
  /** select columns of table "organizations" */
  ['organizations_select_column']: organizations_select_column;
  /** input type for updating data in table "organizations" */
  ['organizations_set_input']: {
    guild_id?: number | undefined | null;
    guild_role_id?: number | undefined | null;
    name?: string | undefined | null;
    telegram_id?: string | undefined | null;
  };
  /** Streaming cursor of the table "organizations" */
  ['organizations_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['organizations_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['organizations_stream_cursor_value_input']: {
    created_at?: ValueTypes['timestamp'] | undefined | null;
    created_by?: number | undefined | null;
    guild_id?: number | undefined | null;
    guild_role_id?: number | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    logo?: string | undefined | null;
    name?: string | undefined | null;
    /** Indicates a test/sample/sandbox org */
    sample?: boolean | undefined | null;
    telegram_id?: string | undefined | null;
    updated_at?: ValueTypes['timestamp'] | undefined | null;
  };
  ['organizations_updates']: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: ValueTypes['organizations_inc_input'] | undefined | null;
    /** sets the columns of the filtered rows to the given values */
    _set?: ValueTypes['organizations_set_input'] | undefined | null;
    /** filter the rows which have to be updated */
    where: ValueTypes['organizations_bool_exp'];
  };
  /** columns and relationships of "pending_gift_private" */
  ['pending_gift_private']: AliasType<{
    gift_id?: boolean | `@${string}`;
    note?: boolean | `@${string}`;
    /** An object relationship */
    recipient?: ValueTypes['users'];
    recipient_id?: boolean | `@${string}`;
    /** An object relationship */
    sender?: ValueTypes['users'];
    sender_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "pending_gift_private". All fields are combined with a logical 'AND'. */
  ['pending_gift_private_bool_exp']: {
    _and?:
      | Array<ValueTypes['pending_gift_private_bool_exp']>
      | undefined
      | null;
    _not?: ValueTypes['pending_gift_private_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['pending_gift_private_bool_exp']> | undefined | null;
    gift_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    note?: ValueTypes['String_comparison_exp'] | undefined | null;
    recipient?: ValueTypes['users_bool_exp'] | undefined | null;
    recipient_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    sender?: ValueTypes['users_bool_exp'] | undefined | null;
    sender_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
  };
  /** Ordering options when selecting data from "pending_gift_private". */
  ['pending_gift_private_order_by']: {
    gift_id?: ValueTypes['order_by'] | undefined | null;
    note?: ValueTypes['order_by'] | undefined | null;
    recipient?: ValueTypes['users_order_by'] | undefined | null;
    recipient_id?: ValueTypes['order_by'] | undefined | null;
    sender?: ValueTypes['users_order_by'] | undefined | null;
    sender_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "pending_gift_private" */
  ['pending_gift_private_select_column']: pending_gift_private_select_column;
  /** Streaming cursor of the table "pending_gift_private" */
  ['pending_gift_private_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['pending_gift_private_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['pending_gift_private_stream_cursor_value_input']: {
    gift_id?: ValueTypes['bigint'] | undefined | null;
    note?: string | undefined | null;
    recipient_id?: ValueTypes['bigint'] | undefined | null;
    sender_id?: ValueTypes['bigint'] | undefined | null;
  };
  /** GIVE allocations made by circle members for the currently running epoch */
  ['pending_token_gifts']: AliasType<{
    /** An object relationship */
    circle?: ValueTypes['circles'];
    circle_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    dts_created?: boolean | `@${string}`;
    /** An object relationship */
    epoch?: ValueTypes['epochs'];
    epoch_id?: boolean | `@${string}`;
    /** An object relationship */
    gift_private?: ValueTypes['pending_gift_private'];
    id?: boolean | `@${string}`;
    /** An object relationship */
    recipient?: ValueTypes['users'];
    recipient_address?: boolean | `@${string}`;
    recipient_id?: boolean | `@${string}`;
    /** An object relationship */
    sender?: ValueTypes['users'];
    sender_address?: boolean | `@${string}`;
    sender_id?: boolean | `@${string}`;
    tokens?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "pending_token_gifts" */
  ['pending_token_gifts_aggregate_order_by']: {
    avg?: ValueTypes['pending_token_gifts_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['pending_token_gifts_max_order_by'] | undefined | null;
    min?: ValueTypes['pending_token_gifts_min_order_by'] | undefined | null;
    stddev?:
      | ValueTypes['pending_token_gifts_stddev_order_by']
      | undefined
      | null;
    stddev_pop?:
      | ValueTypes['pending_token_gifts_stddev_pop_order_by']
      | undefined
      | null;
    stddev_samp?:
      | ValueTypes['pending_token_gifts_stddev_samp_order_by']
      | undefined
      | null;
    sum?: ValueTypes['pending_token_gifts_sum_order_by'] | undefined | null;
    var_pop?:
      | ValueTypes['pending_token_gifts_var_pop_order_by']
      | undefined
      | null;
    var_samp?:
      | ValueTypes['pending_token_gifts_var_samp_order_by']
      | undefined
      | null;
    variance?:
      | ValueTypes['pending_token_gifts_variance_order_by']
      | undefined
      | null;
  };
  /** order by avg() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_avg_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    recipient_id?: ValueTypes['order_by'] | undefined | null;
    sender_id?: ValueTypes['order_by'] | undefined | null;
    tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "pending_token_gifts". All fields are combined with a logical 'AND'. */
  ['pending_token_gifts_bool_exp']: {
    _and?: Array<ValueTypes['pending_token_gifts_bool_exp']> | undefined | null;
    _not?: ValueTypes['pending_token_gifts_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['pending_token_gifts_bool_exp']> | undefined | null;
    circle?: ValueTypes['circles_bool_exp'] | undefined | null;
    circle_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    created_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    dts_created?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    epoch?: ValueTypes['epochs_bool_exp'] | undefined | null;
    epoch_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    gift_private?:
      | ValueTypes['pending_gift_private_bool_exp']
      | undefined
      | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    recipient?: ValueTypes['users_bool_exp'] | undefined | null;
    recipient_address?: ValueTypes['String_comparison_exp'] | undefined | null;
    recipient_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    sender?: ValueTypes['users_bool_exp'] | undefined | null;
    sender_address?: ValueTypes['String_comparison_exp'] | undefined | null;
    sender_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    tokens?: ValueTypes['Int_comparison_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
  };
  /** order by max() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_max_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    dts_created?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    recipient_address?: ValueTypes['order_by'] | undefined | null;
    recipient_id?: ValueTypes['order_by'] | undefined | null;
    sender_address?: ValueTypes['order_by'] | undefined | null;
    sender_id?: ValueTypes['order_by'] | undefined | null;
    tokens?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by min() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_min_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    dts_created?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    recipient_address?: ValueTypes['order_by'] | undefined | null;
    recipient_id?: ValueTypes['order_by'] | undefined | null;
    sender_address?: ValueTypes['order_by'] | undefined | null;
    sender_id?: ValueTypes['order_by'] | undefined | null;
    tokens?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** Ordering options when selecting data from "pending_token_gifts". */
  ['pending_token_gifts_order_by']: {
    circle?: ValueTypes['circles_order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    dts_created?: ValueTypes['order_by'] | undefined | null;
    epoch?: ValueTypes['epochs_order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    gift_private?:
      | ValueTypes['pending_gift_private_order_by']
      | undefined
      | null;
    id?: ValueTypes['order_by'] | undefined | null;
    recipient?: ValueTypes['users_order_by'] | undefined | null;
    recipient_address?: ValueTypes['order_by'] | undefined | null;
    recipient_id?: ValueTypes['order_by'] | undefined | null;
    sender?: ValueTypes['users_order_by'] | undefined | null;
    sender_address?: ValueTypes['order_by'] | undefined | null;
    sender_id?: ValueTypes['order_by'] | undefined | null;
    tokens?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "pending_token_gifts" */
  ['pending_token_gifts_select_column']: pending_token_gifts_select_column;
  /** order by stddev() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_stddev_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    recipient_id?: ValueTypes['order_by'] | undefined | null;
    sender_id?: ValueTypes['order_by'] | undefined | null;
    tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_pop() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_stddev_pop_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    recipient_id?: ValueTypes['order_by'] | undefined | null;
    sender_id?: ValueTypes['order_by'] | undefined | null;
    tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_samp() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_stddev_samp_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    recipient_id?: ValueTypes['order_by'] | undefined | null;
    sender_id?: ValueTypes['order_by'] | undefined | null;
    tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "pending_token_gifts" */
  ['pending_token_gifts_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['pending_token_gifts_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['pending_token_gifts_stream_cursor_value_input']: {
    circle_id?: ValueTypes['bigint'] | undefined | null;
    created_at?: ValueTypes['timestamp'] | undefined | null;
    dts_created?: ValueTypes['timestamp'] | undefined | null;
    epoch_id?: number | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    recipient_address?: string | undefined | null;
    recipient_id?: ValueTypes['bigint'] | undefined | null;
    sender_address?: string | undefined | null;
    sender_id?: ValueTypes['bigint'] | undefined | null;
    tokens?: number | undefined | null;
    updated_at?: ValueTypes['timestamp'] | undefined | null;
  };
  /** order by sum() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_sum_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    recipient_id?: ValueTypes['order_by'] | undefined | null;
    sender_id?: ValueTypes['order_by'] | undefined | null;
    tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by var_pop() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_var_pop_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    recipient_id?: ValueTypes['order_by'] | undefined | null;
    sender_id?: ValueTypes['order_by'] | undefined | null;
    tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by var_samp() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_var_samp_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    recipient_id?: ValueTypes['order_by'] | undefined | null;
    sender_id?: ValueTypes['order_by'] | undefined | null;
    tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by variance() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_variance_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    recipient_id?: ValueTypes['order_by'] | undefined | null;
    sender_id?: ValueTypes['order_by'] | undefined | null;
    tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** stores app-specific context to aid in the recovery of incomplete transactions */
  ['pending_vault_transactions']: AliasType<{
    chain_id?: boolean | `@${string}`;
    claim_id?: boolean | `@${string}`;
    created_by?: boolean | `@${string}`;
    /** An object relationship */
    distribution?: ValueTypes['distributions'];
    distribution_id?: boolean | `@${string}`;
    org_id?: boolean | `@${string}`;
    /** An object relationship */
    organization?: ValueTypes['organizations'];
    /** An object relationship */
    profile?: ValueTypes['profiles'];
    tx_hash?: boolean | `@${string}`;
    tx_type?: boolean | `@${string}`;
    /** An object relationship */
    vault_tx_type?: ValueTypes['vault_tx_types'];
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "pending_vault_transactions". All fields are combined with a logical 'AND'. */
  ['pending_vault_transactions_bool_exp']: {
    _and?:
      | Array<ValueTypes['pending_vault_transactions_bool_exp']>
      | undefined
      | null;
    _not?: ValueTypes['pending_vault_transactions_bool_exp'] | undefined | null;
    _or?:
      | Array<ValueTypes['pending_vault_transactions_bool_exp']>
      | undefined
      | null;
    chain_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    claim_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    created_by?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    distribution?: ValueTypes['distributions_bool_exp'] | undefined | null;
    distribution_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    org_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    organization?: ValueTypes['organizations_bool_exp'] | undefined | null;
    profile?: ValueTypes['profiles_bool_exp'] | undefined | null;
    tx_hash?: ValueTypes['String_comparison_exp'] | undefined | null;
    tx_type?:
      | ValueTypes['vault_tx_types_enum_comparison_exp']
      | undefined
      | null;
    vault_tx_type?: ValueTypes['vault_tx_types_bool_exp'] | undefined | null;
  };
  /** unique or primary key constraints on table "pending_vault_transactions" */
  ['pending_vault_transactions_constraint']: pending_vault_transactions_constraint;
  /** input type for inserting data into table "pending_vault_transactions" */
  ['pending_vault_transactions_insert_input']: {
    chain_id?: number | undefined | null;
    claim_id?: ValueTypes['bigint'] | undefined | null;
    distribution?:
      | ValueTypes['distributions_obj_rel_insert_input']
      | undefined
      | null;
    distribution_id?: ValueTypes['bigint'] | undefined | null;
    org_id?: ValueTypes['bigint'] | undefined | null;
    tx_hash?: string | undefined | null;
    tx_type?: ValueTypes['vault_tx_types_enum'] | undefined | null;
  };
  /** response of any mutation on the table "pending_vault_transactions" */
  ['pending_vault_transactions_mutation_response']: AliasType<{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | `@${string}`;
    /** data from the rows affected by the mutation */
    returning?: ValueTypes['pending_vault_transactions'];
    __typename?: boolean | `@${string}`;
  }>;
  /** on_conflict condition type for table "pending_vault_transactions" */
  ['pending_vault_transactions_on_conflict']: {
    constraint: ValueTypes['pending_vault_transactions_constraint'];
    update_columns: Array<
      ValueTypes['pending_vault_transactions_update_column']
    >;
    where?:
      | ValueTypes['pending_vault_transactions_bool_exp']
      | undefined
      | null;
  };
  /** Ordering options when selecting data from "pending_vault_transactions". */
  ['pending_vault_transactions_order_by']: {
    chain_id?: ValueTypes['order_by'] | undefined | null;
    claim_id?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    distribution?: ValueTypes['distributions_order_by'] | undefined | null;
    distribution_id?: ValueTypes['order_by'] | undefined | null;
    org_id?: ValueTypes['order_by'] | undefined | null;
    organization?: ValueTypes['organizations_order_by'] | undefined | null;
    profile?: ValueTypes['profiles_order_by'] | undefined | null;
    tx_hash?: ValueTypes['order_by'] | undefined | null;
    tx_type?: ValueTypes['order_by'] | undefined | null;
    vault_tx_type?: ValueTypes['vault_tx_types_order_by'] | undefined | null;
  };
  /** select columns of table "pending_vault_transactions" */
  ['pending_vault_transactions_select_column']: pending_vault_transactions_select_column;
  /** Streaming cursor of the table "pending_vault_transactions" */
  ['pending_vault_transactions_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['pending_vault_transactions_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['pending_vault_transactions_stream_cursor_value_input']: {
    chain_id?: number | undefined | null;
    claim_id?: ValueTypes['bigint'] | undefined | null;
    created_by?: ValueTypes['bigint'] | undefined | null;
    distribution_id?: ValueTypes['bigint'] | undefined | null;
    org_id?: ValueTypes['bigint'] | undefined | null;
    tx_hash?: string | undefined | null;
    tx_type?: ValueTypes['vault_tx_types_enum'] | undefined | null;
  };
  /** placeholder for update columns of table "pending_vault_transactions" (current role has no relevant permissions) */
  ['pending_vault_transactions_update_column']: pending_vault_transactions_update_column;
  /** Poap event info */
  ['poap_events']: AliasType<{
    city?: boolean | `@${string}`;
    country?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    description?: boolean | `@${string}`;
    embedding?: boolean | `@${string}`;
    end_date?: boolean | `@${string}`;
    event_url?: boolean | `@${string}`;
    expiry_date?: boolean | `@${string}`;
    fancy_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    image_url?: boolean | `@${string}`;
    name?: boolean | `@${string}`;
    poap_id?: boolean | `@${string}`;
    similarity?: boolean | `@${string}`;
    start_date?: boolean | `@${string}`;
    supply?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    year?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregated selection of "poap_events" */
  ['poap_events_aggregate']: AliasType<{
    aggregate?: ValueTypes['poap_events_aggregate_fields'];
    nodes?: ValueTypes['poap_events'];
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregate fields of "poap_events" */
  ['poap_events_aggregate_fields']: AliasType<{
    avg?: ValueTypes['poap_events_avg_fields'];
    count?: [
      {
        columns?:
          | Array<ValueTypes['poap_events_select_column']>
          | undefined
          | null;
        distinct?: boolean | undefined | null;
      },
      boolean | `@${string}`,
    ];
    max?: ValueTypes['poap_events_max_fields'];
    min?: ValueTypes['poap_events_min_fields'];
    stddev?: ValueTypes['poap_events_stddev_fields'];
    stddev_pop?: ValueTypes['poap_events_stddev_pop_fields'];
    stddev_samp?: ValueTypes['poap_events_stddev_samp_fields'];
    sum?: ValueTypes['poap_events_sum_fields'];
    var_pop?: ValueTypes['poap_events_var_pop_fields'];
    var_samp?: ValueTypes['poap_events_var_samp_fields'];
    variance?: ValueTypes['poap_events_variance_fields'];
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregate avg on columns */
  ['poap_events_avg_fields']: AliasType<{
    id?: boolean | `@${string}`;
    poap_id?: boolean | `@${string}`;
    similarity?: boolean | `@${string}`;
    supply?: boolean | `@${string}`;
    year?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "poap_events". All fields are combined with a logical 'AND'. */
  ['poap_events_bool_exp']: {
    _and?: Array<ValueTypes['poap_events_bool_exp']> | undefined | null;
    _not?: ValueTypes['poap_events_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['poap_events_bool_exp']> | undefined | null;
    city?: ValueTypes['String_comparison_exp'] | undefined | null;
    country?: ValueTypes['String_comparison_exp'] | undefined | null;
    created_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    description?: ValueTypes['String_comparison_exp'] | undefined | null;
    embedding?: ValueTypes['vector_comparison_exp'] | undefined | null;
    end_date?: ValueTypes['date_comparison_exp'] | undefined | null;
    event_url?: ValueTypes['String_comparison_exp'] | undefined | null;
    expiry_date?: ValueTypes['date_comparison_exp'] | undefined | null;
    fancy_id?: ValueTypes['String_comparison_exp'] | undefined | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    image_url?: ValueTypes['String_comparison_exp'] | undefined | null;
    name?: ValueTypes['String_comparison_exp'] | undefined | null;
    poap_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    similarity?: ValueTypes['float8_comparison_exp'] | undefined | null;
    start_date?: ValueTypes['date_comparison_exp'] | undefined | null;
    supply?: ValueTypes['Int_comparison_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    year?: ValueTypes['Int_comparison_exp'] | undefined | null;
  };
  /** aggregate max on columns */
  ['poap_events_max_fields']: AliasType<{
    city?: boolean | `@${string}`;
    country?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    description?: boolean | `@${string}`;
    end_date?: boolean | `@${string}`;
    event_url?: boolean | `@${string}`;
    expiry_date?: boolean | `@${string}`;
    fancy_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    image_url?: boolean | `@${string}`;
    name?: boolean | `@${string}`;
    poap_id?: boolean | `@${string}`;
    similarity?: boolean | `@${string}`;
    start_date?: boolean | `@${string}`;
    supply?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    year?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregate min on columns */
  ['poap_events_min_fields']: AliasType<{
    city?: boolean | `@${string}`;
    country?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    description?: boolean | `@${string}`;
    end_date?: boolean | `@${string}`;
    event_url?: boolean | `@${string}`;
    expiry_date?: boolean | `@${string}`;
    fancy_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    image_url?: boolean | `@${string}`;
    name?: boolean | `@${string}`;
    poap_id?: boolean | `@${string}`;
    similarity?: boolean | `@${string}`;
    start_date?: boolean | `@${string}`;
    supply?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    year?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Ordering options when selecting data from "poap_events". */
  ['poap_events_order_by']: {
    city?: ValueTypes['order_by'] | undefined | null;
    country?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    description?: ValueTypes['order_by'] | undefined | null;
    embedding?: ValueTypes['order_by'] | undefined | null;
    end_date?: ValueTypes['order_by'] | undefined | null;
    event_url?: ValueTypes['order_by'] | undefined | null;
    expiry_date?: ValueTypes['order_by'] | undefined | null;
    fancy_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    image_url?: ValueTypes['order_by'] | undefined | null;
    name?: ValueTypes['order_by'] | undefined | null;
    poap_id?: ValueTypes['order_by'] | undefined | null;
    similarity?: ValueTypes['order_by'] | undefined | null;
    start_date?: ValueTypes['order_by'] | undefined | null;
    supply?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    year?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "poap_events" */
  ['poap_events_select_column']: poap_events_select_column;
  /** aggregate stddev on columns */
  ['poap_events_stddev_fields']: AliasType<{
    id?: boolean | `@${string}`;
    poap_id?: boolean | `@${string}`;
    similarity?: boolean | `@${string}`;
    supply?: boolean | `@${string}`;
    year?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregate stddev_pop on columns */
  ['poap_events_stddev_pop_fields']: AliasType<{
    id?: boolean | `@${string}`;
    poap_id?: boolean | `@${string}`;
    similarity?: boolean | `@${string}`;
    supply?: boolean | `@${string}`;
    year?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregate stddev_samp on columns */
  ['poap_events_stddev_samp_fields']: AliasType<{
    id?: boolean | `@${string}`;
    poap_id?: boolean | `@${string}`;
    similarity?: boolean | `@${string}`;
    supply?: boolean | `@${string}`;
    year?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Streaming cursor of the table "poap_events" */
  ['poap_events_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['poap_events_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['poap_events_stream_cursor_value_input']: {
    city?: string | undefined | null;
    country?: string | undefined | null;
    created_at?: ValueTypes['timestamptz'] | undefined | null;
    description?: string | undefined | null;
    embedding?: ValueTypes['vector'] | undefined | null;
    end_date?: ValueTypes['date'] | undefined | null;
    event_url?: string | undefined | null;
    expiry_date?: ValueTypes['date'] | undefined | null;
    fancy_id?: string | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    image_url?: string | undefined | null;
    name?: string | undefined | null;
    poap_id?: number | undefined | null;
    similarity?: ValueTypes['float8'] | undefined | null;
    start_date?: ValueTypes['date'] | undefined | null;
    supply?: number | undefined | null;
    updated_at?: ValueTypes['timestamptz'] | undefined | null;
    year?: number | undefined | null;
  };
  /** aggregate sum on columns */
  ['poap_events_sum_fields']: AliasType<{
    id?: boolean | `@${string}`;
    poap_id?: boolean | `@${string}`;
    similarity?: boolean | `@${string}`;
    supply?: boolean | `@${string}`;
    year?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregate var_pop on columns */
  ['poap_events_var_pop_fields']: AliasType<{
    id?: boolean | `@${string}`;
    poap_id?: boolean | `@${string}`;
    similarity?: boolean | `@${string}`;
    supply?: boolean | `@${string}`;
    year?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregate var_samp on columns */
  ['poap_events_var_samp_fields']: AliasType<{
    id?: boolean | `@${string}`;
    poap_id?: boolean | `@${string}`;
    similarity?: boolean | `@${string}`;
    supply?: boolean | `@${string}`;
    year?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregate variance on columns */
  ['poap_events_variance_fields']: AliasType<{
    id?: boolean | `@${string}`;
    poap_id?: boolean | `@${string}`;
    similarity?: boolean | `@${string}`;
    supply?: boolean | `@${string}`;
    year?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** columns and relationships of "poap_holders" */
  ['poap_holders']: AliasType<{
    address?: boolean | `@${string}`;
    chain?: boolean | `@${string}`;
    /** An object relationship */
    cosoul?: ValueTypes['cosouls'];
    created_at?: boolean | `@${string}`;
    /** An object relationship */
    event?: ValueTypes['poap_events'];
    event_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    poap_created?: boolean | `@${string}`;
    token_id?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregated selection of "poap_holders" */
  ['poap_holders_aggregate']: AliasType<{
    aggregate?: ValueTypes['poap_holders_aggregate_fields'];
    nodes?: ValueTypes['poap_holders'];
    __typename?: boolean | `@${string}`;
  }>;
  ['poap_holders_aggregate_bool_exp']: {
    count?:
      | ValueTypes['poap_holders_aggregate_bool_exp_count']
      | undefined
      | null;
  };
  ['poap_holders_aggregate_bool_exp_count']: {
    arguments?:
      | Array<ValueTypes['poap_holders_select_column']>
      | undefined
      | null;
    distinct?: boolean | undefined | null;
    filter?: ValueTypes['poap_holders_bool_exp'] | undefined | null;
    predicate: ValueTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "poap_holders" */
  ['poap_holders_aggregate_fields']: AliasType<{
    avg?: ValueTypes['poap_holders_avg_fields'];
    count?: [
      {
        columns?:
          | Array<ValueTypes['poap_holders_select_column']>
          | undefined
          | null;
        distinct?: boolean | undefined | null;
      },
      boolean | `@${string}`,
    ];
    max?: ValueTypes['poap_holders_max_fields'];
    min?: ValueTypes['poap_holders_min_fields'];
    stddev?: ValueTypes['poap_holders_stddev_fields'];
    stddev_pop?: ValueTypes['poap_holders_stddev_pop_fields'];
    stddev_samp?: ValueTypes['poap_holders_stddev_samp_fields'];
    sum?: ValueTypes['poap_holders_sum_fields'];
    var_pop?: ValueTypes['poap_holders_var_pop_fields'];
    var_samp?: ValueTypes['poap_holders_var_samp_fields'];
    variance?: ValueTypes['poap_holders_variance_fields'];
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "poap_holders" */
  ['poap_holders_aggregate_order_by']: {
    avg?: ValueTypes['poap_holders_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['poap_holders_max_order_by'] | undefined | null;
    min?: ValueTypes['poap_holders_min_order_by'] | undefined | null;
    stddev?: ValueTypes['poap_holders_stddev_order_by'] | undefined | null;
    stddev_pop?:
      | ValueTypes['poap_holders_stddev_pop_order_by']
      | undefined
      | null;
    stddev_samp?:
      | ValueTypes['poap_holders_stddev_samp_order_by']
      | undefined
      | null;
    sum?: ValueTypes['poap_holders_sum_order_by'] | undefined | null;
    var_pop?: ValueTypes['poap_holders_var_pop_order_by'] | undefined | null;
    var_samp?: ValueTypes['poap_holders_var_samp_order_by'] | undefined | null;
    variance?: ValueTypes['poap_holders_variance_order_by'] | undefined | null;
  };
  /** aggregate avg on columns */
  ['poap_holders_avg_fields']: AliasType<{
    event_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    token_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by avg() on columns of table "poap_holders" */
  ['poap_holders_avg_order_by']: {
    event_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    token_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "poap_holders". All fields are combined with a logical 'AND'. */
  ['poap_holders_bool_exp']: {
    _and?: Array<ValueTypes['poap_holders_bool_exp']> | undefined | null;
    _not?: ValueTypes['poap_holders_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['poap_holders_bool_exp']> | undefined | null;
    address?: ValueTypes['citext_comparison_exp'] | undefined | null;
    chain?: ValueTypes['String_comparison_exp'] | undefined | null;
    cosoul?: ValueTypes['cosouls_bool_exp'] | undefined | null;
    created_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    event?: ValueTypes['poap_events_bool_exp'] | undefined | null;
    event_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    poap_created?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    token_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
  };
  /** aggregate max on columns */
  ['poap_holders_max_fields']: AliasType<{
    address?: boolean | `@${string}`;
    chain?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    event_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    poap_created?: boolean | `@${string}`;
    token_id?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by max() on columns of table "poap_holders" */
  ['poap_holders_max_order_by']: {
    address?: ValueTypes['order_by'] | undefined | null;
    chain?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    event_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    poap_created?: ValueTypes['order_by'] | undefined | null;
    token_id?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate min on columns */
  ['poap_holders_min_fields']: AliasType<{
    address?: boolean | `@${string}`;
    chain?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    event_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    poap_created?: boolean | `@${string}`;
    token_id?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by min() on columns of table "poap_holders" */
  ['poap_holders_min_order_by']: {
    address?: ValueTypes['order_by'] | undefined | null;
    chain?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    event_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    poap_created?: ValueTypes['order_by'] | undefined | null;
    token_id?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** Ordering options when selecting data from "poap_holders". */
  ['poap_holders_order_by']: {
    address?: ValueTypes['order_by'] | undefined | null;
    chain?: ValueTypes['order_by'] | undefined | null;
    cosoul?: ValueTypes['cosouls_order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    event?: ValueTypes['poap_events_order_by'] | undefined | null;
    event_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    poap_created?: ValueTypes['order_by'] | undefined | null;
    token_id?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "poap_holders" */
  ['poap_holders_select_column']: poap_holders_select_column;
  /** aggregate stddev on columns */
  ['poap_holders_stddev_fields']: AliasType<{
    event_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    token_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev() on columns of table "poap_holders" */
  ['poap_holders_stddev_order_by']: {
    event_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    token_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_pop on columns */
  ['poap_holders_stddev_pop_fields']: AliasType<{
    event_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    token_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_pop() on columns of table "poap_holders" */
  ['poap_holders_stddev_pop_order_by']: {
    event_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    token_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_samp on columns */
  ['poap_holders_stddev_samp_fields']: AliasType<{
    event_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    token_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_samp() on columns of table "poap_holders" */
  ['poap_holders_stddev_samp_order_by']: {
    event_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    token_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "poap_holders" */
  ['poap_holders_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['poap_holders_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['poap_holders_stream_cursor_value_input']: {
    address?: ValueTypes['citext'] | undefined | null;
    chain?: string | undefined | null;
    created_at?: ValueTypes['timestamptz'] | undefined | null;
    event_id?: ValueTypes['bigint'] | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    poap_created?: ValueTypes['timestamptz'] | undefined | null;
    token_id?: ValueTypes['bigint'] | undefined | null;
    updated_at?: ValueTypes['timestamptz'] | undefined | null;
  };
  /** aggregate sum on columns */
  ['poap_holders_sum_fields']: AliasType<{
    event_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    token_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by sum() on columns of table "poap_holders" */
  ['poap_holders_sum_order_by']: {
    event_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    token_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate var_pop on columns */
  ['poap_holders_var_pop_fields']: AliasType<{
    event_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    token_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_pop() on columns of table "poap_holders" */
  ['poap_holders_var_pop_order_by']: {
    event_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    token_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate var_samp on columns */
  ['poap_holders_var_samp_fields']: AliasType<{
    event_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    token_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_samp() on columns of table "poap_holders" */
  ['poap_holders_var_samp_order_by']: {
    event_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    token_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate variance on columns */
  ['poap_holders_variance_fields']: AliasType<{
    event_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    token_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by variance() on columns of table "poap_holders" */
  ['poap_holders_variance_order_by']: {
    event_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    token_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** columns and relationships of "private_stream_visibility" */
  ['private_stream_visibility']: AliasType<{
    created_at?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    view_profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "private_stream_visibility" */
  ['private_stream_visibility_aggregate_order_by']: {
    avg?:
      | ValueTypes['private_stream_visibility_avg_order_by']
      | undefined
      | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?:
      | ValueTypes['private_stream_visibility_max_order_by']
      | undefined
      | null;
    min?:
      | ValueTypes['private_stream_visibility_min_order_by']
      | undefined
      | null;
    stddev?:
      | ValueTypes['private_stream_visibility_stddev_order_by']
      | undefined
      | null;
    stddev_pop?:
      | ValueTypes['private_stream_visibility_stddev_pop_order_by']
      | undefined
      | null;
    stddev_samp?:
      | ValueTypes['private_stream_visibility_stddev_samp_order_by']
      | undefined
      | null;
    sum?:
      | ValueTypes['private_stream_visibility_sum_order_by']
      | undefined
      | null;
    var_pop?:
      | ValueTypes['private_stream_visibility_var_pop_order_by']
      | undefined
      | null;
    var_samp?:
      | ValueTypes['private_stream_visibility_var_samp_order_by']
      | undefined
      | null;
    variance?:
      | ValueTypes['private_stream_visibility_variance_order_by']
      | undefined
      | null;
  };
  /** order by avg() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_avg_order_by']: {
    profile_id?: ValueTypes['order_by'] | undefined | null;
    view_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "private_stream_visibility". All fields are combined with a logical 'AND'. */
  ['private_stream_visibility_bool_exp']: {
    _and?:
      | Array<ValueTypes['private_stream_visibility_bool_exp']>
      | undefined
      | null;
    _not?: ValueTypes['private_stream_visibility_bool_exp'] | undefined | null;
    _or?:
      | Array<ValueTypes['private_stream_visibility_bool_exp']>
      | undefined
      | null;
    created_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    profile_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    view_profile_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
  };
  /** order by max() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_max_order_by']: {
    created_at?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    view_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by min() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_min_order_by']: {
    created_at?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    view_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Ordering options when selecting data from "private_stream_visibility". */
  ['private_stream_visibility_order_by']: {
    created_at?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    view_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "private_stream_visibility" */
  ['private_stream_visibility_select_column']: private_stream_visibility_select_column;
  /** order by stddev() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_stddev_order_by']: {
    profile_id?: ValueTypes['order_by'] | undefined | null;
    view_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_pop() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_stddev_pop_order_by']: {
    profile_id?: ValueTypes['order_by'] | undefined | null;
    view_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_samp() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_stddev_samp_order_by']: {
    profile_id?: ValueTypes['order_by'] | undefined | null;
    view_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "private_stream_visibility" */
  ['private_stream_visibility_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['private_stream_visibility_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['private_stream_visibility_stream_cursor_value_input']: {
    created_at?: ValueTypes['timestamptz'] | undefined | null;
    profile_id?: ValueTypes['bigint'] | undefined | null;
    view_profile_id?: ValueTypes['bigint'] | undefined | null;
  };
  /** order by sum() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_sum_order_by']: {
    profile_id?: ValueTypes['order_by'] | undefined | null;
    view_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by var_pop() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_var_pop_order_by']: {
    profile_id?: ValueTypes['order_by'] | undefined | null;
    view_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by var_samp() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_var_samp_order_by']: {
    profile_id?: ValueTypes['order_by'] | undefined | null;
    view_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by variance() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_variance_order_by']: {
    profile_id?: ValueTypes['order_by'] | undefined | null;
    view_profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** columns and relationships of "profile_skills" */
  ['profile_skills']: AliasType<{
    created_at?: boolean | `@${string}`;
    /** An object relationship */
    profile?: ValueTypes['profiles'];
    profile_id?: boolean | `@${string}`;
    /** An object relationship */
    profile_public?: ValueTypes['profiles_public'];
    /** An object relationship */
    skill?: ValueTypes['skills'];
    skill_name?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "profile_skills" */
  ['profile_skills_aggregate_order_by']: {
    avg?: ValueTypes['profile_skills_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['profile_skills_max_order_by'] | undefined | null;
    min?: ValueTypes['profile_skills_min_order_by'] | undefined | null;
    stddev?: ValueTypes['profile_skills_stddev_order_by'] | undefined | null;
    stddev_pop?:
      | ValueTypes['profile_skills_stddev_pop_order_by']
      | undefined
      | null;
    stddev_samp?:
      | ValueTypes['profile_skills_stddev_samp_order_by']
      | undefined
      | null;
    sum?: ValueTypes['profile_skills_sum_order_by'] | undefined | null;
    var_pop?: ValueTypes['profile_skills_var_pop_order_by'] | undefined | null;
    var_samp?:
      | ValueTypes['profile_skills_var_samp_order_by']
      | undefined
      | null;
    variance?:
      | ValueTypes['profile_skills_variance_order_by']
      | undefined
      | null;
  };
  /** order by avg() on columns of table "profile_skills" */
  ['profile_skills_avg_order_by']: {
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "profile_skills". All fields are combined with a logical 'AND'. */
  ['profile_skills_bool_exp']: {
    _and?: Array<ValueTypes['profile_skills_bool_exp']> | undefined | null;
    _not?: ValueTypes['profile_skills_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['profile_skills_bool_exp']> | undefined | null;
    created_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    profile?: ValueTypes['profiles_bool_exp'] | undefined | null;
    profile_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    profile_public?: ValueTypes['profiles_public_bool_exp'] | undefined | null;
    skill?: ValueTypes['skills_bool_exp'] | undefined | null;
    skill_name?: ValueTypes['citext_comparison_exp'] | undefined | null;
  };
  /** unique or primary key constraints on table "profile_skills" */
  ['profile_skills_constraint']: profile_skills_constraint;
  /** input type for inserting data into table "profile_skills" */
  ['profile_skills_insert_input']: {
    profile_id?: number | undefined | null;
    skill?: ValueTypes['skills_obj_rel_insert_input'] | undefined | null;
    skill_name?: ValueTypes['citext'] | undefined | null;
  };
  /** order by max() on columns of table "profile_skills" */
  ['profile_skills_max_order_by']: {
    created_at?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    skill_name?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by min() on columns of table "profile_skills" */
  ['profile_skills_min_order_by']: {
    created_at?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    skill_name?: ValueTypes['order_by'] | undefined | null;
  };
  /** response of any mutation on the table "profile_skills" */
  ['profile_skills_mutation_response']: AliasType<{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | `@${string}`;
    /** data from the rows affected by the mutation */
    returning?: ValueTypes['profile_skills'];
    __typename?: boolean | `@${string}`;
  }>;
  /** input type for inserting object relation for remote table "profile_skills" */
  ['profile_skills_obj_rel_insert_input']: {
    data: ValueTypes['profile_skills_insert_input'];
    /** upsert condition */
    on_conflict?: ValueTypes['profile_skills_on_conflict'] | undefined | null;
  };
  /** on_conflict condition type for table "profile_skills" */
  ['profile_skills_on_conflict']: {
    constraint: ValueTypes['profile_skills_constraint'];
    update_columns: Array<ValueTypes['profile_skills_update_column']>;
    where?: ValueTypes['profile_skills_bool_exp'] | undefined | null;
  };
  /** Ordering options when selecting data from "profile_skills". */
  ['profile_skills_order_by']: {
    created_at?: ValueTypes['order_by'] | undefined | null;
    profile?: ValueTypes['profiles_order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    profile_public?: ValueTypes['profiles_public_order_by'] | undefined | null;
    skill?: ValueTypes['skills_order_by'] | undefined | null;
    skill_name?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "profile_skills" */
  ['profile_skills_select_column']: profile_skills_select_column;
  /** order by stddev() on columns of table "profile_skills" */
  ['profile_skills_stddev_order_by']: {
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_pop() on columns of table "profile_skills" */
  ['profile_skills_stddev_pop_order_by']: {
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_samp() on columns of table "profile_skills" */
  ['profile_skills_stddev_samp_order_by']: {
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "profile_skills" */
  ['profile_skills_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['profile_skills_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['profile_skills_stream_cursor_value_input']: {
    created_at?: ValueTypes['timestamptz'] | undefined | null;
    profile_id?: number | undefined | null;
    skill_name?: ValueTypes['citext'] | undefined | null;
  };
  /** order by sum() on columns of table "profile_skills" */
  ['profile_skills_sum_order_by']: {
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** placeholder for update columns of table "profile_skills" (current role has no relevant permissions) */
  ['profile_skills_update_column']: profile_skills_update_column;
  /** order by var_pop() on columns of table "profile_skills" */
  ['profile_skills_var_pop_order_by']: {
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by var_samp() on columns of table "profile_skills" */
  ['profile_skills_var_samp_order_by']: {
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by variance() on columns of table "profile_skills" */
  ['profile_skills_variance_order_by']: {
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Coordinape user accounts that can belong to one or many circles via the relationship to the users table */
  ['profiles']: AliasType<{
    address?: boolean | `@${string}`;
    app_emails?: boolean | `@${string}`;
    avatar?: boolean | `@${string}`;
    background?: boolean | `@${string}`;
    bio?: boolean | `@${string}`;
    claims?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['claims_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['claims_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['claims_bool_exp'] | undefined | null;
      },
      ValueTypes['claims'],
    ];
    claims_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['claims_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['claims_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['claims_bool_exp'] | undefined | null;
      },
      ValueTypes['claims_aggregate'],
    ];
    colinks_gives_received?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['colinks_gives_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['colinks_gives_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['colinks_gives_bool_exp'] | undefined | null;
      },
      ValueTypes['colinks_gives'],
    ];
    colinks_gives_received_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['colinks_gives_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['colinks_gives_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['colinks_gives_bool_exp'] | undefined | null;
      },
      ValueTypes['colinks_gives_aggregate'],
    ];
    colinks_gives_sent?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['colinks_gives_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['colinks_gives_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['colinks_gives_bool_exp'] | undefined | null;
      },
      ValueTypes['colinks_gives'],
    ];
    colinks_gives_sent_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['colinks_gives_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['colinks_gives_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['colinks_gives_bool_exp'] | undefined | null;
      },
      ValueTypes['colinks_gives_aggregate'],
    ];
    colinks_notification_emails?: boolean | `@${string}`;
    colinks_product_emails?: boolean | `@${string}`;
    /** An object relationship */
    cosoul?: ValueTypes['cosouls'];
    created_at?: boolean | `@${string}`;
    description?: boolean | `@${string}`;
    discord_username?: boolean | `@${string}`;
    distributions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['distributions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['distributions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['distributions_bool_exp'] | undefined | null;
      },
      ValueTypes['distributions'],
    ];
    distributions_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['distributions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['distributions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['distributions_bool_exp'] | undefined | null;
      },
      ValueTypes['distributions_aggregate'],
    ];
    emails?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['emails_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['emails_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['emails_bool_exp'] | undefined | null;
      },
      ValueTypes['emails'],
    ];
    /** An object relationship */
    farcaster_account?: ValueTypes['farcaster_accounts'];
    github_username?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    invite_code?: boolean | `@${string}`;
    invite_code_redeemed_at?: boolean | `@${string}`;
    invite_code_requested_at?: boolean | `@${string}`;
    invite_code_sent_at?: boolean | `@${string}`;
    invite_codes?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['invite_codes_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['invite_codes_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['invite_codes_bool_exp'] | undefined | null;
      },
      ValueTypes['invite_codes'],
    ];
    invite_codes_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['invite_codes_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['invite_codes_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['invite_codes_bool_exp'] | undefined | null;
      },
      ValueTypes['invite_codes_aggregate'],
    ];
    invited_by?: boolean | `@${string}`;
    last_read_notification_id?: boolean | `@${string}`;
    links?: boolean | `@${string}`;
    links_held?: boolean | `@${string}`;
    medium_username?: boolean | `@${string}`;
    name?: boolean | `@${string}`;
    nominees?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['nominees_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['nominees_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['nominees_bool_exp'] | undefined | null;
      },
      ValueTypes['nominees'],
    ];
    nominees_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['nominees_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['nominees_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['nominees_bool_exp'] | undefined | null;
      },
      ValueTypes['nominees_aggregate'],
    ];
    org_members?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['org_members_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['org_members_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['org_members_bool_exp'] | undefined | null;
      },
      ValueTypes['org_members'],
    ];
    product_emails?: boolean | `@${string}`;
    /** An object relationship */
    profile_skills?: ValueTypes['profile_skills'];
    /** An object relationship */
    reputation_score?: ValueTypes['reputation_scores'];
    skills?: boolean | `@${string}`;
    telegram_username?: boolean | `@${string}`;
    tos_agreed_at?: boolean | `@${string}`;
    twitter_username?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    users?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['users_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['users_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['users_bool_exp'] | undefined | null;
      },
      ValueTypes['users'],
    ];
    vault_transactions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['vault_transactions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['vault_transactions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['vault_transactions_bool_exp'] | undefined | null;
      },
      ValueTypes['vault_transactions'],
    ];
    vaults?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['vaults_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['vaults_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['vaults_bool_exp'] | undefined | null;
      },
      ValueTypes['vaults'],
    ];
    website?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "profiles". All fields are combined with a logical 'AND'. */
  ['profiles_bool_exp']: {
    _and?: Array<ValueTypes['profiles_bool_exp']> | undefined | null;
    _not?: ValueTypes['profiles_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['profiles_bool_exp']> | undefined | null;
    address?: ValueTypes['String_comparison_exp'] | undefined | null;
    app_emails?: ValueTypes['Boolean_comparison_exp'] | undefined | null;
    avatar?: ValueTypes['String_comparison_exp'] | undefined | null;
    background?: ValueTypes['String_comparison_exp'] | undefined | null;
    bio?: ValueTypes['String_comparison_exp'] | undefined | null;
    claims?: ValueTypes['claims_bool_exp'] | undefined | null;
    claims_aggregate?:
      | ValueTypes['claims_aggregate_bool_exp']
      | undefined
      | null;
    colinks_gives_received?:
      | ValueTypes['colinks_gives_bool_exp']
      | undefined
      | null;
    colinks_gives_received_aggregate?:
      | ValueTypes['colinks_gives_aggregate_bool_exp']
      | undefined
      | null;
    colinks_gives_sent?:
      | ValueTypes['colinks_gives_bool_exp']
      | undefined
      | null;
    colinks_gives_sent_aggregate?:
      | ValueTypes['colinks_gives_aggregate_bool_exp']
      | undefined
      | null;
    colinks_notification_emails?:
      | ValueTypes['Boolean_comparison_exp']
      | undefined
      | null;
    colinks_product_emails?:
      | ValueTypes['Boolean_comparison_exp']
      | undefined
      | null;
    cosoul?: ValueTypes['cosouls_bool_exp'] | undefined | null;
    created_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    description?: ValueTypes['String_comparison_exp'] | undefined | null;
    discord_username?: ValueTypes['String_comparison_exp'] | undefined | null;
    distributions?: ValueTypes['distributions_bool_exp'] | undefined | null;
    distributions_aggregate?:
      | ValueTypes['distributions_aggregate_bool_exp']
      | undefined
      | null;
    emails?: ValueTypes['emails_bool_exp'] | undefined | null;
    farcaster_account?:
      | ValueTypes['farcaster_accounts_bool_exp']
      | undefined
      | null;
    github_username?: ValueTypes['String_comparison_exp'] | undefined | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    invite_code?: ValueTypes['uuid_comparison_exp'] | undefined | null;
    invite_code_redeemed_at?:
      | ValueTypes['timestamptz_comparison_exp']
      | undefined
      | null;
    invite_code_requested_at?:
      | ValueTypes['timestamptz_comparison_exp']
      | undefined
      | null;
    invite_code_sent_at?:
      | ValueTypes['timestamptz_comparison_exp']
      | undefined
      | null;
    invite_codes?: ValueTypes['invite_codes_bool_exp'] | undefined | null;
    invite_codes_aggregate?:
      | ValueTypes['invite_codes_aggregate_bool_exp']
      | undefined
      | null;
    invited_by?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    last_read_notification_id?:
      | ValueTypes['Int_comparison_exp']
      | undefined
      | null;
    links?: ValueTypes['Int_comparison_exp'] | undefined | null;
    links_held?: ValueTypes['Int_comparison_exp'] | undefined | null;
    medium_username?: ValueTypes['String_comparison_exp'] | undefined | null;
    name?: ValueTypes['citext_comparison_exp'] | undefined | null;
    nominees?: ValueTypes['nominees_bool_exp'] | undefined | null;
    nominees_aggregate?:
      | ValueTypes['nominees_aggregate_bool_exp']
      | undefined
      | null;
    org_members?: ValueTypes['org_members_bool_exp'] | undefined | null;
    product_emails?: ValueTypes['Boolean_comparison_exp'] | undefined | null;
    profile_skills?: ValueTypes['profile_skills_bool_exp'] | undefined | null;
    reputation_score?:
      | ValueTypes['reputation_scores_bool_exp']
      | undefined
      | null;
    skills?: ValueTypes['String_comparison_exp'] | undefined | null;
    telegram_username?: ValueTypes['String_comparison_exp'] | undefined | null;
    tos_agreed_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    twitter_username?: ValueTypes['String_comparison_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    users?: ValueTypes['users_bool_exp'] | undefined | null;
    vault_transactions?:
      | ValueTypes['vault_transactions_bool_exp']
      | undefined
      | null;
    vaults?: ValueTypes['vaults_bool_exp'] | undefined | null;
    website?: ValueTypes['String_comparison_exp'] | undefined | null;
  };
  /** input type for incrementing numeric columns in table "profiles" */
  ['profiles_inc_input']: {
    last_read_notification_id?: number | undefined | null;
  };
  /** response of any mutation on the table "profiles" */
  ['profiles_mutation_response']: AliasType<{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | `@${string}`;
    /** data from the rows affected by the mutation */
    returning?: ValueTypes['profiles'];
    __typename?: boolean | `@${string}`;
  }>;
  /** Ordering options when selecting data from "profiles". */
  ['profiles_order_by']: {
    address?: ValueTypes['order_by'] | undefined | null;
    app_emails?: ValueTypes['order_by'] | undefined | null;
    avatar?: ValueTypes['order_by'] | undefined | null;
    background?: ValueTypes['order_by'] | undefined | null;
    bio?: ValueTypes['order_by'] | undefined | null;
    claims_aggregate?:
      | ValueTypes['claims_aggregate_order_by']
      | undefined
      | null;
    colinks_gives_received_aggregate?:
      | ValueTypes['colinks_gives_aggregate_order_by']
      | undefined
      | null;
    colinks_gives_sent_aggregate?:
      | ValueTypes['colinks_gives_aggregate_order_by']
      | undefined
      | null;
    colinks_notification_emails?: ValueTypes['order_by'] | undefined | null;
    colinks_product_emails?: ValueTypes['order_by'] | undefined | null;
    cosoul?: ValueTypes['cosouls_order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    description?: ValueTypes['order_by'] | undefined | null;
    discord_username?: ValueTypes['order_by'] | undefined | null;
    distributions_aggregate?:
      | ValueTypes['distributions_aggregate_order_by']
      | undefined
      | null;
    emails_aggregate?:
      | ValueTypes['emails_aggregate_order_by']
      | undefined
      | null;
    farcaster_account?:
      | ValueTypes['farcaster_accounts_order_by']
      | undefined
      | null;
    github_username?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    invite_code?: ValueTypes['order_by'] | undefined | null;
    invite_code_redeemed_at?: ValueTypes['order_by'] | undefined | null;
    invite_code_requested_at?: ValueTypes['order_by'] | undefined | null;
    invite_code_sent_at?: ValueTypes['order_by'] | undefined | null;
    invite_codes_aggregate?:
      | ValueTypes['invite_codes_aggregate_order_by']
      | undefined
      | null;
    invited_by?: ValueTypes['order_by'] | undefined | null;
    last_read_notification_id?: ValueTypes['order_by'] | undefined | null;
    links?: ValueTypes['order_by'] | undefined | null;
    links_held?: ValueTypes['order_by'] | undefined | null;
    medium_username?: ValueTypes['order_by'] | undefined | null;
    name?: ValueTypes['order_by'] | undefined | null;
    nominees_aggregate?:
      | ValueTypes['nominees_aggregate_order_by']
      | undefined
      | null;
    org_members_aggregate?:
      | ValueTypes['org_members_aggregate_order_by']
      | undefined
      | null;
    product_emails?: ValueTypes['order_by'] | undefined | null;
    profile_skills?: ValueTypes['profile_skills_order_by'] | undefined | null;
    reputation_score?:
      | ValueTypes['reputation_scores_order_by']
      | undefined
      | null;
    skills?: ValueTypes['order_by'] | undefined | null;
    telegram_username?: ValueTypes['order_by'] | undefined | null;
    tos_agreed_at?: ValueTypes['order_by'] | undefined | null;
    twitter_username?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    users_aggregate?: ValueTypes['users_aggregate_order_by'] | undefined | null;
    vault_transactions_aggregate?:
      | ValueTypes['vault_transactions_aggregate_order_by']
      | undefined
      | null;
    vaults_aggregate?:
      | ValueTypes['vaults_aggregate_order_by']
      | undefined
      | null;
    website?: ValueTypes['order_by'] | undefined | null;
  };
  /** primary key columns input for table: profiles */
  ['profiles_pk_columns_input']: {
    id: ValueTypes['bigint'];
  };
  /** columns and relationships of "profiles_private" */
  ['profiles_private']: AliasType<{
    address?: boolean | `@${string}`;
    device_login_token?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    points_balance?: boolean | `@${string}`;
    points_checkpointed_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "profiles_private". All fields are combined with a logical 'AND'. */
  ['profiles_private_bool_exp']: {
    _and?: Array<ValueTypes['profiles_private_bool_exp']> | undefined | null;
    _not?: ValueTypes['profiles_private_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['profiles_private_bool_exp']> | undefined | null;
    address?: ValueTypes['String_comparison_exp'] | undefined | null;
    device_login_token?: ValueTypes['uuid_comparison_exp'] | undefined | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    points_balance?: ValueTypes['float8_comparison_exp'] | undefined | null;
    points_checkpointed_at?:
      | ValueTypes['timestamptz_comparison_exp']
      | undefined
      | null;
  };
  /** response of any mutation on the table "profiles_private" */
  ['profiles_private_mutation_response']: AliasType<{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | `@${string}`;
    /** data from the rows affected by the mutation */
    returning?: ValueTypes['profiles_private'];
    __typename?: boolean | `@${string}`;
  }>;
  /** Ordering options when selecting data from "profiles_private". */
  ['profiles_private_order_by']: {
    address?: ValueTypes['order_by'] | undefined | null;
    device_login_token?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    points_balance?: ValueTypes['order_by'] | undefined | null;
    points_checkpointed_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "profiles_private" */
  ['profiles_private_select_column']: profiles_private_select_column;
  /** input type for updating data in table "profiles_private" */
  ['profiles_private_set_input']: {
    device_login_token?: ValueTypes['uuid'] | undefined | null;
  };
  /** Streaming cursor of the table "profiles_private" */
  ['profiles_private_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['profiles_private_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['profiles_private_stream_cursor_value_input']: {
    address?: string | undefined | null;
    device_login_token?: ValueTypes['uuid'] | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    points_balance?: ValueTypes['float8'] | undefined | null;
    points_checkpointed_at?: ValueTypes['timestamptz'] | undefined | null;
  };
  ['profiles_private_updates']: {
    /** sets the columns of the filtered rows to the given values */
    _set?: ValueTypes['profiles_private_set_input'] | undefined | null;
    /** filter the rows which have to be updated */
    where: ValueTypes['profiles_private_bool_exp'];
  };
  /** columns and relationships of "profiles_public" */
  ['profiles_public']: AliasType<{
    address?: boolean | `@${string}`;
    avatar?: boolean | `@${string}`;
    colinks_given?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['colinks_gives_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['colinks_gives_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['colinks_gives_bool_exp'] | undefined | null;
      },
      ValueTypes['colinks_gives'],
    ];
    colinks_given_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['colinks_gives_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['colinks_gives_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['colinks_gives_bool_exp'] | undefined | null;
      },
      ValueTypes['colinks_gives_aggregate'],
    ];
    colinks_gives?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['colinks_gives_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['colinks_gives_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['colinks_gives_bool_exp'] | undefined | null;
      },
      ValueTypes['colinks_gives'],
    ];
    colinks_gives_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['colinks_gives_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['colinks_gives_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['colinks_gives_bool_exp'] | undefined | null;
      },
      ValueTypes['colinks_gives_aggregate'],
    ];
    /** An object relationship */
    cosoul?: ValueTypes['cosouls'];
    created_at?: boolean | `@${string}`;
    description?: boolean | `@${string}`;
    /** An object relationship */
    farcaster_account?: ValueTypes['farcaster_accounts'];
    id?: boolean | `@${string}`;
    joined_colinks_at?: boolean | `@${string}`;
    link_holder?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['link_holders_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['link_holders_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['link_holders_bool_exp'] | undefined | null;
      },
      ValueTypes['link_holders'],
    ];
    link_holder_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['link_holders_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['link_holders_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['link_holders_bool_exp'] | undefined | null;
      },
      ValueTypes['link_holders_aggregate'],
    ];
    link_target?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['link_holders_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['link_holders_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['link_holders_bool_exp'] | undefined | null;
      },
      ValueTypes['link_holders'],
    ];
    link_target_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['link_holders_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['link_holders_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['link_holders_bool_exp'] | undefined | null;
      },
      ValueTypes['link_holders_aggregate'],
    ];
    links?: boolean | `@${string}`;
    links_held?: boolean | `@${string}`;
    mutes?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['mutes_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['mutes_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['mutes_bool_exp'] | undefined | null;
      },
      ValueTypes['mutes'],
    ];
    name?: boolean | `@${string}`;
    post_count?: boolean | `@${string}`;
    post_count_last_30_days?: boolean | `@${string}`;
    profile_skills?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['profile_skills_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['profile_skills_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['profile_skills_bool_exp'] | undefined | null;
      },
      ValueTypes['profile_skills'],
    ];
    /** An object relationship */
    reputation_score?: ValueTypes['reputation_scores'];
    website?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "profiles_public". All fields are combined with a logical 'AND'. */
  ['profiles_public_bool_exp']: {
    _and?: Array<ValueTypes['profiles_public_bool_exp']> | undefined | null;
    _not?: ValueTypes['profiles_public_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['profiles_public_bool_exp']> | undefined | null;
    address?: ValueTypes['String_comparison_exp'] | undefined | null;
    avatar?: ValueTypes['String_comparison_exp'] | undefined | null;
    colinks_given?: ValueTypes['colinks_gives_bool_exp'] | undefined | null;
    colinks_given_aggregate?:
      | ValueTypes['colinks_gives_aggregate_bool_exp']
      | undefined
      | null;
    colinks_gives?: ValueTypes['colinks_gives_bool_exp'] | undefined | null;
    colinks_gives_aggregate?:
      | ValueTypes['colinks_gives_aggregate_bool_exp']
      | undefined
      | null;
    cosoul?: ValueTypes['cosouls_bool_exp'] | undefined | null;
    created_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    description?: ValueTypes['String_comparison_exp'] | undefined | null;
    farcaster_account?:
      | ValueTypes['farcaster_accounts_bool_exp']
      | undefined
      | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    joined_colinks_at?:
      | ValueTypes['timestamptz_comparison_exp']
      | undefined
      | null;
    link_holder?: ValueTypes['link_holders_bool_exp'] | undefined | null;
    link_holder_aggregate?:
      | ValueTypes['link_holders_aggregate_bool_exp']
      | undefined
      | null;
    link_target?: ValueTypes['link_holders_bool_exp'] | undefined | null;
    link_target_aggregate?:
      | ValueTypes['link_holders_aggregate_bool_exp']
      | undefined
      | null;
    links?: ValueTypes['Int_comparison_exp'] | undefined | null;
    links_held?: ValueTypes['Int_comparison_exp'] | undefined | null;
    mutes?: ValueTypes['mutes_bool_exp'] | undefined | null;
    name?: ValueTypes['citext_comparison_exp'] | undefined | null;
    post_count?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    post_count_last_30_days?:
      | ValueTypes['bigint_comparison_exp']
      | undefined
      | null;
    profile_skills?: ValueTypes['profile_skills_bool_exp'] | undefined | null;
    reputation_score?:
      | ValueTypes['reputation_scores_bool_exp']
      | undefined
      | null;
    website?: ValueTypes['String_comparison_exp'] | undefined | null;
  };
  /** Ordering options when selecting data from "profiles_public". */
  ['profiles_public_order_by']: {
    address?: ValueTypes['order_by'] | undefined | null;
    avatar?: ValueTypes['order_by'] | undefined | null;
    colinks_given_aggregate?:
      | ValueTypes['colinks_gives_aggregate_order_by']
      | undefined
      | null;
    colinks_gives_aggregate?:
      | ValueTypes['colinks_gives_aggregate_order_by']
      | undefined
      | null;
    cosoul?: ValueTypes['cosouls_order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    description?: ValueTypes['order_by'] | undefined | null;
    farcaster_account?:
      | ValueTypes['farcaster_accounts_order_by']
      | undefined
      | null;
    id?: ValueTypes['order_by'] | undefined | null;
    joined_colinks_at?: ValueTypes['order_by'] | undefined | null;
    link_holder_aggregate?:
      | ValueTypes['link_holders_aggregate_order_by']
      | undefined
      | null;
    link_target_aggregate?:
      | ValueTypes['link_holders_aggregate_order_by']
      | undefined
      | null;
    links?: ValueTypes['order_by'] | undefined | null;
    links_held?: ValueTypes['order_by'] | undefined | null;
    mutes_aggregate?: ValueTypes['mutes_aggregate_order_by'] | undefined | null;
    name?: ValueTypes['order_by'] | undefined | null;
    post_count?: ValueTypes['order_by'] | undefined | null;
    post_count_last_30_days?: ValueTypes['order_by'] | undefined | null;
    profile_skills_aggregate?:
      | ValueTypes['profile_skills_aggregate_order_by']
      | undefined
      | null;
    reputation_score?:
      | ValueTypes['reputation_scores_order_by']
      | undefined
      | null;
    website?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "profiles_public" */
  ['profiles_public_select_column']: profiles_public_select_column;
  /** Streaming cursor of the table "profiles_public" */
  ['profiles_public_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['profiles_public_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['profiles_public_stream_cursor_value_input']: {
    address?: string | undefined | null;
    avatar?: string | undefined | null;
    created_at?: ValueTypes['timestamp'] | undefined | null;
    description?: string | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    joined_colinks_at?: ValueTypes['timestamptz'] | undefined | null;
    links?: number | undefined | null;
    links_held?: number | undefined | null;
    name?: ValueTypes['citext'] | undefined | null;
    post_count?: ValueTypes['bigint'] | undefined | null;
    post_count_last_30_days?: ValueTypes['bigint'] | undefined | null;
    website?: string | undefined | null;
  };
  /** select columns of table "profiles" */
  ['profiles_select_column']: profiles_select_column;
  /** input type for updating data in table "profiles" */
  ['profiles_set_input']: {
    app_emails?: boolean | undefined | null;
    avatar?: string | undefined | null;
    background?: string | undefined | null;
    bio?: string | undefined | null;
    colinks_notification_emails?: boolean | undefined | null;
    colinks_product_emails?: boolean | undefined | null;
    description?: string | undefined | null;
    discord_username?: string | undefined | null;
    github_username?: string | undefined | null;
    invite_code_redeemed_at?: ValueTypes['timestamptz'] | undefined | null;
    last_read_notification_id?: number | undefined | null;
    medium_username?: string | undefined | null;
    product_emails?: boolean | undefined | null;
    skills?: string | undefined | null;
    telegram_username?: string | undefined | null;
    twitter_username?: string | undefined | null;
    website?: string | undefined | null;
  };
  /** Streaming cursor of the table "profiles" */
  ['profiles_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['profiles_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['profiles_stream_cursor_value_input']: {
    address?: string | undefined | null;
    app_emails?: boolean | undefined | null;
    avatar?: string | undefined | null;
    background?: string | undefined | null;
    bio?: string | undefined | null;
    colinks_notification_emails?: boolean | undefined | null;
    colinks_product_emails?: boolean | undefined | null;
    created_at?: ValueTypes['timestamp'] | undefined | null;
    description?: string | undefined | null;
    discord_username?: string | undefined | null;
    github_username?: string | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    invite_code?: ValueTypes['uuid'] | undefined | null;
    invite_code_redeemed_at?: ValueTypes['timestamptz'] | undefined | null;
    invite_code_requested_at?: ValueTypes['timestamptz'] | undefined | null;
    invite_code_sent_at?: ValueTypes['timestamptz'] | undefined | null;
    invited_by?: ValueTypes['bigint'] | undefined | null;
    last_read_notification_id?: number | undefined | null;
    links?: number | undefined | null;
    links_held?: number | undefined | null;
    medium_username?: string | undefined | null;
    name?: ValueTypes['citext'] | undefined | null;
    product_emails?: boolean | undefined | null;
    skills?: string | undefined | null;
    telegram_username?: string | undefined | null;
    tos_agreed_at?: ValueTypes['timestamp'] | undefined | null;
    twitter_username?: string | undefined | null;
    updated_at?: ValueTypes['timestamp'] | undefined | null;
    website?: string | undefined | null;
  };
  ['profiles_updates']: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: ValueTypes['profiles_inc_input'] | undefined | null;
    /** sets the columns of the filtered rows to the given values */
    _set?: ValueTypes['profiles_set_input'] | undefined | null;
    /** filter the rows which have to be updated */
    where: ValueTypes['profiles_bool_exp'];
  };
  ['query_root']: AliasType<{
    activities?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['activities_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['activities_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['activities_bool_exp'] | undefined | null;
      },
      ValueTypes['activities'],
    ];
    activities_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['activities_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['activities_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['activities_bool_exp'] | undefined | null;
      },
      ValueTypes['activities_aggregate'],
    ];
    activities_by_pk?: [{ id: ValueTypes['bigint'] }, ValueTypes['activities']];
    big_questions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['big_questions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['big_questions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['big_questions_bool_exp'] | undefined | null;
      },
      ValueTypes['big_questions'],
    ];
    big_questions_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['big_questions'],
    ];
    burns?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['burns_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['burns_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['burns_bool_exp'] | undefined | null;
      },
      ValueTypes['burns'],
    ];
    burns_by_pk?: [{ id: ValueTypes['bigint'] }, ValueTypes['burns']];
    /** checkEthDenverInvitee */
    checkEthDenverInvitee?: ValueTypes['CheckEthDenverInviteeOutput'];
    circle_api_keys?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['circle_api_keys_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['circle_api_keys_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['circle_api_keys_bool_exp'] | undefined | null;
      },
      ValueTypes['circle_api_keys'],
    ];
    circle_api_keys_by_pk?: [{ hash: string }, ValueTypes['circle_api_keys']];
    circle_integrations?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['circle_integrations_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['circle_integrations_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['circle_integrations_bool_exp'] | undefined | null;
      },
      ValueTypes['circle_integrations'],
    ];
    circle_integrations_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['circle_integrations'],
    ];
    circle_private?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['circle_private_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['circle_private_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['circle_private_bool_exp'] | undefined | null;
      },
      ValueTypes['circle_private'],
    ];
    circle_share_tokens?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['circle_share_tokens_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['circle_share_tokens_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['circle_share_tokens_bool_exp'] | undefined | null;
      },
      ValueTypes['circle_share_tokens'],
    ];
    circle_share_tokens_by_pk?: [
      { circle_id: ValueTypes['bigint']; type: number },
      ValueTypes['circle_share_tokens'],
    ];
    circles?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['circles_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['circles_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['circles_bool_exp'] | undefined | null;
      },
      ValueTypes['circles'],
    ];
    circles_by_pk?: [{ id: ValueTypes['bigint'] }, ValueTypes['circles']];
    claims?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['claims_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['claims_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['claims_bool_exp'] | undefined | null;
      },
      ValueTypes['claims'],
    ];
    claims_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['claims_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['claims_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['claims_bool_exp'] | undefined | null;
      },
      ValueTypes['claims_aggregate'],
    ];
    claims_by_pk?: [{ id: ValueTypes['bigint'] }, ValueTypes['claims']];
    colinks_gives?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['colinks_gives_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['colinks_gives_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['colinks_gives_bool_exp'] | undefined | null;
      },
      ValueTypes['colinks_gives'],
    ];
    colinks_gives_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['colinks_gives_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['colinks_gives_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['colinks_gives_bool_exp'] | undefined | null;
      },
      ValueTypes['colinks_gives_aggregate'],
    ];
    colinks_gives_by_pk?: [{ id: number }, ValueTypes['colinks_gives']];
    contribution_count?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['contribution_count_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['contribution_count_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['contribution_count_bool_exp'] | undefined | null;
      },
      ValueTypes['contribution_count'],
    ];
    contributions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['contributions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['contributions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['contributions_bool_exp'] | undefined | null;
      },
      ValueTypes['contributions'],
    ];
    contributions_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['contributions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['contributions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['contributions_bool_exp'] | undefined | null;
      },
      ValueTypes['contributions_aggregate'],
    ];
    contributions_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['contributions'],
    ];
    cosouls?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['cosouls_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['cosouls_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['cosouls_bool_exp'] | undefined | null;
      },
      ValueTypes['cosouls'],
    ];
    cosouls_by_pk?: [{ id: number }, ValueTypes['cosouls']];
    distributions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['distributions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['distributions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['distributions_bool_exp'] | undefined | null;
      },
      ValueTypes['distributions'],
    ];
    distributions_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['distributions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['distributions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['distributions_bool_exp'] | undefined | null;
      },
      ValueTypes['distributions_aggregate'],
    ];
    distributions_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['distributions'],
    ];
    emails?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['emails_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['emails_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['emails_bool_exp'] | undefined | null;
      },
      ValueTypes['emails'],
    ];
    enriched_casts?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['enriched_casts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['enriched_casts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['enriched_casts_bool_exp'] | undefined | null;
      },
      ValueTypes['enriched_casts'],
    ];
    enriched_casts_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['enriched_casts'],
    ];
    epoch_pgive_data?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['epoch_pgive_data_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['epoch_pgive_data_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['epoch_pgive_data_bool_exp'] | undefined | null;
      },
      ValueTypes['epoch_pgive_data'],
    ];
    epoch_pgive_data_by_pk?: [{ id: number }, ValueTypes['epoch_pgive_data']];
    epochs?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['epochs_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['epochs_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['epochs_bool_exp'] | undefined | null;
      },
      ValueTypes['epochs'],
    ];
    epochs_by_pk?: [{ id: ValueTypes['bigint'] }, ValueTypes['epochs']];
    farcaster_accounts?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['farcaster_accounts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['farcaster_accounts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['farcaster_accounts_bool_exp'] | undefined | null;
      },
      ValueTypes['farcaster_accounts'],
    ];
    farcaster_accounts_by_pk?: [
      { profile_id: ValueTypes['bigint'] },
      ValueTypes['farcaster_accounts'],
    ];
    farcaster_casts?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['farcaster_casts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['farcaster_casts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['farcaster_casts_bool_exp'] | undefined | null;
      },
      ValueTypes['farcaster_casts'],
    ];
    farcaster_casts_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['farcaster_casts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['farcaster_casts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['farcaster_casts_bool_exp'] | undefined | null;
      },
      ValueTypes['farcaster_casts_aggregate'],
    ];
    farcaster_casts_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['farcaster_casts'],
    ];
    farcaster_reactions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['farcaster_reactions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['farcaster_reactions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['farcaster_reactions_bool_exp'] | undefined | null;
      },
      ValueTypes['farcaster_reactions'],
    ];
    farcaster_reactions_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['farcaster_reactions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['farcaster_reactions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['farcaster_reactions_bool_exp'] | undefined | null;
      },
      ValueTypes['farcaster_reactions_aggregate'],
    ];
    farcaster_reactions_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['farcaster_reactions'],
    ];
    getCasts?: [
      { payload: ValueTypes['GetCastsInput'] },
      ValueTypes['GetCastsOutput'],
    ];
    getGuildInfo?: [
      { payload: ValueTypes['GuildInfoInput'] },
      ValueTypes['GuildInfoOutput'],
    ];
    getHeadlines?: ValueTypes['HeadlinesOutput'];
    getSimilarProfiles?: [
      { payload: ValueTypes['SimilarProfileInput'] },
      ValueTypes['SimilarProfileOutput'],
    ];
    gift_private?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['gift_private_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['gift_private_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['gift_private_bool_exp'] | undefined | null;
      },
      ValueTypes['gift_private'],
    ];
    github_accounts?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['github_accounts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['github_accounts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['github_accounts_bool_exp'] | undefined | null;
      },
      ValueTypes['github_accounts'],
    ];
    github_accounts_by_pk?: [
      { profile_id: ValueTypes['bigint'] },
      ValueTypes['github_accounts'],
    ];
    histories?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['histories_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['histories_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['histories_bool_exp'] | undefined | null;
      },
      ValueTypes['histories'],
    ];
    histories_by_pk?: [{ id: ValueTypes['bigint'] }, ValueTypes['histories']];
    invite_codes?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['invite_codes_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['invite_codes_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['invite_codes_bool_exp'] | undefined | null;
      },
      ValueTypes['invite_codes'],
    ];
    invite_codes_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['invite_codes_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['invite_codes_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['invite_codes_bool_exp'] | undefined | null;
      },
      ValueTypes['invite_codes_aggregate'],
    ];
    invite_codes_by_pk?: [
      { code: ValueTypes['citext'] },
      ValueTypes['invite_codes'],
    ];
    link_holders?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['link_holders_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['link_holders_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['link_holders_bool_exp'] | undefined | null;
      },
      ValueTypes['link_holders'],
    ];
    link_holders_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['link_holders_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['link_holders_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['link_holders_bool_exp'] | undefined | null;
      },
      ValueTypes['link_holders_aggregate'],
    ];
    link_holders_by_pk?: [
      { holder: ValueTypes['citext']; target: ValueTypes['citext'] },
      ValueTypes['link_holders'],
    ];
    link_tx?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['link_tx_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['link_tx_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['link_tx_bool_exp'] | undefined | null;
      },
      ValueTypes['link_tx'],
    ];
    link_tx_by_pk?: [{ tx_hash: ValueTypes['citext'] }, ValueTypes['link_tx']];
    linkedin_accounts?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['linkedin_accounts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['linkedin_accounts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['linkedin_accounts_bool_exp'] | undefined | null;
      },
      ValueTypes['linkedin_accounts'],
    ];
    linkedin_accounts_by_pk?: [
      { profile_id: ValueTypes['bigint'] },
      ValueTypes['linkedin_accounts'],
    ];
    locked_token_distribution_gifts?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['locked_token_distribution_gifts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['locked_token_distribution_gifts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?:
          | ValueTypes['locked_token_distribution_gifts_bool_exp']
          | undefined
          | null;
      },
      ValueTypes['locked_token_distribution_gifts'],
    ];
    locked_token_distribution_gifts_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['locked_token_distribution_gifts'],
    ];
    locked_token_distributions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['locked_token_distributions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['locked_token_distributions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?:
          | ValueTypes['locked_token_distributions_bool_exp']
          | undefined
          | null;
      },
      ValueTypes['locked_token_distributions'],
    ];
    locked_token_distributions_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['locked_token_distributions'],
    ];
    member_circle_pgives?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['member_circle_pgives_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['member_circle_pgives_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['member_circle_pgives_bool_exp'] | undefined | null;
      },
      ValueTypes['member_circle_pgives'],
    ];
    member_epoch_pgives?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['member_epoch_pgives_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['member_epoch_pgives_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['member_epoch_pgives_bool_exp'] | undefined | null;
      },
      ValueTypes['member_epoch_pgives'],
    ];
    member_epoch_pgives_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['member_epoch_pgives_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['member_epoch_pgives_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['member_epoch_pgives_bool_exp'] | undefined | null;
      },
      ValueTypes['member_epoch_pgives_aggregate'],
    ];
    member_epoch_pgives_by_pk?: [
      { id: number },
      ValueTypes['member_epoch_pgives'],
    ];
    mutes?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['mutes_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['mutes_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['mutes_bool_exp'] | undefined | null;
      },
      ValueTypes['mutes'],
    ];
    mutes_by_pk?: [
      {
        profile_id: ValueTypes['bigint'];
        target_profile_id: ValueTypes['bigint'];
      },
      ValueTypes['mutes'],
    ];
    nft_collections?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['nft_collections_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['nft_collections_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['nft_collections_bool_exp'] | undefined | null;
      },
      ValueTypes['nft_collections'],
    ];
    nft_holdings?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['nft_holdings_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['nft_holdings_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['nft_holdings_bool_exp'] | undefined | null;
      },
      ValueTypes['nft_holdings'],
    ];
    nominees?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['nominees_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['nominees_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['nominees_bool_exp'] | undefined | null;
      },
      ValueTypes['nominees'],
    ];
    nominees_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['nominees_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['nominees_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['nominees_bool_exp'] | undefined | null;
      },
      ValueTypes['nominees_aggregate'],
    ];
    nominees_by_pk?: [{ id: ValueTypes['bigint'] }, ValueTypes['nominees']];
    note_count?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['note_count_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['note_count_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['note_count_bool_exp'] | undefined | null;
      },
      ValueTypes['note_count'],
    ];
    notifications?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['notifications_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['notifications_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['notifications_bool_exp'] | undefined | null;
      },
      ValueTypes['notifications'],
    ];
    notifications_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['notifications_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['notifications_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['notifications_bool_exp'] | undefined | null;
      },
      ValueTypes['notifications_aggregate'],
    ];
    notifications_by_pk?: [{ id: number }, ValueTypes['notifications']];
    org_members?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['org_members_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['org_members_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['org_members_bool_exp'] | undefined | null;
      },
      ValueTypes['org_members'],
    ];
    org_members_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['org_members'],
    ];
    org_share_tokens?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['org_share_tokens_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['org_share_tokens_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['org_share_tokens_bool_exp'] | undefined | null;
      },
      ValueTypes['org_share_tokens'],
    ];
    org_share_tokens_by_pk?: [
      { org_id: ValueTypes['bigint']; type: number },
      ValueTypes['org_share_tokens'],
    ];
    organizations?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['organizations_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['organizations_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['organizations_bool_exp'] | undefined | null;
      },
      ValueTypes['organizations'],
    ];
    organizations_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['organizations'],
    ];
    pending_gift_private?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['pending_gift_private_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['pending_gift_private_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['pending_gift_private_bool_exp'] | undefined | null;
      },
      ValueTypes['pending_gift_private'],
    ];
    pending_token_gifts?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['pending_token_gifts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['pending_token_gifts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['pending_token_gifts_bool_exp'] | undefined | null;
      },
      ValueTypes['pending_token_gifts'],
    ];
    pending_token_gifts_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['pending_token_gifts'],
    ];
    pending_vault_transactions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['pending_vault_transactions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['pending_vault_transactions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?:
          | ValueTypes['pending_vault_transactions_bool_exp']
          | undefined
          | null;
      },
      ValueTypes['pending_vault_transactions'],
    ];
    pending_vault_transactions_by_pk?: [
      { tx_hash: string },
      ValueTypes['pending_vault_transactions'],
    ];
    poap_events?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['poap_events_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['poap_events_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['poap_events_bool_exp'] | undefined | null;
      },
      ValueTypes['poap_events'],
    ];
    poap_events_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['poap_events_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['poap_events_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['poap_events_bool_exp'] | undefined | null;
      },
      ValueTypes['poap_events_aggregate'],
    ];
    poap_events_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['poap_events'],
    ];
    poap_holders?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['poap_holders_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['poap_holders_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['poap_holders_bool_exp'] | undefined | null;
      },
      ValueTypes['poap_holders'],
    ];
    poap_holders_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['poap_holders_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['poap_holders_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['poap_holders_bool_exp'] | undefined | null;
      },
      ValueTypes['poap_holders_aggregate'],
    ];
    poap_holders_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['poap_holders'],
    ];
    private_stream_visibility?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['private_stream_visibility_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['private_stream_visibility_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?:
          | ValueTypes['private_stream_visibility_bool_exp']
          | undefined
          | null;
      },
      ValueTypes['private_stream_visibility'],
    ];
    private_stream_visibility_by_pk?: [
      {
        profile_id: ValueTypes['bigint'];
        view_profile_id: ValueTypes['bigint'];
      },
      ValueTypes['private_stream_visibility'],
    ];
    profile_skills?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['profile_skills_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['profile_skills_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['profile_skills_bool_exp'] | undefined | null;
      },
      ValueTypes['profile_skills'],
    ];
    profile_skills_by_pk?: [
      { profile_id: number; skill_name: ValueTypes['citext'] },
      ValueTypes['profile_skills'],
    ];
    profiles?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['profiles_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['profiles_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['profiles_bool_exp'] | undefined | null;
      },
      ValueTypes['profiles'],
    ];
    profiles_by_pk?: [{ id: ValueTypes['bigint'] }, ValueTypes['profiles']];
    profiles_private?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['profiles_private_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['profiles_private_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['profiles_private_bool_exp'] | undefined | null;
      },
      ValueTypes['profiles_private'],
    ];
    profiles_public?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['profiles_public_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['profiles_public_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['profiles_public_bool_exp'] | undefined | null;
      },
      ValueTypes['profiles_public'],
    ];
    reactions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['reactions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['reactions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['reactions_bool_exp'] | undefined | null;
      },
      ValueTypes['reactions'],
    ];
    reactions_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['reactions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['reactions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['reactions_bool_exp'] | undefined | null;
      },
      ValueTypes['reactions_aggregate'],
    ];
    reactions_by_pk?: [{ id: ValueTypes['bigint'] }, ValueTypes['reactions']];
    replies?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['replies_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['replies_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['replies_bool_exp'] | undefined | null;
      },
      ValueTypes['replies'],
    ];
    replies_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['replies_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['replies_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['replies_bool_exp'] | undefined | null;
      },
      ValueTypes['replies_aggregate'],
    ];
    replies_by_pk?: [{ id: ValueTypes['bigint'] }, ValueTypes['replies']];
    replies_reactions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['replies_reactions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['replies_reactions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['replies_reactions_bool_exp'] | undefined | null;
      },
      ValueTypes['replies_reactions'],
    ];
    replies_reactions_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['replies_reactions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['replies_reactions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['replies_reactions_bool_exp'] | undefined | null;
      },
      ValueTypes['replies_reactions_aggregate'],
    ];
    replies_reactions_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['replies_reactions'],
    ];
    reputation_scores?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['reputation_scores_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['reputation_scores_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['reputation_scores_bool_exp'] | undefined | null;
      },
      ValueTypes['reputation_scores'],
    ];
    reputation_scores_by_pk?: [
      { profile_id: ValueTypes['bigint'] },
      ValueTypes['reputation_scores'],
    ];
    searchCosouls?: [
      { payload: ValueTypes['SearchCosoulsInput'] },
      ValueTypes['SearchCosoulsOutput'],
    ];
    searchProfiles?: [
      { payload: ValueTypes['SearchProfilesInput'] },
      ValueTypes['SearchProfilesOutput'],
    ];
    search_contributions?: [
      {
        /** input parameters for function "search_contributions" */
        args: ValueTypes['search_contributions_args'] /** distinct select on columns */;
        distinct_on?:
          | Array<ValueTypes['contributions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['contributions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['contributions_bool_exp'] | undefined | null;
      },
      ValueTypes['contributions'],
    ];
    search_contributions_aggregate?: [
      {
        /** input parameters for function "search_contributions_aggregate" */
        args: ValueTypes['search_contributions_args'] /** distinct select on columns */;
        distinct_on?:
          | Array<ValueTypes['contributions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['contributions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['contributions_bool_exp'] | undefined | null;
      },
      ValueTypes['contributions_aggregate'],
    ];
    search_replies?: [
      {
        /** input parameters for function "search_replies" */
        args: ValueTypes['search_replies_args'] /** distinct select on columns */;
        distinct_on?:
          | Array<ValueTypes['replies_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['replies_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['replies_bool_exp'] | undefined | null;
      },
      ValueTypes['replies'],
    ];
    search_replies_aggregate?: [
      {
        /** input parameters for function "search_replies_aggregate" */
        args: ValueTypes['search_replies_args'] /** distinct select on columns */;
        distinct_on?:
          | Array<ValueTypes['replies_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['replies_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['replies_bool_exp'] | undefined | null;
      },
      ValueTypes['replies_aggregate'],
    ];
    skills?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['skills_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['skills_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['skills_bool_exp'] | undefined | null;
      },
      ValueTypes['skills'],
    ];
    skills_by_pk?: [{ name: ValueTypes['citext'] }, ValueTypes['skills']];
    teammates?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['teammates_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['teammates_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['teammates_bool_exp'] | undefined | null;
      },
      ValueTypes['teammates'],
    ];
    teammates_by_pk?: [{ id: ValueTypes['bigint'] }, ValueTypes['teammates']];
    token_gifts?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['token_gifts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['token_gifts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['token_gifts_bool_exp'] | undefined | null;
      },
      ValueTypes['token_gifts'],
    ];
    token_gifts_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['token_gifts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['token_gifts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['token_gifts_bool_exp'] | undefined | null;
      },
      ValueTypes['token_gifts_aggregate'],
    ];
    token_gifts_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['token_gifts'],
    ];
    twitter_accounts?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['twitter_accounts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['twitter_accounts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['twitter_accounts_bool_exp'] | undefined | null;
      },
      ValueTypes['twitter_accounts'],
    ];
    twitter_accounts_by_pk?: [
      { profile_id: number },
      ValueTypes['twitter_accounts'],
    ];
    user_private?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['user_private_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['user_private_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['user_private_bool_exp'] | undefined | null;
      },
      ValueTypes['user_private'],
    ];
    user_private_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['user_private_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['user_private_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['user_private_bool_exp'] | undefined | null;
      },
      ValueTypes['user_private_aggregate'],
    ];
    users?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['users_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['users_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['users_bool_exp'] | undefined | null;
      },
      ValueTypes['users'],
    ];
    users_by_pk?: [{ id: ValueTypes['bigint'] }, ValueTypes['users']];
    vault_transactions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['vault_transactions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['vault_transactions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['vault_transactions_bool_exp'] | undefined | null;
      },
      ValueTypes['vault_transactions'],
    ];
    vault_transactions_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['vault_transactions'],
    ];
    vault_tx_types?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['vault_tx_types_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['vault_tx_types_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['vault_tx_types_bool_exp'] | undefined | null;
      },
      ValueTypes['vault_tx_types'],
    ];
    vault_tx_types_by_pk?: [{ value: string }, ValueTypes['vault_tx_types']];
    vaults?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['vaults_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['vaults_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['vaults_bool_exp'] | undefined | null;
      },
      ValueTypes['vaults'],
    ];
    vaults_by_pk?: [{ id: ValueTypes['bigint'] }, ValueTypes['vaults']];
    vector_search_poap_events?: [
      {
        /** input parameters for function "vector_search_poap_events" */
        args: ValueTypes['vector_search_poap_events_args'] /** distinct select on columns */;
        distinct_on?:
          | Array<ValueTypes['poap_events_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['poap_events_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['poap_events_bool_exp'] | undefined | null;
      },
      ValueTypes['poap_events'],
    ];
    vector_search_poap_events_aggregate?: [
      {
        /** input parameters for function "vector_search_poap_events_aggregate" */
        args: ValueTypes['vector_search_poap_events_args'] /** distinct select on columns */;
        distinct_on?:
          | Array<ValueTypes['poap_events_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['poap_events_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['poap_events_bool_exp'] | undefined | null;
      },
      ValueTypes['poap_events_aggregate'],
    ];
    vector_search_poap_holders?: [
      {
        /** input parameters for function "vector_search_poap_holders" */
        args: ValueTypes['vector_search_poap_holders_args'] /** distinct select on columns */;
        distinct_on?:
          | Array<ValueTypes['poap_holders_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['poap_holders_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['poap_holders_bool_exp'] | undefined | null;
      },
      ValueTypes['poap_holders'],
    ];
    vector_search_poap_holders_aggregate?: [
      {
        /** input parameters for function "vector_search_poap_holders_aggregate" */
        args: ValueTypes['vector_search_poap_holders_args'] /** distinct select on columns */;
        distinct_on?:
          | Array<ValueTypes['poap_holders_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['poap_holders_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['poap_holders_bool_exp'] | undefined | null;
      },
      ValueTypes['poap_holders_aggregate'],
    ];
    vouches?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['vouches_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['vouches_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['vouches_bool_exp'] | undefined | null;
      },
      ValueTypes['vouches'],
    ];
    vouches_by_pk?: [{ id: ValueTypes['bigint'] }, ValueTypes['vouches']];
    __typename?: boolean | `@${string}`;
  }>;
  /** columns and relationships of "reactions" */
  ['reactions']: AliasType<{
    /** An object relationship */
    activity?: ValueTypes['activities'];
    activity_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    /** An object relationship */
    profile?: ValueTypes['profiles'];
    profile_id?: boolean | `@${string}`;
    /** An object relationship */
    profile_public?: ValueTypes['profiles_public'];
    reaction?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregated selection of "reactions" */
  ['reactions_aggregate']: AliasType<{
    aggregate?: ValueTypes['reactions_aggregate_fields'];
    nodes?: ValueTypes['reactions'];
    __typename?: boolean | `@${string}`;
  }>;
  ['reactions_aggregate_bool_exp']: {
    count?: ValueTypes['reactions_aggregate_bool_exp_count'] | undefined | null;
  };
  ['reactions_aggregate_bool_exp_count']: {
    arguments?: Array<ValueTypes['reactions_select_column']> | undefined | null;
    distinct?: boolean | undefined | null;
    filter?: ValueTypes['reactions_bool_exp'] | undefined | null;
    predicate: ValueTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "reactions" */
  ['reactions_aggregate_fields']: AliasType<{
    avg?: ValueTypes['reactions_avg_fields'];
    count?: [
      {
        columns?:
          | Array<ValueTypes['reactions_select_column']>
          | undefined
          | null;
        distinct?: boolean | undefined | null;
      },
      boolean | `@${string}`,
    ];
    max?: ValueTypes['reactions_max_fields'];
    min?: ValueTypes['reactions_min_fields'];
    stddev?: ValueTypes['reactions_stddev_fields'];
    stddev_pop?: ValueTypes['reactions_stddev_pop_fields'];
    stddev_samp?: ValueTypes['reactions_stddev_samp_fields'];
    sum?: ValueTypes['reactions_sum_fields'];
    var_pop?: ValueTypes['reactions_var_pop_fields'];
    var_samp?: ValueTypes['reactions_var_samp_fields'];
    variance?: ValueTypes['reactions_variance_fields'];
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "reactions" */
  ['reactions_aggregate_order_by']: {
    avg?: ValueTypes['reactions_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['reactions_max_order_by'] | undefined | null;
    min?: ValueTypes['reactions_min_order_by'] | undefined | null;
    stddev?: ValueTypes['reactions_stddev_order_by'] | undefined | null;
    stddev_pop?: ValueTypes['reactions_stddev_pop_order_by'] | undefined | null;
    stddev_samp?:
      | ValueTypes['reactions_stddev_samp_order_by']
      | undefined
      | null;
    sum?: ValueTypes['reactions_sum_order_by'] | undefined | null;
    var_pop?: ValueTypes['reactions_var_pop_order_by'] | undefined | null;
    var_samp?: ValueTypes['reactions_var_samp_order_by'] | undefined | null;
    variance?: ValueTypes['reactions_variance_order_by'] | undefined | null;
  };
  /** aggregate avg on columns */
  ['reactions_avg_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by avg() on columns of table "reactions" */
  ['reactions_avg_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "reactions". All fields are combined with a logical 'AND'. */
  ['reactions_bool_exp']: {
    _and?: Array<ValueTypes['reactions_bool_exp']> | undefined | null;
    _not?: ValueTypes['reactions_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['reactions_bool_exp']> | undefined | null;
    activity?: ValueTypes['activities_bool_exp'] | undefined | null;
    activity_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    created_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    profile?: ValueTypes['profiles_bool_exp'] | undefined | null;
    profile_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    profile_public?: ValueTypes['profiles_public_bool_exp'] | undefined | null;
    reaction?: ValueTypes['String_comparison_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
  };
  /** unique or primary key constraints on table "reactions" */
  ['reactions_constraint']: reactions_constraint;
  /** input type for inserting data into table "reactions" */
  ['reactions_insert_input']: {
    activity_id?: number | undefined | null;
    reaction?: string | undefined | null;
  };
  /** aggregate max on columns */
  ['reactions_max_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    reaction?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by max() on columns of table "reactions" */
  ['reactions_max_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    reaction?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate min on columns */
  ['reactions_min_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    reaction?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by min() on columns of table "reactions" */
  ['reactions_min_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    reaction?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** response of any mutation on the table "reactions" */
  ['reactions_mutation_response']: AliasType<{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | `@${string}`;
    /** data from the rows affected by the mutation */
    returning?: ValueTypes['reactions'];
    __typename?: boolean | `@${string}`;
  }>;
  /** on_conflict condition type for table "reactions" */
  ['reactions_on_conflict']: {
    constraint: ValueTypes['reactions_constraint'];
    update_columns: Array<ValueTypes['reactions_update_column']>;
    where?: ValueTypes['reactions_bool_exp'] | undefined | null;
  };
  /** Ordering options when selecting data from "reactions". */
  ['reactions_order_by']: {
    activity?: ValueTypes['activities_order_by'] | undefined | null;
    activity_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile?: ValueTypes['profiles_order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    profile_public?: ValueTypes['profiles_public_order_by'] | undefined | null;
    reaction?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "reactions" */
  ['reactions_select_column']: reactions_select_column;
  /** aggregate stddev on columns */
  ['reactions_stddev_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev() on columns of table "reactions" */
  ['reactions_stddev_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_pop on columns */
  ['reactions_stddev_pop_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_pop() on columns of table "reactions" */
  ['reactions_stddev_pop_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_samp on columns */
  ['reactions_stddev_samp_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_samp() on columns of table "reactions" */
  ['reactions_stddev_samp_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "reactions" */
  ['reactions_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['reactions_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['reactions_stream_cursor_value_input']: {
    activity_id?: number | undefined | null;
    created_at?: ValueTypes['timestamptz'] | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    profile_id?: number | undefined | null;
    reaction?: string | undefined | null;
    updated_at?: ValueTypes['timestamptz'] | undefined | null;
  };
  /** aggregate sum on columns */
  ['reactions_sum_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by sum() on columns of table "reactions" */
  ['reactions_sum_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** placeholder for update columns of table "reactions" (current role has no relevant permissions) */
  ['reactions_update_column']: reactions_update_column;
  /** aggregate var_pop on columns */
  ['reactions_var_pop_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_pop() on columns of table "reactions" */
  ['reactions_var_pop_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate var_samp on columns */
  ['reactions_var_samp_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_samp() on columns of table "reactions" */
  ['reactions_var_samp_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate variance on columns */
  ['reactions_variance_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by variance() on columns of table "reactions" */
  ['reactions_variance_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Replies to activity items */
  ['replies']: AliasType<{
    /** An object relationship */
    activity?: ValueTypes['activities'];
    activity_actor_id?: boolean | `@${string}`;
    activity_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    deleted_at?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    /** An object relationship */
    private_stream_visibility?: ValueTypes['private_stream_visibility'];
    /** An object relationship */
    profile?: ValueTypes['profiles'];
    profile_id?: boolean | `@${string}`;
    /** An object relationship */
    profile_public?: ValueTypes['profiles_public'];
    reactions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['replies_reactions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['replies_reactions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['replies_reactions_bool_exp'] | undefined | null;
      },
      ValueTypes['replies_reactions'],
    ];
    reactions_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['replies_reactions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['replies_reactions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['replies_reactions_bool_exp'] | undefined | null;
      },
      ValueTypes['replies_reactions_aggregate'],
    ];
    reply?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregated selection of "replies" */
  ['replies_aggregate']: AliasType<{
    aggregate?: ValueTypes['replies_aggregate_fields'];
    nodes?: ValueTypes['replies'];
    __typename?: boolean | `@${string}`;
  }>;
  ['replies_aggregate_bool_exp']: {
    count?: ValueTypes['replies_aggregate_bool_exp_count'] | undefined | null;
  };
  ['replies_aggregate_bool_exp_count']: {
    arguments?: Array<ValueTypes['replies_select_column']> | undefined | null;
    distinct?: boolean | undefined | null;
    filter?: ValueTypes['replies_bool_exp'] | undefined | null;
    predicate: ValueTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "replies" */
  ['replies_aggregate_fields']: AliasType<{
    avg?: ValueTypes['replies_avg_fields'];
    count?: [
      {
        columns?: Array<ValueTypes['replies_select_column']> | undefined | null;
        distinct?: boolean | undefined | null;
      },
      boolean | `@${string}`,
    ];
    max?: ValueTypes['replies_max_fields'];
    min?: ValueTypes['replies_min_fields'];
    stddev?: ValueTypes['replies_stddev_fields'];
    stddev_pop?: ValueTypes['replies_stddev_pop_fields'];
    stddev_samp?: ValueTypes['replies_stddev_samp_fields'];
    sum?: ValueTypes['replies_sum_fields'];
    var_pop?: ValueTypes['replies_var_pop_fields'];
    var_samp?: ValueTypes['replies_var_samp_fields'];
    variance?: ValueTypes['replies_variance_fields'];
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "replies" */
  ['replies_aggregate_order_by']: {
    avg?: ValueTypes['replies_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['replies_max_order_by'] | undefined | null;
    min?: ValueTypes['replies_min_order_by'] | undefined | null;
    stddev?: ValueTypes['replies_stddev_order_by'] | undefined | null;
    stddev_pop?: ValueTypes['replies_stddev_pop_order_by'] | undefined | null;
    stddev_samp?: ValueTypes['replies_stddev_samp_order_by'] | undefined | null;
    sum?: ValueTypes['replies_sum_order_by'] | undefined | null;
    var_pop?: ValueTypes['replies_var_pop_order_by'] | undefined | null;
    var_samp?: ValueTypes['replies_var_samp_order_by'] | undefined | null;
    variance?: ValueTypes['replies_variance_order_by'] | undefined | null;
  };
  /** aggregate avg on columns */
  ['replies_avg_fields']: AliasType<{
    activity_actor_id?: boolean | `@${string}`;
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by avg() on columns of table "replies" */
  ['replies_avg_order_by']: {
    activity_actor_id?: ValueTypes['order_by'] | undefined | null;
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "replies". All fields are combined with a logical 'AND'. */
  ['replies_bool_exp']: {
    _and?: Array<ValueTypes['replies_bool_exp']> | undefined | null;
    _not?: ValueTypes['replies_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['replies_bool_exp']> | undefined | null;
    activity?: ValueTypes['activities_bool_exp'] | undefined | null;
    activity_actor_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    activity_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    created_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    deleted_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    private_stream_visibility?:
      | ValueTypes['private_stream_visibility_bool_exp']
      | undefined
      | null;
    profile?: ValueTypes['profiles_bool_exp'] | undefined | null;
    profile_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    profile_public?: ValueTypes['profiles_public_bool_exp'] | undefined | null;
    reactions?: ValueTypes['replies_reactions_bool_exp'] | undefined | null;
    reactions_aggregate?:
      | ValueTypes['replies_reactions_aggregate_bool_exp']
      | undefined
      | null;
    reply?: ValueTypes['String_comparison_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
  };
  /** unique or primary key constraints on table "replies" */
  ['replies_constraint']: replies_constraint;
  /** input type for inserting data into table "replies" */
  ['replies_insert_input']: {
    activity_actor_id?: number | undefined | null;
    activity_id?: number | undefined | null;
    reactions?:
      | ValueTypes['replies_reactions_arr_rel_insert_input']
      | undefined
      | null;
    reply?: string | undefined | null;
  };
  /** aggregate max on columns */
  ['replies_max_fields']: AliasType<{
    activity_actor_id?: boolean | `@${string}`;
    activity_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    deleted_at?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    reply?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by max() on columns of table "replies" */
  ['replies_max_order_by']: {
    activity_actor_id?: ValueTypes['order_by'] | undefined | null;
    activity_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    deleted_at?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    reply?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate min on columns */
  ['replies_min_fields']: AliasType<{
    activity_actor_id?: boolean | `@${string}`;
    activity_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    deleted_at?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    reply?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by min() on columns of table "replies" */
  ['replies_min_order_by']: {
    activity_actor_id?: ValueTypes['order_by'] | undefined | null;
    activity_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    deleted_at?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    reply?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** response of any mutation on the table "replies" */
  ['replies_mutation_response']: AliasType<{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | `@${string}`;
    /** data from the rows affected by the mutation */
    returning?: ValueTypes['replies'];
    __typename?: boolean | `@${string}`;
  }>;
  /** input type for inserting object relation for remote table "replies" */
  ['replies_obj_rel_insert_input']: {
    data: ValueTypes['replies_insert_input'];
    /** upsert condition */
    on_conflict?: ValueTypes['replies_on_conflict'] | undefined | null;
  };
  /** on_conflict condition type for table "replies" */
  ['replies_on_conflict']: {
    constraint: ValueTypes['replies_constraint'];
    update_columns: Array<ValueTypes['replies_update_column']>;
    where?: ValueTypes['replies_bool_exp'] | undefined | null;
  };
  /** Ordering options when selecting data from "replies". */
  ['replies_order_by']: {
    activity?: ValueTypes['activities_order_by'] | undefined | null;
    activity_actor_id?: ValueTypes['order_by'] | undefined | null;
    activity_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    deleted_at?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    private_stream_visibility?:
      | ValueTypes['private_stream_visibility_order_by']
      | undefined
      | null;
    profile?: ValueTypes['profiles_order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    profile_public?: ValueTypes['profiles_public_order_by'] | undefined | null;
    reactions_aggregate?:
      | ValueTypes['replies_reactions_aggregate_order_by']
      | undefined
      | null;
    reply?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** primary key columns input for table: replies */
  ['replies_pk_columns_input']: {
    id: ValueTypes['bigint'];
  };
  /** columns and relationships of "replies_reactions" */
  ['replies_reactions']: AliasType<{
    /** An object relationship */
    activity?: ValueTypes['activities'];
    activity_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    /** An object relationship */
    profile?: ValueTypes['profiles'];
    profile_id?: boolean | `@${string}`;
    /** An object relationship */
    profile_public?: ValueTypes['profiles_public'];
    reaction?: boolean | `@${string}`;
    /** An object relationship */
    reply?: ValueTypes['replies'];
    reply_id?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregated selection of "replies_reactions" */
  ['replies_reactions_aggregate']: AliasType<{
    aggregate?: ValueTypes['replies_reactions_aggregate_fields'];
    nodes?: ValueTypes['replies_reactions'];
    __typename?: boolean | `@${string}`;
  }>;
  ['replies_reactions_aggregate_bool_exp']: {
    count?:
      | ValueTypes['replies_reactions_aggregate_bool_exp_count']
      | undefined
      | null;
  };
  ['replies_reactions_aggregate_bool_exp_count']: {
    arguments?:
      | Array<ValueTypes['replies_reactions_select_column']>
      | undefined
      | null;
    distinct?: boolean | undefined | null;
    filter?: ValueTypes['replies_reactions_bool_exp'] | undefined | null;
    predicate: ValueTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "replies_reactions" */
  ['replies_reactions_aggregate_fields']: AliasType<{
    avg?: ValueTypes['replies_reactions_avg_fields'];
    count?: [
      {
        columns?:
          | Array<ValueTypes['replies_reactions_select_column']>
          | undefined
          | null;
        distinct?: boolean | undefined | null;
      },
      boolean | `@${string}`,
    ];
    max?: ValueTypes['replies_reactions_max_fields'];
    min?: ValueTypes['replies_reactions_min_fields'];
    stddev?: ValueTypes['replies_reactions_stddev_fields'];
    stddev_pop?: ValueTypes['replies_reactions_stddev_pop_fields'];
    stddev_samp?: ValueTypes['replies_reactions_stddev_samp_fields'];
    sum?: ValueTypes['replies_reactions_sum_fields'];
    var_pop?: ValueTypes['replies_reactions_var_pop_fields'];
    var_samp?: ValueTypes['replies_reactions_var_samp_fields'];
    variance?: ValueTypes['replies_reactions_variance_fields'];
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "replies_reactions" */
  ['replies_reactions_aggregate_order_by']: {
    avg?: ValueTypes['replies_reactions_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['replies_reactions_max_order_by'] | undefined | null;
    min?: ValueTypes['replies_reactions_min_order_by'] | undefined | null;
    stddev?: ValueTypes['replies_reactions_stddev_order_by'] | undefined | null;
    stddev_pop?:
      | ValueTypes['replies_reactions_stddev_pop_order_by']
      | undefined
      | null;
    stddev_samp?:
      | ValueTypes['replies_reactions_stddev_samp_order_by']
      | undefined
      | null;
    sum?: ValueTypes['replies_reactions_sum_order_by'] | undefined | null;
    var_pop?:
      | ValueTypes['replies_reactions_var_pop_order_by']
      | undefined
      | null;
    var_samp?:
      | ValueTypes['replies_reactions_var_samp_order_by']
      | undefined
      | null;
    variance?:
      | ValueTypes['replies_reactions_variance_order_by']
      | undefined
      | null;
  };
  /** input type for inserting array relation for remote table "replies_reactions" */
  ['replies_reactions_arr_rel_insert_input']: {
    data: Array<ValueTypes['replies_reactions_insert_input']>;
    /** upsert condition */
    on_conflict?:
      | ValueTypes['replies_reactions_on_conflict']
      | undefined
      | null;
  };
  /** aggregate avg on columns */
  ['replies_reactions_avg_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    reply_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by avg() on columns of table "replies_reactions" */
  ['replies_reactions_avg_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    reply_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "replies_reactions". All fields are combined with a logical 'AND'. */
  ['replies_reactions_bool_exp']: {
    _and?: Array<ValueTypes['replies_reactions_bool_exp']> | undefined | null;
    _not?: ValueTypes['replies_reactions_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['replies_reactions_bool_exp']> | undefined | null;
    activity?: ValueTypes['activities_bool_exp'] | undefined | null;
    activity_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    created_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    profile?: ValueTypes['profiles_bool_exp'] | undefined | null;
    profile_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    profile_public?: ValueTypes['profiles_public_bool_exp'] | undefined | null;
    reaction?: ValueTypes['String_comparison_exp'] | undefined | null;
    reply?: ValueTypes['replies_bool_exp'] | undefined | null;
    reply_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
  };
  /** unique or primary key constraints on table "replies_reactions" */
  ['replies_reactions_constraint']: replies_reactions_constraint;
  /** input type for inserting data into table "replies_reactions" */
  ['replies_reactions_insert_input']: {
    activity_id?: number | undefined | null;
    reaction?: string | undefined | null;
    reply?: ValueTypes['replies_obj_rel_insert_input'] | undefined | null;
    reply_id?: number | undefined | null;
  };
  /** aggregate max on columns */
  ['replies_reactions_max_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    reaction?: boolean | `@${string}`;
    reply_id?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by max() on columns of table "replies_reactions" */
  ['replies_reactions_max_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    reaction?: ValueTypes['order_by'] | undefined | null;
    reply_id?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate min on columns */
  ['replies_reactions_min_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    reaction?: boolean | `@${string}`;
    reply_id?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by min() on columns of table "replies_reactions" */
  ['replies_reactions_min_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    reaction?: ValueTypes['order_by'] | undefined | null;
    reply_id?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** response of any mutation on the table "replies_reactions" */
  ['replies_reactions_mutation_response']: AliasType<{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | `@${string}`;
    /** data from the rows affected by the mutation */
    returning?: ValueTypes['replies_reactions'];
    __typename?: boolean | `@${string}`;
  }>;
  /** on_conflict condition type for table "replies_reactions" */
  ['replies_reactions_on_conflict']: {
    constraint: ValueTypes['replies_reactions_constraint'];
    update_columns: Array<ValueTypes['replies_reactions_update_column']>;
    where?: ValueTypes['replies_reactions_bool_exp'] | undefined | null;
  };
  /** Ordering options when selecting data from "replies_reactions". */
  ['replies_reactions_order_by']: {
    activity?: ValueTypes['activities_order_by'] | undefined | null;
    activity_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile?: ValueTypes['profiles_order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    profile_public?: ValueTypes['profiles_public_order_by'] | undefined | null;
    reaction?: ValueTypes['order_by'] | undefined | null;
    reply?: ValueTypes['replies_order_by'] | undefined | null;
    reply_id?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "replies_reactions" */
  ['replies_reactions_select_column']: replies_reactions_select_column;
  /** aggregate stddev on columns */
  ['replies_reactions_stddev_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    reply_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev() on columns of table "replies_reactions" */
  ['replies_reactions_stddev_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    reply_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_pop on columns */
  ['replies_reactions_stddev_pop_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    reply_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_pop() on columns of table "replies_reactions" */
  ['replies_reactions_stddev_pop_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    reply_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_samp on columns */
  ['replies_reactions_stddev_samp_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    reply_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_samp() on columns of table "replies_reactions" */
  ['replies_reactions_stddev_samp_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    reply_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "replies_reactions" */
  ['replies_reactions_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['replies_reactions_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['replies_reactions_stream_cursor_value_input']: {
    activity_id?: number | undefined | null;
    created_at?: ValueTypes['timestamptz'] | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    profile_id?: number | undefined | null;
    reaction?: string | undefined | null;
    reply_id?: number | undefined | null;
    updated_at?: ValueTypes['timestamptz'] | undefined | null;
  };
  /** aggregate sum on columns */
  ['replies_reactions_sum_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    reply_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by sum() on columns of table "replies_reactions" */
  ['replies_reactions_sum_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    reply_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** placeholder for update columns of table "replies_reactions" (current role has no relevant permissions) */
  ['replies_reactions_update_column']: replies_reactions_update_column;
  /** aggregate var_pop on columns */
  ['replies_reactions_var_pop_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    reply_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_pop() on columns of table "replies_reactions" */
  ['replies_reactions_var_pop_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    reply_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate var_samp on columns */
  ['replies_reactions_var_samp_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    reply_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_samp() on columns of table "replies_reactions" */
  ['replies_reactions_var_samp_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    reply_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate variance on columns */
  ['replies_reactions_variance_fields']: AliasType<{
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    reply_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by variance() on columns of table "replies_reactions" */
  ['replies_reactions_variance_order_by']: {
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    reply_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "replies" */
  ['replies_select_column']: replies_select_column;
  /** input type for updating data in table "replies" */
  ['replies_set_input']: {
    deleted_at?: ValueTypes['timestamptz'] | undefined | null;
  };
  /** aggregate stddev on columns */
  ['replies_stddev_fields']: AliasType<{
    activity_actor_id?: boolean | `@${string}`;
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev() on columns of table "replies" */
  ['replies_stddev_order_by']: {
    activity_actor_id?: ValueTypes['order_by'] | undefined | null;
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_pop on columns */
  ['replies_stddev_pop_fields']: AliasType<{
    activity_actor_id?: boolean | `@${string}`;
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_pop() on columns of table "replies" */
  ['replies_stddev_pop_order_by']: {
    activity_actor_id?: ValueTypes['order_by'] | undefined | null;
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_samp on columns */
  ['replies_stddev_samp_fields']: AliasType<{
    activity_actor_id?: boolean | `@${string}`;
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_samp() on columns of table "replies" */
  ['replies_stddev_samp_order_by']: {
    activity_actor_id?: ValueTypes['order_by'] | undefined | null;
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "replies" */
  ['replies_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['replies_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['replies_stream_cursor_value_input']: {
    activity_actor_id?: number | undefined | null;
    activity_id?: number | undefined | null;
    created_at?: ValueTypes['timestamptz'] | undefined | null;
    deleted_at?: ValueTypes['timestamptz'] | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    profile_id?: number | undefined | null;
    reply?: string | undefined | null;
    updated_at?: ValueTypes['timestamptz'] | undefined | null;
  };
  /** aggregate sum on columns */
  ['replies_sum_fields']: AliasType<{
    activity_actor_id?: boolean | `@${string}`;
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by sum() on columns of table "replies" */
  ['replies_sum_order_by']: {
    activity_actor_id?: ValueTypes['order_by'] | undefined | null;
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** update columns of table "replies" */
  ['replies_update_column']: replies_update_column;
  ['replies_updates']: {
    /** sets the columns of the filtered rows to the given values */
    _set?: ValueTypes['replies_set_input'] | undefined | null;
    /** filter the rows which have to be updated */
    where: ValueTypes['replies_bool_exp'];
  };
  /** aggregate var_pop on columns */
  ['replies_var_pop_fields']: AliasType<{
    activity_actor_id?: boolean | `@${string}`;
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_pop() on columns of table "replies" */
  ['replies_var_pop_order_by']: {
    activity_actor_id?: ValueTypes['order_by'] | undefined | null;
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate var_samp on columns */
  ['replies_var_samp_fields']: AliasType<{
    activity_actor_id?: boolean | `@${string}`;
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_samp() on columns of table "replies" */
  ['replies_var_samp_order_by']: {
    activity_actor_id?: ValueTypes['order_by'] | undefined | null;
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate variance on columns */
  ['replies_variance_fields']: AliasType<{
    activity_actor_id?: boolean | `@${string}`;
    activity_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by variance() on columns of table "replies" */
  ['replies_variance_order_by']: {
    activity_actor_id?: ValueTypes['order_by'] | undefined | null;
    activity_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** columns and relationships of "reputation_scores" */
  ['reputation_scores']: AliasType<{
    colinks_engagement_score?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    email_score?: boolean | `@${string}`;
    farcaster_score?: boolean | `@${string}`;
    github_score?: boolean | `@${string}`;
    invite_score?: boolean | `@${string}`;
    linkedin_score?: boolean | `@${string}`;
    links_score?: boolean | `@${string}`;
    pgive_score?: boolean | `@${string}`;
    poap_score?: boolean | `@${string}`;
    profile_id?: boolean | `@${string}`;
    social_give_score?: boolean | `@${string}`;
    total_score?: boolean | `@${string}`;
    twitter_score?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "reputation_scores". All fields are combined with a logical 'AND'. */
  ['reputation_scores_bool_exp']: {
    _and?: Array<ValueTypes['reputation_scores_bool_exp']> | undefined | null;
    _not?: ValueTypes['reputation_scores_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['reputation_scores_bool_exp']> | undefined | null;
    colinks_engagement_score?:
      | ValueTypes['Int_comparison_exp']
      | undefined
      | null;
    created_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    email_score?: ValueTypes['Int_comparison_exp'] | undefined | null;
    farcaster_score?: ValueTypes['Int_comparison_exp'] | undefined | null;
    github_score?: ValueTypes['Int_comparison_exp'] | undefined | null;
    invite_score?: ValueTypes['Int_comparison_exp'] | undefined | null;
    linkedin_score?: ValueTypes['Int_comparison_exp'] | undefined | null;
    links_score?: ValueTypes['Int_comparison_exp'] | undefined | null;
    pgive_score?: ValueTypes['Int_comparison_exp'] | undefined | null;
    poap_score?: ValueTypes['Int_comparison_exp'] | undefined | null;
    profile_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    social_give_score?: ValueTypes['Int_comparison_exp'] | undefined | null;
    total_score?: ValueTypes['Int_comparison_exp'] | undefined | null;
    twitter_score?: ValueTypes['Int_comparison_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
  };
  /** Ordering options when selecting data from "reputation_scores". */
  ['reputation_scores_order_by']: {
    colinks_engagement_score?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    email_score?: ValueTypes['order_by'] | undefined | null;
    farcaster_score?: ValueTypes['order_by'] | undefined | null;
    github_score?: ValueTypes['order_by'] | undefined | null;
    invite_score?: ValueTypes['order_by'] | undefined | null;
    linkedin_score?: ValueTypes['order_by'] | undefined | null;
    links_score?: ValueTypes['order_by'] | undefined | null;
    pgive_score?: ValueTypes['order_by'] | undefined | null;
    poap_score?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    social_give_score?: ValueTypes['order_by'] | undefined | null;
    total_score?: ValueTypes['order_by'] | undefined | null;
    twitter_score?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "reputation_scores" */
  ['reputation_scores_select_column']: reputation_scores_select_column;
  /** Streaming cursor of the table "reputation_scores" */
  ['reputation_scores_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['reputation_scores_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['reputation_scores_stream_cursor_value_input']: {
    colinks_engagement_score?: number | undefined | null;
    created_at?: ValueTypes['timestamptz'] | undefined | null;
    email_score?: number | undefined | null;
    farcaster_score?: number | undefined | null;
    github_score?: number | undefined | null;
    invite_score?: number | undefined | null;
    linkedin_score?: number | undefined | null;
    links_score?: number | undefined | null;
    pgive_score?: number | undefined | null;
    poap_score?: number | undefined | null;
    profile_id?: ValueTypes['bigint'] | undefined | null;
    social_give_score?: number | undefined | null;
    total_score?: number | undefined | null;
    twitter_score?: number | undefined | null;
    updated_at?: ValueTypes['timestamptz'] | undefined | null;
  };
  ['search_contributions_args']: {
    result_limit?: number | undefined | null;
    search?: string | undefined | null;
  };
  ['search_replies_args']: {
    search?: string | undefined | null;
  };
  /** columns and relationships of "skills" */
  ['skills']: AliasType<{
    count?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    hidden?: boolean | `@${string}`;
    name?: boolean | `@${string}`;
    /** An object relationship */
    profile_skills?: ValueTypes['profile_skills'];
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "skills". All fields are combined with a logical 'AND'. */
  ['skills_bool_exp']: {
    _and?: Array<ValueTypes['skills_bool_exp']> | undefined | null;
    _not?: ValueTypes['skills_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['skills_bool_exp']> | undefined | null;
    count?: ValueTypes['Int_comparison_exp'] | undefined | null;
    created_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    hidden?: ValueTypes['Boolean_comparison_exp'] | undefined | null;
    name?: ValueTypes['citext_comparison_exp'] | undefined | null;
    profile_skills?: ValueTypes['profile_skills_bool_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
  };
  /** unique or primary key constraints on table "skills" */
  ['skills_constraint']: skills_constraint;
  /** input type for inserting data into table "skills" */
  ['skills_insert_input']: {
    name?: ValueTypes['citext'] | undefined | null;
    profile_skills?:
      | ValueTypes['profile_skills_obj_rel_insert_input']
      | undefined
      | null;
  };
  /** response of any mutation on the table "skills" */
  ['skills_mutation_response']: AliasType<{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | `@${string}`;
    /** data from the rows affected by the mutation */
    returning?: ValueTypes['skills'];
    __typename?: boolean | `@${string}`;
  }>;
  /** input type for inserting object relation for remote table "skills" */
  ['skills_obj_rel_insert_input']: {
    data: ValueTypes['skills_insert_input'];
    /** upsert condition */
    on_conflict?: ValueTypes['skills_on_conflict'] | undefined | null;
  };
  /** on_conflict condition type for table "skills" */
  ['skills_on_conflict']: {
    constraint: ValueTypes['skills_constraint'];
    update_columns: Array<ValueTypes['skills_update_column']>;
    where?: ValueTypes['skills_bool_exp'] | undefined | null;
  };
  /** Ordering options when selecting data from "skills". */
  ['skills_order_by']: {
    count?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    hidden?: ValueTypes['order_by'] | undefined | null;
    name?: ValueTypes['order_by'] | undefined | null;
    profile_skills?: ValueTypes['profile_skills_order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "skills" */
  ['skills_select_column']: skills_select_column;
  /** Streaming cursor of the table "skills" */
  ['skills_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['skills_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['skills_stream_cursor_value_input']: {
    count?: number | undefined | null;
    created_at?: ValueTypes['timestamptz'] | undefined | null;
    hidden?: boolean | undefined | null;
    name?: ValueTypes['citext'] | undefined | null;
    updated_at?: ValueTypes['timestamptz'] | undefined | null;
  };
  /** placeholder for update columns of table "skills" (current role has no relevant permissions) */
  ['skills_update_column']: skills_update_column;
  ['smallint']: unknown;
  /** Boolean expression to compare columns of type "smallint". All fields are combined with logical 'AND'. */
  ['smallint_array_comparison_exp']: {
    /** is the array contained in the given array value */
    _contained_in?: Array<ValueTypes['smallint']> | undefined | null;
    /** does the array contain the given value */
    _contains?: Array<ValueTypes['smallint']> | undefined | null;
    _eq?: Array<ValueTypes['smallint']> | undefined | null;
    _gt?: Array<ValueTypes['smallint']> | undefined | null;
    _gte?: Array<ValueTypes['smallint']> | undefined | null;
    _in?: Array<Array<ValueTypes['smallint']> | undefined | null>;
    _is_null?: boolean | undefined | null;
    _lt?: Array<ValueTypes['smallint']> | undefined | null;
    _lte?: Array<ValueTypes['smallint']> | undefined | null;
    _neq?: Array<ValueTypes['smallint']> | undefined | null;
    _nin?: Array<Array<ValueTypes['smallint']> | undefined | null>;
  };
  /** Boolean expression to compare columns of type "smallint". All fields are combined with logical 'AND'. */
  ['smallint_comparison_exp']: {
    _eq?: ValueTypes['smallint'] | undefined | null;
    _gt?: ValueTypes['smallint'] | undefined | null;
    _gte?: ValueTypes['smallint'] | undefined | null;
    _in?: Array<ValueTypes['smallint']> | undefined | null;
    _is_null?: boolean | undefined | null;
    _lt?: ValueTypes['smallint'] | undefined | null;
    _lte?: ValueTypes['smallint'] | undefined | null;
    _neq?: ValueTypes['smallint'] | undefined | null;
    _nin?: Array<ValueTypes['smallint']> | undefined | null;
  };
  ['subscription_root']: AliasType<{
    activities?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['activities_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['activities_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['activities_bool_exp'] | undefined | null;
      },
      ValueTypes['activities'],
    ];
    activities_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['activities_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['activities_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['activities_bool_exp'] | undefined | null;
      },
      ValueTypes['activities_aggregate'],
    ];
    activities_by_pk?: [{ id: ValueTypes['bigint'] }, ValueTypes['activities']];
    activities_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['activities_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['activities_bool_exp'] | undefined | null;
      },
      ValueTypes['activities'],
    ];
    big_questions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['big_questions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['big_questions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['big_questions_bool_exp'] | undefined | null;
      },
      ValueTypes['big_questions'],
    ];
    big_questions_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['big_questions'],
    ];
    big_questions_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['big_questions_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['big_questions_bool_exp'] | undefined | null;
      },
      ValueTypes['big_questions'],
    ];
    burns?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['burns_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['burns_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['burns_bool_exp'] | undefined | null;
      },
      ValueTypes['burns'],
    ];
    burns_by_pk?: [{ id: ValueTypes['bigint'] }, ValueTypes['burns']];
    burns_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['burns_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['burns_bool_exp'] | undefined | null;
      },
      ValueTypes['burns'],
    ];
    circle_api_keys?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['circle_api_keys_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['circle_api_keys_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['circle_api_keys_bool_exp'] | undefined | null;
      },
      ValueTypes['circle_api_keys'],
    ];
    circle_api_keys_by_pk?: [{ hash: string }, ValueTypes['circle_api_keys']];
    circle_api_keys_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['circle_api_keys_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['circle_api_keys_bool_exp'] | undefined | null;
      },
      ValueTypes['circle_api_keys'],
    ];
    circle_integrations?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['circle_integrations_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['circle_integrations_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['circle_integrations_bool_exp'] | undefined | null;
      },
      ValueTypes['circle_integrations'],
    ];
    circle_integrations_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['circle_integrations'],
    ];
    circle_integrations_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          | ValueTypes['circle_integrations_stream_cursor_input']
          | undefined
          | null
        > /** filter the rows returned */;
        where?: ValueTypes['circle_integrations_bool_exp'] | undefined | null;
      },
      ValueTypes['circle_integrations'],
    ];
    circle_private?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['circle_private_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['circle_private_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['circle_private_bool_exp'] | undefined | null;
      },
      ValueTypes['circle_private'],
    ];
    circle_private_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['circle_private_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['circle_private_bool_exp'] | undefined | null;
      },
      ValueTypes['circle_private'],
    ];
    circle_share_tokens?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['circle_share_tokens_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['circle_share_tokens_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['circle_share_tokens_bool_exp'] | undefined | null;
      },
      ValueTypes['circle_share_tokens'],
    ];
    circle_share_tokens_by_pk?: [
      { circle_id: ValueTypes['bigint']; type: number },
      ValueTypes['circle_share_tokens'],
    ];
    circle_share_tokens_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          | ValueTypes['circle_share_tokens_stream_cursor_input']
          | undefined
          | null
        > /** filter the rows returned */;
        where?: ValueTypes['circle_share_tokens_bool_exp'] | undefined | null;
      },
      ValueTypes['circle_share_tokens'],
    ];
    circles?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['circles_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['circles_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['circles_bool_exp'] | undefined | null;
      },
      ValueTypes['circles'],
    ];
    circles_by_pk?: [{ id: ValueTypes['bigint'] }, ValueTypes['circles']];
    circles_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['circles_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['circles_bool_exp'] | undefined | null;
      },
      ValueTypes['circles'],
    ];
    claims?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['claims_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['claims_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['claims_bool_exp'] | undefined | null;
      },
      ValueTypes['claims'],
    ];
    claims_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['claims_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['claims_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['claims_bool_exp'] | undefined | null;
      },
      ValueTypes['claims_aggregate'],
    ];
    claims_by_pk?: [{ id: ValueTypes['bigint'] }, ValueTypes['claims']];
    claims_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['claims_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['claims_bool_exp'] | undefined | null;
      },
      ValueTypes['claims'],
    ];
    colinks_gives?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['colinks_gives_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['colinks_gives_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['colinks_gives_bool_exp'] | undefined | null;
      },
      ValueTypes['colinks_gives'],
    ];
    colinks_gives_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['colinks_gives_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['colinks_gives_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['colinks_gives_bool_exp'] | undefined | null;
      },
      ValueTypes['colinks_gives_aggregate'],
    ];
    colinks_gives_by_pk?: [{ id: number }, ValueTypes['colinks_gives']];
    colinks_gives_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['colinks_gives_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['colinks_gives_bool_exp'] | undefined | null;
      },
      ValueTypes['colinks_gives'],
    ];
    contribution_count?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['contribution_count_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['contribution_count_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['contribution_count_bool_exp'] | undefined | null;
      },
      ValueTypes['contribution_count'],
    ];
    contribution_count_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          | ValueTypes['contribution_count_stream_cursor_input']
          | undefined
          | null
        > /** filter the rows returned */;
        where?: ValueTypes['contribution_count_bool_exp'] | undefined | null;
      },
      ValueTypes['contribution_count'],
    ];
    contributions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['contributions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['contributions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['contributions_bool_exp'] | undefined | null;
      },
      ValueTypes['contributions'],
    ];
    contributions_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['contributions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['contributions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['contributions_bool_exp'] | undefined | null;
      },
      ValueTypes['contributions_aggregate'],
    ];
    contributions_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['contributions'],
    ];
    contributions_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['contributions_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['contributions_bool_exp'] | undefined | null;
      },
      ValueTypes['contributions'],
    ];
    cosouls?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['cosouls_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['cosouls_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['cosouls_bool_exp'] | undefined | null;
      },
      ValueTypes['cosouls'],
    ];
    cosouls_by_pk?: [{ id: number }, ValueTypes['cosouls']];
    cosouls_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['cosouls_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['cosouls_bool_exp'] | undefined | null;
      },
      ValueTypes['cosouls'],
    ];
    distributions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['distributions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['distributions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['distributions_bool_exp'] | undefined | null;
      },
      ValueTypes['distributions'],
    ];
    distributions_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['distributions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['distributions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['distributions_bool_exp'] | undefined | null;
      },
      ValueTypes['distributions_aggregate'],
    ];
    distributions_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['distributions'],
    ];
    distributions_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['distributions_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['distributions_bool_exp'] | undefined | null;
      },
      ValueTypes['distributions'],
    ];
    emails?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['emails_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['emails_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['emails_bool_exp'] | undefined | null;
      },
      ValueTypes['emails'],
    ];
    emails_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['emails_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['emails_bool_exp'] | undefined | null;
      },
      ValueTypes['emails'],
    ];
    enriched_casts?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['enriched_casts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['enriched_casts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['enriched_casts_bool_exp'] | undefined | null;
      },
      ValueTypes['enriched_casts'],
    ];
    enriched_casts_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['enriched_casts'],
    ];
    enriched_casts_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['enriched_casts_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['enriched_casts_bool_exp'] | undefined | null;
      },
      ValueTypes['enriched_casts'],
    ];
    epoch_pgive_data?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['epoch_pgive_data_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['epoch_pgive_data_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['epoch_pgive_data_bool_exp'] | undefined | null;
      },
      ValueTypes['epoch_pgive_data'],
    ];
    epoch_pgive_data_by_pk?: [{ id: number }, ValueTypes['epoch_pgive_data']];
    epoch_pgive_data_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['epoch_pgive_data_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['epoch_pgive_data_bool_exp'] | undefined | null;
      },
      ValueTypes['epoch_pgive_data'],
    ];
    epochs?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['epochs_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['epochs_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['epochs_bool_exp'] | undefined | null;
      },
      ValueTypes['epochs'],
    ];
    epochs_by_pk?: [{ id: ValueTypes['bigint'] }, ValueTypes['epochs']];
    epochs_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['epochs_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['epochs_bool_exp'] | undefined | null;
      },
      ValueTypes['epochs'],
    ];
    farcaster_accounts?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['farcaster_accounts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['farcaster_accounts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['farcaster_accounts_bool_exp'] | undefined | null;
      },
      ValueTypes['farcaster_accounts'],
    ];
    farcaster_accounts_by_pk?: [
      { profile_id: ValueTypes['bigint'] },
      ValueTypes['farcaster_accounts'],
    ];
    farcaster_accounts_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          | ValueTypes['farcaster_accounts_stream_cursor_input']
          | undefined
          | null
        > /** filter the rows returned */;
        where?: ValueTypes['farcaster_accounts_bool_exp'] | undefined | null;
      },
      ValueTypes['farcaster_accounts'],
    ];
    farcaster_casts?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['farcaster_casts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['farcaster_casts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['farcaster_casts_bool_exp'] | undefined | null;
      },
      ValueTypes['farcaster_casts'],
    ];
    farcaster_casts_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['farcaster_casts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['farcaster_casts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['farcaster_casts_bool_exp'] | undefined | null;
      },
      ValueTypes['farcaster_casts_aggregate'],
    ];
    farcaster_casts_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['farcaster_casts'],
    ];
    farcaster_casts_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['farcaster_casts_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['farcaster_casts_bool_exp'] | undefined | null;
      },
      ValueTypes['farcaster_casts'],
    ];
    farcaster_reactions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['farcaster_reactions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['farcaster_reactions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['farcaster_reactions_bool_exp'] | undefined | null;
      },
      ValueTypes['farcaster_reactions'],
    ];
    farcaster_reactions_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['farcaster_reactions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['farcaster_reactions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['farcaster_reactions_bool_exp'] | undefined | null;
      },
      ValueTypes['farcaster_reactions_aggregate'],
    ];
    farcaster_reactions_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['farcaster_reactions'],
    ];
    farcaster_reactions_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          | ValueTypes['farcaster_reactions_stream_cursor_input']
          | undefined
          | null
        > /** filter the rows returned */;
        where?: ValueTypes['farcaster_reactions_bool_exp'] | undefined | null;
      },
      ValueTypes['farcaster_reactions'],
    ];
    gift_private?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['gift_private_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['gift_private_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['gift_private_bool_exp'] | undefined | null;
      },
      ValueTypes['gift_private'],
    ];
    gift_private_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['gift_private_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['gift_private_bool_exp'] | undefined | null;
      },
      ValueTypes['gift_private'],
    ];
    github_accounts?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['github_accounts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['github_accounts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['github_accounts_bool_exp'] | undefined | null;
      },
      ValueTypes['github_accounts'],
    ];
    github_accounts_by_pk?: [
      { profile_id: ValueTypes['bigint'] },
      ValueTypes['github_accounts'],
    ];
    github_accounts_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['github_accounts_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['github_accounts_bool_exp'] | undefined | null;
      },
      ValueTypes['github_accounts'],
    ];
    histories?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['histories_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['histories_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['histories_bool_exp'] | undefined | null;
      },
      ValueTypes['histories'],
    ];
    histories_by_pk?: [{ id: ValueTypes['bigint'] }, ValueTypes['histories']];
    histories_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['histories_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['histories_bool_exp'] | undefined | null;
      },
      ValueTypes['histories'],
    ];
    invite_codes?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['invite_codes_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['invite_codes_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['invite_codes_bool_exp'] | undefined | null;
      },
      ValueTypes['invite_codes'],
    ];
    invite_codes_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['invite_codes_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['invite_codes_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['invite_codes_bool_exp'] | undefined | null;
      },
      ValueTypes['invite_codes_aggregate'],
    ];
    invite_codes_by_pk?: [
      { code: ValueTypes['citext'] },
      ValueTypes['invite_codes'],
    ];
    invite_codes_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['invite_codes_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['invite_codes_bool_exp'] | undefined | null;
      },
      ValueTypes['invite_codes'],
    ];
    link_holders?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['link_holders_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['link_holders_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['link_holders_bool_exp'] | undefined | null;
      },
      ValueTypes['link_holders'],
    ];
    link_holders_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['link_holders_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['link_holders_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['link_holders_bool_exp'] | undefined | null;
      },
      ValueTypes['link_holders_aggregate'],
    ];
    link_holders_by_pk?: [
      { holder: ValueTypes['citext']; target: ValueTypes['citext'] },
      ValueTypes['link_holders'],
    ];
    link_holders_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['link_holders_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['link_holders_bool_exp'] | undefined | null;
      },
      ValueTypes['link_holders'],
    ];
    link_tx?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['link_tx_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['link_tx_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['link_tx_bool_exp'] | undefined | null;
      },
      ValueTypes['link_tx'],
    ];
    link_tx_by_pk?: [{ tx_hash: ValueTypes['citext'] }, ValueTypes['link_tx']];
    link_tx_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['link_tx_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['link_tx_bool_exp'] | undefined | null;
      },
      ValueTypes['link_tx'],
    ];
    linkedin_accounts?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['linkedin_accounts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['linkedin_accounts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['linkedin_accounts_bool_exp'] | undefined | null;
      },
      ValueTypes['linkedin_accounts'],
    ];
    linkedin_accounts_by_pk?: [
      { profile_id: ValueTypes['bigint'] },
      ValueTypes['linkedin_accounts'],
    ];
    linkedin_accounts_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['linkedin_accounts_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['linkedin_accounts_bool_exp'] | undefined | null;
      },
      ValueTypes['linkedin_accounts'],
    ];
    locked_token_distribution_gifts?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['locked_token_distribution_gifts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['locked_token_distribution_gifts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?:
          | ValueTypes['locked_token_distribution_gifts_bool_exp']
          | undefined
          | null;
      },
      ValueTypes['locked_token_distribution_gifts'],
    ];
    locked_token_distribution_gifts_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['locked_token_distribution_gifts'],
    ];
    locked_token_distribution_gifts_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          | ValueTypes['locked_token_distribution_gifts_stream_cursor_input']
          | undefined
          | null
        > /** filter the rows returned */;
        where?:
          | ValueTypes['locked_token_distribution_gifts_bool_exp']
          | undefined
          | null;
      },
      ValueTypes['locked_token_distribution_gifts'],
    ];
    locked_token_distributions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['locked_token_distributions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['locked_token_distributions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?:
          | ValueTypes['locked_token_distributions_bool_exp']
          | undefined
          | null;
      },
      ValueTypes['locked_token_distributions'],
    ];
    locked_token_distributions_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['locked_token_distributions'],
    ];
    locked_token_distributions_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          | ValueTypes['locked_token_distributions_stream_cursor_input']
          | undefined
          | null
        > /** filter the rows returned */;
        where?:
          | ValueTypes['locked_token_distributions_bool_exp']
          | undefined
          | null;
      },
      ValueTypes['locked_token_distributions'],
    ];
    member_circle_pgives?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['member_circle_pgives_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['member_circle_pgives_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['member_circle_pgives_bool_exp'] | undefined | null;
      },
      ValueTypes['member_circle_pgives'],
    ];
    member_circle_pgives_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          | ValueTypes['member_circle_pgives_stream_cursor_input']
          | undefined
          | null
        > /** filter the rows returned */;
        where?: ValueTypes['member_circle_pgives_bool_exp'] | undefined | null;
      },
      ValueTypes['member_circle_pgives'],
    ];
    member_epoch_pgives?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['member_epoch_pgives_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['member_epoch_pgives_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['member_epoch_pgives_bool_exp'] | undefined | null;
      },
      ValueTypes['member_epoch_pgives'],
    ];
    member_epoch_pgives_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['member_epoch_pgives_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['member_epoch_pgives_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['member_epoch_pgives_bool_exp'] | undefined | null;
      },
      ValueTypes['member_epoch_pgives_aggregate'],
    ];
    member_epoch_pgives_by_pk?: [
      { id: number },
      ValueTypes['member_epoch_pgives'],
    ];
    member_epoch_pgives_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          | ValueTypes['member_epoch_pgives_stream_cursor_input']
          | undefined
          | null
        > /** filter the rows returned */;
        where?: ValueTypes['member_epoch_pgives_bool_exp'] | undefined | null;
      },
      ValueTypes['member_epoch_pgives'],
    ];
    mutes?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['mutes_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['mutes_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['mutes_bool_exp'] | undefined | null;
      },
      ValueTypes['mutes'],
    ];
    mutes_by_pk?: [
      {
        profile_id: ValueTypes['bigint'];
        target_profile_id: ValueTypes['bigint'];
      },
      ValueTypes['mutes'],
    ];
    mutes_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['mutes_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['mutes_bool_exp'] | undefined | null;
      },
      ValueTypes['mutes'],
    ];
    nft_collections?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['nft_collections_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['nft_collections_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['nft_collections_bool_exp'] | undefined | null;
      },
      ValueTypes['nft_collections'],
    ];
    nft_collections_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['nft_collections_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['nft_collections_bool_exp'] | undefined | null;
      },
      ValueTypes['nft_collections'],
    ];
    nft_holdings?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['nft_holdings_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['nft_holdings_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['nft_holdings_bool_exp'] | undefined | null;
      },
      ValueTypes['nft_holdings'],
    ];
    nft_holdings_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['nft_holdings_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['nft_holdings_bool_exp'] | undefined | null;
      },
      ValueTypes['nft_holdings'],
    ];
    nominees?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['nominees_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['nominees_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['nominees_bool_exp'] | undefined | null;
      },
      ValueTypes['nominees'],
    ];
    nominees_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['nominees_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['nominees_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['nominees_bool_exp'] | undefined | null;
      },
      ValueTypes['nominees_aggregate'],
    ];
    nominees_by_pk?: [{ id: ValueTypes['bigint'] }, ValueTypes['nominees']];
    nominees_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['nominees_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['nominees_bool_exp'] | undefined | null;
      },
      ValueTypes['nominees'],
    ];
    note_count?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['note_count_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['note_count_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['note_count_bool_exp'] | undefined | null;
      },
      ValueTypes['note_count'],
    ];
    note_count_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['note_count_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['note_count_bool_exp'] | undefined | null;
      },
      ValueTypes['note_count'],
    ];
    notifications?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['notifications_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['notifications_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['notifications_bool_exp'] | undefined | null;
      },
      ValueTypes['notifications'],
    ];
    notifications_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['notifications_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['notifications_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['notifications_bool_exp'] | undefined | null;
      },
      ValueTypes['notifications_aggregate'],
    ];
    notifications_by_pk?: [{ id: number }, ValueTypes['notifications']];
    notifications_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['notifications_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['notifications_bool_exp'] | undefined | null;
      },
      ValueTypes['notifications'],
    ];
    org_members?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['org_members_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['org_members_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['org_members_bool_exp'] | undefined | null;
      },
      ValueTypes['org_members'],
    ];
    org_members_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['org_members'],
    ];
    org_members_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['org_members_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['org_members_bool_exp'] | undefined | null;
      },
      ValueTypes['org_members'],
    ];
    org_share_tokens?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['org_share_tokens_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['org_share_tokens_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['org_share_tokens_bool_exp'] | undefined | null;
      },
      ValueTypes['org_share_tokens'],
    ];
    org_share_tokens_by_pk?: [
      { org_id: ValueTypes['bigint']; type: number },
      ValueTypes['org_share_tokens'],
    ];
    org_share_tokens_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['org_share_tokens_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['org_share_tokens_bool_exp'] | undefined | null;
      },
      ValueTypes['org_share_tokens'],
    ];
    organizations?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['organizations_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['organizations_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['organizations_bool_exp'] | undefined | null;
      },
      ValueTypes['organizations'],
    ];
    organizations_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['organizations'],
    ];
    organizations_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['organizations_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['organizations_bool_exp'] | undefined | null;
      },
      ValueTypes['organizations'],
    ];
    pending_gift_private?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['pending_gift_private_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['pending_gift_private_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['pending_gift_private_bool_exp'] | undefined | null;
      },
      ValueTypes['pending_gift_private'],
    ];
    pending_gift_private_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          | ValueTypes['pending_gift_private_stream_cursor_input']
          | undefined
          | null
        > /** filter the rows returned */;
        where?: ValueTypes['pending_gift_private_bool_exp'] | undefined | null;
      },
      ValueTypes['pending_gift_private'],
    ];
    pending_token_gifts?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['pending_token_gifts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['pending_token_gifts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['pending_token_gifts_bool_exp'] | undefined | null;
      },
      ValueTypes['pending_token_gifts'],
    ];
    pending_token_gifts_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['pending_token_gifts'],
    ];
    pending_token_gifts_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          | ValueTypes['pending_token_gifts_stream_cursor_input']
          | undefined
          | null
        > /** filter the rows returned */;
        where?: ValueTypes['pending_token_gifts_bool_exp'] | undefined | null;
      },
      ValueTypes['pending_token_gifts'],
    ];
    pending_vault_transactions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['pending_vault_transactions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['pending_vault_transactions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?:
          | ValueTypes['pending_vault_transactions_bool_exp']
          | undefined
          | null;
      },
      ValueTypes['pending_vault_transactions'],
    ];
    pending_vault_transactions_by_pk?: [
      { tx_hash: string },
      ValueTypes['pending_vault_transactions'],
    ];
    pending_vault_transactions_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          | ValueTypes['pending_vault_transactions_stream_cursor_input']
          | undefined
          | null
        > /** filter the rows returned */;
        where?:
          | ValueTypes['pending_vault_transactions_bool_exp']
          | undefined
          | null;
      },
      ValueTypes['pending_vault_transactions'],
    ];
    poap_events?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['poap_events_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['poap_events_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['poap_events_bool_exp'] | undefined | null;
      },
      ValueTypes['poap_events'],
    ];
    poap_events_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['poap_events_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['poap_events_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['poap_events_bool_exp'] | undefined | null;
      },
      ValueTypes['poap_events_aggregate'],
    ];
    poap_events_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['poap_events'],
    ];
    poap_events_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['poap_events_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['poap_events_bool_exp'] | undefined | null;
      },
      ValueTypes['poap_events'],
    ];
    poap_holders?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['poap_holders_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['poap_holders_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['poap_holders_bool_exp'] | undefined | null;
      },
      ValueTypes['poap_holders'],
    ];
    poap_holders_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['poap_holders_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['poap_holders_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['poap_holders_bool_exp'] | undefined | null;
      },
      ValueTypes['poap_holders_aggregate'],
    ];
    poap_holders_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['poap_holders'],
    ];
    poap_holders_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['poap_holders_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['poap_holders_bool_exp'] | undefined | null;
      },
      ValueTypes['poap_holders'],
    ];
    private_stream_visibility?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['private_stream_visibility_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['private_stream_visibility_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?:
          | ValueTypes['private_stream_visibility_bool_exp']
          | undefined
          | null;
      },
      ValueTypes['private_stream_visibility'],
    ];
    private_stream_visibility_by_pk?: [
      {
        profile_id: ValueTypes['bigint'];
        view_profile_id: ValueTypes['bigint'];
      },
      ValueTypes['private_stream_visibility'],
    ];
    private_stream_visibility_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          | ValueTypes['private_stream_visibility_stream_cursor_input']
          | undefined
          | null
        > /** filter the rows returned */;
        where?:
          | ValueTypes['private_stream_visibility_bool_exp']
          | undefined
          | null;
      },
      ValueTypes['private_stream_visibility'],
    ];
    profile_skills?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['profile_skills_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['profile_skills_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['profile_skills_bool_exp'] | undefined | null;
      },
      ValueTypes['profile_skills'],
    ];
    profile_skills_by_pk?: [
      { profile_id: number; skill_name: ValueTypes['citext'] },
      ValueTypes['profile_skills'],
    ];
    profile_skills_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['profile_skills_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['profile_skills_bool_exp'] | undefined | null;
      },
      ValueTypes['profile_skills'],
    ];
    profiles?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['profiles_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['profiles_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['profiles_bool_exp'] | undefined | null;
      },
      ValueTypes['profiles'],
    ];
    profiles_by_pk?: [{ id: ValueTypes['bigint'] }, ValueTypes['profiles']];
    profiles_private?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['profiles_private_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['profiles_private_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['profiles_private_bool_exp'] | undefined | null;
      },
      ValueTypes['profiles_private'],
    ];
    profiles_private_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['profiles_private_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['profiles_private_bool_exp'] | undefined | null;
      },
      ValueTypes['profiles_private'],
    ];
    profiles_public?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['profiles_public_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['profiles_public_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['profiles_public_bool_exp'] | undefined | null;
      },
      ValueTypes['profiles_public'],
    ];
    profiles_public_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['profiles_public_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['profiles_public_bool_exp'] | undefined | null;
      },
      ValueTypes['profiles_public'],
    ];
    profiles_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['profiles_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['profiles_bool_exp'] | undefined | null;
      },
      ValueTypes['profiles'],
    ];
    reactions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['reactions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['reactions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['reactions_bool_exp'] | undefined | null;
      },
      ValueTypes['reactions'],
    ];
    reactions_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['reactions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['reactions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['reactions_bool_exp'] | undefined | null;
      },
      ValueTypes['reactions_aggregate'],
    ];
    reactions_by_pk?: [{ id: ValueTypes['bigint'] }, ValueTypes['reactions']];
    reactions_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['reactions_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['reactions_bool_exp'] | undefined | null;
      },
      ValueTypes['reactions'],
    ];
    replies?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['replies_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['replies_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['replies_bool_exp'] | undefined | null;
      },
      ValueTypes['replies'],
    ];
    replies_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['replies_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['replies_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['replies_bool_exp'] | undefined | null;
      },
      ValueTypes['replies_aggregate'],
    ];
    replies_by_pk?: [{ id: ValueTypes['bigint'] }, ValueTypes['replies']];
    replies_reactions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['replies_reactions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['replies_reactions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['replies_reactions_bool_exp'] | undefined | null;
      },
      ValueTypes['replies_reactions'],
    ];
    replies_reactions_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['replies_reactions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['replies_reactions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['replies_reactions_bool_exp'] | undefined | null;
      },
      ValueTypes['replies_reactions_aggregate'],
    ];
    replies_reactions_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['replies_reactions'],
    ];
    replies_reactions_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['replies_reactions_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['replies_reactions_bool_exp'] | undefined | null;
      },
      ValueTypes['replies_reactions'],
    ];
    replies_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['replies_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['replies_bool_exp'] | undefined | null;
      },
      ValueTypes['replies'],
    ];
    reputation_scores?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['reputation_scores_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['reputation_scores_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['reputation_scores_bool_exp'] | undefined | null;
      },
      ValueTypes['reputation_scores'],
    ];
    reputation_scores_by_pk?: [
      { profile_id: ValueTypes['bigint'] },
      ValueTypes['reputation_scores'],
    ];
    reputation_scores_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['reputation_scores_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['reputation_scores_bool_exp'] | undefined | null;
      },
      ValueTypes['reputation_scores'],
    ];
    search_contributions?: [
      {
        /** input parameters for function "search_contributions" */
        args: ValueTypes['search_contributions_args'] /** distinct select on columns */;
        distinct_on?:
          | Array<ValueTypes['contributions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['contributions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['contributions_bool_exp'] | undefined | null;
      },
      ValueTypes['contributions'],
    ];
    search_contributions_aggregate?: [
      {
        /** input parameters for function "search_contributions_aggregate" */
        args: ValueTypes['search_contributions_args'] /** distinct select on columns */;
        distinct_on?:
          | Array<ValueTypes['contributions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['contributions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['contributions_bool_exp'] | undefined | null;
      },
      ValueTypes['contributions_aggregate'],
    ];
    search_replies?: [
      {
        /** input parameters for function "search_replies" */
        args: ValueTypes['search_replies_args'] /** distinct select on columns */;
        distinct_on?:
          | Array<ValueTypes['replies_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['replies_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['replies_bool_exp'] | undefined | null;
      },
      ValueTypes['replies'],
    ];
    search_replies_aggregate?: [
      {
        /** input parameters for function "search_replies_aggregate" */
        args: ValueTypes['search_replies_args'] /** distinct select on columns */;
        distinct_on?:
          | Array<ValueTypes['replies_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['replies_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['replies_bool_exp'] | undefined | null;
      },
      ValueTypes['replies_aggregate'],
    ];
    skills?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['skills_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['skills_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['skills_bool_exp'] | undefined | null;
      },
      ValueTypes['skills'],
    ];
    skills_by_pk?: [{ name: ValueTypes['citext'] }, ValueTypes['skills']];
    skills_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['skills_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['skills_bool_exp'] | undefined | null;
      },
      ValueTypes['skills'],
    ];
    teammates?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['teammates_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['teammates_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['teammates_bool_exp'] | undefined | null;
      },
      ValueTypes['teammates'],
    ];
    teammates_by_pk?: [{ id: ValueTypes['bigint'] }, ValueTypes['teammates']];
    teammates_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['teammates_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['teammates_bool_exp'] | undefined | null;
      },
      ValueTypes['teammates'],
    ];
    token_gifts?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['token_gifts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['token_gifts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['token_gifts_bool_exp'] | undefined | null;
      },
      ValueTypes['token_gifts'],
    ];
    token_gifts_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['token_gifts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['token_gifts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['token_gifts_bool_exp'] | undefined | null;
      },
      ValueTypes['token_gifts_aggregate'],
    ];
    token_gifts_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['token_gifts'],
    ];
    token_gifts_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['token_gifts_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['token_gifts_bool_exp'] | undefined | null;
      },
      ValueTypes['token_gifts'],
    ];
    twitter_accounts?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['twitter_accounts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['twitter_accounts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['twitter_accounts_bool_exp'] | undefined | null;
      },
      ValueTypes['twitter_accounts'],
    ];
    twitter_accounts_by_pk?: [
      { profile_id: number },
      ValueTypes['twitter_accounts'],
    ];
    twitter_accounts_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['twitter_accounts_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['twitter_accounts_bool_exp'] | undefined | null;
      },
      ValueTypes['twitter_accounts'],
    ];
    user_private?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['user_private_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['user_private_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['user_private_bool_exp'] | undefined | null;
      },
      ValueTypes['user_private'],
    ];
    user_private_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['user_private_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['user_private_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['user_private_bool_exp'] | undefined | null;
      },
      ValueTypes['user_private_aggregate'],
    ];
    user_private_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['user_private_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['user_private_bool_exp'] | undefined | null;
      },
      ValueTypes['user_private'],
    ];
    users?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['users_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['users_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['users_bool_exp'] | undefined | null;
      },
      ValueTypes['users'],
    ];
    users_by_pk?: [{ id: ValueTypes['bigint'] }, ValueTypes['users']];
    users_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['users_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['users_bool_exp'] | undefined | null;
      },
      ValueTypes['users'],
    ];
    vault_transactions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['vault_transactions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['vault_transactions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['vault_transactions_bool_exp'] | undefined | null;
      },
      ValueTypes['vault_transactions'],
    ];
    vault_transactions_by_pk?: [
      { id: ValueTypes['bigint'] },
      ValueTypes['vault_transactions'],
    ];
    vault_transactions_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          | ValueTypes['vault_transactions_stream_cursor_input']
          | undefined
          | null
        > /** filter the rows returned */;
        where?: ValueTypes['vault_transactions_bool_exp'] | undefined | null;
      },
      ValueTypes['vault_transactions'],
    ];
    vault_tx_types?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['vault_tx_types_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['vault_tx_types_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['vault_tx_types_bool_exp'] | undefined | null;
      },
      ValueTypes['vault_tx_types'],
    ];
    vault_tx_types_by_pk?: [{ value: string }, ValueTypes['vault_tx_types']];
    vault_tx_types_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['vault_tx_types_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['vault_tx_types_bool_exp'] | undefined | null;
      },
      ValueTypes['vault_tx_types'],
    ];
    vaults?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['vaults_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['vaults_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['vaults_bool_exp'] | undefined | null;
      },
      ValueTypes['vaults'],
    ];
    vaults_by_pk?: [{ id: ValueTypes['bigint'] }, ValueTypes['vaults']];
    vaults_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['vaults_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['vaults_bool_exp'] | undefined | null;
      },
      ValueTypes['vaults'],
    ];
    vector_search_poap_events?: [
      {
        /** input parameters for function "vector_search_poap_events" */
        args: ValueTypes['vector_search_poap_events_args'] /** distinct select on columns */;
        distinct_on?:
          | Array<ValueTypes['poap_events_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['poap_events_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['poap_events_bool_exp'] | undefined | null;
      },
      ValueTypes['poap_events'],
    ];
    vector_search_poap_events_aggregate?: [
      {
        /** input parameters for function "vector_search_poap_events_aggregate" */
        args: ValueTypes['vector_search_poap_events_args'] /** distinct select on columns */;
        distinct_on?:
          | Array<ValueTypes['poap_events_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['poap_events_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['poap_events_bool_exp'] | undefined | null;
      },
      ValueTypes['poap_events_aggregate'],
    ];
    vector_search_poap_holders?: [
      {
        /** input parameters for function "vector_search_poap_holders" */
        args: ValueTypes['vector_search_poap_holders_args'] /** distinct select on columns */;
        distinct_on?:
          | Array<ValueTypes['poap_holders_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['poap_holders_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['poap_holders_bool_exp'] | undefined | null;
      },
      ValueTypes['poap_holders'],
    ];
    vector_search_poap_holders_aggregate?: [
      {
        /** input parameters for function "vector_search_poap_holders_aggregate" */
        args: ValueTypes['vector_search_poap_holders_args'] /** distinct select on columns */;
        distinct_on?:
          | Array<ValueTypes['poap_holders_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['poap_holders_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['poap_holders_bool_exp'] | undefined | null;
      },
      ValueTypes['poap_holders_aggregate'],
    ];
    vouches?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['vouches_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['vouches_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['vouches_bool_exp'] | undefined | null;
      },
      ValueTypes['vouches'],
    ];
    vouches_by_pk?: [{ id: ValueTypes['bigint'] }, ValueTypes['vouches']];
    vouches_stream?: [
      {
        /** maximum number of rows returned in a single batch */
        batch_size: number /** cursor to stream the results returned by the query */;
        cursor: Array<
          ValueTypes['vouches_stream_cursor_input'] | undefined | null
        > /** filter the rows returned */;
        where?: ValueTypes['vouches_bool_exp'] | undefined | null;
      },
      ValueTypes['vouches'],
    ];
    __typename?: boolean | `@${string}`;
  }>;
  /** columns and relationships of "teammates" */
  ['teammates']: AliasType<{
    created_at?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    team_mate_id?: boolean | `@${string}`;
    /** An object relationship */
    teammate?: ValueTypes['users'];
    updated_at?: boolean | `@${string}`;
    /** An object relationship */
    user?: ValueTypes['users'];
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "teammates" */
  ['teammates_aggregate_order_by']: {
    avg?: ValueTypes['teammates_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['teammates_max_order_by'] | undefined | null;
    min?: ValueTypes['teammates_min_order_by'] | undefined | null;
    stddev?: ValueTypes['teammates_stddev_order_by'] | undefined | null;
    stddev_pop?: ValueTypes['teammates_stddev_pop_order_by'] | undefined | null;
    stddev_samp?:
      | ValueTypes['teammates_stddev_samp_order_by']
      | undefined
      | null;
    sum?: ValueTypes['teammates_sum_order_by'] | undefined | null;
    var_pop?: ValueTypes['teammates_var_pop_order_by'] | undefined | null;
    var_samp?: ValueTypes['teammates_var_samp_order_by'] | undefined | null;
    variance?: ValueTypes['teammates_variance_order_by'] | undefined | null;
  };
  /** order by avg() on columns of table "teammates" */
  ['teammates_avg_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
    team_mate_id?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "teammates". All fields are combined with a logical 'AND'. */
  ['teammates_bool_exp']: {
    _and?: Array<ValueTypes['teammates_bool_exp']> | undefined | null;
    _not?: ValueTypes['teammates_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['teammates_bool_exp']> | undefined | null;
    created_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    team_mate_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    teammate?: ValueTypes['users_bool_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    user?: ValueTypes['users_bool_exp'] | undefined | null;
    user_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
  };
  /** order by max() on columns of table "teammates" */
  ['teammates_max_order_by']: {
    created_at?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    team_mate_id?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by min() on columns of table "teammates" */
  ['teammates_min_order_by']: {
    created_at?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    team_mate_id?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Ordering options when selecting data from "teammates". */
  ['teammates_order_by']: {
    created_at?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    team_mate_id?: ValueTypes['order_by'] | undefined | null;
    teammate?: ValueTypes['users_order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    user?: ValueTypes['users_order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "teammates" */
  ['teammates_select_column']: teammates_select_column;
  /** order by stddev() on columns of table "teammates" */
  ['teammates_stddev_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
    team_mate_id?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_pop() on columns of table "teammates" */
  ['teammates_stddev_pop_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
    team_mate_id?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_samp() on columns of table "teammates" */
  ['teammates_stddev_samp_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
    team_mate_id?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "teammates" */
  ['teammates_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['teammates_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['teammates_stream_cursor_value_input']: {
    created_at?: ValueTypes['timestamp'] | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    team_mate_id?: number | undefined | null;
    updated_at?: ValueTypes['timestamp'] | undefined | null;
    user_id?: number | undefined | null;
  };
  /** order by sum() on columns of table "teammates" */
  ['teammates_sum_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
    team_mate_id?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by var_pop() on columns of table "teammates" */
  ['teammates_var_pop_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
    team_mate_id?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by var_samp() on columns of table "teammates" */
  ['teammates_var_samp_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
    team_mate_id?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by variance() on columns of table "teammates" */
  ['teammates_variance_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
    team_mate_id?: ValueTypes['order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  ['timestamp']: unknown;
  /** Boolean expression to compare columns of type "timestamp". All fields are combined with logical 'AND'. */
  ['timestamp_comparison_exp']: {
    _eq?: ValueTypes['timestamp'] | undefined | null;
    _gt?: ValueTypes['timestamp'] | undefined | null;
    _gte?: ValueTypes['timestamp'] | undefined | null;
    _in?: Array<ValueTypes['timestamp']> | undefined | null;
    _is_null?: boolean | undefined | null;
    _lt?: ValueTypes['timestamp'] | undefined | null;
    _lte?: ValueTypes['timestamp'] | undefined | null;
    _neq?: ValueTypes['timestamp'] | undefined | null;
    _nin?: Array<ValueTypes['timestamp']> | undefined | null;
  };
  ['timestamptz']: unknown;
  /** Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'. */
  ['timestamptz_comparison_exp']: {
    _eq?: ValueTypes['timestamptz'] | undefined | null;
    _gt?: ValueTypes['timestamptz'] | undefined | null;
    _gte?: ValueTypes['timestamptz'] | undefined | null;
    _in?: Array<ValueTypes['timestamptz']> | undefined | null;
    _is_null?: boolean | undefined | null;
    _lt?: ValueTypes['timestamptz'] | undefined | null;
    _lte?: ValueTypes['timestamptz'] | undefined | null;
    _neq?: ValueTypes['timestamptz'] | undefined | null;
    _nin?: Array<ValueTypes['timestamptz']> | undefined | null;
  };
  /** GIVE allocations made by circle members for completed epochs */
  ['token_gifts']: AliasType<{
    /** An object relationship */
    circle?: ValueTypes['circles'];
    circle_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    dts_created?: boolean | `@${string}`;
    /** An object relationship */
    epoch?: ValueTypes['epochs'];
    epoch_id?: boolean | `@${string}`;
    /** An object relationship */
    gift_private?: ValueTypes['gift_private'];
    id?: boolean | `@${string}`;
    /** An object relationship */
    recipient?: ValueTypes['users'];
    recipient_address?: boolean | `@${string}`;
    recipient_id?: boolean | `@${string}`;
    /** An object relationship */
    sender?: ValueTypes['users'];
    sender_address?: boolean | `@${string}`;
    sender_id?: boolean | `@${string}`;
    tokens?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregated selection of "token_gifts" */
  ['token_gifts_aggregate']: AliasType<{
    aggregate?: ValueTypes['token_gifts_aggregate_fields'];
    nodes?: ValueTypes['token_gifts'];
    __typename?: boolean | `@${string}`;
  }>;
  ['token_gifts_aggregate_bool_exp']: {
    count?:
      | ValueTypes['token_gifts_aggregate_bool_exp_count']
      | undefined
      | null;
  };
  ['token_gifts_aggregate_bool_exp_count']: {
    arguments?:
      | Array<ValueTypes['token_gifts_select_column']>
      | undefined
      | null;
    distinct?: boolean | undefined | null;
    filter?: ValueTypes['token_gifts_bool_exp'] | undefined | null;
    predicate: ValueTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "token_gifts" */
  ['token_gifts_aggregate_fields']: AliasType<{
    avg?: ValueTypes['token_gifts_avg_fields'];
    count?: [
      {
        columns?:
          | Array<ValueTypes['token_gifts_select_column']>
          | undefined
          | null;
        distinct?: boolean | undefined | null;
      },
      boolean | `@${string}`,
    ];
    max?: ValueTypes['token_gifts_max_fields'];
    min?: ValueTypes['token_gifts_min_fields'];
    stddev?: ValueTypes['token_gifts_stddev_fields'];
    stddev_pop?: ValueTypes['token_gifts_stddev_pop_fields'];
    stddev_samp?: ValueTypes['token_gifts_stddev_samp_fields'];
    sum?: ValueTypes['token_gifts_sum_fields'];
    var_pop?: ValueTypes['token_gifts_var_pop_fields'];
    var_samp?: ValueTypes['token_gifts_var_samp_fields'];
    variance?: ValueTypes['token_gifts_variance_fields'];
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "token_gifts" */
  ['token_gifts_aggregate_order_by']: {
    avg?: ValueTypes['token_gifts_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['token_gifts_max_order_by'] | undefined | null;
    min?: ValueTypes['token_gifts_min_order_by'] | undefined | null;
    stddev?: ValueTypes['token_gifts_stddev_order_by'] | undefined | null;
    stddev_pop?:
      | ValueTypes['token_gifts_stddev_pop_order_by']
      | undefined
      | null;
    stddev_samp?:
      | ValueTypes['token_gifts_stddev_samp_order_by']
      | undefined
      | null;
    sum?: ValueTypes['token_gifts_sum_order_by'] | undefined | null;
    var_pop?: ValueTypes['token_gifts_var_pop_order_by'] | undefined | null;
    var_samp?: ValueTypes['token_gifts_var_samp_order_by'] | undefined | null;
    variance?: ValueTypes['token_gifts_variance_order_by'] | undefined | null;
  };
  /** aggregate avg on columns */
  ['token_gifts_avg_fields']: AliasType<{
    circle_id?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    recipient_id?: boolean | `@${string}`;
    sender_id?: boolean | `@${string}`;
    tokens?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by avg() on columns of table "token_gifts" */
  ['token_gifts_avg_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    recipient_id?: ValueTypes['order_by'] | undefined | null;
    sender_id?: ValueTypes['order_by'] | undefined | null;
    tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "token_gifts". All fields are combined with a logical 'AND'. */
  ['token_gifts_bool_exp']: {
    _and?: Array<ValueTypes['token_gifts_bool_exp']> | undefined | null;
    _not?: ValueTypes['token_gifts_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['token_gifts_bool_exp']> | undefined | null;
    circle?: ValueTypes['circles_bool_exp'] | undefined | null;
    circle_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    created_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    dts_created?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    epoch?: ValueTypes['epochs_bool_exp'] | undefined | null;
    epoch_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    gift_private?: ValueTypes['gift_private_bool_exp'] | undefined | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    recipient?: ValueTypes['users_bool_exp'] | undefined | null;
    recipient_address?: ValueTypes['String_comparison_exp'] | undefined | null;
    recipient_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    sender?: ValueTypes['users_bool_exp'] | undefined | null;
    sender_address?: ValueTypes['String_comparison_exp'] | undefined | null;
    sender_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    tokens?: ValueTypes['Int_comparison_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
  };
  /** aggregate max on columns */
  ['token_gifts_max_fields']: AliasType<{
    circle_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    dts_created?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    recipient_address?: boolean | `@${string}`;
    recipient_id?: boolean | `@${string}`;
    sender_address?: boolean | `@${string}`;
    sender_id?: boolean | `@${string}`;
    tokens?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by max() on columns of table "token_gifts" */
  ['token_gifts_max_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    dts_created?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    recipient_address?: ValueTypes['order_by'] | undefined | null;
    recipient_id?: ValueTypes['order_by'] | undefined | null;
    sender_address?: ValueTypes['order_by'] | undefined | null;
    sender_id?: ValueTypes['order_by'] | undefined | null;
    tokens?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate min on columns */
  ['token_gifts_min_fields']: AliasType<{
    circle_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    dts_created?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    recipient_address?: boolean | `@${string}`;
    recipient_id?: boolean | `@${string}`;
    sender_address?: boolean | `@${string}`;
    sender_id?: boolean | `@${string}`;
    tokens?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by min() on columns of table "token_gifts" */
  ['token_gifts_min_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    dts_created?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    recipient_address?: ValueTypes['order_by'] | undefined | null;
    recipient_id?: ValueTypes['order_by'] | undefined | null;
    sender_address?: ValueTypes['order_by'] | undefined | null;
    sender_id?: ValueTypes['order_by'] | undefined | null;
    tokens?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** Ordering options when selecting data from "token_gifts". */
  ['token_gifts_order_by']: {
    circle?: ValueTypes['circles_order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    dts_created?: ValueTypes['order_by'] | undefined | null;
    epoch?: ValueTypes['epochs_order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    gift_private?: ValueTypes['gift_private_order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    recipient?: ValueTypes['users_order_by'] | undefined | null;
    recipient_address?: ValueTypes['order_by'] | undefined | null;
    recipient_id?: ValueTypes['order_by'] | undefined | null;
    sender?: ValueTypes['users_order_by'] | undefined | null;
    sender_address?: ValueTypes['order_by'] | undefined | null;
    sender_id?: ValueTypes['order_by'] | undefined | null;
    tokens?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "token_gifts" */
  ['token_gifts_select_column']: token_gifts_select_column;
  /** aggregate stddev on columns */
  ['token_gifts_stddev_fields']: AliasType<{
    circle_id?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    recipient_id?: boolean | `@${string}`;
    sender_id?: boolean | `@${string}`;
    tokens?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev() on columns of table "token_gifts" */
  ['token_gifts_stddev_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    recipient_id?: ValueTypes['order_by'] | undefined | null;
    sender_id?: ValueTypes['order_by'] | undefined | null;
    tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_pop on columns */
  ['token_gifts_stddev_pop_fields']: AliasType<{
    circle_id?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    recipient_id?: boolean | `@${string}`;
    sender_id?: boolean | `@${string}`;
    tokens?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_pop() on columns of table "token_gifts" */
  ['token_gifts_stddev_pop_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    recipient_id?: ValueTypes['order_by'] | undefined | null;
    sender_id?: ValueTypes['order_by'] | undefined | null;
    tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate stddev_samp on columns */
  ['token_gifts_stddev_samp_fields']: AliasType<{
    circle_id?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    recipient_id?: boolean | `@${string}`;
    sender_id?: boolean | `@${string}`;
    tokens?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by stddev_samp() on columns of table "token_gifts" */
  ['token_gifts_stddev_samp_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    recipient_id?: ValueTypes['order_by'] | undefined | null;
    sender_id?: ValueTypes['order_by'] | undefined | null;
    tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "token_gifts" */
  ['token_gifts_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['token_gifts_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['token_gifts_stream_cursor_value_input']: {
    circle_id?: ValueTypes['bigint'] | undefined | null;
    created_at?: ValueTypes['timestamp'] | undefined | null;
    dts_created?: ValueTypes['timestamp'] | undefined | null;
    epoch_id?: number | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    recipient_address?: string | undefined | null;
    recipient_id?: ValueTypes['bigint'] | undefined | null;
    sender_address?: string | undefined | null;
    sender_id?: ValueTypes['bigint'] | undefined | null;
    tokens?: number | undefined | null;
    updated_at?: ValueTypes['timestamp'] | undefined | null;
  };
  /** aggregate sum on columns */
  ['token_gifts_sum_fields']: AliasType<{
    circle_id?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    recipient_id?: boolean | `@${string}`;
    sender_id?: boolean | `@${string}`;
    tokens?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by sum() on columns of table "token_gifts" */
  ['token_gifts_sum_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    recipient_id?: ValueTypes['order_by'] | undefined | null;
    sender_id?: ValueTypes['order_by'] | undefined | null;
    tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate var_pop on columns */
  ['token_gifts_var_pop_fields']: AliasType<{
    circle_id?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    recipient_id?: boolean | `@${string}`;
    sender_id?: boolean | `@${string}`;
    tokens?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_pop() on columns of table "token_gifts" */
  ['token_gifts_var_pop_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    recipient_id?: ValueTypes['order_by'] | undefined | null;
    sender_id?: ValueTypes['order_by'] | undefined | null;
    tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate var_samp on columns */
  ['token_gifts_var_samp_fields']: AliasType<{
    circle_id?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    recipient_id?: boolean | `@${string}`;
    sender_id?: boolean | `@${string}`;
    tokens?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by var_samp() on columns of table "token_gifts" */
  ['token_gifts_var_samp_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    recipient_id?: ValueTypes['order_by'] | undefined | null;
    sender_id?: ValueTypes['order_by'] | undefined | null;
    tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** aggregate variance on columns */
  ['token_gifts_variance_fields']: AliasType<{
    circle_id?: boolean | `@${string}`;
    epoch_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    recipient_id?: boolean | `@${string}`;
    sender_id?: boolean | `@${string}`;
    tokens?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by variance() on columns of table "token_gifts" */
  ['token_gifts_variance_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    epoch_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    recipient_id?: ValueTypes['order_by'] | undefined | null;
    sender_id?: ValueTypes['order_by'] | undefined | null;
    tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** twitter accounts connected to profiles */
  ['twitter_accounts']: AliasType<{
    description?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    name?: boolean | `@${string}`;
    /** An object relationship */
    profile?: ValueTypes['profiles'];
    profile_id?: boolean | `@${string}`;
    profile_image_url?: boolean | `@${string}`;
    username?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "twitter_accounts". All fields are combined with a logical 'AND'. */
  ['twitter_accounts_bool_exp']: {
    _and?: Array<ValueTypes['twitter_accounts_bool_exp']> | undefined | null;
    _not?: ValueTypes['twitter_accounts_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['twitter_accounts_bool_exp']> | undefined | null;
    description?: ValueTypes['String_comparison_exp'] | undefined | null;
    id?: ValueTypes['String_comparison_exp'] | undefined | null;
    name?: ValueTypes['String_comparison_exp'] | undefined | null;
    profile?: ValueTypes['profiles_bool_exp'] | undefined | null;
    profile_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    profile_image_url?: ValueTypes['String_comparison_exp'] | undefined | null;
    username?: ValueTypes['String_comparison_exp'] | undefined | null;
  };
  /** response of any mutation on the table "twitter_accounts" */
  ['twitter_accounts_mutation_response']: AliasType<{
    /** number of rows affected by the mutation */
    affected_rows?: boolean | `@${string}`;
    /** data from the rows affected by the mutation */
    returning?: ValueTypes['twitter_accounts'];
    __typename?: boolean | `@${string}`;
  }>;
  /** Ordering options when selecting data from "twitter_accounts". */
  ['twitter_accounts_order_by']: {
    description?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    name?: ValueTypes['order_by'] | undefined | null;
    profile?: ValueTypes['profiles_order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    profile_image_url?: ValueTypes['order_by'] | undefined | null;
    username?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "twitter_accounts" */
  ['twitter_accounts_select_column']: twitter_accounts_select_column;
  /** Streaming cursor of the table "twitter_accounts" */
  ['twitter_accounts_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['twitter_accounts_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['twitter_accounts_stream_cursor_value_input']: {
    description?: string | undefined | null;
    id?: string | undefined | null;
    name?: string | undefined | null;
    profile_id?: number | undefined | null;
    profile_image_url?: string | undefined | null;
    username?: string | undefined | null;
  };
  /** columns and relationships of "user_private" */
  ['user_private']: AliasType<{
    /** An object relationship */
    circle?: ValueTypes['circles'];
    fixed_payment_amount?: boolean | `@${string}`;
    fixed_payment_token_type?: boolean | `@${string}`;
    /** An object relationship */
    user?: ValueTypes['users'];
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregated selection of "user_private" */
  ['user_private_aggregate']: AliasType<{
    aggregate?: ValueTypes['user_private_aggregate_fields'];
    nodes?: ValueTypes['user_private'];
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregate fields of "user_private" */
  ['user_private_aggregate_fields']: AliasType<{
    avg?: ValueTypes['user_private_avg_fields'];
    count?: [
      {
        columns?:
          | Array<ValueTypes['user_private_select_column']>
          | undefined
          | null;
        distinct?: boolean | undefined | null;
      },
      boolean | `@${string}`,
    ];
    max?: ValueTypes['user_private_max_fields'];
    min?: ValueTypes['user_private_min_fields'];
    stddev?: ValueTypes['user_private_stddev_fields'];
    stddev_pop?: ValueTypes['user_private_stddev_pop_fields'];
    stddev_samp?: ValueTypes['user_private_stddev_samp_fields'];
    sum?: ValueTypes['user_private_sum_fields'];
    var_pop?: ValueTypes['user_private_var_pop_fields'];
    var_samp?: ValueTypes['user_private_var_samp_fields'];
    variance?: ValueTypes['user_private_variance_fields'];
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregate avg on columns */
  ['user_private_avg_fields']: AliasType<{
    fixed_payment_amount?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "user_private". All fields are combined with a logical 'AND'. */
  ['user_private_bool_exp']: {
    _and?: Array<ValueTypes['user_private_bool_exp']> | undefined | null;
    _not?: ValueTypes['user_private_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['user_private_bool_exp']> | undefined | null;
    circle?: ValueTypes['circles_bool_exp'] | undefined | null;
    fixed_payment_amount?:
      | ValueTypes['numeric_comparison_exp']
      | undefined
      | null;
    fixed_payment_token_type?:
      | ValueTypes['String_comparison_exp']
      | undefined
      | null;
    user?: ValueTypes['users_bool_exp'] | undefined | null;
    user_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
  };
  /** aggregate max on columns */
  ['user_private_max_fields']: AliasType<{
    fixed_payment_amount?: boolean | `@${string}`;
    fixed_payment_token_type?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregate min on columns */
  ['user_private_min_fields']: AliasType<{
    fixed_payment_amount?: boolean | `@${string}`;
    fixed_payment_token_type?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Ordering options when selecting data from "user_private". */
  ['user_private_order_by']: {
    circle?: ValueTypes['circles_order_by'] | undefined | null;
    fixed_payment_amount?: ValueTypes['order_by'] | undefined | null;
    fixed_payment_token_type?: ValueTypes['order_by'] | undefined | null;
    user?: ValueTypes['users_order_by'] | undefined | null;
    user_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "user_private" */
  ['user_private_select_column']: user_private_select_column;
  /** aggregate stddev on columns */
  ['user_private_stddev_fields']: AliasType<{
    fixed_payment_amount?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregate stddev_pop on columns */
  ['user_private_stddev_pop_fields']: AliasType<{
    fixed_payment_amount?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregate stddev_samp on columns */
  ['user_private_stddev_samp_fields']: AliasType<{
    fixed_payment_amount?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Streaming cursor of the table "user_private" */
  ['user_private_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['user_private_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['user_private_stream_cursor_value_input']: {
    fixed_payment_amount?: ValueTypes['numeric'] | undefined | null;
    fixed_payment_token_type?: string | undefined | null;
    user_id?: ValueTypes['bigint'] | undefined | null;
  };
  /** aggregate sum on columns */
  ['user_private_sum_fields']: AliasType<{
    fixed_payment_amount?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregate var_pop on columns */
  ['user_private_var_pop_fields']: AliasType<{
    fixed_payment_amount?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregate var_samp on columns */
  ['user_private_var_samp_fields']: AliasType<{
    fixed_payment_amount?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** aggregate variance on columns */
  ['user_private_variance_fields']: AliasType<{
    fixed_payment_amount?: boolean | `@${string}`;
    user_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** Members of a circle */
  ['users']: AliasType<{
    bio?: boolean | `@${string}`;
    burns?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['burns_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['burns_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['burns_bool_exp'] | undefined | null;
      },
      ValueTypes['burns'],
    ];
    /** An object relationship */
    circle?: ValueTypes['circles'];
    circle_api_keys?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['circle_api_keys_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['circle_api_keys_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['circle_api_keys_bool_exp'] | undefined | null;
      },
      ValueTypes['circle_api_keys'],
    ];
    circle_id?: boolean | `@${string}`;
    contributions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['contributions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['contributions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['contributions_bool_exp'] | undefined | null;
      },
      ValueTypes['contributions'],
    ];
    contributions_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['contributions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['contributions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['contributions_bool_exp'] | undefined | null;
      },
      ValueTypes['contributions_aggregate'],
    ];
    created_at?: boolean | `@${string}`;
    deleted_at?: boolean | `@${string}`;
    epoch_first_visit?: boolean | `@${string}`;
    fixed_non_receiver?: boolean | `@${string}`;
    give_token_received?: boolean | `@${string}`;
    give_token_remaining?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    member_epoch_pgivess?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['member_epoch_pgives_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['member_epoch_pgives_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['member_epoch_pgives_bool_exp'] | undefined | null;
      },
      ValueTypes['member_epoch_pgives'],
    ];
    member_epoch_pgivess_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['member_epoch_pgives_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['member_epoch_pgives_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['member_epoch_pgives_bool_exp'] | undefined | null;
      },
      ValueTypes['member_epoch_pgives_aggregate'],
    ];
    non_giver?: boolean | `@${string}`;
    non_receiver?: boolean | `@${string}`;
    pending_received_gifts?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['pending_token_gifts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['pending_token_gifts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['pending_token_gifts_bool_exp'] | undefined | null;
      },
      ValueTypes['pending_token_gifts'],
    ];
    pending_sent_gifts?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['pending_token_gifts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['pending_token_gifts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['pending_token_gifts_bool_exp'] | undefined | null;
      },
      ValueTypes['pending_token_gifts'],
    ];
    /** An object relationship */
    profile?: ValueTypes['profiles'];
    profile_id?: boolean | `@${string}`;
    received_gifts?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['token_gifts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['token_gifts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['token_gifts_bool_exp'] | undefined | null;
      },
      ValueTypes['token_gifts'],
    ];
    received_gifts_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['token_gifts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['token_gifts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['token_gifts_bool_exp'] | undefined | null;
      },
      ValueTypes['token_gifts_aggregate'],
    ];
    role?: boolean | `@${string}`;
    sent_gifts?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['token_gifts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['token_gifts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['token_gifts_bool_exp'] | undefined | null;
      },
      ValueTypes['token_gifts'],
    ];
    sent_gifts_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['token_gifts_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['token_gifts_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['token_gifts_bool_exp'] | undefined | null;
      },
      ValueTypes['token_gifts_aggregate'],
    ];
    starting_tokens?: boolean | `@${string}`;
    teammates?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['teammates_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['teammates_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['teammates_bool_exp'] | undefined | null;
      },
      ValueTypes['teammates'],
    ];
    updated_at?: boolean | `@${string}`;
    /** An object relationship */
    user_private?: ValueTypes['user_private'];
    vouches?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['vouches_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['vouches_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['vouches_bool_exp'] | undefined | null;
      },
      ValueTypes['vouches'],
    ];
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "users" */
  ['users_aggregate_order_by']: {
    avg?: ValueTypes['users_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['users_max_order_by'] | undefined | null;
    min?: ValueTypes['users_min_order_by'] | undefined | null;
    stddev?: ValueTypes['users_stddev_order_by'] | undefined | null;
    stddev_pop?: ValueTypes['users_stddev_pop_order_by'] | undefined | null;
    stddev_samp?: ValueTypes['users_stddev_samp_order_by'] | undefined | null;
    sum?: ValueTypes['users_sum_order_by'] | undefined | null;
    var_pop?: ValueTypes['users_var_pop_order_by'] | undefined | null;
    var_samp?: ValueTypes['users_var_samp_order_by'] | undefined | null;
    variance?: ValueTypes['users_variance_order_by'] | undefined | null;
  };
  /** order by avg() on columns of table "users" */
  ['users_avg_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    give_token_received?: ValueTypes['order_by'] | undefined | null;
    give_token_remaining?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    role?: ValueTypes['order_by'] | undefined | null;
    starting_tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "users". All fields are combined with a logical 'AND'. */
  ['users_bool_exp']: {
    _and?: Array<ValueTypes['users_bool_exp']> | undefined | null;
    _not?: ValueTypes['users_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['users_bool_exp']> | undefined | null;
    bio?: ValueTypes['String_comparison_exp'] | undefined | null;
    burns?: ValueTypes['burns_bool_exp'] | undefined | null;
    circle?: ValueTypes['circles_bool_exp'] | undefined | null;
    circle_api_keys?: ValueTypes['circle_api_keys_bool_exp'] | undefined | null;
    circle_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    contributions?: ValueTypes['contributions_bool_exp'] | undefined | null;
    contributions_aggregate?:
      | ValueTypes['contributions_aggregate_bool_exp']
      | undefined
      | null;
    created_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    deleted_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    epoch_first_visit?: ValueTypes['Boolean_comparison_exp'] | undefined | null;
    fixed_non_receiver?:
      | ValueTypes['Boolean_comparison_exp']
      | undefined
      | null;
    give_token_received?: ValueTypes['Int_comparison_exp'] | undefined | null;
    give_token_remaining?: ValueTypes['Int_comparison_exp'] | undefined | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    member_epoch_pgivess?:
      | ValueTypes['member_epoch_pgives_bool_exp']
      | undefined
      | null;
    member_epoch_pgivess_aggregate?:
      | ValueTypes['member_epoch_pgives_aggregate_bool_exp']
      | undefined
      | null;
    non_giver?: ValueTypes['Boolean_comparison_exp'] | undefined | null;
    non_receiver?: ValueTypes['Boolean_comparison_exp'] | undefined | null;
    pending_received_gifts?:
      | ValueTypes['pending_token_gifts_bool_exp']
      | undefined
      | null;
    pending_sent_gifts?:
      | ValueTypes['pending_token_gifts_bool_exp']
      | undefined
      | null;
    profile?: ValueTypes['profiles_bool_exp'] | undefined | null;
    profile_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    received_gifts?: ValueTypes['token_gifts_bool_exp'] | undefined | null;
    received_gifts_aggregate?:
      | ValueTypes['token_gifts_aggregate_bool_exp']
      | undefined
      | null;
    role?: ValueTypes['Int_comparison_exp'] | undefined | null;
    sent_gifts?: ValueTypes['token_gifts_bool_exp'] | undefined | null;
    sent_gifts_aggregate?:
      | ValueTypes['token_gifts_aggregate_bool_exp']
      | undefined
      | null;
    starting_tokens?: ValueTypes['Int_comparison_exp'] | undefined | null;
    teammates?: ValueTypes['teammates_bool_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    user_private?: ValueTypes['user_private_bool_exp'] | undefined | null;
    vouches?: ValueTypes['vouches_bool_exp'] | undefined | null;
  };
  /** order by max() on columns of table "users" */
  ['users_max_order_by']: {
    bio?: ValueTypes['order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    deleted_at?: ValueTypes['order_by'] | undefined | null;
    give_token_received?: ValueTypes['order_by'] | undefined | null;
    give_token_remaining?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    role?: ValueTypes['order_by'] | undefined | null;
    starting_tokens?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by min() on columns of table "users" */
  ['users_min_order_by']: {
    bio?: ValueTypes['order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    deleted_at?: ValueTypes['order_by'] | undefined | null;
    give_token_received?: ValueTypes['order_by'] | undefined | null;
    give_token_remaining?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    role?: ValueTypes['order_by'] | undefined | null;
    starting_tokens?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
  };
  /** Ordering options when selecting data from "users". */
  ['users_order_by']: {
    bio?: ValueTypes['order_by'] | undefined | null;
    burns_aggregate?: ValueTypes['burns_aggregate_order_by'] | undefined | null;
    circle?: ValueTypes['circles_order_by'] | undefined | null;
    circle_api_keys_aggregate?:
      | ValueTypes['circle_api_keys_aggregate_order_by']
      | undefined
      | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    contributions_aggregate?:
      | ValueTypes['contributions_aggregate_order_by']
      | undefined
      | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    deleted_at?: ValueTypes['order_by'] | undefined | null;
    epoch_first_visit?: ValueTypes['order_by'] | undefined | null;
    fixed_non_receiver?: ValueTypes['order_by'] | undefined | null;
    give_token_received?: ValueTypes['order_by'] | undefined | null;
    give_token_remaining?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    member_epoch_pgivess_aggregate?:
      | ValueTypes['member_epoch_pgives_aggregate_order_by']
      | undefined
      | null;
    non_giver?: ValueTypes['order_by'] | undefined | null;
    non_receiver?: ValueTypes['order_by'] | undefined | null;
    pending_received_gifts_aggregate?:
      | ValueTypes['pending_token_gifts_aggregate_order_by']
      | undefined
      | null;
    pending_sent_gifts_aggregate?:
      | ValueTypes['pending_token_gifts_aggregate_order_by']
      | undefined
      | null;
    profile?: ValueTypes['profiles_order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    received_gifts_aggregate?:
      | ValueTypes['token_gifts_aggregate_order_by']
      | undefined
      | null;
    role?: ValueTypes['order_by'] | undefined | null;
    sent_gifts_aggregate?:
      | ValueTypes['token_gifts_aggregate_order_by']
      | undefined
      | null;
    starting_tokens?: ValueTypes['order_by'] | undefined | null;
    teammates_aggregate?:
      | ValueTypes['teammates_aggregate_order_by']
      | undefined
      | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    user_private?: ValueTypes['user_private_order_by'] | undefined | null;
    vouches_aggregate?:
      | ValueTypes['vouches_aggregate_order_by']
      | undefined
      | null;
  };
  /** select columns of table "users" */
  ['users_select_column']: users_select_column;
  /** order by stddev() on columns of table "users" */
  ['users_stddev_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    give_token_received?: ValueTypes['order_by'] | undefined | null;
    give_token_remaining?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    role?: ValueTypes['order_by'] | undefined | null;
    starting_tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_pop() on columns of table "users" */
  ['users_stddev_pop_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    give_token_received?: ValueTypes['order_by'] | undefined | null;
    give_token_remaining?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    role?: ValueTypes['order_by'] | undefined | null;
    starting_tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_samp() on columns of table "users" */
  ['users_stddev_samp_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    give_token_received?: ValueTypes['order_by'] | undefined | null;
    give_token_remaining?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    role?: ValueTypes['order_by'] | undefined | null;
    starting_tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "users" */
  ['users_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['users_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['users_stream_cursor_value_input']: {
    bio?: string | undefined | null;
    circle_id?: ValueTypes['bigint'] | undefined | null;
    created_at?: ValueTypes['timestamp'] | undefined | null;
    deleted_at?: ValueTypes['timestamp'] | undefined | null;
    epoch_first_visit?: boolean | undefined | null;
    fixed_non_receiver?: boolean | undefined | null;
    give_token_received?: number | undefined | null;
    give_token_remaining?: number | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    non_giver?: boolean | undefined | null;
    non_receiver?: boolean | undefined | null;
    profile_id?: ValueTypes['bigint'] | undefined | null;
    role?: number | undefined | null;
    starting_tokens?: number | undefined | null;
    updated_at?: ValueTypes['timestamp'] | undefined | null;
  };
  /** order by sum() on columns of table "users" */
  ['users_sum_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    give_token_received?: ValueTypes['order_by'] | undefined | null;
    give_token_remaining?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    role?: ValueTypes['order_by'] | undefined | null;
    starting_tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by var_pop() on columns of table "users" */
  ['users_var_pop_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    give_token_received?: ValueTypes['order_by'] | undefined | null;
    give_token_remaining?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    role?: ValueTypes['order_by'] | undefined | null;
    starting_tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by var_samp() on columns of table "users" */
  ['users_var_samp_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    give_token_received?: ValueTypes['order_by'] | undefined | null;
    give_token_remaining?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    role?: ValueTypes['order_by'] | undefined | null;
    starting_tokens?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by variance() on columns of table "users" */
  ['users_variance_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    give_token_received?: ValueTypes['order_by'] | undefined | null;
    give_token_remaining?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile_id?: ValueTypes['order_by'] | undefined | null;
    role?: ValueTypes['order_by'] | undefined | null;
    starting_tokens?: ValueTypes['order_by'] | undefined | null;
  };
  ['uuid']: unknown;
  /** Boolean expression to compare columns of type "uuid". All fields are combined with logical 'AND'. */
  ['uuid_comparison_exp']: {
    _eq?: ValueTypes['uuid'] | undefined | null;
    _gt?: ValueTypes['uuid'] | undefined | null;
    _gte?: ValueTypes['uuid'] | undefined | null;
    _in?: Array<ValueTypes['uuid']> | undefined | null;
    _is_null?: boolean | undefined | null;
    _lt?: ValueTypes['uuid'] | undefined | null;
    _lte?: ValueTypes['uuid'] | undefined | null;
    _neq?: ValueTypes['uuid'] | undefined | null;
    _nin?: Array<ValueTypes['uuid']> | undefined | null;
  };
  /** columns and relationships of "vault_transactions" */
  ['vault_transactions']: AliasType<{
    /** An object relationship */
    circle?: ValueTypes['circles'];
    circle_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    created_by?: boolean | `@${string}`;
    /** An object relationship */
    distribution?: ValueTypes['distributions'];
    distribution_id?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    /** An object relationship */
    profile?: ValueTypes['profiles'];
    tx_hash?: boolean | `@${string}`;
    tx_type?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    /** An object relationship */
    vault?: ValueTypes['vaults'];
    vault_id?: boolean | `@${string}`;
    /** An object relationship */
    vault_tx_type?: ValueTypes['vault_tx_types'];
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "vault_transactions" */
  ['vault_transactions_aggregate_order_by']: {
    avg?: ValueTypes['vault_transactions_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['vault_transactions_max_order_by'] | undefined | null;
    min?: ValueTypes['vault_transactions_min_order_by'] | undefined | null;
    stddev?:
      | ValueTypes['vault_transactions_stddev_order_by']
      | undefined
      | null;
    stddev_pop?:
      | ValueTypes['vault_transactions_stddev_pop_order_by']
      | undefined
      | null;
    stddev_samp?:
      | ValueTypes['vault_transactions_stddev_samp_order_by']
      | undefined
      | null;
    sum?: ValueTypes['vault_transactions_sum_order_by'] | undefined | null;
    var_pop?:
      | ValueTypes['vault_transactions_var_pop_order_by']
      | undefined
      | null;
    var_samp?:
      | ValueTypes['vault_transactions_var_samp_order_by']
      | undefined
      | null;
    variance?:
      | ValueTypes['vault_transactions_variance_order_by']
      | undefined
      | null;
  };
  /** order by avg() on columns of table "vault_transactions" */
  ['vault_transactions_avg_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    distribution_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    vault_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "vault_transactions". All fields are combined with a logical 'AND'. */
  ['vault_transactions_bool_exp']: {
    _and?: Array<ValueTypes['vault_transactions_bool_exp']> | undefined | null;
    _not?: ValueTypes['vault_transactions_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['vault_transactions_bool_exp']> | undefined | null;
    circle?: ValueTypes['circles_bool_exp'] | undefined | null;
    circle_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    created_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    created_by?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    distribution?: ValueTypes['distributions_bool_exp'] | undefined | null;
    distribution_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    profile?: ValueTypes['profiles_bool_exp'] | undefined | null;
    tx_hash?: ValueTypes['String_comparison_exp'] | undefined | null;
    tx_type?:
      | ValueTypes['vault_tx_types_enum_comparison_exp']
      | undefined
      | null;
    updated_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    vault?: ValueTypes['vaults_bool_exp'] | undefined | null;
    vault_id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    vault_tx_type?: ValueTypes['vault_tx_types_bool_exp'] | undefined | null;
  };
  /** order by max() on columns of table "vault_transactions" */
  ['vault_transactions_max_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    distribution_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    tx_hash?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    vault_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by min() on columns of table "vault_transactions" */
  ['vault_transactions_min_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    distribution_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    tx_hash?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    vault_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Ordering options when selecting data from "vault_transactions". */
  ['vault_transactions_order_by']: {
    circle?: ValueTypes['circles_order_by'] | undefined | null;
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    distribution?: ValueTypes['distributions_order_by'] | undefined | null;
    distribution_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    profile?: ValueTypes['profiles_order_by'] | undefined | null;
    tx_hash?: ValueTypes['order_by'] | undefined | null;
    tx_type?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    vault?: ValueTypes['vaults_order_by'] | undefined | null;
    vault_id?: ValueTypes['order_by'] | undefined | null;
    vault_tx_type?: ValueTypes['vault_tx_types_order_by'] | undefined | null;
  };
  /** select columns of table "vault_transactions" */
  ['vault_transactions_select_column']: vault_transactions_select_column;
  /** order by stddev() on columns of table "vault_transactions" */
  ['vault_transactions_stddev_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    distribution_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    vault_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_pop() on columns of table "vault_transactions" */
  ['vault_transactions_stddev_pop_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    distribution_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    vault_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_samp() on columns of table "vault_transactions" */
  ['vault_transactions_stddev_samp_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    distribution_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    vault_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "vault_transactions" */
  ['vault_transactions_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['vault_transactions_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['vault_transactions_stream_cursor_value_input']: {
    circle_id?: ValueTypes['bigint'] | undefined | null;
    created_at?: ValueTypes['timestamp'] | undefined | null;
    created_by?: ValueTypes['bigint'] | undefined | null;
    distribution_id?: ValueTypes['bigint'] | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    tx_hash?: string | undefined | null;
    tx_type?: ValueTypes['vault_tx_types_enum'] | undefined | null;
    updated_at?: ValueTypes['timestamp'] | undefined | null;
    vault_id?: ValueTypes['bigint'] | undefined | null;
  };
  /** order by sum() on columns of table "vault_transactions" */
  ['vault_transactions_sum_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    distribution_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    vault_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by var_pop() on columns of table "vault_transactions" */
  ['vault_transactions_var_pop_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    distribution_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    vault_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by var_samp() on columns of table "vault_transactions" */
  ['vault_transactions_var_samp_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    distribution_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    vault_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by variance() on columns of table "vault_transactions" */
  ['vault_transactions_variance_order_by']: {
    circle_id?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    distribution_id?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    vault_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** columns and relationships of "vault_tx_types" */
  ['vault_tx_types']: AliasType<{
    comment?: boolean | `@${string}`;
    value?: boolean | `@${string}`;
    vault_transactions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['vault_transactions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['vault_transactions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['vault_transactions_bool_exp'] | undefined | null;
      },
      ValueTypes['vault_transactions'],
    ];
    __typename?: boolean | `@${string}`;
  }>;
  /** Boolean expression to filter rows from the table "vault_tx_types". All fields are combined with a logical 'AND'. */
  ['vault_tx_types_bool_exp']: {
    _and?: Array<ValueTypes['vault_tx_types_bool_exp']> | undefined | null;
    _not?: ValueTypes['vault_tx_types_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['vault_tx_types_bool_exp']> | undefined | null;
    comment?: ValueTypes['String_comparison_exp'] | undefined | null;
    value?: ValueTypes['String_comparison_exp'] | undefined | null;
    vault_transactions?:
      | ValueTypes['vault_transactions_bool_exp']
      | undefined
      | null;
  };
  ['vault_tx_types_enum']: vault_tx_types_enum;
  /** Boolean expression to compare columns of type "vault_tx_types_enum". All fields are combined with logical 'AND'. */
  ['vault_tx_types_enum_comparison_exp']: {
    _eq?: ValueTypes['vault_tx_types_enum'] | undefined | null;
    _in?: Array<ValueTypes['vault_tx_types_enum']> | undefined | null;
    _is_null?: boolean | undefined | null;
    _neq?: ValueTypes['vault_tx_types_enum'] | undefined | null;
    _nin?: Array<ValueTypes['vault_tx_types_enum']> | undefined | null;
  };
  /** Ordering options when selecting data from "vault_tx_types". */
  ['vault_tx_types_order_by']: {
    comment?: ValueTypes['order_by'] | undefined | null;
    value?: ValueTypes['order_by'] | undefined | null;
    vault_transactions_aggregate?:
      | ValueTypes['vault_transactions_aggregate_order_by']
      | undefined
      | null;
  };
  /** select columns of table "vault_tx_types" */
  ['vault_tx_types_select_column']: vault_tx_types_select_column;
  /** Streaming cursor of the table "vault_tx_types" */
  ['vault_tx_types_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['vault_tx_types_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['vault_tx_types_stream_cursor_value_input']: {
    comment?: string | undefined | null;
    value?: string | undefined | null;
  };
  /** columns and relationships of "vaults" */
  ['vaults']: AliasType<{
    chain_id?: boolean | `@${string}`;
    created_at?: boolean | `@${string}`;
    created_by?: boolean | `@${string}`;
    decimals?: boolean | `@${string}`;
    deployment_block?: boolean | `@${string}`;
    distributions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['distributions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['distributions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['distributions_bool_exp'] | undefined | null;
      },
      ValueTypes['distributions'],
    ];
    distributions_aggregate?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['distributions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['distributions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['distributions_bool_exp'] | undefined | null;
      },
      ValueTypes['distributions_aggregate'],
    ];
    id?: boolean | `@${string}`;
    /** An object relationship */
    organization?: ValueTypes['organizations'];
    /** An object relationship */
    profile?: ValueTypes['profiles'];
    simple_token_address?: boolean | `@${string}`;
    symbol?: boolean | `@${string}`;
    token_address?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    vault_address?: boolean | `@${string}`;
    vault_transactions?: [
      {
        /** distinct select on columns */
        distinct_on?:
          | Array<ValueTypes['vault_transactions_select_column']>
          | undefined
          | null /** limit the number of rows returned */;
        limit?:
          | number
          | undefined
          | null /** skip the first n rows. Use only with order_by */;
        offset?:
          | number
          | undefined
          | null /** sort the rows by one or more columns */;
        order_by?:
          | Array<ValueTypes['vault_transactions_order_by']>
          | undefined
          | null /** filter the rows returned */;
        where?: ValueTypes['vault_transactions_bool_exp'] | undefined | null;
      },
      ValueTypes['vault_transactions'],
    ];
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "vaults" */
  ['vaults_aggregate_order_by']: {
    avg?: ValueTypes['vaults_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['vaults_max_order_by'] | undefined | null;
    min?: ValueTypes['vaults_min_order_by'] | undefined | null;
    stddev?: ValueTypes['vaults_stddev_order_by'] | undefined | null;
    stddev_pop?: ValueTypes['vaults_stddev_pop_order_by'] | undefined | null;
    stddev_samp?: ValueTypes['vaults_stddev_samp_order_by'] | undefined | null;
    sum?: ValueTypes['vaults_sum_order_by'] | undefined | null;
    var_pop?: ValueTypes['vaults_var_pop_order_by'] | undefined | null;
    var_samp?: ValueTypes['vaults_var_samp_order_by'] | undefined | null;
    variance?: ValueTypes['vaults_variance_order_by'] | undefined | null;
  };
  /** order by avg() on columns of table "vaults" */
  ['vaults_avg_order_by']: {
    chain_id?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    decimals?: ValueTypes['order_by'] | undefined | null;
    deployment_block?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "vaults". All fields are combined with a logical 'AND'. */
  ['vaults_bool_exp']: {
    _and?: Array<ValueTypes['vaults_bool_exp']> | undefined | null;
    _not?: ValueTypes['vaults_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['vaults_bool_exp']> | undefined | null;
    chain_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    created_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    created_by?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    decimals?: ValueTypes['Int_comparison_exp'] | undefined | null;
    deployment_block?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    distributions?: ValueTypes['distributions_bool_exp'] | undefined | null;
    distributions_aggregate?:
      | ValueTypes['distributions_aggregate_bool_exp']
      | undefined
      | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    organization?: ValueTypes['organizations_bool_exp'] | undefined | null;
    profile?: ValueTypes['profiles_bool_exp'] | undefined | null;
    simple_token_address?:
      | ValueTypes['String_comparison_exp']
      | undefined
      | null;
    symbol?: ValueTypes['String_comparison_exp'] | undefined | null;
    token_address?: ValueTypes['String_comparison_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamptz_comparison_exp'] | undefined | null;
    vault_address?: ValueTypes['String_comparison_exp'] | undefined | null;
    vault_transactions?:
      | ValueTypes['vault_transactions_bool_exp']
      | undefined
      | null;
  };
  /** order by max() on columns of table "vaults" */
  ['vaults_max_order_by']: {
    chain_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    decimals?: ValueTypes['order_by'] | undefined | null;
    deployment_block?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    simple_token_address?: ValueTypes['order_by'] | undefined | null;
    symbol?: ValueTypes['order_by'] | undefined | null;
    token_address?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    vault_address?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by min() on columns of table "vaults" */
  ['vaults_min_order_by']: {
    chain_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    decimals?: ValueTypes['order_by'] | undefined | null;
    deployment_block?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    simple_token_address?: ValueTypes['order_by'] | undefined | null;
    symbol?: ValueTypes['order_by'] | undefined | null;
    token_address?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    vault_address?: ValueTypes['order_by'] | undefined | null;
  };
  /** Ordering options when selecting data from "vaults". */
  ['vaults_order_by']: {
    chain_id?: ValueTypes['order_by'] | undefined | null;
    created_at?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    decimals?: ValueTypes['order_by'] | undefined | null;
    deployment_block?: ValueTypes['order_by'] | undefined | null;
    distributions_aggregate?:
      | ValueTypes['distributions_aggregate_order_by']
      | undefined
      | null;
    id?: ValueTypes['order_by'] | undefined | null;
    organization?: ValueTypes['organizations_order_by'] | undefined | null;
    profile?: ValueTypes['profiles_order_by'] | undefined | null;
    simple_token_address?: ValueTypes['order_by'] | undefined | null;
    symbol?: ValueTypes['order_by'] | undefined | null;
    token_address?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    vault_address?: ValueTypes['order_by'] | undefined | null;
    vault_transactions_aggregate?:
      | ValueTypes['vault_transactions_aggregate_order_by']
      | undefined
      | null;
  };
  /** select columns of table "vaults" */
  ['vaults_select_column']: vaults_select_column;
  /** order by stddev() on columns of table "vaults" */
  ['vaults_stddev_order_by']: {
    chain_id?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    decimals?: ValueTypes['order_by'] | undefined | null;
    deployment_block?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_pop() on columns of table "vaults" */
  ['vaults_stddev_pop_order_by']: {
    chain_id?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    decimals?: ValueTypes['order_by'] | undefined | null;
    deployment_block?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_samp() on columns of table "vaults" */
  ['vaults_stddev_samp_order_by']: {
    chain_id?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    decimals?: ValueTypes['order_by'] | undefined | null;
    deployment_block?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "vaults" */
  ['vaults_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['vaults_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['vaults_stream_cursor_value_input']: {
    chain_id?: number | undefined | null;
    created_at?: ValueTypes['timestamptz'] | undefined | null;
    created_by?: ValueTypes['bigint'] | undefined | null;
    decimals?: number | undefined | null;
    deployment_block?: ValueTypes['bigint'] | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    simple_token_address?: string | undefined | null;
    symbol?: string | undefined | null;
    token_address?: string | undefined | null;
    updated_at?: ValueTypes['timestamptz'] | undefined | null;
    vault_address?: string | undefined | null;
  };
  /** order by sum() on columns of table "vaults" */
  ['vaults_sum_order_by']: {
    chain_id?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    decimals?: ValueTypes['order_by'] | undefined | null;
    deployment_block?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by var_pop() on columns of table "vaults" */
  ['vaults_var_pop_order_by']: {
    chain_id?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    decimals?: ValueTypes['order_by'] | undefined | null;
    deployment_block?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by var_samp() on columns of table "vaults" */
  ['vaults_var_samp_order_by']: {
    chain_id?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    decimals?: ValueTypes['order_by'] | undefined | null;
    deployment_block?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by variance() on columns of table "vaults" */
  ['vaults_variance_order_by']: {
    chain_id?: ValueTypes['order_by'] | undefined | null;
    created_by?: ValueTypes['order_by'] | undefined | null;
    decimals?: ValueTypes['order_by'] | undefined | null;
    deployment_block?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
  };
  ['vector']: unknown;
  /** Boolean expression to compare columns of type "vector". All fields are combined with logical 'AND'. */
  ['vector_comparison_exp']: {
    _eq?: ValueTypes['vector'] | undefined | null;
    _gt?: ValueTypes['vector'] | undefined | null;
    _gte?: ValueTypes['vector'] | undefined | null;
    _in?: Array<ValueTypes['vector']> | undefined | null;
    _is_null?: boolean | undefined | null;
    _lt?: ValueTypes['vector'] | undefined | null;
    _lte?: ValueTypes['vector'] | undefined | null;
    _neq?: ValueTypes['vector'] | undefined | null;
    _nin?: Array<ValueTypes['vector']> | undefined | null;
  };
  ['vector_search_poap_events_args']: {
    limit_count?: number | undefined | null;
    match_threshold?: ValueTypes['float8'] | undefined | null;
    target_vector?: ValueTypes['vector'] | undefined | null;
  };
  ['vector_search_poap_holders_args']: {
    limit_count?: number | undefined | null;
    match_threshold?: ValueTypes['float8'] | undefined | null;
    target_vector?: ValueTypes['vector'] | undefined | null;
  };
  /** columns and relationships of "vouches" */
  ['vouches']: AliasType<{
    created_at?: boolean | `@${string}`;
    id?: boolean | `@${string}`;
    /** An object relationship */
    nominee?: ValueTypes['nominees'];
    nominee_id?: boolean | `@${string}`;
    updated_at?: boolean | `@${string}`;
    /** An object relationship */
    voucher?: ValueTypes['users'];
    voucher_id?: boolean | `@${string}`;
    __typename?: boolean | `@${string}`;
  }>;
  /** order by aggregate values of table "vouches" */
  ['vouches_aggregate_order_by']: {
    avg?: ValueTypes['vouches_avg_order_by'] | undefined | null;
    count?: ValueTypes['order_by'] | undefined | null;
    max?: ValueTypes['vouches_max_order_by'] | undefined | null;
    min?: ValueTypes['vouches_min_order_by'] | undefined | null;
    stddev?: ValueTypes['vouches_stddev_order_by'] | undefined | null;
    stddev_pop?: ValueTypes['vouches_stddev_pop_order_by'] | undefined | null;
    stddev_samp?: ValueTypes['vouches_stddev_samp_order_by'] | undefined | null;
    sum?: ValueTypes['vouches_sum_order_by'] | undefined | null;
    var_pop?: ValueTypes['vouches_var_pop_order_by'] | undefined | null;
    var_samp?: ValueTypes['vouches_var_samp_order_by'] | undefined | null;
    variance?: ValueTypes['vouches_variance_order_by'] | undefined | null;
  };
  /** order by avg() on columns of table "vouches" */
  ['vouches_avg_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
    nominee_id?: ValueTypes['order_by'] | undefined | null;
    voucher_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Boolean expression to filter rows from the table "vouches". All fields are combined with a logical 'AND'. */
  ['vouches_bool_exp']: {
    _and?: Array<ValueTypes['vouches_bool_exp']> | undefined | null;
    _not?: ValueTypes['vouches_bool_exp'] | undefined | null;
    _or?: Array<ValueTypes['vouches_bool_exp']> | undefined | null;
    created_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    id?: ValueTypes['bigint_comparison_exp'] | undefined | null;
    nominee?: ValueTypes['nominees_bool_exp'] | undefined | null;
    nominee_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
    updated_at?: ValueTypes['timestamp_comparison_exp'] | undefined | null;
    voucher?: ValueTypes['users_bool_exp'] | undefined | null;
    voucher_id?: ValueTypes['Int_comparison_exp'] | undefined | null;
  };
  /** order by max() on columns of table "vouches" */
  ['vouches_max_order_by']: {
    created_at?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    nominee_id?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    voucher_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by min() on columns of table "vouches" */
  ['vouches_min_order_by']: {
    created_at?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    nominee_id?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    voucher_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Ordering options when selecting data from "vouches". */
  ['vouches_order_by']: {
    created_at?: ValueTypes['order_by'] | undefined | null;
    id?: ValueTypes['order_by'] | undefined | null;
    nominee?: ValueTypes['nominees_order_by'] | undefined | null;
    nominee_id?: ValueTypes['order_by'] | undefined | null;
    updated_at?: ValueTypes['order_by'] | undefined | null;
    voucher?: ValueTypes['users_order_by'] | undefined | null;
    voucher_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** select columns of table "vouches" */
  ['vouches_select_column']: vouches_select_column;
  /** order by stddev() on columns of table "vouches" */
  ['vouches_stddev_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
    nominee_id?: ValueTypes['order_by'] | undefined | null;
    voucher_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_pop() on columns of table "vouches" */
  ['vouches_stddev_pop_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
    nominee_id?: ValueTypes['order_by'] | undefined | null;
    voucher_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by stddev_samp() on columns of table "vouches" */
  ['vouches_stddev_samp_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
    nominee_id?: ValueTypes['order_by'] | undefined | null;
    voucher_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** Streaming cursor of the table "vouches" */
  ['vouches_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: ValueTypes['vouches_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: ValueTypes['cursor_ordering'] | undefined | null;
  };
  /** Initial value of the column from where the streaming should start */
  ['vouches_stream_cursor_value_input']: {
    created_at?: ValueTypes['timestamp'] | undefined | null;
    id?: ValueTypes['bigint'] | undefined | null;
    nominee_id?: number | undefined | null;
    updated_at?: ValueTypes['timestamp'] | undefined | null;
    voucher_id?: number | undefined | null;
  };
  /** order by sum() on columns of table "vouches" */
  ['vouches_sum_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
    nominee_id?: ValueTypes['order_by'] | undefined | null;
    voucher_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by var_pop() on columns of table "vouches" */
  ['vouches_var_pop_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
    nominee_id?: ValueTypes['order_by'] | undefined | null;
    voucher_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by var_samp() on columns of table "vouches" */
  ['vouches_var_samp_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
    nominee_id?: ValueTypes['order_by'] | undefined | null;
    voucher_id?: ValueTypes['order_by'] | undefined | null;
  };
  /** order by variance() on columns of table "vouches" */
  ['vouches_variance_order_by']: {
    id?: ValueTypes['order_by'] | undefined | null;
    nominee_id?: ValueTypes['order_by'] | undefined | null;
    voucher_id?: ValueTypes['order_by'] | undefined | null;
  };
};

export type ModelTypes = {
  ['AcceptTOSOutput']: {
    tos_agreed_at: string;
  };
  ['AddEmailInput']: GraphQLTypes['AddEmailInput'];
  ['AdminUpdateUserInput']: GraphQLTypes['AdminUpdateUserInput'];
  ['Allocation']: GraphQLTypes['Allocation'];
  ['AllocationCsvInput']: GraphQLTypes['AllocationCsvInput'];
  ['AllocationCsvResponse']: {
    file: string;
  };
  ['Allocations']: GraphQLTypes['Allocations'];
  ['AllocationsResponse']: {
    user?: GraphQLTypes['users'] | undefined;
    user_id: number;
  };
  /** Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'. */
  ['Boolean_comparison_exp']: GraphQLTypes['Boolean_comparison_exp'];
  ['Cast']: {
    address: string;
    avatar_url: string;
    created_at: string;
    embeds: Array<GraphQLTypes['CastEmbed']>;
    fid: GraphQLTypes['bigint'];
    fname: string;
    hash: string;
    id: GraphQLTypes['bigint'];
    like_count: number;
    mentioned_addresses: Array<GraphQLTypes['CastMention']>;
    recast_count: number;
    replies_count: number;
    text: string;
    text_with_mentions: string;
  };
  ['CastEmbed']: {
    type: string;
    url: string;
  };
  ['CastMention']: {
    address: string;
    fname: string;
  };
  ['CheckEthDenverInviteeOutput']: {
    is_eth_denver_invitee: boolean;
  };
  ['ConfirmationResponse']: {
    success: boolean;
  };
  ['ConfirmationWithErrorResponse']: {
    error?: string | undefined;
    success: boolean;
  };
  ['CoordinapeInput']: GraphQLTypes['CoordinapeInput'];
  ['CreateCircleInput']: GraphQLTypes['CreateCircleInput'];
  ['CreateCircleResponse']: {
    circle?: GraphQLTypes['circles'] | undefined;
    id: number;
    /** An array relationship */
    users: Array<GraphQLTypes['users']>;
  };
  ['CreateCoLinksGiveInput']: GraphQLTypes['CreateCoLinksGiveInput'];
  ['CreateCoLinksGiveResponse']: {
    id: number;
  };
  ['CreateEpochInput']: GraphQLTypes['CreateEpochInput'];
  ['CreateNomineeInput']: GraphQLTypes['CreateNomineeInput'];
  ['CreateNomineeResponse']: {
    id?: number | undefined;
    nominee?: GraphQLTypes['nominees'] | undefined;
  };
  ['CreateOrgMembersInput']: GraphQLTypes['CreateOrgMembersInput'];
  ['CreateSampleCircleResponse']: {
    circle?: GraphQLTypes['circles'] | undefined;
    id: number;
  };
  ['CreateUserWithTokenInput']: GraphQLTypes['CreateUserWithTokenInput'];
  ['CreateUsersInput']: GraphQLTypes['CreateUsersInput'];
  ['CreateVaultInput']: GraphQLTypes['CreateVaultInput'];
  ['DeleteCircleInput']: GraphQLTypes['DeleteCircleInput'];
  ['DeleteCoLinksGiveInput']: GraphQLTypes['DeleteCoLinksGiveInput'];
  ['DeleteContributionInput']: GraphQLTypes['DeleteContributionInput'];
  ['DeleteEmailInput']: GraphQLTypes['DeleteEmailInput'];
  ['DeleteEpochInput']: GraphQLTypes['DeleteEpochInput'];
  ['DeleteEpochResponse']: {
    success: boolean;
  };
  ['DeleteUserInput']: GraphQLTypes['DeleteUserInput'];
  ['DeleteUsersInput']: GraphQLTypes['DeleteUsersInput'];
  ['DeleteUsersResponse']: {
    success: boolean;
  };
  ['EndEpochInput']: GraphQLTypes['EndEpochInput'];
  ['EpochInputParams']: GraphQLTypes['EpochInputParams'];
  ['EpochResponse']: {
    epoch?: GraphQLTypes['epochs'] | undefined;
    id: string;
  };
  ['GenerateApiKeyInput']: GraphQLTypes['GenerateApiKeyInput'];
  ['GenerateApiKeyResponse']: {
    api_key: string;
    circleApiKey?: GraphQLTypes['circle_api_keys'] | undefined;
    hash: string;
  };
  ['GetCastsInput']: GraphQLTypes['GetCastsInput'];
  ['GetCastsOutput']: {
    casts: Array<GraphQLTypes['Cast']>;
  };
  ['GiveCsvInput']: GraphQLTypes['GiveCsvInput'];
  ['GiveCsvResponse']: {
    file: string;
  };
  ['GuildAdmin']: {
    address: string;
  };
  ['GuildInfoInput']: GraphQLTypes['GuildInfoInput'];
  ['GuildInfoOutput']: {
    admins?: Array<GraphQLTypes['GuildAdmin'] | undefined> | undefined;
    description: string;
    id: number;
    image_url: string;
    member_count: number;
    name: string;
    roles?: Array<GraphQLTypes['GuildRole'] | undefined> | undefined;
    url_name: string;
  };
  ['GuildRole']: {
    id: number;
    image_url: string;
    member_count: number;
    name: string;
  };
  ['HeadlinesOutput']: {
    activity?: GraphQLTypes['activities'] | undefined;
    activity_id: number;
    description: string;
    headline: string;
  };
  ['IdInput']: GraphQLTypes['IdInput'];
  /** Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'. */
  ['Int_comparison_exp']: GraphQLTypes['Int_comparison_exp'];
  ['LogVaultTxInput']: GraphQLTypes['LogVaultTxInput'];
  ['LogVaultTxResponse']: {
    id: string;
    vault_tx_return_object?: GraphQLTypes['vault_transactions'] | undefined;
  };
  ['LogoutResponse']: {
    id?: number | undefined;
    profile?: GraphQLTypes['profiles'] | undefined;
  };
  ['MarkClaimedInput']: GraphQLTypes['MarkClaimedInput'];
  ['MarkClaimedOutput']: {
    ids: Array<number>;
  };
  ['OrgMemberResponse']: {
    OrgMemberResponse?: GraphQLTypes['org_members'] | undefined;
    id: string;
    new: boolean;
  };
  ['RedeemInviteCodeInput']: GraphQLTypes['RedeemInviteCodeInput'];
  ['RequestInviteCodeInput']: GraphQLTypes['RequestInviteCodeInput'];
  ['SearchCosoulsInput']: GraphQLTypes['SearchCosoulsInput'];
  ['SearchCosoulsOutput']: {
    cosoul_ids: Array<number>;
  };
  ['SearchProfilesInput']: GraphQLTypes['SearchProfilesInput'];
  ['SearchProfilesOutput']: {
    profile_id: number;
    profile_public?: GraphQLTypes['profiles_public'] | undefined;
    similarity: number;
  };
  ['SetPrimaryEmailInput']: GraphQLTypes['SetPrimaryEmailInput'];
  ['ShareInput']: GraphQLTypes['ShareInput'];
  ['ShareOutput']: {
    token: string;
  };
  ['SimilarProfileInput']: GraphQLTypes['SimilarProfileInput'];
  ['SimilarProfileOutput']: {
    profile_id: number;
    profile_public?: GraphQLTypes['profiles_public'] | undefined;
  };
  /** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
  ['String_comparison_exp']: GraphQLTypes['String_comparison_exp'];
  ['SuccessResponse']: {
    success: boolean;
  };
  ['SyncCoSoulInput']: GraphQLTypes['SyncCoSoulInput'];
  ['SyncCoSoulOutput']: {
    token_id?: string | undefined;
  };
  ['UpdateCircleInput']: GraphQLTypes['UpdateCircleInput'];
  ['UpdateCircleOutput']: {
    circle?: GraphQLTypes['circles'] | undefined;
    id: number;
  };
  ['UpdateCircleResponse']: {
    circle?: GraphQLTypes['circles'] | undefined;
    id: number;
  };
  ['UpdateCircleStartingGiveInput']: GraphQLTypes['UpdateCircleStartingGiveInput'];
  ['UpdateContributionInput']: GraphQLTypes['UpdateContributionInput'];
  ['UpdateContributionResponse']: {
    id: string;
    updateContribution_Contribution?: GraphQLTypes['contributions'] | undefined;
  };
  ['UpdateEpochInput']: GraphQLTypes['UpdateEpochInput'];
  ['UpdateOrgResponse']: {
    id: number;
    org?: GraphQLTypes['organizations'] | undefined;
  };
  ['UpdateProfileInput']: GraphQLTypes['UpdateProfileInput'];
  ['UpdateProfileResponse']: {
    id: number;
    profile?: GraphQLTypes['profiles'] | undefined;
  };
  ['UpdateTeammatesInput']: GraphQLTypes['UpdateTeammatesInput'];
  ['UpdateTeammatesResponse']: {
    user?: GraphQLTypes['users'] | undefined;
    user_id: string;
  };
  ['UpdateUserInput']: GraphQLTypes['UpdateUserInput'];
  ['UploadCircleImageInput']: GraphQLTypes['UploadCircleImageInput'];
  ['UploadImageInput']: GraphQLTypes['UploadImageInput'];
  ['UploadOrgImageInput']: GraphQLTypes['UploadOrgImageInput'];
  ['UploadUrlResponse']: {
    errors?: Array<string | undefined> | undefined;
    messages?: Array<string | undefined> | undefined;
    result?: GraphQLTypes['UploadUrlResult'] | undefined;
    result_info?: string | undefined;
    success?: boolean | undefined;
  };
  ['UploadUrlResult']: {
    id?: string | undefined;
    upload_url?: string | undefined;
  };
  ['UserObj']: GraphQLTypes['UserObj'];
  ['UserResponse']: {
    UserResponse?: GraphQLTypes['users'] | undefined;
    id: string;
  };
  ['VaultResponse']: {
    id: string;
    vault?: GraphQLTypes['vaults'] | undefined;
  };
  ['VouchInput']: GraphQLTypes['VouchInput'];
  ['VouchOutput']: {
    id: number;
    nominee?: GraphQLTypes['nominees'] | undefined;
  };
  /** Table containing activity on our platform */
  ['activities']: {
    action: string;
    /** An object relationship */
    actor_profile?: GraphQLTypes['profiles'] | undefined;
    actor_profile_id?: GraphQLTypes['bigint'] | undefined;
    /** An object relationship */
    actor_profile_public?: GraphQLTypes['profiles_public'] | undefined;
    /** An object relationship */
    big_question?: GraphQLTypes['big_questions'] | undefined;
    big_question_id?: GraphQLTypes['bigint'] | undefined;
    cast_id?: GraphQLTypes['bigint'] | undefined;
    /** An object relationship */
    circle?: GraphQLTypes['circles'] | undefined;
    circle_id?: GraphQLTypes['bigint'] | undefined;
    /** An object relationship */
    contribution?: GraphQLTypes['contributions'] | undefined;
    contribution_id?: GraphQLTypes['bigint'] | undefined;
    created_at: GraphQLTypes['timestamptz'];
    /** An object relationship */
    enriched_cast?: GraphQLTypes['enriched_casts'] | undefined;
    /** An object relationship */
    epoch?: GraphQLTypes['epochs'] | undefined;
    epoch_id?: GraphQLTypes['bigint'] | undefined;
    /** An array relationship */
    gives: Array<GraphQLTypes['colinks_gives']>;
    /** An aggregate relationship */
    gives_aggregate: GraphQLTypes['colinks_gives_aggregate'];
    id: GraphQLTypes['bigint'];
    /** An object relationship */
    organization?: GraphQLTypes['organizations'] | undefined;
    organization_id?: GraphQLTypes['bigint'] | undefined;
    private_stream: boolean;
    /** An array relationship */
    private_stream_visibility: Array<GraphQLTypes['private_stream_visibility']>;
    reaction_count: number;
    /** An array relationship */
    reactions: Array<GraphQLTypes['reactions']>;
    /** An aggregate relationship */
    reactions_aggregate: GraphQLTypes['reactions_aggregate'];
    /** An array relationship */
    replies: Array<GraphQLTypes['replies']>;
    /** An aggregate relationship */
    replies_aggregate: GraphQLTypes['replies_aggregate'];
    reply_count: number;
    /** An object relationship */
    target_profile?: GraphQLTypes['profiles'] | undefined;
    target_profile_id?: GraphQLTypes['bigint'] | undefined;
    /** An object relationship */
    target_profile_public?: GraphQLTypes['profiles_public'] | undefined;
    updated_at: GraphQLTypes['timestamptz'];
    /** An object relationship */
    user?: GraphQLTypes['users'] | undefined;
  };
  /** aggregated selection of "activities" */
  ['activities_aggregate']: {
    aggregate?: GraphQLTypes['activities_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['activities']>;
  };
  ['activities_aggregate_bool_exp']: GraphQLTypes['activities_aggregate_bool_exp'];
  ['activities_aggregate_bool_exp_bool_and']: GraphQLTypes['activities_aggregate_bool_exp_bool_and'];
  ['activities_aggregate_bool_exp_bool_or']: GraphQLTypes['activities_aggregate_bool_exp_bool_or'];
  ['activities_aggregate_bool_exp_count']: GraphQLTypes['activities_aggregate_bool_exp_count'];
  /** aggregate fields of "activities" */
  ['activities_aggregate_fields']: {
    avg?: GraphQLTypes['activities_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['activities_max_fields'] | undefined;
    min?: GraphQLTypes['activities_min_fields'] | undefined;
    stddev?: GraphQLTypes['activities_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['activities_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['activities_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['activities_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['activities_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['activities_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['activities_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "activities" */
  ['activities_aggregate_order_by']: GraphQLTypes['activities_aggregate_order_by'];
  /** aggregate avg on columns */
  ['activities_avg_fields']: {
    actor_profile_id?: number | undefined;
    big_question_id?: number | undefined;
    cast_id?: number | undefined;
    circle_id?: number | undefined;
    contribution_id?: number | undefined;
    epoch_id?: number | undefined;
    id?: number | undefined;
    organization_id?: number | undefined;
    reaction_count?: number | undefined;
    reply_count?: number | undefined;
    target_profile_id?: number | undefined;
  };
  /** order by avg() on columns of table "activities" */
  ['activities_avg_order_by']: GraphQLTypes['activities_avg_order_by'];
  /** Boolean expression to filter rows from the table "activities". All fields are combined with a logical 'AND'. */
  ['activities_bool_exp']: GraphQLTypes['activities_bool_exp'];
  /** aggregate max on columns */
  ['activities_max_fields']: {
    action?: string | undefined;
    actor_profile_id?: GraphQLTypes['bigint'] | undefined;
    big_question_id?: GraphQLTypes['bigint'] | undefined;
    cast_id?: GraphQLTypes['bigint'] | undefined;
    circle_id?: GraphQLTypes['bigint'] | undefined;
    contribution_id?: GraphQLTypes['bigint'] | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    epoch_id?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    organization_id?: GraphQLTypes['bigint'] | undefined;
    reaction_count?: number | undefined;
    reply_count?: number | undefined;
    target_profile_id?: GraphQLTypes['bigint'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by max() on columns of table "activities" */
  ['activities_max_order_by']: GraphQLTypes['activities_max_order_by'];
  /** aggregate min on columns */
  ['activities_min_fields']: {
    action?: string | undefined;
    actor_profile_id?: GraphQLTypes['bigint'] | undefined;
    big_question_id?: GraphQLTypes['bigint'] | undefined;
    cast_id?: GraphQLTypes['bigint'] | undefined;
    circle_id?: GraphQLTypes['bigint'] | undefined;
    contribution_id?: GraphQLTypes['bigint'] | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    epoch_id?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    organization_id?: GraphQLTypes['bigint'] | undefined;
    reaction_count?: number | undefined;
    reply_count?: number | undefined;
    target_profile_id?: GraphQLTypes['bigint'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by min() on columns of table "activities" */
  ['activities_min_order_by']: GraphQLTypes['activities_min_order_by'];
  /** Ordering options when selecting data from "activities". */
  ['activities_order_by']: GraphQLTypes['activities_order_by'];
  /** select columns of table "activities" */
  ['activities_select_column']: GraphQLTypes['activities_select_column'];
  /** select "activities_aggregate_bool_exp_bool_and_arguments_columns" columns of table "activities" */
  ['activities_select_column_activities_aggregate_bool_exp_bool_and_arguments_columns']: GraphQLTypes['activities_select_column_activities_aggregate_bool_exp_bool_and_arguments_columns'];
  /** select "activities_aggregate_bool_exp_bool_or_arguments_columns" columns of table "activities" */
  ['activities_select_column_activities_aggregate_bool_exp_bool_or_arguments_columns']: GraphQLTypes['activities_select_column_activities_aggregate_bool_exp_bool_or_arguments_columns'];
  /** aggregate stddev on columns */
  ['activities_stddev_fields']: {
    actor_profile_id?: number | undefined;
    big_question_id?: number | undefined;
    cast_id?: number | undefined;
    circle_id?: number | undefined;
    contribution_id?: number | undefined;
    epoch_id?: number | undefined;
    id?: number | undefined;
    organization_id?: number | undefined;
    reaction_count?: number | undefined;
    reply_count?: number | undefined;
    target_profile_id?: number | undefined;
  };
  /** order by stddev() on columns of table "activities" */
  ['activities_stddev_order_by']: GraphQLTypes['activities_stddev_order_by'];
  /** aggregate stddev_pop on columns */
  ['activities_stddev_pop_fields']: {
    actor_profile_id?: number | undefined;
    big_question_id?: number | undefined;
    cast_id?: number | undefined;
    circle_id?: number | undefined;
    contribution_id?: number | undefined;
    epoch_id?: number | undefined;
    id?: number | undefined;
    organization_id?: number | undefined;
    reaction_count?: number | undefined;
    reply_count?: number | undefined;
    target_profile_id?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "activities" */
  ['activities_stddev_pop_order_by']: GraphQLTypes['activities_stddev_pop_order_by'];
  /** aggregate stddev_samp on columns */
  ['activities_stddev_samp_fields']: {
    actor_profile_id?: number | undefined;
    big_question_id?: number | undefined;
    cast_id?: number | undefined;
    circle_id?: number | undefined;
    contribution_id?: number | undefined;
    epoch_id?: number | undefined;
    id?: number | undefined;
    organization_id?: number | undefined;
    reaction_count?: number | undefined;
    reply_count?: number | undefined;
    target_profile_id?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "activities" */
  ['activities_stddev_samp_order_by']: GraphQLTypes['activities_stddev_samp_order_by'];
  /** Streaming cursor of the table "activities" */
  ['activities_stream_cursor_input']: GraphQLTypes['activities_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['activities_stream_cursor_value_input']: GraphQLTypes['activities_stream_cursor_value_input'];
  /** aggregate sum on columns */
  ['activities_sum_fields']: {
    actor_profile_id?: GraphQLTypes['bigint'] | undefined;
    big_question_id?: GraphQLTypes['bigint'] | undefined;
    cast_id?: GraphQLTypes['bigint'] | undefined;
    circle_id?: GraphQLTypes['bigint'] | undefined;
    contribution_id?: GraphQLTypes['bigint'] | undefined;
    epoch_id?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    organization_id?: GraphQLTypes['bigint'] | undefined;
    reaction_count?: number | undefined;
    reply_count?: number | undefined;
    target_profile_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by sum() on columns of table "activities" */
  ['activities_sum_order_by']: GraphQLTypes['activities_sum_order_by'];
  /** aggregate var_pop on columns */
  ['activities_var_pop_fields']: {
    actor_profile_id?: number | undefined;
    big_question_id?: number | undefined;
    cast_id?: number | undefined;
    circle_id?: number | undefined;
    contribution_id?: number | undefined;
    epoch_id?: number | undefined;
    id?: number | undefined;
    organization_id?: number | undefined;
    reaction_count?: number | undefined;
    reply_count?: number | undefined;
    target_profile_id?: number | undefined;
  };
  /** order by var_pop() on columns of table "activities" */
  ['activities_var_pop_order_by']: GraphQLTypes['activities_var_pop_order_by'];
  /** aggregate var_samp on columns */
  ['activities_var_samp_fields']: {
    actor_profile_id?: number | undefined;
    big_question_id?: number | undefined;
    cast_id?: number | undefined;
    circle_id?: number | undefined;
    contribution_id?: number | undefined;
    epoch_id?: number | undefined;
    id?: number | undefined;
    organization_id?: number | undefined;
    reaction_count?: number | undefined;
    reply_count?: number | undefined;
    target_profile_id?: number | undefined;
  };
  /** order by var_samp() on columns of table "activities" */
  ['activities_var_samp_order_by']: GraphQLTypes['activities_var_samp_order_by'];
  /** aggregate variance on columns */
  ['activities_variance_fields']: {
    actor_profile_id?: number | undefined;
    big_question_id?: number | undefined;
    cast_id?: number | undefined;
    circle_id?: number | undefined;
    contribution_id?: number | undefined;
    epoch_id?: number | undefined;
    id?: number | undefined;
    organization_id?: number | undefined;
    reaction_count?: number | undefined;
    reply_count?: number | undefined;
    target_profile_id?: number | undefined;
  };
  /** order by variance() on columns of table "activities" */
  ['activities_variance_order_by']: GraphQLTypes['activities_variance_order_by'];
  /** columns and relationships of "big_questions" */
  ['big_questions']: {
    /** An array relationship */
    activities: Array<GraphQLTypes['activities']>;
    /** An aggregate relationship */
    activities_aggregate: GraphQLTypes['activities_aggregate'];
    cover_image_url: string;
    created_at: GraphQLTypes['timestamp'];
    css_background_position?: string | undefined;
    description?: string | undefined;
    expire_at?: GraphQLTypes['timestamp'] | undefined;
    id: GraphQLTypes['bigint'];
    prompt: string;
    publish_at?: GraphQLTypes['timestamp'] | undefined;
    updated_at: GraphQLTypes['timestamp'];
  };
  /** Boolean expression to filter rows from the table "big_questions". All fields are combined with a logical 'AND'. */
  ['big_questions_bool_exp']: GraphQLTypes['big_questions_bool_exp'];
  /** Ordering options when selecting data from "big_questions". */
  ['big_questions_order_by']: GraphQLTypes['big_questions_order_by'];
  /** select columns of table "big_questions" */
  ['big_questions_select_column']: GraphQLTypes['big_questions_select_column'];
  /** Streaming cursor of the table "big_questions" */
  ['big_questions_stream_cursor_input']: GraphQLTypes['big_questions_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['big_questions_stream_cursor_value_input']: GraphQLTypes['big_questions_stream_cursor_value_input'];
  ['bigint']: number;
  /** Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'. */
  ['bigint_array_comparison_exp']: GraphQLTypes['bigint_array_comparison_exp'];
  /** Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'. */
  ['bigint_comparison_exp']: GraphQLTypes['bigint_comparison_exp'];
  /** columns and relationships of "burns" */
  ['burns']: {
    /** An object relationship */
    circle: GraphQLTypes['circles'];
    circle_id: GraphQLTypes['bigint'];
    created_at: GraphQLTypes['timestamp'];
    /** An object relationship */
    epoch: GraphQLTypes['epochs'];
    epoch_id: GraphQLTypes['bigint'];
    id: GraphQLTypes['bigint'];
    original_amount: number;
    regift_percent: number;
    tokens_burnt: number;
    updated_at: GraphQLTypes['timestamp'];
    /** An object relationship */
    user: GraphQLTypes['users'];
    user_id: GraphQLTypes['bigint'];
  };
  /** order by aggregate values of table "burns" */
  ['burns_aggregate_order_by']: GraphQLTypes['burns_aggregate_order_by'];
  /** order by avg() on columns of table "burns" */
  ['burns_avg_order_by']: GraphQLTypes['burns_avg_order_by'];
  /** Boolean expression to filter rows from the table "burns". All fields are combined with a logical 'AND'. */
  ['burns_bool_exp']: GraphQLTypes['burns_bool_exp'];
  /** order by max() on columns of table "burns" */
  ['burns_max_order_by']: GraphQLTypes['burns_max_order_by'];
  /** order by min() on columns of table "burns" */
  ['burns_min_order_by']: GraphQLTypes['burns_min_order_by'];
  /** Ordering options when selecting data from "burns". */
  ['burns_order_by']: GraphQLTypes['burns_order_by'];
  /** select columns of table "burns" */
  ['burns_select_column']: GraphQLTypes['burns_select_column'];
  /** order by stddev() on columns of table "burns" */
  ['burns_stddev_order_by']: GraphQLTypes['burns_stddev_order_by'];
  /** order by stddev_pop() on columns of table "burns" */
  ['burns_stddev_pop_order_by']: GraphQLTypes['burns_stddev_pop_order_by'];
  /** order by stddev_samp() on columns of table "burns" */
  ['burns_stddev_samp_order_by']: GraphQLTypes['burns_stddev_samp_order_by'];
  /** Streaming cursor of the table "burns" */
  ['burns_stream_cursor_input']: GraphQLTypes['burns_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['burns_stream_cursor_value_input']: GraphQLTypes['burns_stream_cursor_value_input'];
  /** order by sum() on columns of table "burns" */
  ['burns_sum_order_by']: GraphQLTypes['burns_sum_order_by'];
  /** order by var_pop() on columns of table "burns" */
  ['burns_var_pop_order_by']: GraphQLTypes['burns_var_pop_order_by'];
  /** order by var_samp() on columns of table "burns" */
  ['burns_var_samp_order_by']: GraphQLTypes['burns_var_samp_order_by'];
  /** order by variance() on columns of table "burns" */
  ['burns_variance_order_by']: GraphQLTypes['burns_variance_order_by'];
  ['bytea']: any;
  /** Boolean expression to compare columns of type "bytea". All fields are combined with logical 'AND'. */
  ['bytea_comparison_exp']: GraphQLTypes['bytea_comparison_exp'];
  /** Circle-scoped API keys with user defined permissions to allow third parties to authenticate to Coordinape's GraphQL API. */
  ['circle_api_keys']: {
    /** An object relationship */
    circle: GraphQLTypes['circles'];
    circle_id: GraphQLTypes['bigint'];
    create_contributions: boolean;
    create_vouches: boolean;
    /** An object relationship */
    createdByUser: GraphQLTypes['users'];
    created_at: GraphQLTypes['timestamptz'];
    created_by: GraphQLTypes['bigint'];
    hash: string;
    manage_users: boolean;
    name: string;
    read_circle: boolean;
    read_contributions: boolean;
    read_epochs: boolean;
    read_member_profiles: boolean;
    read_nominees: boolean;
    read_pending_token_gifts: boolean;
    update_circle: boolean;
    update_pending_token_gifts: boolean;
  };
  /** order by aggregate values of table "circle_api_keys" */
  ['circle_api_keys_aggregate_order_by']: GraphQLTypes['circle_api_keys_aggregate_order_by'];
  /** order by avg() on columns of table "circle_api_keys" */
  ['circle_api_keys_avg_order_by']: GraphQLTypes['circle_api_keys_avg_order_by'];
  /** Boolean expression to filter rows from the table "circle_api_keys". All fields are combined with a logical 'AND'. */
  ['circle_api_keys_bool_exp']: GraphQLTypes['circle_api_keys_bool_exp'];
  /** order by max() on columns of table "circle_api_keys" */
  ['circle_api_keys_max_order_by']: GraphQLTypes['circle_api_keys_max_order_by'];
  /** order by min() on columns of table "circle_api_keys" */
  ['circle_api_keys_min_order_by']: GraphQLTypes['circle_api_keys_min_order_by'];
  /** response of any mutation on the table "circle_api_keys" */
  ['circle_api_keys_mutation_response']: {
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['circle_api_keys']>;
  };
  /** Ordering options when selecting data from "circle_api_keys". */
  ['circle_api_keys_order_by']: GraphQLTypes['circle_api_keys_order_by'];
  /** select columns of table "circle_api_keys" */
  ['circle_api_keys_select_column']: GraphQLTypes['circle_api_keys_select_column'];
  /** order by stddev() on columns of table "circle_api_keys" */
  ['circle_api_keys_stddev_order_by']: GraphQLTypes['circle_api_keys_stddev_order_by'];
  /** order by stddev_pop() on columns of table "circle_api_keys" */
  ['circle_api_keys_stddev_pop_order_by']: GraphQLTypes['circle_api_keys_stddev_pop_order_by'];
  /** order by stddev_samp() on columns of table "circle_api_keys" */
  ['circle_api_keys_stddev_samp_order_by']: GraphQLTypes['circle_api_keys_stddev_samp_order_by'];
  /** Streaming cursor of the table "circle_api_keys" */
  ['circle_api_keys_stream_cursor_input']: GraphQLTypes['circle_api_keys_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['circle_api_keys_stream_cursor_value_input']: GraphQLTypes['circle_api_keys_stream_cursor_value_input'];
  /** order by sum() on columns of table "circle_api_keys" */
  ['circle_api_keys_sum_order_by']: GraphQLTypes['circle_api_keys_sum_order_by'];
  /** order by var_pop() on columns of table "circle_api_keys" */
  ['circle_api_keys_var_pop_order_by']: GraphQLTypes['circle_api_keys_var_pop_order_by'];
  /** order by var_samp() on columns of table "circle_api_keys" */
  ['circle_api_keys_var_samp_order_by']: GraphQLTypes['circle_api_keys_var_samp_order_by'];
  /** order by variance() on columns of table "circle_api_keys" */
  ['circle_api_keys_variance_order_by']: GraphQLTypes['circle_api_keys_variance_order_by'];
  /** columns and relationships of "circle_integrations" */
  ['circle_integrations']: {
    /** An object relationship */
    circle: GraphQLTypes['circles'];
    circle_id: GraphQLTypes['bigint'];
    data: GraphQLTypes['json'];
    id: GraphQLTypes['bigint'];
    name: string;
    type: string;
  };
  /** order by aggregate values of table "circle_integrations" */
  ['circle_integrations_aggregate_order_by']: GraphQLTypes['circle_integrations_aggregate_order_by'];
  /** order by avg() on columns of table "circle_integrations" */
  ['circle_integrations_avg_order_by']: GraphQLTypes['circle_integrations_avg_order_by'];
  /** Boolean expression to filter rows from the table "circle_integrations". All fields are combined with a logical 'AND'. */
  ['circle_integrations_bool_exp']: GraphQLTypes['circle_integrations_bool_exp'];
  /** unique or primary key constraints on table "circle_integrations" */
  ['circle_integrations_constraint']: GraphQLTypes['circle_integrations_constraint'];
  /** input type for inserting data into table "circle_integrations" */
  ['circle_integrations_insert_input']: GraphQLTypes['circle_integrations_insert_input'];
  /** order by max() on columns of table "circle_integrations" */
  ['circle_integrations_max_order_by']: GraphQLTypes['circle_integrations_max_order_by'];
  /** order by min() on columns of table "circle_integrations" */
  ['circle_integrations_min_order_by']: GraphQLTypes['circle_integrations_min_order_by'];
  /** response of any mutation on the table "circle_integrations" */
  ['circle_integrations_mutation_response']: {
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['circle_integrations']>;
  };
  /** on_conflict condition type for table "circle_integrations" */
  ['circle_integrations_on_conflict']: GraphQLTypes['circle_integrations_on_conflict'];
  /** Ordering options when selecting data from "circle_integrations". */
  ['circle_integrations_order_by']: GraphQLTypes['circle_integrations_order_by'];
  /** primary key columns input for table: circle_integrations */
  ['circle_integrations_pk_columns_input']: GraphQLTypes['circle_integrations_pk_columns_input'];
  /** select columns of table "circle_integrations" */
  ['circle_integrations_select_column']: GraphQLTypes['circle_integrations_select_column'];
  /** input type for updating data in table "circle_integrations" */
  ['circle_integrations_set_input']: GraphQLTypes['circle_integrations_set_input'];
  /** order by stddev() on columns of table "circle_integrations" */
  ['circle_integrations_stddev_order_by']: GraphQLTypes['circle_integrations_stddev_order_by'];
  /** order by stddev_pop() on columns of table "circle_integrations" */
  ['circle_integrations_stddev_pop_order_by']: GraphQLTypes['circle_integrations_stddev_pop_order_by'];
  /** order by stddev_samp() on columns of table "circle_integrations" */
  ['circle_integrations_stddev_samp_order_by']: GraphQLTypes['circle_integrations_stddev_samp_order_by'];
  /** Streaming cursor of the table "circle_integrations" */
  ['circle_integrations_stream_cursor_input']: GraphQLTypes['circle_integrations_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['circle_integrations_stream_cursor_value_input']: GraphQLTypes['circle_integrations_stream_cursor_value_input'];
  /** order by sum() on columns of table "circle_integrations" */
  ['circle_integrations_sum_order_by']: GraphQLTypes['circle_integrations_sum_order_by'];
  /** update columns of table "circle_integrations" */
  ['circle_integrations_update_column']: GraphQLTypes['circle_integrations_update_column'];
  ['circle_integrations_updates']: GraphQLTypes['circle_integrations_updates'];
  /** order by var_pop() on columns of table "circle_integrations" */
  ['circle_integrations_var_pop_order_by']: GraphQLTypes['circle_integrations_var_pop_order_by'];
  /** order by var_samp() on columns of table "circle_integrations" */
  ['circle_integrations_var_samp_order_by']: GraphQLTypes['circle_integrations_var_samp_order_by'];
  /** order by variance() on columns of table "circle_integrations" */
  ['circle_integrations_variance_order_by']: GraphQLTypes['circle_integrations_variance_order_by'];
  /** columns and relationships of "circle_private" */
  ['circle_private']: {
    /** An object relationship */
    circle?: GraphQLTypes['circles'] | undefined;
    circle_id?: GraphQLTypes['bigint'] | undefined;
    discord_webhook?: string | undefined;
  };
  /** Boolean expression to filter rows from the table "circle_private". All fields are combined with a logical 'AND'. */
  ['circle_private_bool_exp']: GraphQLTypes['circle_private_bool_exp'];
  /** Ordering options when selecting data from "circle_private". */
  ['circle_private_order_by']: GraphQLTypes['circle_private_order_by'];
  /** select columns of table "circle_private" */
  ['circle_private_select_column']: GraphQLTypes['circle_private_select_column'];
  /** Streaming cursor of the table "circle_private" */
  ['circle_private_stream_cursor_input']: GraphQLTypes['circle_private_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['circle_private_stream_cursor_value_input']: GraphQLTypes['circle_private_stream_cursor_value_input'];
  /** columns and relationships of "circle_share_tokens" */
  ['circle_share_tokens']: {
    /** An object relationship */
    circle: GraphQLTypes['circles'];
    circle_id: GraphQLTypes['bigint'];
    created_at: GraphQLTypes['timestamptz'];
    type: number;
    updated_at: GraphQLTypes['timestamptz'];
    uuid: GraphQLTypes['uuid'];
  };
  /** Boolean expression to filter rows from the table "circle_share_tokens". All fields are combined with a logical 'AND'. */
  ['circle_share_tokens_bool_exp']: GraphQLTypes['circle_share_tokens_bool_exp'];
  /** unique or primary key constraints on table "circle_share_tokens" */
  ['circle_share_tokens_constraint']: GraphQLTypes['circle_share_tokens_constraint'];
  /** input type for inserting data into table "circle_share_tokens" */
  ['circle_share_tokens_insert_input']: GraphQLTypes['circle_share_tokens_insert_input'];
  /** response of any mutation on the table "circle_share_tokens" */
  ['circle_share_tokens_mutation_response']: {
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['circle_share_tokens']>;
  };
  /** on_conflict condition type for table "circle_share_tokens" */
  ['circle_share_tokens_on_conflict']: GraphQLTypes['circle_share_tokens_on_conflict'];
  /** Ordering options when selecting data from "circle_share_tokens". */
  ['circle_share_tokens_order_by']: GraphQLTypes['circle_share_tokens_order_by'];
  /** select columns of table "circle_share_tokens" */
  ['circle_share_tokens_select_column']: GraphQLTypes['circle_share_tokens_select_column'];
  /** Streaming cursor of the table "circle_share_tokens" */
  ['circle_share_tokens_stream_cursor_input']: GraphQLTypes['circle_share_tokens_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['circle_share_tokens_stream_cursor_value_input']: GraphQLTypes['circle_share_tokens_stream_cursor_value_input'];
  /** placeholder for update columns of table "circle_share_tokens" (current role has no relevant permissions) */
  ['circle_share_tokens_update_column']: GraphQLTypes['circle_share_tokens_update_column'];
  /** columns and relationships of "circles" */
  ['circles']: {
    alloc_text?: string | undefined;
    allow_distribute_evenly: boolean;
    /** An array relationship */
    api_keys: Array<GraphQLTypes['circle_api_keys']>;
    auto_opt_out: boolean;
    /** An array relationship */
    burns: Array<GraphQLTypes['burns']>;
    /** An object relationship */
    circle_private?: GraphQLTypes['circle_private'] | undefined;
    cont_help_text?: string | undefined;
    /** An array relationship */
    contributions: Array<GraphQLTypes['contributions']>;
    /** An aggregate relationship */
    contributions_aggregate: GraphQLTypes['contributions_aggregate'];
    created_at: GraphQLTypes['timestamp'];
    default_opt_in: boolean;
    deleted_at?: GraphQLTypes['timestamp'] | undefined;
    /** An array relationship */
    epochs: Array<GraphQLTypes['epochs']>;
    fixed_payment_token_type?: string | undefined;
    fixed_payment_vault_id?: number | undefined;
    guild_id?: number | undefined;
    guild_role_id?: number | undefined;
    id: GraphQLTypes['bigint'];
    /** An array relationship */
    integrations: Array<GraphQLTypes['circle_integrations']>;
    is_verified: boolean;
    logo?: string | undefined;
    min_vouches: number;
    name: string;
    nomination_days_limit: number;
    /** An array relationship */
    nominees: Array<GraphQLTypes['nominees']>;
    /** An aggregate relationship */
    nominees_aggregate: GraphQLTypes['nominees_aggregate'];
    only_giver_vouch: boolean;
    /** An object relationship */
    organization: GraphQLTypes['organizations'];
    organization_id: number;
    /** An array relationship */
    pending_token_gifts: Array<GraphQLTypes['pending_token_gifts']>;
    show_pending_gives: boolean;
    starting_tokens: number;
    team_selection: boolean;
    /** An array relationship */
    token_gifts: Array<GraphQLTypes['token_gifts']>;
    /** An aggregate relationship */
    token_gifts_aggregate: GraphQLTypes['token_gifts_aggregate'];
    token_name: string;
    updated_at: GraphQLTypes['timestamp'];
    /** An array relationship */
    users: Array<GraphQLTypes['users']>;
    /** An array relationship */
    vault_transactions: Array<GraphQLTypes['vault_transactions']>;
    vouching: boolean;
    vouching_text?: string | undefined;
  };
  /** order by aggregate values of table "circles" */
  ['circles_aggregate_order_by']: GraphQLTypes['circles_aggregate_order_by'];
  /** order by avg() on columns of table "circles" */
  ['circles_avg_order_by']: GraphQLTypes['circles_avg_order_by'];
  /** Boolean expression to filter rows from the table "circles". All fields are combined with a logical 'AND'. */
  ['circles_bool_exp']: GraphQLTypes['circles_bool_exp'];
  /** order by max() on columns of table "circles" */
  ['circles_max_order_by']: GraphQLTypes['circles_max_order_by'];
  /** order by min() on columns of table "circles" */
  ['circles_min_order_by']: GraphQLTypes['circles_min_order_by'];
  /** Ordering options when selecting data from "circles". */
  ['circles_order_by']: GraphQLTypes['circles_order_by'];
  /** select columns of table "circles" */
  ['circles_select_column']: GraphQLTypes['circles_select_column'];
  /** order by stddev() on columns of table "circles" */
  ['circles_stddev_order_by']: GraphQLTypes['circles_stddev_order_by'];
  /** order by stddev_pop() on columns of table "circles" */
  ['circles_stddev_pop_order_by']: GraphQLTypes['circles_stddev_pop_order_by'];
  /** order by stddev_samp() on columns of table "circles" */
  ['circles_stddev_samp_order_by']: GraphQLTypes['circles_stddev_samp_order_by'];
  /** Streaming cursor of the table "circles" */
  ['circles_stream_cursor_input']: GraphQLTypes['circles_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['circles_stream_cursor_value_input']: GraphQLTypes['circles_stream_cursor_value_input'];
  /** order by sum() on columns of table "circles" */
  ['circles_sum_order_by']: GraphQLTypes['circles_sum_order_by'];
  /** order by var_pop() on columns of table "circles" */
  ['circles_var_pop_order_by']: GraphQLTypes['circles_var_pop_order_by'];
  /** order by var_samp() on columns of table "circles" */
  ['circles_var_samp_order_by']: GraphQLTypes['circles_var_samp_order_by'];
  /** order by variance() on columns of table "circles" */
  ['circles_variance_order_by']: GraphQLTypes['circles_variance_order_by'];
  ['citext']: any;
  /** Boolean expression to compare columns of type "citext". All fields are combined with logical 'AND'. */
  ['citext_comparison_exp']: GraphQLTypes['citext_comparison_exp'];
  /** columns and relationships of "claims" */
  ['claims']: {
    address: string;
    amount: GraphQLTypes['numeric'];
    created_at: GraphQLTypes['timestamptz'];
    /** An object relationship */
    distribution: GraphQLTypes['distributions'];
    distribution_id: GraphQLTypes['bigint'];
    id: GraphQLTypes['bigint'];
    index: GraphQLTypes['bigint'];
    new_amount: GraphQLTypes['numeric'];
    /** An object relationship */
    profile?: GraphQLTypes['profiles'] | undefined;
    profile_id: GraphQLTypes['bigint'];
    proof: string;
    txHash?: string | undefined;
    updated_at: GraphQLTypes['timestamptz'];
  };
  /** aggregated selection of "claims" */
  ['claims_aggregate']: {
    aggregate?: GraphQLTypes['claims_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['claims']>;
  };
  ['claims_aggregate_bool_exp']: GraphQLTypes['claims_aggregate_bool_exp'];
  ['claims_aggregate_bool_exp_count']: GraphQLTypes['claims_aggregate_bool_exp_count'];
  /** aggregate fields of "claims" */
  ['claims_aggregate_fields']: {
    avg?: GraphQLTypes['claims_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['claims_max_fields'] | undefined;
    min?: GraphQLTypes['claims_min_fields'] | undefined;
    stddev?: GraphQLTypes['claims_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['claims_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['claims_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['claims_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['claims_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['claims_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['claims_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "claims" */
  ['claims_aggregate_order_by']: GraphQLTypes['claims_aggregate_order_by'];
  /** input type for inserting array relation for remote table "claims" */
  ['claims_arr_rel_insert_input']: GraphQLTypes['claims_arr_rel_insert_input'];
  /** aggregate avg on columns */
  ['claims_avg_fields']: {
    amount?: number | undefined;
    distribution_id?: number | undefined;
    id?: number | undefined;
    index?: number | undefined;
    new_amount?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by avg() on columns of table "claims" */
  ['claims_avg_order_by']: GraphQLTypes['claims_avg_order_by'];
  /** Boolean expression to filter rows from the table "claims". All fields are combined with a logical 'AND'. */
  ['claims_bool_exp']: GraphQLTypes['claims_bool_exp'];
  /** unique or primary key constraints on table "claims" */
  ['claims_constraint']: GraphQLTypes['claims_constraint'];
  /** input type for inserting data into table "claims" */
  ['claims_insert_input']: GraphQLTypes['claims_insert_input'];
  /** aggregate max on columns */
  ['claims_max_fields']: {
    address?: string | undefined;
    amount?: GraphQLTypes['numeric'] | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    distribution_id?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    index?: GraphQLTypes['bigint'] | undefined;
    new_amount?: GraphQLTypes['numeric'] | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    proof?: string | undefined;
    txHash?: string | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by max() on columns of table "claims" */
  ['claims_max_order_by']: GraphQLTypes['claims_max_order_by'];
  /** aggregate min on columns */
  ['claims_min_fields']: {
    address?: string | undefined;
    amount?: GraphQLTypes['numeric'] | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    distribution_id?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    index?: GraphQLTypes['bigint'] | undefined;
    new_amount?: GraphQLTypes['numeric'] | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    proof?: string | undefined;
    txHash?: string | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by min() on columns of table "claims" */
  ['claims_min_order_by']: GraphQLTypes['claims_min_order_by'];
  /** response of any mutation on the table "claims" */
  ['claims_mutation_response']: {
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['claims']>;
  };
  /** on_conflict condition type for table "claims" */
  ['claims_on_conflict']: GraphQLTypes['claims_on_conflict'];
  /** Ordering options when selecting data from "claims". */
  ['claims_order_by']: GraphQLTypes['claims_order_by'];
  /** primary key columns input for table: claims */
  ['claims_pk_columns_input']: GraphQLTypes['claims_pk_columns_input'];
  /** select columns of table "claims" */
  ['claims_select_column']: GraphQLTypes['claims_select_column'];
  /** input type for updating data in table "claims" */
  ['claims_set_input']: GraphQLTypes['claims_set_input'];
  /** aggregate stddev on columns */
  ['claims_stddev_fields']: {
    amount?: number | undefined;
    distribution_id?: number | undefined;
    id?: number | undefined;
    index?: number | undefined;
    new_amount?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by stddev() on columns of table "claims" */
  ['claims_stddev_order_by']: GraphQLTypes['claims_stddev_order_by'];
  /** aggregate stddev_pop on columns */
  ['claims_stddev_pop_fields']: {
    amount?: number | undefined;
    distribution_id?: number | undefined;
    id?: number | undefined;
    index?: number | undefined;
    new_amount?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "claims" */
  ['claims_stddev_pop_order_by']: GraphQLTypes['claims_stddev_pop_order_by'];
  /** aggregate stddev_samp on columns */
  ['claims_stddev_samp_fields']: {
    amount?: number | undefined;
    distribution_id?: number | undefined;
    id?: number | undefined;
    index?: number | undefined;
    new_amount?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "claims" */
  ['claims_stddev_samp_order_by']: GraphQLTypes['claims_stddev_samp_order_by'];
  /** Streaming cursor of the table "claims" */
  ['claims_stream_cursor_input']: GraphQLTypes['claims_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['claims_stream_cursor_value_input']: GraphQLTypes['claims_stream_cursor_value_input'];
  /** aggregate sum on columns */
  ['claims_sum_fields']: {
    amount?: GraphQLTypes['numeric'] | undefined;
    distribution_id?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    index?: GraphQLTypes['bigint'] | undefined;
    new_amount?: GraphQLTypes['numeric'] | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by sum() on columns of table "claims" */
  ['claims_sum_order_by']: GraphQLTypes['claims_sum_order_by'];
  /** update columns of table "claims" */
  ['claims_update_column']: GraphQLTypes['claims_update_column'];
  ['claims_updates']: GraphQLTypes['claims_updates'];
  /** aggregate var_pop on columns */
  ['claims_var_pop_fields']: {
    amount?: number | undefined;
    distribution_id?: number | undefined;
    id?: number | undefined;
    index?: number | undefined;
    new_amount?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by var_pop() on columns of table "claims" */
  ['claims_var_pop_order_by']: GraphQLTypes['claims_var_pop_order_by'];
  /** aggregate var_samp on columns */
  ['claims_var_samp_fields']: {
    amount?: number | undefined;
    distribution_id?: number | undefined;
    id?: number | undefined;
    index?: number | undefined;
    new_amount?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by var_samp() on columns of table "claims" */
  ['claims_var_samp_order_by']: GraphQLTypes['claims_var_samp_order_by'];
  /** aggregate variance on columns */
  ['claims_variance_fields']: {
    amount?: number | undefined;
    distribution_id?: number | undefined;
    id?: number | undefined;
    index?: number | undefined;
    new_amount?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by variance() on columns of table "claims" */
  ['claims_variance_order_by']: GraphQLTypes['claims_variance_order_by'];
  /** columns and relationships of "colinks_gives" */
  ['colinks_gives']: {
    activity_id?: GraphQLTypes['bigint'] | undefined;
    attestation_uid?: string | undefined;
    cast_hash?: string | undefined;
    created_at: GraphQLTypes['timestamptz'];
    /** An object relationship */
    give_skill?: GraphQLTypes['skills'] | undefined;
    /** An object relationship */
    giver_profile_public?: GraphQLTypes['profiles_public'] | undefined;
    id: number;
    profile_id: GraphQLTypes['bigint'];
    skill?: GraphQLTypes['citext'] | undefined;
    target_profile_id: GraphQLTypes['bigint'];
    /** An object relationship */
    target_profile_public?: GraphQLTypes['profiles_public'] | undefined;
    updated_at: GraphQLTypes['timestamptz'];
    warpcast_url?: string | undefined;
  };
  /** aggregated selection of "colinks_gives" */
  ['colinks_gives_aggregate']: {
    aggregate?: GraphQLTypes['colinks_gives_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['colinks_gives']>;
  };
  ['colinks_gives_aggregate_bool_exp']: GraphQLTypes['colinks_gives_aggregate_bool_exp'];
  ['colinks_gives_aggregate_bool_exp_count']: GraphQLTypes['colinks_gives_aggregate_bool_exp_count'];
  /** aggregate fields of "colinks_gives" */
  ['colinks_gives_aggregate_fields']: {
    avg?: GraphQLTypes['colinks_gives_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['colinks_gives_max_fields'] | undefined;
    min?: GraphQLTypes['colinks_gives_min_fields'] | undefined;
    stddev?: GraphQLTypes['colinks_gives_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['colinks_gives_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['colinks_gives_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['colinks_gives_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['colinks_gives_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['colinks_gives_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['colinks_gives_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "colinks_gives" */
  ['colinks_gives_aggregate_order_by']: GraphQLTypes['colinks_gives_aggregate_order_by'];
  /** aggregate avg on columns */
  ['colinks_gives_avg_fields']: {
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    target_profile_id?: number | undefined;
  };
  /** order by avg() on columns of table "colinks_gives" */
  ['colinks_gives_avg_order_by']: GraphQLTypes['colinks_gives_avg_order_by'];
  /** Boolean expression to filter rows from the table "colinks_gives". All fields are combined with a logical 'AND'. */
  ['colinks_gives_bool_exp']: GraphQLTypes['colinks_gives_bool_exp'];
  /** aggregate max on columns */
  ['colinks_gives_max_fields']: {
    activity_id?: GraphQLTypes['bigint'] | undefined;
    attestation_uid?: string | undefined;
    cast_hash?: string | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    id?: number | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    skill?: GraphQLTypes['citext'] | undefined;
    target_profile_id?: GraphQLTypes['bigint'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
    warpcast_url?: string | undefined;
  };
  /** order by max() on columns of table "colinks_gives" */
  ['colinks_gives_max_order_by']: GraphQLTypes['colinks_gives_max_order_by'];
  /** aggregate min on columns */
  ['colinks_gives_min_fields']: {
    activity_id?: GraphQLTypes['bigint'] | undefined;
    attestation_uid?: string | undefined;
    cast_hash?: string | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    id?: number | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    skill?: GraphQLTypes['citext'] | undefined;
    target_profile_id?: GraphQLTypes['bigint'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
    warpcast_url?: string | undefined;
  };
  /** order by min() on columns of table "colinks_gives" */
  ['colinks_gives_min_order_by']: GraphQLTypes['colinks_gives_min_order_by'];
  /** response of any mutation on the table "colinks_gives" */
  ['colinks_gives_mutation_response']: {
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['colinks_gives']>;
  };
  /** Ordering options when selecting data from "colinks_gives". */
  ['colinks_gives_order_by']: GraphQLTypes['colinks_gives_order_by'];
  /** primary key columns input for table: colinks_gives */
  ['colinks_gives_pk_columns_input']: GraphQLTypes['colinks_gives_pk_columns_input'];
  /** select columns of table "colinks_gives" */
  ['colinks_gives_select_column']: GraphQLTypes['colinks_gives_select_column'];
  /** input type for updating data in table "colinks_gives" */
  ['colinks_gives_set_input']: GraphQLTypes['colinks_gives_set_input'];
  /** aggregate stddev on columns */
  ['colinks_gives_stddev_fields']: {
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    target_profile_id?: number | undefined;
  };
  /** order by stddev() on columns of table "colinks_gives" */
  ['colinks_gives_stddev_order_by']: GraphQLTypes['colinks_gives_stddev_order_by'];
  /** aggregate stddev_pop on columns */
  ['colinks_gives_stddev_pop_fields']: {
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    target_profile_id?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "colinks_gives" */
  ['colinks_gives_stddev_pop_order_by']: GraphQLTypes['colinks_gives_stddev_pop_order_by'];
  /** aggregate stddev_samp on columns */
  ['colinks_gives_stddev_samp_fields']: {
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    target_profile_id?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "colinks_gives" */
  ['colinks_gives_stddev_samp_order_by']: GraphQLTypes['colinks_gives_stddev_samp_order_by'];
  /** Streaming cursor of the table "colinks_gives" */
  ['colinks_gives_stream_cursor_input']: GraphQLTypes['colinks_gives_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['colinks_gives_stream_cursor_value_input']: GraphQLTypes['colinks_gives_stream_cursor_value_input'];
  /** aggregate sum on columns */
  ['colinks_gives_sum_fields']: {
    activity_id?: GraphQLTypes['bigint'] | undefined;
    id?: number | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    target_profile_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by sum() on columns of table "colinks_gives" */
  ['colinks_gives_sum_order_by']: GraphQLTypes['colinks_gives_sum_order_by'];
  ['colinks_gives_updates']: GraphQLTypes['colinks_gives_updates'];
  /** aggregate var_pop on columns */
  ['colinks_gives_var_pop_fields']: {
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    target_profile_id?: number | undefined;
  };
  /** order by var_pop() on columns of table "colinks_gives" */
  ['colinks_gives_var_pop_order_by']: GraphQLTypes['colinks_gives_var_pop_order_by'];
  /** aggregate var_samp on columns */
  ['colinks_gives_var_samp_fields']: {
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    target_profile_id?: number | undefined;
  };
  /** order by var_samp() on columns of table "colinks_gives" */
  ['colinks_gives_var_samp_order_by']: GraphQLTypes['colinks_gives_var_samp_order_by'];
  /** aggregate variance on columns */
  ['colinks_gives_variance_fields']: {
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    target_profile_id?: number | undefined;
  };
  /** order by variance() on columns of table "colinks_gives" */
  ['colinks_gives_variance_order_by']: GraphQLTypes['colinks_gives_variance_order_by'];
  /** columns and relationships of "contribution_count" */
  ['contribution_count']: {
    contributions?: GraphQLTypes['bigint'] | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** Boolean expression to filter rows from the table "contribution_count". All fields are combined with a logical 'AND'. */
  ['contribution_count_bool_exp']: GraphQLTypes['contribution_count_bool_exp'];
  /** Ordering options when selecting data from "contribution_count". */
  ['contribution_count_order_by']: GraphQLTypes['contribution_count_order_by'];
  /** select columns of table "contribution_count" */
  ['contribution_count_select_column']: GraphQLTypes['contribution_count_select_column'];
  /** Streaming cursor of the table "contribution_count" */
  ['contribution_count_stream_cursor_input']: GraphQLTypes['contribution_count_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['contribution_count_stream_cursor_value_input']: GraphQLTypes['contribution_count_stream_cursor_value_input'];
  /** columns and relationships of "contributions" */
  ['contributions']: {
    /** An object relationship */
    activity?: GraphQLTypes['activities'] | undefined;
    /** An object relationship */
    big_question?: GraphQLTypes['big_questions'] | undefined;
    big_question_id?: GraphQLTypes['bigint'] | undefined;
    /** An object relationship */
    circle?: GraphQLTypes['circles'] | undefined;
    circle_id?: GraphQLTypes['bigint'] | undefined;
    created_at: GraphQLTypes['timestamptz'];
    /** An object relationship */
    created_with_api_key?: GraphQLTypes['circle_api_keys'] | undefined;
    created_with_api_key_hash?: string | undefined;
    description: string;
    id: GraphQLTypes['bigint'];
    private_stream: boolean;
    /** An array relationship */
    private_stream_visibility: Array<GraphQLTypes['private_stream_visibility']>;
    /** An object relationship */
    profile?: GraphQLTypes['profiles'] | undefined;
    profile_id: GraphQLTypes['bigint'];
    /** An object relationship */
    profile_public?: GraphQLTypes['profiles_public'] | undefined;
    updated_at: GraphQLTypes['timestamptz'];
    /** An object relationship */
    user?: GraphQLTypes['users'] | undefined;
    user_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** aggregated selection of "contributions" */
  ['contributions_aggregate']: {
    aggregate?: GraphQLTypes['contributions_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['contributions']>;
  };
  ['contributions_aggregate_bool_exp']: GraphQLTypes['contributions_aggregate_bool_exp'];
  ['contributions_aggregate_bool_exp_bool_and']: GraphQLTypes['contributions_aggregate_bool_exp_bool_and'];
  ['contributions_aggregate_bool_exp_bool_or']: GraphQLTypes['contributions_aggregate_bool_exp_bool_or'];
  ['contributions_aggregate_bool_exp_count']: GraphQLTypes['contributions_aggregate_bool_exp_count'];
  /** aggregate fields of "contributions" */
  ['contributions_aggregate_fields']: {
    avg?: GraphQLTypes['contributions_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['contributions_max_fields'] | undefined;
    min?: GraphQLTypes['contributions_min_fields'] | undefined;
    stddev?: GraphQLTypes['contributions_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['contributions_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['contributions_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['contributions_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['contributions_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['contributions_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['contributions_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "contributions" */
  ['contributions_aggregate_order_by']: GraphQLTypes['contributions_aggregate_order_by'];
  /** aggregate avg on columns */
  ['contributions_avg_fields']: {
    big_question_id?: number | undefined;
    circle_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    user_id?: number | undefined;
  };
  /** order by avg() on columns of table "contributions" */
  ['contributions_avg_order_by']: GraphQLTypes['contributions_avg_order_by'];
  /** Boolean expression to filter rows from the table "contributions". All fields are combined with a logical 'AND'. */
  ['contributions_bool_exp']: GraphQLTypes['contributions_bool_exp'];
  /** unique or primary key constraints on table "contributions" */
  ['contributions_constraint']: GraphQLTypes['contributions_constraint'];
  /** input type for inserting data into table "contributions" */
  ['contributions_insert_input']: GraphQLTypes['contributions_insert_input'];
  /** aggregate max on columns */
  ['contributions_max_fields']: {
    big_question_id?: GraphQLTypes['bigint'] | undefined;
    circle_id?: GraphQLTypes['bigint'] | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    created_with_api_key_hash?: string | undefined;
    description?: string | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
    user_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by max() on columns of table "contributions" */
  ['contributions_max_order_by']: GraphQLTypes['contributions_max_order_by'];
  /** aggregate min on columns */
  ['contributions_min_fields']: {
    big_question_id?: GraphQLTypes['bigint'] | undefined;
    circle_id?: GraphQLTypes['bigint'] | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    created_with_api_key_hash?: string | undefined;
    description?: string | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
    user_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by min() on columns of table "contributions" */
  ['contributions_min_order_by']: GraphQLTypes['contributions_min_order_by'];
  /** response of any mutation on the table "contributions" */
  ['contributions_mutation_response']: {
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['contributions']>;
  };
  /** on_conflict condition type for table "contributions" */
  ['contributions_on_conflict']: GraphQLTypes['contributions_on_conflict'];
  /** Ordering options when selecting data from "contributions". */
  ['contributions_order_by']: GraphQLTypes['contributions_order_by'];
  /** select columns of table "contributions" */
  ['contributions_select_column']: GraphQLTypes['contributions_select_column'];
  /** select "contributions_aggregate_bool_exp_bool_and_arguments_columns" columns of table "contributions" */
  ['contributions_select_column_contributions_aggregate_bool_exp_bool_and_arguments_columns']: GraphQLTypes['contributions_select_column_contributions_aggregate_bool_exp_bool_and_arguments_columns'];
  /** select "contributions_aggregate_bool_exp_bool_or_arguments_columns" columns of table "contributions" */
  ['contributions_select_column_contributions_aggregate_bool_exp_bool_or_arguments_columns']: GraphQLTypes['contributions_select_column_contributions_aggregate_bool_exp_bool_or_arguments_columns'];
  /** aggregate stddev on columns */
  ['contributions_stddev_fields']: {
    big_question_id?: number | undefined;
    circle_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    user_id?: number | undefined;
  };
  /** order by stddev() on columns of table "contributions" */
  ['contributions_stddev_order_by']: GraphQLTypes['contributions_stddev_order_by'];
  /** aggregate stddev_pop on columns */
  ['contributions_stddev_pop_fields']: {
    big_question_id?: number | undefined;
    circle_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    user_id?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "contributions" */
  ['contributions_stddev_pop_order_by']: GraphQLTypes['contributions_stddev_pop_order_by'];
  /** aggregate stddev_samp on columns */
  ['contributions_stddev_samp_fields']: {
    big_question_id?: number | undefined;
    circle_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    user_id?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "contributions" */
  ['contributions_stddev_samp_order_by']: GraphQLTypes['contributions_stddev_samp_order_by'];
  /** Streaming cursor of the table "contributions" */
  ['contributions_stream_cursor_input']: GraphQLTypes['contributions_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['contributions_stream_cursor_value_input']: GraphQLTypes['contributions_stream_cursor_value_input'];
  /** aggregate sum on columns */
  ['contributions_sum_fields']: {
    big_question_id?: GraphQLTypes['bigint'] | undefined;
    circle_id?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    user_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by sum() on columns of table "contributions" */
  ['contributions_sum_order_by']: GraphQLTypes['contributions_sum_order_by'];
  /** placeholder for update columns of table "contributions" (current role has no relevant permissions) */
  ['contributions_update_column']: GraphQLTypes['contributions_update_column'];
  /** aggregate var_pop on columns */
  ['contributions_var_pop_fields']: {
    big_question_id?: number | undefined;
    circle_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    user_id?: number | undefined;
  };
  /** order by var_pop() on columns of table "contributions" */
  ['contributions_var_pop_order_by']: GraphQLTypes['contributions_var_pop_order_by'];
  /** aggregate var_samp on columns */
  ['contributions_var_samp_fields']: {
    big_question_id?: number | undefined;
    circle_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    user_id?: number | undefined;
  };
  /** order by var_samp() on columns of table "contributions" */
  ['contributions_var_samp_order_by']: GraphQLTypes['contributions_var_samp_order_by'];
  /** aggregate variance on columns */
  ['contributions_variance_fields']: {
    big_question_id?: number | undefined;
    circle_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    user_id?: number | undefined;
  };
  /** order by variance() on columns of table "contributions" */
  ['contributions_variance_order_by']: GraphQLTypes['contributions_variance_order_by'];
  /** local db copy of last synced on-chain cosoul data */
  ['cosouls']: {
    address: GraphQLTypes['citext'];
    created_at: GraphQLTypes['timestamptz'];
    created_tx_hash: string;
    /** An array relationship */
    held_links: Array<GraphQLTypes['link_holders']>;
    /** An aggregate relationship */
    held_links_aggregate: GraphQLTypes['link_holders_aggregate'];
    id: number;
    /** An array relationship */
    link_holders: Array<GraphQLTypes['link_holders']>;
    /** An aggregate relationship */
    link_holders_aggregate: GraphQLTypes['link_holders_aggregate'];
    pgive?: number | undefined;
    /** An array relationship */
    poaps: Array<GraphQLTypes['poap_holders']>;
    /** An aggregate relationship */
    poaps_aggregate: GraphQLTypes['poap_holders_aggregate'];
    /** An object relationship */
    profile?: GraphQLTypes['profiles'] | undefined;
    /** An object relationship */
    profile_public?: GraphQLTypes['profiles_public'] | undefined;
    synced_at?: GraphQLTypes['timestamptz'] | undefined;
    token_id: number;
    updated_at: GraphQLTypes['timestamptz'];
  };
  /** Boolean expression to filter rows from the table "cosouls". All fields are combined with a logical 'AND'. */
  ['cosouls_bool_exp']: GraphQLTypes['cosouls_bool_exp'];
  /** Ordering options when selecting data from "cosouls". */
  ['cosouls_order_by']: GraphQLTypes['cosouls_order_by'];
  /** select columns of table "cosouls" */
  ['cosouls_select_column']: GraphQLTypes['cosouls_select_column'];
  /** Streaming cursor of the table "cosouls" */
  ['cosouls_stream_cursor_input']: GraphQLTypes['cosouls_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['cosouls_stream_cursor_value_input']: GraphQLTypes['cosouls_stream_cursor_value_input'];
  /** ordering argument of a cursor */
  ['cursor_ordering']: GraphQLTypes['cursor_ordering'];
  ['date']: any;
  /** Boolean expression to compare columns of type "date". All fields are combined with logical 'AND'. */
  ['date_comparison_exp']: GraphQLTypes['date_comparison_exp'];
  /** Vault Distributions */
  ['distributions']: {
    /** An array relationship */
    claims: Array<GraphQLTypes['claims']>;
    /** An aggregate relationship */
    claims_aggregate: GraphQLTypes['claims_aggregate'];
    created_at: GraphQLTypes['timestamp'];
    created_by: GraphQLTypes['bigint'];
    distribution_epoch_id?: GraphQLTypes['bigint'] | undefined;
    distribution_json: GraphQLTypes['jsonb'];
    distribution_type: number;
    /** An object relationship */
    epoch: GraphQLTypes['epochs'];
    epoch_id: GraphQLTypes['bigint'];
    fixed_amount: GraphQLTypes['numeric'];
    gift_amount: GraphQLTypes['numeric'];
    id: GraphQLTypes['bigint'];
    merkle_root?: string | undefined;
    /** An object relationship */
    profile: GraphQLTypes['profiles'];
    total_amount: string;
    tx_hash?: string | undefined;
    /** An object relationship */
    vault: GraphQLTypes['vaults'];
    vault_id: GraphQLTypes['bigint'];
    /** An array relationship */
    vault_transactions: Array<GraphQLTypes['vault_transactions']>;
  };
  /** aggregated selection of "distributions" */
  ['distributions_aggregate']: {
    aggregate?: GraphQLTypes['distributions_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['distributions']>;
  };
  ['distributions_aggregate_bool_exp']: GraphQLTypes['distributions_aggregate_bool_exp'];
  ['distributions_aggregate_bool_exp_count']: GraphQLTypes['distributions_aggregate_bool_exp_count'];
  /** aggregate fields of "distributions" */
  ['distributions_aggregate_fields']: {
    avg?: GraphQLTypes['distributions_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['distributions_max_fields'] | undefined;
    min?: GraphQLTypes['distributions_min_fields'] | undefined;
    stddev?: GraphQLTypes['distributions_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['distributions_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['distributions_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['distributions_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['distributions_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['distributions_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['distributions_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "distributions" */
  ['distributions_aggregate_order_by']: GraphQLTypes['distributions_aggregate_order_by'];
  /** aggregate avg on columns */
  ['distributions_avg_fields']: {
    created_by?: number | undefined;
    distribution_epoch_id?: number | undefined;
    distribution_type?: number | undefined;
    epoch_id?: number | undefined;
    fixed_amount?: number | undefined;
    gift_amount?: number | undefined;
    id?: number | undefined;
    vault_id?: number | undefined;
  };
  /** order by avg() on columns of table "distributions" */
  ['distributions_avg_order_by']: GraphQLTypes['distributions_avg_order_by'];
  /** Boolean expression to filter rows from the table "distributions". All fields are combined with a logical 'AND'. */
  ['distributions_bool_exp']: GraphQLTypes['distributions_bool_exp'];
  /** unique or primary key constraints on table "distributions" */
  ['distributions_constraint']: GraphQLTypes['distributions_constraint'];
  /** input type for incrementing numeric columns in table "distributions" */
  ['distributions_inc_input']: GraphQLTypes['distributions_inc_input'];
  /** input type for inserting data into table "distributions" */
  ['distributions_insert_input']: GraphQLTypes['distributions_insert_input'];
  /** aggregate max on columns */
  ['distributions_max_fields']: {
    created_at?: GraphQLTypes['timestamp'] | undefined;
    created_by?: GraphQLTypes['bigint'] | undefined;
    distribution_epoch_id?: GraphQLTypes['bigint'] | undefined;
    distribution_type?: number | undefined;
    epoch_id?: GraphQLTypes['bigint'] | undefined;
    fixed_amount?: GraphQLTypes['numeric'] | undefined;
    gift_amount?: GraphQLTypes['numeric'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    merkle_root?: string | undefined;
    total_amount?: string | undefined;
    tx_hash?: string | undefined;
    vault_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by max() on columns of table "distributions" */
  ['distributions_max_order_by']: GraphQLTypes['distributions_max_order_by'];
  /** aggregate min on columns */
  ['distributions_min_fields']: {
    created_at?: GraphQLTypes['timestamp'] | undefined;
    created_by?: GraphQLTypes['bigint'] | undefined;
    distribution_epoch_id?: GraphQLTypes['bigint'] | undefined;
    distribution_type?: number | undefined;
    epoch_id?: GraphQLTypes['bigint'] | undefined;
    fixed_amount?: GraphQLTypes['numeric'] | undefined;
    gift_amount?: GraphQLTypes['numeric'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    merkle_root?: string | undefined;
    total_amount?: string | undefined;
    tx_hash?: string | undefined;
    vault_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by min() on columns of table "distributions" */
  ['distributions_min_order_by']: GraphQLTypes['distributions_min_order_by'];
  /** response of any mutation on the table "distributions" */
  ['distributions_mutation_response']: {
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['distributions']>;
  };
  /** input type for inserting object relation for remote table "distributions" */
  ['distributions_obj_rel_insert_input']: GraphQLTypes['distributions_obj_rel_insert_input'];
  /** on_conflict condition type for table "distributions" */
  ['distributions_on_conflict']: GraphQLTypes['distributions_on_conflict'];
  /** Ordering options when selecting data from "distributions". */
  ['distributions_order_by']: GraphQLTypes['distributions_order_by'];
  /** primary key columns input for table: distributions */
  ['distributions_pk_columns_input']: GraphQLTypes['distributions_pk_columns_input'];
  /** select columns of table "distributions" */
  ['distributions_select_column']: GraphQLTypes['distributions_select_column'];
  /** input type for updating data in table "distributions" */
  ['distributions_set_input']: GraphQLTypes['distributions_set_input'];
  /** aggregate stddev on columns */
  ['distributions_stddev_fields']: {
    created_by?: number | undefined;
    distribution_epoch_id?: number | undefined;
    distribution_type?: number | undefined;
    epoch_id?: number | undefined;
    fixed_amount?: number | undefined;
    gift_amount?: number | undefined;
    id?: number | undefined;
    vault_id?: number | undefined;
  };
  /** order by stddev() on columns of table "distributions" */
  ['distributions_stddev_order_by']: GraphQLTypes['distributions_stddev_order_by'];
  /** aggregate stddev_pop on columns */
  ['distributions_stddev_pop_fields']: {
    created_by?: number | undefined;
    distribution_epoch_id?: number | undefined;
    distribution_type?: number | undefined;
    epoch_id?: number | undefined;
    fixed_amount?: number | undefined;
    gift_amount?: number | undefined;
    id?: number | undefined;
    vault_id?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "distributions" */
  ['distributions_stddev_pop_order_by']: GraphQLTypes['distributions_stddev_pop_order_by'];
  /** aggregate stddev_samp on columns */
  ['distributions_stddev_samp_fields']: {
    created_by?: number | undefined;
    distribution_epoch_id?: number | undefined;
    distribution_type?: number | undefined;
    epoch_id?: number | undefined;
    fixed_amount?: number | undefined;
    gift_amount?: number | undefined;
    id?: number | undefined;
    vault_id?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "distributions" */
  ['distributions_stddev_samp_order_by']: GraphQLTypes['distributions_stddev_samp_order_by'];
  /** Streaming cursor of the table "distributions" */
  ['distributions_stream_cursor_input']: GraphQLTypes['distributions_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['distributions_stream_cursor_value_input']: GraphQLTypes['distributions_stream_cursor_value_input'];
  /** aggregate sum on columns */
  ['distributions_sum_fields']: {
    created_by?: GraphQLTypes['bigint'] | undefined;
    distribution_epoch_id?: GraphQLTypes['bigint'] | undefined;
    distribution_type?: number | undefined;
    epoch_id?: GraphQLTypes['bigint'] | undefined;
    fixed_amount?: GraphQLTypes['numeric'] | undefined;
    gift_amount?: GraphQLTypes['numeric'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    vault_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by sum() on columns of table "distributions" */
  ['distributions_sum_order_by']: GraphQLTypes['distributions_sum_order_by'];
  /** update columns of table "distributions" */
  ['distributions_update_column']: GraphQLTypes['distributions_update_column'];
  ['distributions_updates']: GraphQLTypes['distributions_updates'];
  /** aggregate var_pop on columns */
  ['distributions_var_pop_fields']: {
    created_by?: number | undefined;
    distribution_epoch_id?: number | undefined;
    distribution_type?: number | undefined;
    epoch_id?: number | undefined;
    fixed_amount?: number | undefined;
    gift_amount?: number | undefined;
    id?: number | undefined;
    vault_id?: number | undefined;
  };
  /** order by var_pop() on columns of table "distributions" */
  ['distributions_var_pop_order_by']: GraphQLTypes['distributions_var_pop_order_by'];
  /** aggregate var_samp on columns */
  ['distributions_var_samp_fields']: {
    created_by?: number | undefined;
    distribution_epoch_id?: number | undefined;
    distribution_type?: number | undefined;
    epoch_id?: number | undefined;
    fixed_amount?: number | undefined;
    gift_amount?: number | undefined;
    id?: number | undefined;
    vault_id?: number | undefined;
  };
  /** order by var_samp() on columns of table "distributions" */
  ['distributions_var_samp_order_by']: GraphQLTypes['distributions_var_samp_order_by'];
  /** aggregate variance on columns */
  ['distributions_variance_fields']: {
    created_by?: number | undefined;
    distribution_epoch_id?: number | undefined;
    distribution_type?: number | undefined;
    epoch_id?: number | undefined;
    fixed_amount?: number | undefined;
    gift_amount?: number | undefined;
    id?: number | undefined;
    vault_id?: number | undefined;
  };
  /** order by variance() on columns of table "distributions" */
  ['distributions_variance_order_by']: GraphQLTypes['distributions_variance_order_by'];
  /** columns and relationships of "emails" */
  ['emails']: {
    email: GraphQLTypes['citext'];
    primary: boolean;
    /** An object relationship */
    profile: GraphQLTypes['profiles'];
    verified_at?: GraphQLTypes['timestamp'] | undefined;
  };
  /** order by aggregate values of table "emails" */
  ['emails_aggregate_order_by']: GraphQLTypes['emails_aggregate_order_by'];
  /** Boolean expression to filter rows from the table "emails". All fields are combined with a logical 'AND'. */
  ['emails_bool_exp']: GraphQLTypes['emails_bool_exp'];
  /** order by max() on columns of table "emails" */
  ['emails_max_order_by']: GraphQLTypes['emails_max_order_by'];
  /** order by min() on columns of table "emails" */
  ['emails_min_order_by']: GraphQLTypes['emails_min_order_by'];
  /** Ordering options when selecting data from "emails". */
  ['emails_order_by']: GraphQLTypes['emails_order_by'];
  /** select columns of table "emails" */
  ['emails_select_column']: GraphQLTypes['emails_select_column'];
  /** Streaming cursor of the table "emails" */
  ['emails_stream_cursor_input']: GraphQLTypes['emails_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['emails_stream_cursor_value_input']: GraphQLTypes['emails_stream_cursor_value_input'];
  /** farcaster casts that we actually care about, with some materialized fields */
  ['enriched_casts']: {
    created_at: GraphQLTypes['timestamp'];
    deleted_at?: GraphQLTypes['timestamp'] | undefined;
    embeds: GraphQLTypes['jsonb'];
    fid: GraphQLTypes['bigint'];
    hash: GraphQLTypes['bytea'];
    id: GraphQLTypes['bigint'];
    mentions: Array<GraphQLTypes['bigint']>;
    mentions_positions: Array<GraphQLTypes['smallint']>;
    parent_fid?: GraphQLTypes['bigint'] | undefined;
    parent_hash?: GraphQLTypes['bytea'] | undefined;
    parent_url?: string | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    /** An object relationship */
    profile_public?: GraphQLTypes['profiles_public'] | undefined;
    /** An array relationship */
    reactions: Array<GraphQLTypes['farcaster_reactions']>;
    /** An aggregate relationship */
    reactions_aggregate: GraphQLTypes['farcaster_reactions_aggregate'];
    /** An array relationship */
    replies: Array<GraphQLTypes['farcaster_casts']>;
    /** An aggregate relationship */
    replies_aggregate: GraphQLTypes['farcaster_casts_aggregate'];
    root_parent_hash?: GraphQLTypes['bytea'] | undefined;
    root_parent_url?: string | undefined;
    text: string;
    timestamp: GraphQLTypes['timestamp'];
    updated_at: GraphQLTypes['timestamp'];
  };
  /** Boolean expression to filter rows from the table "enriched_casts". All fields are combined with a logical 'AND'. */
  ['enriched_casts_bool_exp']: GraphQLTypes['enriched_casts_bool_exp'];
  /** Ordering options when selecting data from "enriched_casts". */
  ['enriched_casts_order_by']: GraphQLTypes['enriched_casts_order_by'];
  /** select columns of table "enriched_casts" */
  ['enriched_casts_select_column']: GraphQLTypes['enriched_casts_select_column'];
  /** Streaming cursor of the table "enriched_casts" */
  ['enriched_casts_stream_cursor_input']: GraphQLTypes['enriched_casts_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['enriched_casts_stream_cursor_value_input']: GraphQLTypes['enriched_casts_stream_cursor_value_input'];
  /** columns and relationships of "epoch_pgive_data" */
  ['epoch_pgive_data']: {
    active_months: number;
    active_months_bonus: GraphQLTypes['numeric'];
    created_at: GraphQLTypes['timestamptz'];
    /** An object relationship */
    epoch: GraphQLTypes['epochs'];
    epoch_id: number;
    gives_receiver_base: GraphQLTypes['numeric'];
    id: number;
    notes_bonus: GraphQLTypes['numeric'];
    pgive: GraphQLTypes['numeric'];
  };
  /** Boolean expression to filter rows from the table "epoch_pgive_data". All fields are combined with a logical 'AND'. */
  ['epoch_pgive_data_bool_exp']: GraphQLTypes['epoch_pgive_data_bool_exp'];
  /** Ordering options when selecting data from "epoch_pgive_data". */
  ['epoch_pgive_data_order_by']: GraphQLTypes['epoch_pgive_data_order_by'];
  /** select columns of table "epoch_pgive_data" */
  ['epoch_pgive_data_select_column']: GraphQLTypes['epoch_pgive_data_select_column'];
  /** Streaming cursor of the table "epoch_pgive_data" */
  ['epoch_pgive_data_stream_cursor_input']: GraphQLTypes['epoch_pgive_data_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['epoch_pgive_data_stream_cursor_value_input']: GraphQLTypes['epoch_pgive_data_stream_cursor_value_input'];
  /** columns and relationships of "epoches" */
  ['epochs']: {
    /** An array relationship */
    activities: Array<GraphQLTypes['activities']>;
    /** An aggregate relationship */
    activities_aggregate: GraphQLTypes['activities_aggregate'];
    /** An array relationship */
    burns: Array<GraphQLTypes['burns']>;
    /** An object relationship */
    circle?: GraphQLTypes['circles'] | undefined;
    circle_id: number;
    created_at: GraphQLTypes['timestamp'];
    days?: number | undefined;
    description?: string | undefined;
    /** An array relationship */
    distributions: Array<GraphQLTypes['distributions']>;
    /** An aggregate relationship */
    distributions_aggregate: GraphQLTypes['distributions_aggregate'];
    end_date: GraphQLTypes['timestamptz'];
    ended: boolean;
    /** An array relationship */
    epoch_pending_token_gifts: Array<GraphQLTypes['pending_token_gifts']>;
    grant: GraphQLTypes['numeric'];
    /** An array relationship */
    histories: Array<GraphQLTypes['histories']>;
    id: GraphQLTypes['bigint'];
    /** An array relationship */
    member_epoch_pgives: Array<GraphQLTypes['member_epoch_pgives']>;
    /** An aggregate relationship */
    member_epoch_pgives_aggregate: GraphQLTypes['member_epoch_pgives_aggregate'];
    notified_before_end?: GraphQLTypes['timestamp'] | undefined;
    notified_end?: GraphQLTypes['timestamp'] | undefined;
    notified_start?: GraphQLTypes['timestamp'] | undefined;
    number?: number | undefined;
    /** An object relationship */
    pgive_data?: GraphQLTypes['epoch_pgive_data'] | undefined;
    repeat: number;
    repeat_data?: GraphQLTypes['jsonb'] | undefined;
    repeat_day_of_month: number;
    start_date: GraphQLTypes['timestamptz'];
    /** An array relationship */
    token_gifts: Array<GraphQLTypes['token_gifts']>;
    /** An aggregate relationship */
    token_gifts_aggregate: GraphQLTypes['token_gifts_aggregate'];
    updated_at: GraphQLTypes['timestamp'];
  };
  /** order by aggregate values of table "epoches" */
  ['epochs_aggregate_order_by']: GraphQLTypes['epochs_aggregate_order_by'];
  /** order by avg() on columns of table "epoches" */
  ['epochs_avg_order_by']: GraphQLTypes['epochs_avg_order_by'];
  /** Boolean expression to filter rows from the table "epoches". All fields are combined with a logical 'AND'. */
  ['epochs_bool_exp']: GraphQLTypes['epochs_bool_exp'];
  /** order by max() on columns of table "epoches" */
  ['epochs_max_order_by']: GraphQLTypes['epochs_max_order_by'];
  /** order by min() on columns of table "epoches" */
  ['epochs_min_order_by']: GraphQLTypes['epochs_min_order_by'];
  /** response of any mutation on the table "epoches" */
  ['epochs_mutation_response']: {
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['epochs']>;
  };
  /** Ordering options when selecting data from "epoches". */
  ['epochs_order_by']: GraphQLTypes['epochs_order_by'];
  /** primary key columns input for table: epoches */
  ['epochs_pk_columns_input']: GraphQLTypes['epochs_pk_columns_input'];
  /** select columns of table "epoches" */
  ['epochs_select_column']: GraphQLTypes['epochs_select_column'];
  /** input type for updating data in table "epoches" */
  ['epochs_set_input']: GraphQLTypes['epochs_set_input'];
  /** order by stddev() on columns of table "epoches" */
  ['epochs_stddev_order_by']: GraphQLTypes['epochs_stddev_order_by'];
  /** order by stddev_pop() on columns of table "epoches" */
  ['epochs_stddev_pop_order_by']: GraphQLTypes['epochs_stddev_pop_order_by'];
  /** order by stddev_samp() on columns of table "epoches" */
  ['epochs_stddev_samp_order_by']: GraphQLTypes['epochs_stddev_samp_order_by'];
  /** Streaming cursor of the table "epochs" */
  ['epochs_stream_cursor_input']: GraphQLTypes['epochs_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['epochs_stream_cursor_value_input']: GraphQLTypes['epochs_stream_cursor_value_input'];
  /** order by sum() on columns of table "epoches" */
  ['epochs_sum_order_by']: GraphQLTypes['epochs_sum_order_by'];
  ['epochs_updates']: GraphQLTypes['epochs_updates'];
  /** order by var_pop() on columns of table "epoches" */
  ['epochs_var_pop_order_by']: GraphQLTypes['epochs_var_pop_order_by'];
  /** order by var_samp() on columns of table "epoches" */
  ['epochs_var_samp_order_by']: GraphQLTypes['epochs_var_samp_order_by'];
  /** order by variance() on columns of table "epoches" */
  ['epochs_variance_order_by']: GraphQLTypes['epochs_variance_order_by'];
  /** columns and relationships of "farcaster_accounts" */
  ['farcaster_accounts']: {
    bio_text?: string | undefined;
    created_at: GraphQLTypes['timestamptz'];
    custody_address: string;
    fid: GraphQLTypes['bigint'];
    followers_count: number;
    following_count: number;
    name: string;
    pfp_url?: string | undefined;
    profile_id: GraphQLTypes['bigint'];
    /** An object relationship */
    profile_public: GraphQLTypes['profiles'];
    updated_at: GraphQLTypes['timestamptz'];
    username: string;
  };
  /** Boolean expression to filter rows from the table "farcaster_accounts". All fields are combined with a logical 'AND'. */
  ['farcaster_accounts_bool_exp']: GraphQLTypes['farcaster_accounts_bool_exp'];
  /** response of any mutation on the table "farcaster_accounts" */
  ['farcaster_accounts_mutation_response']: {
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['farcaster_accounts']>;
  };
  /** Ordering options when selecting data from "farcaster_accounts". */
  ['farcaster_accounts_order_by']: GraphQLTypes['farcaster_accounts_order_by'];
  /** select columns of table "farcaster_accounts" */
  ['farcaster_accounts_select_column']: GraphQLTypes['farcaster_accounts_select_column'];
  /** Streaming cursor of the table "farcaster_accounts" */
  ['farcaster_accounts_stream_cursor_input']: GraphQLTypes['farcaster_accounts_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['farcaster_accounts_stream_cursor_value_input']: GraphQLTypes['farcaster_accounts_stream_cursor_value_input'];
  /** columns and relationships of "farcaster.casts" */
  ['farcaster_casts']: {
    created_at: GraphQLTypes['timestamp'];
    deleted_at?: GraphQLTypes['timestamp'] | undefined;
    embeds: GraphQLTypes['jsonb'];
    /** An object relationship */
    farcaster_account?: GraphQLTypes['farcaster_accounts'] | undefined;
    fid: GraphQLTypes['bigint'];
    hash: GraphQLTypes['bytea'];
    id: GraphQLTypes['bigint'];
    mentions: Array<GraphQLTypes['bigint']>;
    mentions_positions: Array<GraphQLTypes['smallint']>;
    parent_fid?: GraphQLTypes['bigint'] | undefined;
    parent_hash?: GraphQLTypes['bytea'] | undefined;
    parent_url?: string | undefined;
    /** An array relationship */
    reactions: Array<GraphQLTypes['farcaster_reactions']>;
    /** An aggregate relationship */
    reactions_aggregate: GraphQLTypes['farcaster_reactions_aggregate'];
    /** An array relationship */
    replies: Array<GraphQLTypes['farcaster_casts']>;
    /** An aggregate relationship */
    replies_aggregate: GraphQLTypes['farcaster_casts_aggregate'];
    root_parent_hash?: GraphQLTypes['bytea'] | undefined;
    root_parent_url?: string | undefined;
    text: string;
    timestamp: GraphQLTypes['timestamp'];
    updated_at: GraphQLTypes['timestamp'];
  };
  /** aggregated selection of "farcaster.casts" */
  ['farcaster_casts_aggregate']: {
    aggregate?: GraphQLTypes['farcaster_casts_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['farcaster_casts']>;
  };
  ['farcaster_casts_aggregate_bool_exp']: GraphQLTypes['farcaster_casts_aggregate_bool_exp'];
  ['farcaster_casts_aggregate_bool_exp_count']: GraphQLTypes['farcaster_casts_aggregate_bool_exp_count'];
  /** aggregate fields of "farcaster.casts" */
  ['farcaster_casts_aggregate_fields']: {
    avg?: GraphQLTypes['farcaster_casts_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['farcaster_casts_max_fields'] | undefined;
    min?: GraphQLTypes['farcaster_casts_min_fields'] | undefined;
    stddev?: GraphQLTypes['farcaster_casts_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['farcaster_casts_stddev_pop_fields'] | undefined;
    stddev_samp?:
      | GraphQLTypes['farcaster_casts_stddev_samp_fields']
      | undefined;
    sum?: GraphQLTypes['farcaster_casts_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['farcaster_casts_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['farcaster_casts_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['farcaster_casts_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "farcaster.casts" */
  ['farcaster_casts_aggregate_order_by']: GraphQLTypes['farcaster_casts_aggregate_order_by'];
  /** aggregate avg on columns */
  ['farcaster_casts_avg_fields']: {
    fid?: number | undefined;
    id?: number | undefined;
    parent_fid?: number | undefined;
  };
  /** order by avg() on columns of table "farcaster.casts" */
  ['farcaster_casts_avg_order_by']: GraphQLTypes['farcaster_casts_avg_order_by'];
  /** Boolean expression to filter rows from the table "farcaster.casts". All fields are combined with a logical 'AND'. */
  ['farcaster_casts_bool_exp']: GraphQLTypes['farcaster_casts_bool_exp'];
  /** aggregate max on columns */
  ['farcaster_casts_max_fields']: {
    created_at?: GraphQLTypes['timestamp'] | undefined;
    deleted_at?: GraphQLTypes['timestamp'] | undefined;
    fid?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    mentions?: Array<GraphQLTypes['bigint']> | undefined;
    mentions_positions?: Array<GraphQLTypes['smallint']> | undefined;
    parent_fid?: GraphQLTypes['bigint'] | undefined;
    parent_url?: string | undefined;
    root_parent_url?: string | undefined;
    text?: string | undefined;
    timestamp?: GraphQLTypes['timestamp'] | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
  };
  /** order by max() on columns of table "farcaster.casts" */
  ['farcaster_casts_max_order_by']: GraphQLTypes['farcaster_casts_max_order_by'];
  /** aggregate min on columns */
  ['farcaster_casts_min_fields']: {
    created_at?: GraphQLTypes['timestamp'] | undefined;
    deleted_at?: GraphQLTypes['timestamp'] | undefined;
    fid?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    mentions?: Array<GraphQLTypes['bigint']> | undefined;
    mentions_positions?: Array<GraphQLTypes['smallint']> | undefined;
    parent_fid?: GraphQLTypes['bigint'] | undefined;
    parent_url?: string | undefined;
    root_parent_url?: string | undefined;
    text?: string | undefined;
    timestamp?: GraphQLTypes['timestamp'] | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
  };
  /** order by min() on columns of table "farcaster.casts" */
  ['farcaster_casts_min_order_by']: GraphQLTypes['farcaster_casts_min_order_by'];
  /** Ordering options when selecting data from "farcaster.casts". */
  ['farcaster_casts_order_by']: GraphQLTypes['farcaster_casts_order_by'];
  /** select columns of table "farcaster.casts" */
  ['farcaster_casts_select_column']: GraphQLTypes['farcaster_casts_select_column'];
  /** aggregate stddev on columns */
  ['farcaster_casts_stddev_fields']: {
    fid?: number | undefined;
    id?: number | undefined;
    parent_fid?: number | undefined;
  };
  /** order by stddev() on columns of table "farcaster.casts" */
  ['farcaster_casts_stddev_order_by']: GraphQLTypes['farcaster_casts_stddev_order_by'];
  /** aggregate stddev_pop on columns */
  ['farcaster_casts_stddev_pop_fields']: {
    fid?: number | undefined;
    id?: number | undefined;
    parent_fid?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "farcaster.casts" */
  ['farcaster_casts_stddev_pop_order_by']: GraphQLTypes['farcaster_casts_stddev_pop_order_by'];
  /** aggregate stddev_samp on columns */
  ['farcaster_casts_stddev_samp_fields']: {
    fid?: number | undefined;
    id?: number | undefined;
    parent_fid?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "farcaster.casts" */
  ['farcaster_casts_stddev_samp_order_by']: GraphQLTypes['farcaster_casts_stddev_samp_order_by'];
  /** Streaming cursor of the table "farcaster_casts" */
  ['farcaster_casts_stream_cursor_input']: GraphQLTypes['farcaster_casts_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['farcaster_casts_stream_cursor_value_input']: GraphQLTypes['farcaster_casts_stream_cursor_value_input'];
  /** aggregate sum on columns */
  ['farcaster_casts_sum_fields']: {
    fid?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    parent_fid?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by sum() on columns of table "farcaster.casts" */
  ['farcaster_casts_sum_order_by']: GraphQLTypes['farcaster_casts_sum_order_by'];
  /** aggregate var_pop on columns */
  ['farcaster_casts_var_pop_fields']: {
    fid?: number | undefined;
    id?: number | undefined;
    parent_fid?: number | undefined;
  };
  /** order by var_pop() on columns of table "farcaster.casts" */
  ['farcaster_casts_var_pop_order_by']: GraphQLTypes['farcaster_casts_var_pop_order_by'];
  /** aggregate var_samp on columns */
  ['farcaster_casts_var_samp_fields']: {
    fid?: number | undefined;
    id?: number | undefined;
    parent_fid?: number | undefined;
  };
  /** order by var_samp() on columns of table "farcaster.casts" */
  ['farcaster_casts_var_samp_order_by']: GraphQLTypes['farcaster_casts_var_samp_order_by'];
  /** aggregate variance on columns */
  ['farcaster_casts_variance_fields']: {
    fid?: number | undefined;
    id?: number | undefined;
    parent_fid?: number | undefined;
  };
  /** order by variance() on columns of table "farcaster.casts" */
  ['farcaster_casts_variance_order_by']: GraphQLTypes['farcaster_casts_variance_order_by'];
  /** columns and relationships of "farcaster.reactions" */
  ['farcaster_reactions']: {
    created_at: GraphQLTypes['timestamp'];
    deleted_at?: GraphQLTypes['timestamp'] | undefined;
    fid: GraphQLTypes['bigint'];
    hash: GraphQLTypes['bytea'];
    id: GraphQLTypes['bigint'];
    reaction_type: GraphQLTypes['smallint'];
    target_fid?: GraphQLTypes['bigint'] | undefined;
    target_hash?: GraphQLTypes['bytea'] | undefined;
    target_url?: string | undefined;
    timestamp: GraphQLTypes['timestamp'];
    updated_at: GraphQLTypes['timestamp'];
  };
  /** aggregated selection of "farcaster.reactions" */
  ['farcaster_reactions_aggregate']: {
    aggregate?:
      | GraphQLTypes['farcaster_reactions_aggregate_fields']
      | undefined;
    nodes: Array<GraphQLTypes['farcaster_reactions']>;
  };
  ['farcaster_reactions_aggregate_bool_exp']: GraphQLTypes['farcaster_reactions_aggregate_bool_exp'];
  ['farcaster_reactions_aggregate_bool_exp_count']: GraphQLTypes['farcaster_reactions_aggregate_bool_exp_count'];
  /** aggregate fields of "farcaster.reactions" */
  ['farcaster_reactions_aggregate_fields']: {
    avg?: GraphQLTypes['farcaster_reactions_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['farcaster_reactions_max_fields'] | undefined;
    min?: GraphQLTypes['farcaster_reactions_min_fields'] | undefined;
    stddev?: GraphQLTypes['farcaster_reactions_stddev_fields'] | undefined;
    stddev_pop?:
      | GraphQLTypes['farcaster_reactions_stddev_pop_fields']
      | undefined;
    stddev_samp?:
      | GraphQLTypes['farcaster_reactions_stddev_samp_fields']
      | undefined;
    sum?: GraphQLTypes['farcaster_reactions_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['farcaster_reactions_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['farcaster_reactions_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['farcaster_reactions_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "farcaster.reactions" */
  ['farcaster_reactions_aggregate_order_by']: GraphQLTypes['farcaster_reactions_aggregate_order_by'];
  /** aggregate avg on columns */
  ['farcaster_reactions_avg_fields']: {
    fid?: number | undefined;
    id?: number | undefined;
    reaction_type?: number | undefined;
    target_fid?: number | undefined;
  };
  /** order by avg() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_avg_order_by']: GraphQLTypes['farcaster_reactions_avg_order_by'];
  /** Boolean expression to filter rows from the table "farcaster.reactions". All fields are combined with a logical 'AND'. */
  ['farcaster_reactions_bool_exp']: GraphQLTypes['farcaster_reactions_bool_exp'];
  /** aggregate max on columns */
  ['farcaster_reactions_max_fields']: {
    created_at?: GraphQLTypes['timestamp'] | undefined;
    deleted_at?: GraphQLTypes['timestamp'] | undefined;
    fid?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    reaction_type?: GraphQLTypes['smallint'] | undefined;
    target_fid?: GraphQLTypes['bigint'] | undefined;
    target_url?: string | undefined;
    timestamp?: GraphQLTypes['timestamp'] | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
  };
  /** order by max() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_max_order_by']: GraphQLTypes['farcaster_reactions_max_order_by'];
  /** aggregate min on columns */
  ['farcaster_reactions_min_fields']: {
    created_at?: GraphQLTypes['timestamp'] | undefined;
    deleted_at?: GraphQLTypes['timestamp'] | undefined;
    fid?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    reaction_type?: GraphQLTypes['smallint'] | undefined;
    target_fid?: GraphQLTypes['bigint'] | undefined;
    target_url?: string | undefined;
    timestamp?: GraphQLTypes['timestamp'] | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
  };
  /** order by min() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_min_order_by']: GraphQLTypes['farcaster_reactions_min_order_by'];
  /** Ordering options when selecting data from "farcaster.reactions". */
  ['farcaster_reactions_order_by']: GraphQLTypes['farcaster_reactions_order_by'];
  /** select columns of table "farcaster.reactions" */
  ['farcaster_reactions_select_column']: GraphQLTypes['farcaster_reactions_select_column'];
  /** aggregate stddev on columns */
  ['farcaster_reactions_stddev_fields']: {
    fid?: number | undefined;
    id?: number | undefined;
    reaction_type?: number | undefined;
    target_fid?: number | undefined;
  };
  /** order by stddev() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_stddev_order_by']: GraphQLTypes['farcaster_reactions_stddev_order_by'];
  /** aggregate stddev_pop on columns */
  ['farcaster_reactions_stddev_pop_fields']: {
    fid?: number | undefined;
    id?: number | undefined;
    reaction_type?: number | undefined;
    target_fid?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_stddev_pop_order_by']: GraphQLTypes['farcaster_reactions_stddev_pop_order_by'];
  /** aggregate stddev_samp on columns */
  ['farcaster_reactions_stddev_samp_fields']: {
    fid?: number | undefined;
    id?: number | undefined;
    reaction_type?: number | undefined;
    target_fid?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_stddev_samp_order_by']: GraphQLTypes['farcaster_reactions_stddev_samp_order_by'];
  /** Streaming cursor of the table "farcaster_reactions" */
  ['farcaster_reactions_stream_cursor_input']: GraphQLTypes['farcaster_reactions_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['farcaster_reactions_stream_cursor_value_input']: GraphQLTypes['farcaster_reactions_stream_cursor_value_input'];
  /** aggregate sum on columns */
  ['farcaster_reactions_sum_fields']: {
    fid?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    reaction_type?: GraphQLTypes['smallint'] | undefined;
    target_fid?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by sum() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_sum_order_by']: GraphQLTypes['farcaster_reactions_sum_order_by'];
  /** aggregate var_pop on columns */
  ['farcaster_reactions_var_pop_fields']: {
    fid?: number | undefined;
    id?: number | undefined;
    reaction_type?: number | undefined;
    target_fid?: number | undefined;
  };
  /** order by var_pop() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_var_pop_order_by']: GraphQLTypes['farcaster_reactions_var_pop_order_by'];
  /** aggregate var_samp on columns */
  ['farcaster_reactions_var_samp_fields']: {
    fid?: number | undefined;
    id?: number | undefined;
    reaction_type?: number | undefined;
    target_fid?: number | undefined;
  };
  /** order by var_samp() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_var_samp_order_by']: GraphQLTypes['farcaster_reactions_var_samp_order_by'];
  /** aggregate variance on columns */
  ['farcaster_reactions_variance_fields']: {
    fid?: number | undefined;
    id?: number | undefined;
    reaction_type?: number | undefined;
    target_fid?: number | undefined;
  };
  /** order by variance() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_variance_order_by']: GraphQLTypes['farcaster_reactions_variance_order_by'];
  ['float8']: any;
  /** Boolean expression to compare columns of type "float8". All fields are combined with logical 'AND'. */
  ['float8_comparison_exp']: GraphQLTypes['float8_comparison_exp'];
  /** columns and relationships of "gift_private" */
  ['gift_private']: {
    gift_id?: GraphQLTypes['bigint'] | undefined;
    note?: string | undefined;
    /** An object relationship */
    recipient?: GraphQLTypes['users'] | undefined;
    recipient_id?: GraphQLTypes['bigint'] | undefined;
    /** An object relationship */
    sender?: GraphQLTypes['users'] | undefined;
    sender_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** Boolean expression to filter rows from the table "gift_private". All fields are combined with a logical 'AND'. */
  ['gift_private_bool_exp']: GraphQLTypes['gift_private_bool_exp'];
  /** Ordering options when selecting data from "gift_private". */
  ['gift_private_order_by']: GraphQLTypes['gift_private_order_by'];
  /** select columns of table "gift_private" */
  ['gift_private_select_column']: GraphQLTypes['gift_private_select_column'];
  /** Streaming cursor of the table "gift_private" */
  ['gift_private_stream_cursor_input']: GraphQLTypes['gift_private_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['gift_private_stream_cursor_value_input']: GraphQLTypes['gift_private_stream_cursor_value_input'];
  /** columns and relationships of "github_accounts" */
  ['github_accounts']: {
    avatar_url: string;
    github_id: GraphQLTypes['bigint'];
    /** An object relationship */
    profile: GraphQLTypes['profiles'];
    profile_id: GraphQLTypes['bigint'];
    username: string;
  };
  /** Boolean expression to filter rows from the table "github_accounts". All fields are combined with a logical 'AND'. */
  ['github_accounts_bool_exp']: GraphQLTypes['github_accounts_bool_exp'];
  /** response of any mutation on the table "github_accounts" */
  ['github_accounts_mutation_response']: {
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['github_accounts']>;
  };
  /** Ordering options when selecting data from "github_accounts". */
  ['github_accounts_order_by']: GraphQLTypes['github_accounts_order_by'];
  /** select columns of table "github_accounts" */
  ['github_accounts_select_column']: GraphQLTypes['github_accounts_select_column'];
  /** Streaming cursor of the table "github_accounts" */
  ['github_accounts_stream_cursor_input']: GraphQLTypes['github_accounts_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['github_accounts_stream_cursor_value_input']: GraphQLTypes['github_accounts_stream_cursor_value_input'];
  /** columns and relationships of "histories" */
  ['histories']: {
    bio?: string | undefined;
    /** An object relationship */
    circle?: GraphQLTypes['circles'] | undefined;
    /** An object relationship */
    epoch?: GraphQLTypes['epochs'] | undefined;
    id: GraphQLTypes['bigint'];
    /** An object relationship */
    user?: GraphQLTypes['users'] | undefined;
  };
  /** order by aggregate values of table "histories" */
  ['histories_aggregate_order_by']: GraphQLTypes['histories_aggregate_order_by'];
  /** order by avg() on columns of table "histories" */
  ['histories_avg_order_by']: GraphQLTypes['histories_avg_order_by'];
  /** Boolean expression to filter rows from the table "histories". All fields are combined with a logical 'AND'. */
  ['histories_bool_exp']: GraphQLTypes['histories_bool_exp'];
  /** order by max() on columns of table "histories" */
  ['histories_max_order_by']: GraphQLTypes['histories_max_order_by'];
  /** order by min() on columns of table "histories" */
  ['histories_min_order_by']: GraphQLTypes['histories_min_order_by'];
  /** Ordering options when selecting data from "histories". */
  ['histories_order_by']: GraphQLTypes['histories_order_by'];
  /** select columns of table "histories" */
  ['histories_select_column']: GraphQLTypes['histories_select_column'];
  /** order by stddev() on columns of table "histories" */
  ['histories_stddev_order_by']: GraphQLTypes['histories_stddev_order_by'];
  /** order by stddev_pop() on columns of table "histories" */
  ['histories_stddev_pop_order_by']: GraphQLTypes['histories_stddev_pop_order_by'];
  /** order by stddev_samp() on columns of table "histories" */
  ['histories_stddev_samp_order_by']: GraphQLTypes['histories_stddev_samp_order_by'];
  /** Streaming cursor of the table "histories" */
  ['histories_stream_cursor_input']: GraphQLTypes['histories_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['histories_stream_cursor_value_input']: GraphQLTypes['histories_stream_cursor_value_input'];
  /** order by sum() on columns of table "histories" */
  ['histories_sum_order_by']: GraphQLTypes['histories_sum_order_by'];
  /** order by var_pop() on columns of table "histories" */
  ['histories_var_pop_order_by']: GraphQLTypes['histories_var_pop_order_by'];
  /** order by var_samp() on columns of table "histories" */
  ['histories_var_samp_order_by']: GraphQLTypes['histories_var_samp_order_by'];
  /** order by variance() on columns of table "histories" */
  ['histories_variance_order_by']: GraphQLTypes['histories_variance_order_by'];
  /** Invite codes table for restricting access to app */
  ['invite_codes']: {
    code: GraphQLTypes['citext'];
    created_at: GraphQLTypes['timestamptz'];
    /** An object relationship */
    invited?: GraphQLTypes['profiles_public'] | undefined;
    invited_id?: GraphQLTypes['bigint'] | undefined;
    /** An object relationship */
    inviter?: GraphQLTypes['profiles_public'] | undefined;
    inviter_id: GraphQLTypes['bigint'];
    updated_at: GraphQLTypes['timestamptz'];
  };
  /** aggregated selection of "invite_codes" */
  ['invite_codes_aggregate']: {
    aggregate?: GraphQLTypes['invite_codes_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['invite_codes']>;
  };
  ['invite_codes_aggregate_bool_exp']: GraphQLTypes['invite_codes_aggregate_bool_exp'];
  ['invite_codes_aggregate_bool_exp_count']: GraphQLTypes['invite_codes_aggregate_bool_exp_count'];
  /** aggregate fields of "invite_codes" */
  ['invite_codes_aggregate_fields']: {
    avg?: GraphQLTypes['invite_codes_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['invite_codes_max_fields'] | undefined;
    min?: GraphQLTypes['invite_codes_min_fields'] | undefined;
    stddev?: GraphQLTypes['invite_codes_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['invite_codes_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['invite_codes_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['invite_codes_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['invite_codes_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['invite_codes_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['invite_codes_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "invite_codes" */
  ['invite_codes_aggregate_order_by']: GraphQLTypes['invite_codes_aggregate_order_by'];
  /** aggregate avg on columns */
  ['invite_codes_avg_fields']: {
    invited_id?: number | undefined;
    inviter_id?: number | undefined;
  };
  /** order by avg() on columns of table "invite_codes" */
  ['invite_codes_avg_order_by']: GraphQLTypes['invite_codes_avg_order_by'];
  /** Boolean expression to filter rows from the table "invite_codes". All fields are combined with a logical 'AND'. */
  ['invite_codes_bool_exp']: GraphQLTypes['invite_codes_bool_exp'];
  /** aggregate max on columns */
  ['invite_codes_max_fields']: {
    code?: GraphQLTypes['citext'] | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    invited_id?: GraphQLTypes['bigint'] | undefined;
    inviter_id?: GraphQLTypes['bigint'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by max() on columns of table "invite_codes" */
  ['invite_codes_max_order_by']: GraphQLTypes['invite_codes_max_order_by'];
  /** aggregate min on columns */
  ['invite_codes_min_fields']: {
    code?: GraphQLTypes['citext'] | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    invited_id?: GraphQLTypes['bigint'] | undefined;
    inviter_id?: GraphQLTypes['bigint'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by min() on columns of table "invite_codes" */
  ['invite_codes_min_order_by']: GraphQLTypes['invite_codes_min_order_by'];
  /** Ordering options when selecting data from "invite_codes". */
  ['invite_codes_order_by']: GraphQLTypes['invite_codes_order_by'];
  /** select columns of table "invite_codes" */
  ['invite_codes_select_column']: GraphQLTypes['invite_codes_select_column'];
  /** aggregate stddev on columns */
  ['invite_codes_stddev_fields']: {
    invited_id?: number | undefined;
    inviter_id?: number | undefined;
  };
  /** order by stddev() on columns of table "invite_codes" */
  ['invite_codes_stddev_order_by']: GraphQLTypes['invite_codes_stddev_order_by'];
  /** aggregate stddev_pop on columns */
  ['invite_codes_stddev_pop_fields']: {
    invited_id?: number | undefined;
    inviter_id?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "invite_codes" */
  ['invite_codes_stddev_pop_order_by']: GraphQLTypes['invite_codes_stddev_pop_order_by'];
  /** aggregate stddev_samp on columns */
  ['invite_codes_stddev_samp_fields']: {
    invited_id?: number | undefined;
    inviter_id?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "invite_codes" */
  ['invite_codes_stddev_samp_order_by']: GraphQLTypes['invite_codes_stddev_samp_order_by'];
  /** Streaming cursor of the table "invite_codes" */
  ['invite_codes_stream_cursor_input']: GraphQLTypes['invite_codes_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['invite_codes_stream_cursor_value_input']: GraphQLTypes['invite_codes_stream_cursor_value_input'];
  /** aggregate sum on columns */
  ['invite_codes_sum_fields']: {
    invited_id?: GraphQLTypes['bigint'] | undefined;
    inviter_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by sum() on columns of table "invite_codes" */
  ['invite_codes_sum_order_by']: GraphQLTypes['invite_codes_sum_order_by'];
  /** aggregate var_pop on columns */
  ['invite_codes_var_pop_fields']: {
    invited_id?: number | undefined;
    inviter_id?: number | undefined;
  };
  /** order by var_pop() on columns of table "invite_codes" */
  ['invite_codes_var_pop_order_by']: GraphQLTypes['invite_codes_var_pop_order_by'];
  /** aggregate var_samp on columns */
  ['invite_codes_var_samp_fields']: {
    invited_id?: number | undefined;
    inviter_id?: number | undefined;
  };
  /** order by var_samp() on columns of table "invite_codes" */
  ['invite_codes_var_samp_order_by']: GraphQLTypes['invite_codes_var_samp_order_by'];
  /** aggregate variance on columns */
  ['invite_codes_variance_fields']: {
    invited_id?: number | undefined;
    inviter_id?: number | undefined;
  };
  /** order by variance() on columns of table "invite_codes" */
  ['invite_codes_variance_order_by']: GraphQLTypes['invite_codes_variance_order_by'];
  ['json']: any;
  /** Boolean expression to compare columns of type "json". All fields are combined with logical 'AND'. */
  ['json_comparison_exp']: GraphQLTypes['json_comparison_exp'];
  ['jsonb']: any;
  ['jsonb_cast_exp']: GraphQLTypes['jsonb_cast_exp'];
  /** Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'. */
  ['jsonb_comparison_exp']: GraphQLTypes['jsonb_comparison_exp'];
  /** tracks the amount of keys an address holds in a given subject. updated with data from the key_tx table */
  ['link_holders']: {
    amount: number;
    holder: GraphQLTypes['citext'];
    /** An object relationship */
    holder_cosoul?: GraphQLTypes['cosouls'] | undefined;
    /** An object relationship */
    holder_profile_public?: GraphQLTypes['profiles_public'] | undefined;
    target: GraphQLTypes['citext'];
    /** An object relationship */
    target_cosoul?: GraphQLTypes['cosouls'] | undefined;
    /** An object relationship */
    target_profile_public?: GraphQLTypes['profiles_public'] | undefined;
    updated_at: GraphQLTypes['timestamptz'];
  };
  /** aggregated selection of "link_holders" */
  ['link_holders_aggregate']: {
    aggregate?: GraphQLTypes['link_holders_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['link_holders']>;
  };
  ['link_holders_aggregate_bool_exp']: GraphQLTypes['link_holders_aggregate_bool_exp'];
  ['link_holders_aggregate_bool_exp_count']: GraphQLTypes['link_holders_aggregate_bool_exp_count'];
  /** aggregate fields of "link_holders" */
  ['link_holders_aggregate_fields']: {
    avg?: GraphQLTypes['link_holders_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['link_holders_max_fields'] | undefined;
    min?: GraphQLTypes['link_holders_min_fields'] | undefined;
    stddev?: GraphQLTypes['link_holders_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['link_holders_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['link_holders_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['link_holders_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['link_holders_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['link_holders_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['link_holders_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "link_holders" */
  ['link_holders_aggregate_order_by']: GraphQLTypes['link_holders_aggregate_order_by'];
  /** aggregate avg on columns */
  ['link_holders_avg_fields']: {
    amount?: number | undefined;
  };
  /** order by avg() on columns of table "link_holders" */
  ['link_holders_avg_order_by']: GraphQLTypes['link_holders_avg_order_by'];
  /** Boolean expression to filter rows from the table "link_holders". All fields are combined with a logical 'AND'. */
  ['link_holders_bool_exp']: GraphQLTypes['link_holders_bool_exp'];
  /** aggregate max on columns */
  ['link_holders_max_fields']: {
    amount?: number | undefined;
    holder?: GraphQLTypes['citext'] | undefined;
    target?: GraphQLTypes['citext'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by max() on columns of table "link_holders" */
  ['link_holders_max_order_by']: GraphQLTypes['link_holders_max_order_by'];
  /** aggregate min on columns */
  ['link_holders_min_fields']: {
    amount?: number | undefined;
    holder?: GraphQLTypes['citext'] | undefined;
    target?: GraphQLTypes['citext'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by min() on columns of table "link_holders" */
  ['link_holders_min_order_by']: GraphQLTypes['link_holders_min_order_by'];
  /** Ordering options when selecting data from "link_holders". */
  ['link_holders_order_by']: GraphQLTypes['link_holders_order_by'];
  /** select columns of table "link_holders" */
  ['link_holders_select_column']: GraphQLTypes['link_holders_select_column'];
  /** aggregate stddev on columns */
  ['link_holders_stddev_fields']: {
    amount?: number | undefined;
  };
  /** order by stddev() on columns of table "link_holders" */
  ['link_holders_stddev_order_by']: GraphQLTypes['link_holders_stddev_order_by'];
  /** aggregate stddev_pop on columns */
  ['link_holders_stddev_pop_fields']: {
    amount?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "link_holders" */
  ['link_holders_stddev_pop_order_by']: GraphQLTypes['link_holders_stddev_pop_order_by'];
  /** aggregate stddev_samp on columns */
  ['link_holders_stddev_samp_fields']: {
    amount?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "link_holders" */
  ['link_holders_stddev_samp_order_by']: GraphQLTypes['link_holders_stddev_samp_order_by'];
  /** Streaming cursor of the table "link_holders" */
  ['link_holders_stream_cursor_input']: GraphQLTypes['link_holders_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['link_holders_stream_cursor_value_input']: GraphQLTypes['link_holders_stream_cursor_value_input'];
  /** aggregate sum on columns */
  ['link_holders_sum_fields']: {
    amount?: number | undefined;
  };
  /** order by sum() on columns of table "link_holders" */
  ['link_holders_sum_order_by']: GraphQLTypes['link_holders_sum_order_by'];
  /** aggregate var_pop on columns */
  ['link_holders_var_pop_fields']: {
    amount?: number | undefined;
  };
  /** order by var_pop() on columns of table "link_holders" */
  ['link_holders_var_pop_order_by']: GraphQLTypes['link_holders_var_pop_order_by'];
  /** aggregate var_samp on columns */
  ['link_holders_var_samp_fields']: {
    amount?: number | undefined;
  };
  /** order by var_samp() on columns of table "link_holders" */
  ['link_holders_var_samp_order_by']: GraphQLTypes['link_holders_var_samp_order_by'];
  /** aggregate variance on columns */
  ['link_holders_variance_fields']: {
    amount?: number | undefined;
  };
  /** order by variance() on columns of table "link_holders" */
  ['link_holders_variance_order_by']: GraphQLTypes['link_holders_variance_order_by'];
  /** columns and relationships of "link_tx" */
  ['link_tx']: {
    buy: boolean;
    created_at: GraphQLTypes['timestamptz'];
    eth_amount: string;
    holder: GraphQLTypes['citext'];
    /** An object relationship */
    holder_profile?: GraphQLTypes['profiles_public'] | undefined;
    link_amount: string;
    protocol_fee_amount: string;
    supply: GraphQLTypes['numeric'];
    target: GraphQLTypes['citext'];
    target_fee_amount: string;
    /** An object relationship */
    target_profile?: GraphQLTypes['profiles_public'] | undefined;
    tx_hash: GraphQLTypes['citext'];
  };
  /** Boolean expression to filter rows from the table "link_tx". All fields are combined with a logical 'AND'. */
  ['link_tx_bool_exp']: GraphQLTypes['link_tx_bool_exp'];
  /** Ordering options when selecting data from "link_tx". */
  ['link_tx_order_by']: GraphQLTypes['link_tx_order_by'];
  /** select columns of table "link_tx" */
  ['link_tx_select_column']: GraphQLTypes['link_tx_select_column'];
  /** Streaming cursor of the table "link_tx" */
  ['link_tx_stream_cursor_input']: GraphQLTypes['link_tx_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['link_tx_stream_cursor_value_input']: GraphQLTypes['link_tx_stream_cursor_value_input'];
  /** columns and relationships of "linkedin_accounts" */
  ['linkedin_accounts']: {
    name: string;
    picture?: string | undefined;
    profile_id: GraphQLTypes['bigint'];
  };
  /** Boolean expression to filter rows from the table "linkedin_accounts". All fields are combined with a logical 'AND'. */
  ['linkedin_accounts_bool_exp']: GraphQLTypes['linkedin_accounts_bool_exp'];
  /** response of any mutation on the table "linkedin_accounts" */
  ['linkedin_accounts_mutation_response']: {
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['linkedin_accounts']>;
  };
  /** Ordering options when selecting data from "linkedin_accounts". */
  ['linkedin_accounts_order_by']: GraphQLTypes['linkedin_accounts_order_by'];
  /** select columns of table "linkedin_accounts" */
  ['linkedin_accounts_select_column']: GraphQLTypes['linkedin_accounts_select_column'];
  /** Streaming cursor of the table "linkedin_accounts" */
  ['linkedin_accounts_stream_cursor_input']: GraphQLTypes['linkedin_accounts_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['linkedin_accounts_stream_cursor_value_input']: GraphQLTypes['linkedin_accounts_stream_cursor_value_input'];
  /** columns and relationships of "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts']: {
    earnings: GraphQLTypes['numeric'];
    id: GraphQLTypes['bigint'];
    /** An object relationship */
    locked_token_distribution: GraphQLTypes['locked_token_distributions'];
    locked_token_distribution_id: GraphQLTypes['bigint'];
    /** An object relationship */
    profile: GraphQLTypes['profiles'];
    profile_id: GraphQLTypes['bigint'];
  };
  /** order by aggregate values of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_aggregate_order_by']: GraphQLTypes['locked_token_distribution_gifts_aggregate_order_by'];
  /** input type for inserting array relation for remote table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_arr_rel_insert_input']: GraphQLTypes['locked_token_distribution_gifts_arr_rel_insert_input'];
  /** order by avg() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_avg_order_by']: GraphQLTypes['locked_token_distribution_gifts_avg_order_by'];
  /** Boolean expression to filter rows from the table "locked_token_distribution_gifts". All fields are combined with a logical 'AND'. */
  ['locked_token_distribution_gifts_bool_exp']: GraphQLTypes['locked_token_distribution_gifts_bool_exp'];
  /** unique or primary key constraints on table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_constraint']: GraphQLTypes['locked_token_distribution_gifts_constraint'];
  /** input type for inserting data into table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_insert_input']: GraphQLTypes['locked_token_distribution_gifts_insert_input'];
  /** order by max() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_max_order_by']: GraphQLTypes['locked_token_distribution_gifts_max_order_by'];
  /** order by min() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_min_order_by']: GraphQLTypes['locked_token_distribution_gifts_min_order_by'];
  /** response of any mutation on the table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_mutation_response']: {
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['locked_token_distribution_gifts']>;
  };
  /** on_conflict condition type for table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_on_conflict']: GraphQLTypes['locked_token_distribution_gifts_on_conflict'];
  /** Ordering options when selecting data from "locked_token_distribution_gifts". */
  ['locked_token_distribution_gifts_order_by']: GraphQLTypes['locked_token_distribution_gifts_order_by'];
  /** select columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_select_column']: GraphQLTypes['locked_token_distribution_gifts_select_column'];
  /** order by stddev() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_stddev_order_by']: GraphQLTypes['locked_token_distribution_gifts_stddev_order_by'];
  /** order by stddev_pop() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_stddev_pop_order_by']: GraphQLTypes['locked_token_distribution_gifts_stddev_pop_order_by'];
  /** order by stddev_samp() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_stddev_samp_order_by']: GraphQLTypes['locked_token_distribution_gifts_stddev_samp_order_by'];
  /** Streaming cursor of the table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_stream_cursor_input']: GraphQLTypes['locked_token_distribution_gifts_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['locked_token_distribution_gifts_stream_cursor_value_input']: GraphQLTypes['locked_token_distribution_gifts_stream_cursor_value_input'];
  /** order by sum() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_sum_order_by']: GraphQLTypes['locked_token_distribution_gifts_sum_order_by'];
  /** placeholder for update columns of table "locked_token_distribution_gifts" (current role has no relevant permissions) */
  ['locked_token_distribution_gifts_update_column']: GraphQLTypes['locked_token_distribution_gifts_update_column'];
  /** order by var_pop() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_var_pop_order_by']: GraphQLTypes['locked_token_distribution_gifts_var_pop_order_by'];
  /** order by var_samp() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_var_samp_order_by']: GraphQLTypes['locked_token_distribution_gifts_var_samp_order_by'];
  /** order by variance() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_variance_order_by']: GraphQLTypes['locked_token_distribution_gifts_variance_order_by'];
  /** columns and relationships of "locked_token_distributions" */
  ['locked_token_distributions']: {
    chain_id: number;
    distributed_by: GraphQLTypes['bigint'];
    /** An object relationship */
    epoch: GraphQLTypes['epochs'];
    epoch_id: GraphQLTypes['bigint'];
    gift_amount: GraphQLTypes['numeric'];
    id: GraphQLTypes['bigint'];
    /** An array relationship */
    locked_token_distribution_gifts: Array<
      GraphQLTypes['locked_token_distribution_gifts']
    >;
    /** An object relationship */
    profile: GraphQLTypes['profiles'];
    token_contract_address?: string | undefined;
    token_decimals: number;
    token_symbol?: string | undefined;
    tx_hash?: string | undefined;
  };
  /** Boolean expression to filter rows from the table "locked_token_distributions". All fields are combined with a logical 'AND'. */
  ['locked_token_distributions_bool_exp']: GraphQLTypes['locked_token_distributions_bool_exp'];
  /** unique or primary key constraints on table "locked_token_distributions" */
  ['locked_token_distributions_constraint']: GraphQLTypes['locked_token_distributions_constraint'];
  /** input type for inserting data into table "locked_token_distributions" */
  ['locked_token_distributions_insert_input']: GraphQLTypes['locked_token_distributions_insert_input'];
  /** response of any mutation on the table "locked_token_distributions" */
  ['locked_token_distributions_mutation_response']: {
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['locked_token_distributions']>;
  };
  /** input type for inserting object relation for remote table "locked_token_distributions" */
  ['locked_token_distributions_obj_rel_insert_input']: GraphQLTypes['locked_token_distributions_obj_rel_insert_input'];
  /** on_conflict condition type for table "locked_token_distributions" */
  ['locked_token_distributions_on_conflict']: GraphQLTypes['locked_token_distributions_on_conflict'];
  /** Ordering options when selecting data from "locked_token_distributions". */
  ['locked_token_distributions_order_by']: GraphQLTypes['locked_token_distributions_order_by'];
  /** primary key columns input for table: locked_token_distributions */
  ['locked_token_distributions_pk_columns_input']: GraphQLTypes['locked_token_distributions_pk_columns_input'];
  /** select columns of table "locked_token_distributions" */
  ['locked_token_distributions_select_column']: GraphQLTypes['locked_token_distributions_select_column'];
  /** input type for updating data in table "locked_token_distributions" */
  ['locked_token_distributions_set_input']: GraphQLTypes['locked_token_distributions_set_input'];
  /** Streaming cursor of the table "locked_token_distributions" */
  ['locked_token_distributions_stream_cursor_input']: GraphQLTypes['locked_token_distributions_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['locked_token_distributions_stream_cursor_value_input']: GraphQLTypes['locked_token_distributions_stream_cursor_value_input'];
  /** update columns of table "locked_token_distributions" */
  ['locked_token_distributions_update_column']: GraphQLTypes['locked_token_distributions_update_column'];
  ['locked_token_distributions_updates']: GraphQLTypes['locked_token_distributions_updates'];
  /** columns and relationships of "member_circle_pgives" */
  ['member_circle_pgives']: {
    /** An object relationship */
    circle?: GraphQLTypes['circles'] | undefined;
    circle_id?: number | undefined;
    epochs?: GraphQLTypes['bigint'] | undefined;
    pgive?: GraphQLTypes['numeric'] | undefined;
    /** An object relationship */
    user?: GraphQLTypes['users'] | undefined;
    user_id?: number | undefined;
  };
  /** Boolean expression to filter rows from the table "member_circle_pgives". All fields are combined with a logical 'AND'. */
  ['member_circle_pgives_bool_exp']: GraphQLTypes['member_circle_pgives_bool_exp'];
  /** Ordering options when selecting data from "member_circle_pgives". */
  ['member_circle_pgives_order_by']: GraphQLTypes['member_circle_pgives_order_by'];
  /** select columns of table "member_circle_pgives" */
  ['member_circle_pgives_select_column']: GraphQLTypes['member_circle_pgives_select_column'];
  /** Streaming cursor of the table "member_circle_pgives" */
  ['member_circle_pgives_stream_cursor_input']: GraphQLTypes['member_circle_pgives_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['member_circle_pgives_stream_cursor_value_input']: GraphQLTypes['member_circle_pgives_stream_cursor_value_input'];
  /** member allocated pgives per epoch */
  ['member_epoch_pgives']: {
    /** An object relationship */
    circle?: GraphQLTypes['circles'] | undefined;
    circle_id?: number | undefined;
    created_at: GraphQLTypes['timestamptz'];
    /** An object relationship */
    epoch: GraphQLTypes['epochs'];
    epoch_id: number;
    gives_received: number;
    id: number;
    normalized_pgive: GraphQLTypes['numeric'];
    opt_out_bonus: GraphQLTypes['numeric'];
    /** An object relationship */
    organization?: GraphQLTypes['organizations'] | undefined;
    organization_id?: number | undefined;
    pgive: GraphQLTypes['numeric'];
    /** An object relationship */
    user: GraphQLTypes['users'];
    user_id: number;
  };
  /** aggregated selection of "member_epoch_pgives" */
  ['member_epoch_pgives_aggregate']: {
    aggregate?:
      | GraphQLTypes['member_epoch_pgives_aggregate_fields']
      | undefined;
    nodes: Array<GraphQLTypes['member_epoch_pgives']>;
  };
  ['member_epoch_pgives_aggregate_bool_exp']: GraphQLTypes['member_epoch_pgives_aggregate_bool_exp'];
  ['member_epoch_pgives_aggregate_bool_exp_count']: GraphQLTypes['member_epoch_pgives_aggregate_bool_exp_count'];
  /** aggregate fields of "member_epoch_pgives" */
  ['member_epoch_pgives_aggregate_fields']: {
    avg?: GraphQLTypes['member_epoch_pgives_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['member_epoch_pgives_max_fields'] | undefined;
    min?: GraphQLTypes['member_epoch_pgives_min_fields'] | undefined;
    stddev?: GraphQLTypes['member_epoch_pgives_stddev_fields'] | undefined;
    stddev_pop?:
      | GraphQLTypes['member_epoch_pgives_stddev_pop_fields']
      | undefined;
    stddev_samp?:
      | GraphQLTypes['member_epoch_pgives_stddev_samp_fields']
      | undefined;
    sum?: GraphQLTypes['member_epoch_pgives_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['member_epoch_pgives_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['member_epoch_pgives_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['member_epoch_pgives_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "member_epoch_pgives" */
  ['member_epoch_pgives_aggregate_order_by']: GraphQLTypes['member_epoch_pgives_aggregate_order_by'];
  /** aggregate avg on columns */
  ['member_epoch_pgives_avg_fields']: {
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    gives_received?: number | undefined;
    id?: number | undefined;
    normalized_pgive?: number | undefined;
    opt_out_bonus?: number | undefined;
    organization_id?: number | undefined;
    pgive?: number | undefined;
    user_id?: number | undefined;
  };
  /** order by avg() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_avg_order_by']: GraphQLTypes['member_epoch_pgives_avg_order_by'];
  /** Boolean expression to filter rows from the table "member_epoch_pgives". All fields are combined with a logical 'AND'. */
  ['member_epoch_pgives_bool_exp']: GraphQLTypes['member_epoch_pgives_bool_exp'];
  /** aggregate max on columns */
  ['member_epoch_pgives_max_fields']: {
    circle_id?: number | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    epoch_id?: number | undefined;
    gives_received?: number | undefined;
    id?: number | undefined;
    normalized_pgive?: GraphQLTypes['numeric'] | undefined;
    opt_out_bonus?: GraphQLTypes['numeric'] | undefined;
    organization_id?: number | undefined;
    pgive?: GraphQLTypes['numeric'] | undefined;
    user_id?: number | undefined;
  };
  /** order by max() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_max_order_by']: GraphQLTypes['member_epoch_pgives_max_order_by'];
  /** aggregate min on columns */
  ['member_epoch_pgives_min_fields']: {
    circle_id?: number | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    epoch_id?: number | undefined;
    gives_received?: number | undefined;
    id?: number | undefined;
    normalized_pgive?: GraphQLTypes['numeric'] | undefined;
    opt_out_bonus?: GraphQLTypes['numeric'] | undefined;
    organization_id?: number | undefined;
    pgive?: GraphQLTypes['numeric'] | undefined;
    user_id?: number | undefined;
  };
  /** order by min() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_min_order_by']: GraphQLTypes['member_epoch_pgives_min_order_by'];
  /** Ordering options when selecting data from "member_epoch_pgives". */
  ['member_epoch_pgives_order_by']: GraphQLTypes['member_epoch_pgives_order_by'];
  /** select columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_select_column']: GraphQLTypes['member_epoch_pgives_select_column'];
  /** aggregate stddev on columns */
  ['member_epoch_pgives_stddev_fields']: {
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    gives_received?: number | undefined;
    id?: number | undefined;
    normalized_pgive?: number | undefined;
    opt_out_bonus?: number | undefined;
    organization_id?: number | undefined;
    pgive?: number | undefined;
    user_id?: number | undefined;
  };
  /** order by stddev() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_stddev_order_by']: GraphQLTypes['member_epoch_pgives_stddev_order_by'];
  /** aggregate stddev_pop on columns */
  ['member_epoch_pgives_stddev_pop_fields']: {
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    gives_received?: number | undefined;
    id?: number | undefined;
    normalized_pgive?: number | undefined;
    opt_out_bonus?: number | undefined;
    organization_id?: number | undefined;
    pgive?: number | undefined;
    user_id?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_stddev_pop_order_by']: GraphQLTypes['member_epoch_pgives_stddev_pop_order_by'];
  /** aggregate stddev_samp on columns */
  ['member_epoch_pgives_stddev_samp_fields']: {
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    gives_received?: number | undefined;
    id?: number | undefined;
    normalized_pgive?: number | undefined;
    opt_out_bonus?: number | undefined;
    organization_id?: number | undefined;
    pgive?: number | undefined;
    user_id?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_stddev_samp_order_by']: GraphQLTypes['member_epoch_pgives_stddev_samp_order_by'];
  /** Streaming cursor of the table "member_epoch_pgives" */
  ['member_epoch_pgives_stream_cursor_input']: GraphQLTypes['member_epoch_pgives_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['member_epoch_pgives_stream_cursor_value_input']: GraphQLTypes['member_epoch_pgives_stream_cursor_value_input'];
  /** aggregate sum on columns */
  ['member_epoch_pgives_sum_fields']: {
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    gives_received?: number | undefined;
    id?: number | undefined;
    normalized_pgive?: GraphQLTypes['numeric'] | undefined;
    opt_out_bonus?: GraphQLTypes['numeric'] | undefined;
    organization_id?: number | undefined;
    pgive?: GraphQLTypes['numeric'] | undefined;
    user_id?: number | undefined;
  };
  /** order by sum() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_sum_order_by']: GraphQLTypes['member_epoch_pgives_sum_order_by'];
  /** aggregate var_pop on columns */
  ['member_epoch_pgives_var_pop_fields']: {
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    gives_received?: number | undefined;
    id?: number | undefined;
    normalized_pgive?: number | undefined;
    opt_out_bonus?: number | undefined;
    organization_id?: number | undefined;
    pgive?: number | undefined;
    user_id?: number | undefined;
  };
  /** order by var_pop() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_var_pop_order_by']: GraphQLTypes['member_epoch_pgives_var_pop_order_by'];
  /** aggregate var_samp on columns */
  ['member_epoch_pgives_var_samp_fields']: {
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    gives_received?: number | undefined;
    id?: number | undefined;
    normalized_pgive?: number | undefined;
    opt_out_bonus?: number | undefined;
    organization_id?: number | undefined;
    pgive?: number | undefined;
    user_id?: number | undefined;
  };
  /** order by var_samp() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_var_samp_order_by']: GraphQLTypes['member_epoch_pgives_var_samp_order_by'];
  /** aggregate variance on columns */
  ['member_epoch_pgives_variance_fields']: {
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    gives_received?: number | undefined;
    id?: number | undefined;
    normalized_pgive?: number | undefined;
    opt_out_bonus?: number | undefined;
    organization_id?: number | undefined;
    pgive?: number | undefined;
    user_id?: number | undefined;
  };
  /** order by variance() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_variance_order_by']: GraphQLTypes['member_epoch_pgives_variance_order_by'];
  /** mutation root */
  ['mutation_root']: {
    /** Accept Terms of Service action */
    acceptTOS?: GraphQLTypes['AcceptTOSOutput'] | undefined;
    /** adds a new (unverified) email address to a users profile */
    addEmail?: GraphQLTypes['ConfirmationResponse'] | undefined;
    /** adds a farcaster account to a users profile */
    addFarcaster?: GraphQLTypes['ConfirmationWithErrorResponse'] | undefined;
    adminUpdateUser?: GraphQLTypes['UserResponse'] | undefined;
    allocationCsv?: GraphQLTypes['AllocationCsvResponse'] | undefined;
    createCircle?: GraphQLTypes['CreateCircleResponse'] | undefined;
    createCoLinksGive?: GraphQLTypes['CreateCoLinksGiveResponse'] | undefined;
    /** create epoch using new, more flexible api */
    createEpoch?: GraphQLTypes['EpochResponse'] | undefined;
    createNominee?: GraphQLTypes['CreateNomineeResponse'] | undefined;
    createOrgMembers?:
      | Array<GraphQLTypes['OrgMemberResponse'] | undefined>
      | undefined;
    createSampleCircle?: GraphQLTypes['CreateSampleCircleResponse'] | undefined;
    createUserWithToken?: GraphQLTypes['UserResponse'] | undefined;
    createUsers?: Array<GraphQLTypes['UserResponse'] | undefined> | undefined;
    createVault?: GraphQLTypes['VaultResponse'] | undefined;
    /** Log offchain information for vault transactions */
    createVaultTx?: GraphQLTypes['LogVaultTxResponse'] | undefined;
    deleteCircle?: GraphQLTypes['ConfirmationResponse'] | undefined;
    deleteCoLinksGive?: GraphQLTypes['SuccessResponse'] | undefined;
    deleteContribution?: GraphQLTypes['ConfirmationResponse'] | undefined;
    /** delete the specified email from the current users' profile */
    deleteEmail?: GraphQLTypes['ConfirmationResponse'] | undefined;
    deleteEpoch?: GraphQLTypes['DeleteEpochResponse'] | undefined;
    deleteOrgMember?: GraphQLTypes['ConfirmationResponse'] | undefined;
    deleteUser?: GraphQLTypes['ConfirmationResponse'] | undefined;
    deleteUsers?: GraphQLTypes['DeleteUsersResponse'] | undefined;
    /** delete data from the table: "circle_api_keys" */
    delete_circle_api_keys?:
      | GraphQLTypes['circle_api_keys_mutation_response']
      | undefined;
    /** delete single row from the table: "circle_api_keys" */
    delete_circle_api_keys_by_pk?: GraphQLTypes['circle_api_keys'] | undefined;
    /** delete data from the table: "circle_integrations" */
    delete_circle_integrations?:
      | GraphQLTypes['circle_integrations_mutation_response']
      | undefined;
    /** delete single row from the table: "circle_integrations" */
    delete_circle_integrations_by_pk?:
      | GraphQLTypes['circle_integrations']
      | undefined;
    /** delete data from the table: "circle_share_tokens" */
    delete_circle_share_tokens?:
      | GraphQLTypes['circle_share_tokens_mutation_response']
      | undefined;
    /** delete single row from the table: "circle_share_tokens" */
    delete_circle_share_tokens_by_pk?:
      | GraphQLTypes['circle_share_tokens']
      | undefined;
    /** delete data from the table: "farcaster_accounts" */
    delete_farcaster_accounts?:
      | GraphQLTypes['farcaster_accounts_mutation_response']
      | undefined;
    /** delete single row from the table: "farcaster_accounts" */
    delete_farcaster_accounts_by_pk?:
      | GraphQLTypes['farcaster_accounts']
      | undefined;
    /** delete data from the table: "github_accounts" */
    delete_github_accounts?:
      | GraphQLTypes['github_accounts_mutation_response']
      | undefined;
    /** delete single row from the table: "github_accounts" */
    delete_github_accounts_by_pk?: GraphQLTypes['github_accounts'] | undefined;
    /** delete data from the table: "linkedin_accounts" */
    delete_linkedin_accounts?:
      | GraphQLTypes['linkedin_accounts_mutation_response']
      | undefined;
    /** delete single row from the table: "linkedin_accounts" */
    delete_linkedin_accounts_by_pk?:
      | GraphQLTypes['linkedin_accounts']
      | undefined;
    /** delete data from the table: "mutes" */
    delete_mutes?: GraphQLTypes['mutes_mutation_response'] | undefined;
    /** delete single row from the table: "mutes" */
    delete_mutes_by_pk?: GraphQLTypes['mutes'] | undefined;
    /** delete data from the table: "org_share_tokens" */
    delete_org_share_tokens?:
      | GraphQLTypes['org_share_tokens_mutation_response']
      | undefined;
    /** delete single row from the table: "org_share_tokens" */
    delete_org_share_tokens_by_pk?:
      | GraphQLTypes['org_share_tokens']
      | undefined;
    /** delete data from the table: "pending_vault_transactions" */
    delete_pending_vault_transactions?:
      | GraphQLTypes['pending_vault_transactions_mutation_response']
      | undefined;
    /** delete single row from the table: "pending_vault_transactions" */
    delete_pending_vault_transactions_by_pk?:
      | GraphQLTypes['pending_vault_transactions']
      | undefined;
    /** delete data from the table: "profile_skills" */
    delete_profile_skills?:
      | GraphQLTypes['profile_skills_mutation_response']
      | undefined;
    /** delete single row from the table: "profile_skills" */
    delete_profile_skills_by_pk?: GraphQLTypes['profile_skills'] | undefined;
    /** delete data from the table: "reactions" */
    delete_reactions?: GraphQLTypes['reactions_mutation_response'] | undefined;
    /** delete single row from the table: "reactions" */
    delete_reactions_by_pk?: GraphQLTypes['reactions'] | undefined;
    /** delete data from the table: "replies_reactions" */
    delete_replies_reactions?:
      | GraphQLTypes['replies_reactions_mutation_response']
      | undefined;
    /** delete single row from the table: "replies_reactions" */
    delete_replies_reactions_by_pk?:
      | GraphQLTypes['replies_reactions']
      | undefined;
    /** delete data from the table: "twitter_accounts" */
    delete_twitter_accounts?:
      | GraphQLTypes['twitter_accounts_mutation_response']
      | undefined;
    /** delete single row from the table: "twitter_accounts" */
    delete_twitter_accounts_by_pk?:
      | GraphQLTypes['twitter_accounts']
      | undefined;
    endEpoch?: GraphQLTypes['EpochResponse'] | undefined;
    /** Generates an API key for a circle */
    generateApiKey?: GraphQLTypes['GenerateApiKeyResponse'] | undefined;
    generateOneTimeUpload?: GraphQLTypes['UploadUrlResponse'] | undefined;
    /** giveCsv */
    giveCsv?: GraphQLTypes['GiveCsvResponse'] | undefined;
    /** insert data into the table: "circle_integrations" */
    insert_circle_integrations?:
      | GraphQLTypes['circle_integrations_mutation_response']
      | undefined;
    /** insert a single row into the table: "circle_integrations" */
    insert_circle_integrations_one?:
      | GraphQLTypes['circle_integrations']
      | undefined;
    /** insert data into the table: "circle_share_tokens" */
    insert_circle_share_tokens?:
      | GraphQLTypes['circle_share_tokens_mutation_response']
      | undefined;
    /** insert a single row into the table: "circle_share_tokens" */
    insert_circle_share_tokens_one?:
      | GraphQLTypes['circle_share_tokens']
      | undefined;
    /** insert data into the table: "claims" */
    insert_claims?: GraphQLTypes['claims_mutation_response'] | undefined;
    /** insert a single row into the table: "claims" */
    insert_claims_one?: GraphQLTypes['claims'] | undefined;
    /** insert data into the table: "contributions" */
    insert_contributions?:
      | GraphQLTypes['contributions_mutation_response']
      | undefined;
    /** insert a single row into the table: "contributions" */
    insert_contributions_one?: GraphQLTypes['contributions'] | undefined;
    /** insert data into the table: "distributions" */
    insert_distributions?:
      | GraphQLTypes['distributions_mutation_response']
      | undefined;
    /** insert a single row into the table: "distributions" */
    insert_distributions_one?: GraphQLTypes['distributions'] | undefined;
    /** insert data into the table: "locked_token_distribution_gifts" */
    insert_locked_token_distribution_gifts?:
      | GraphQLTypes['locked_token_distribution_gifts_mutation_response']
      | undefined;
    /** insert a single row into the table: "locked_token_distribution_gifts" */
    insert_locked_token_distribution_gifts_one?:
      | GraphQLTypes['locked_token_distribution_gifts']
      | undefined;
    /** insert data into the table: "locked_token_distributions" */
    insert_locked_token_distributions?:
      | GraphQLTypes['locked_token_distributions_mutation_response']
      | undefined;
    /** insert a single row into the table: "locked_token_distributions" */
    insert_locked_token_distributions_one?:
      | GraphQLTypes['locked_token_distributions']
      | undefined;
    /** insert data into the table: "mutes" */
    insert_mutes?: GraphQLTypes['mutes_mutation_response'] | undefined;
    /** insert a single row into the table: "mutes" */
    insert_mutes_one?: GraphQLTypes['mutes'] | undefined;
    /** insert data into the table: "org_share_tokens" */
    insert_org_share_tokens?:
      | GraphQLTypes['org_share_tokens_mutation_response']
      | undefined;
    /** insert a single row into the table: "org_share_tokens" */
    insert_org_share_tokens_one?: GraphQLTypes['org_share_tokens'] | undefined;
    /** insert data into the table: "pending_vault_transactions" */
    insert_pending_vault_transactions?:
      | GraphQLTypes['pending_vault_transactions_mutation_response']
      | undefined;
    /** insert a single row into the table: "pending_vault_transactions" */
    insert_pending_vault_transactions_one?:
      | GraphQLTypes['pending_vault_transactions']
      | undefined;
    /** insert data into the table: "profile_skills" */
    insert_profile_skills?:
      | GraphQLTypes['profile_skills_mutation_response']
      | undefined;
    /** insert a single row into the table: "profile_skills" */
    insert_profile_skills_one?: GraphQLTypes['profile_skills'] | undefined;
    /** insert data into the table: "reactions" */
    insert_reactions?: GraphQLTypes['reactions_mutation_response'] | undefined;
    /** insert a single row into the table: "reactions" */
    insert_reactions_one?: GraphQLTypes['reactions'] | undefined;
    /** insert data into the table: "replies" */
    insert_replies?: GraphQLTypes['replies_mutation_response'] | undefined;
    /** insert a single row into the table: "replies" */
    insert_replies_one?: GraphQLTypes['replies'] | undefined;
    /** insert data into the table: "replies_reactions" */
    insert_replies_reactions?:
      | GraphQLTypes['replies_reactions_mutation_response']
      | undefined;
    /** insert a single row into the table: "replies_reactions" */
    insert_replies_reactions_one?:
      | GraphQLTypes['replies_reactions']
      | undefined;
    /** insert data into the table: "skills" */
    insert_skills?: GraphQLTypes['skills_mutation_response'] | undefined;
    /** insert a single row into the table: "skills" */
    insert_skills_one?: GraphQLTypes['skills'] | undefined;
    logoutUser?: GraphQLTypes['LogoutResponse'] | undefined;
    markClaimed?: GraphQLTypes['MarkClaimedOutput'] | undefined;
    redeemInviteCode: GraphQLTypes['ConfirmationWithErrorResponse'];
    requestInviteCode: GraphQLTypes['ConfirmationWithErrorResponse'];
    restoreCoordinape?: GraphQLTypes['ConfirmationResponse'] | undefined;
    /** sets a given email as the primary email for user */
    setPrimaryEmail?: GraphQLTypes['ConfirmationResponse'] | undefined;
    /** Generate share link for Colinks activity/post */
    share?: GraphQLTypes['ShareOutput'] | undefined;
    syncCoSoul?: GraphQLTypes['SyncCoSoulOutput'] | undefined;
    /** syncLinks */
    syncLinks?: GraphQLTypes['ConfirmationResponse'] | undefined;
    updateAllocations?: GraphQLTypes['AllocationsResponse'] | undefined;
    updateCircle?: GraphQLTypes['UpdateCircleOutput'] | undefined;
    /** Update starting GIVE for all circle members */
    updateCircleStartingGive?: GraphQLTypes['ConfirmationResponse'] | undefined;
    /** users can modify contributions and update their dates. */
    updateContribution?: GraphQLTypes['UpdateContributionResponse'] | undefined;
    updateEpoch?: GraphQLTypes['EpochResponse'] | undefined;
    updateProfile?: GraphQLTypes['UpdateProfileResponse'] | undefined;
    /** updateRepScore */
    updateRepScore?: GraphQLTypes['ConfirmationResponse'] | undefined;
    updateTeammates?: GraphQLTypes['UpdateTeammatesResponse'] | undefined;
    /** Update own user */
    updateUser?: GraphQLTypes['UserResponse'] | undefined;
    /** update data of the table: "circle_integrations" */
    update_circle_integrations?:
      | GraphQLTypes['circle_integrations_mutation_response']
      | undefined;
    /** update single row of the table: "circle_integrations" */
    update_circle_integrations_by_pk?:
      | GraphQLTypes['circle_integrations']
      | undefined;
    /** update multiples rows of table: "circle_integrations" */
    update_circle_integrations_many?:
      | Array<GraphQLTypes['circle_integrations_mutation_response'] | undefined>
      | undefined;
    /** update data of the table: "claims" */
    update_claims?: GraphQLTypes['claims_mutation_response'] | undefined;
    /** update single row of the table: "claims" */
    update_claims_by_pk?: GraphQLTypes['claims'] | undefined;
    /** update multiples rows of table: "claims" */
    update_claims_many?:
      | Array<GraphQLTypes['claims_mutation_response'] | undefined>
      | undefined;
    /** update data of the table: "colinks_gives" */
    update_colinks_gives?:
      | GraphQLTypes['colinks_gives_mutation_response']
      | undefined;
    /** update single row of the table: "colinks_gives" */
    update_colinks_gives_by_pk?: GraphQLTypes['colinks_gives'] | undefined;
    /** update multiples rows of table: "colinks_gives" */
    update_colinks_gives_many?:
      | Array<GraphQLTypes['colinks_gives_mutation_response'] | undefined>
      | undefined;
    /** update data of the table: "distributions" */
    update_distributions?:
      | GraphQLTypes['distributions_mutation_response']
      | undefined;
    /** update single row of the table: "distributions" */
    update_distributions_by_pk?: GraphQLTypes['distributions'] | undefined;
    /** update multiples rows of table: "distributions" */
    update_distributions_many?:
      | Array<GraphQLTypes['distributions_mutation_response'] | undefined>
      | undefined;
    /** update data of the table: "epoches" */
    update_epochs?: GraphQLTypes['epochs_mutation_response'] | undefined;
    /** update single row of the table: "epoches" */
    update_epochs_by_pk?: GraphQLTypes['epochs'] | undefined;
    /** update multiples rows of table: "epoches" */
    update_epochs_many?:
      | Array<GraphQLTypes['epochs_mutation_response'] | undefined>
      | undefined;
    /** update data of the table: "locked_token_distributions" */
    update_locked_token_distributions?:
      | GraphQLTypes['locked_token_distributions_mutation_response']
      | undefined;
    /** update single row of the table: "locked_token_distributions" */
    update_locked_token_distributions_by_pk?:
      | GraphQLTypes['locked_token_distributions']
      | undefined;
    /** update multiples rows of table: "locked_token_distributions" */
    update_locked_token_distributions_many?:
      | Array<
          | GraphQLTypes['locked_token_distributions_mutation_response']
          | undefined
        >
      | undefined;
    /** update data of the table: "org_members" */
    update_org_members?:
      | GraphQLTypes['org_members_mutation_response']
      | undefined;
    /** update single row of the table: "org_members" */
    update_org_members_by_pk?: GraphQLTypes['org_members'] | undefined;
    /** update multiples rows of table: "org_members" */
    update_org_members_many?:
      | Array<GraphQLTypes['org_members_mutation_response'] | undefined>
      | undefined;
    /** update data of the table: "organizations" */
    update_organizations?:
      | GraphQLTypes['organizations_mutation_response']
      | undefined;
    /** update single row of the table: "organizations" */
    update_organizations_by_pk?: GraphQLTypes['organizations'] | undefined;
    /** update multiples rows of table: "organizations" */
    update_organizations_many?:
      | Array<GraphQLTypes['organizations_mutation_response'] | undefined>
      | undefined;
    /** update data of the table: "profiles" */
    update_profiles?: GraphQLTypes['profiles_mutation_response'] | undefined;
    /** update single row of the table: "profiles" */
    update_profiles_by_pk?: GraphQLTypes['profiles'] | undefined;
    /** update multiples rows of table: "profiles" */
    update_profiles_many?:
      | Array<GraphQLTypes['profiles_mutation_response'] | undefined>
      | undefined;
    /** update data of the table: "profiles_private" */
    update_profiles_private?:
      | GraphQLTypes['profiles_private_mutation_response']
      | undefined;
    /** update multiples rows of table: "profiles_private" */
    update_profiles_private_many?:
      | Array<GraphQLTypes['profiles_private_mutation_response'] | undefined>
      | undefined;
    /** update data of the table: "replies" */
    update_replies?: GraphQLTypes['replies_mutation_response'] | undefined;
    /** update single row of the table: "replies" */
    update_replies_by_pk?: GraphQLTypes['replies'] | undefined;
    /** update multiples rows of table: "replies" */
    update_replies_many?:
      | Array<GraphQLTypes['replies_mutation_response'] | undefined>
      | undefined;
    uploadCircleLogo?: GraphQLTypes['UpdateCircleResponse'] | undefined;
    uploadOrgLogo?: GraphQLTypes['UpdateOrgResponse'] | undefined;
    uploadProfileAvatar?: GraphQLTypes['UpdateProfileResponse'] | undefined;
    uploadProfileBackground?: GraphQLTypes['UpdateProfileResponse'] | undefined;
    vouch?: GraphQLTypes['VouchOutput'] | undefined;
  };
  /** Table of one profile muting another profile */
  ['mutes']: {
    created_at: GraphQLTypes['timestamptz'];
    /** An object relationship */
    profile?: GraphQLTypes['profiles_public'] | undefined;
    profile_id: GraphQLTypes['bigint'];
    /** An object relationship */
    target_profile?: GraphQLTypes['profiles_public'] | undefined;
    target_profile_id: GraphQLTypes['bigint'];
  };
  /** order by aggregate values of table "mutes" */
  ['mutes_aggregate_order_by']: GraphQLTypes['mutes_aggregate_order_by'];
  /** order by avg() on columns of table "mutes" */
  ['mutes_avg_order_by']: GraphQLTypes['mutes_avg_order_by'];
  /** Boolean expression to filter rows from the table "mutes". All fields are combined with a logical 'AND'. */
  ['mutes_bool_exp']: GraphQLTypes['mutes_bool_exp'];
  /** unique or primary key constraints on table "mutes" */
  ['mutes_constraint']: GraphQLTypes['mutes_constraint'];
  /** input type for inserting data into table "mutes" */
  ['mutes_insert_input']: GraphQLTypes['mutes_insert_input'];
  /** order by max() on columns of table "mutes" */
  ['mutes_max_order_by']: GraphQLTypes['mutes_max_order_by'];
  /** order by min() on columns of table "mutes" */
  ['mutes_min_order_by']: GraphQLTypes['mutes_min_order_by'];
  /** response of any mutation on the table "mutes" */
  ['mutes_mutation_response']: {
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['mutes']>;
  };
  /** on_conflict condition type for table "mutes" */
  ['mutes_on_conflict']: GraphQLTypes['mutes_on_conflict'];
  /** Ordering options when selecting data from "mutes". */
  ['mutes_order_by']: GraphQLTypes['mutes_order_by'];
  /** select columns of table "mutes" */
  ['mutes_select_column']: GraphQLTypes['mutes_select_column'];
  /** order by stddev() on columns of table "mutes" */
  ['mutes_stddev_order_by']: GraphQLTypes['mutes_stddev_order_by'];
  /** order by stddev_pop() on columns of table "mutes" */
  ['mutes_stddev_pop_order_by']: GraphQLTypes['mutes_stddev_pop_order_by'];
  /** order by stddev_samp() on columns of table "mutes" */
  ['mutes_stddev_samp_order_by']: GraphQLTypes['mutes_stddev_samp_order_by'];
  /** Streaming cursor of the table "mutes" */
  ['mutes_stream_cursor_input']: GraphQLTypes['mutes_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['mutes_stream_cursor_value_input']: GraphQLTypes['mutes_stream_cursor_value_input'];
  /** order by sum() on columns of table "mutes" */
  ['mutes_sum_order_by']: GraphQLTypes['mutes_sum_order_by'];
  /** placeholder for update columns of table "mutes" (current role has no relevant permissions) */
  ['mutes_update_column']: GraphQLTypes['mutes_update_column'];
  /** order by var_pop() on columns of table "mutes" */
  ['mutes_var_pop_order_by']: GraphQLTypes['mutes_var_pop_order_by'];
  /** order by var_samp() on columns of table "mutes" */
  ['mutes_var_samp_order_by']: GraphQLTypes['mutes_var_samp_order_by'];
  /** order by variance() on columns of table "mutes" */
  ['mutes_variance_order_by']: GraphQLTypes['mutes_variance_order_by'];
  /** columns and relationships of "nft_collections" */
  ['nft_collections']: {
    address: GraphQLTypes['citext'];
    banner_image_url?: string | undefined;
    external_url?: string | undefined;
    name: string;
    slug?: string | undefined;
  };
  /** Boolean expression to filter rows from the table "nft_collections". All fields are combined with a logical 'AND'. */
  ['nft_collections_bool_exp']: GraphQLTypes['nft_collections_bool_exp'];
  /** Ordering options when selecting data from "nft_collections". */
  ['nft_collections_order_by']: GraphQLTypes['nft_collections_order_by'];
  /** select columns of table "nft_collections" */
  ['nft_collections_select_column']: GraphQLTypes['nft_collections_select_column'];
  /** Streaming cursor of the table "nft_collections" */
  ['nft_collections_stream_cursor_input']: GraphQLTypes['nft_collections_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['nft_collections_stream_cursor_value_input']: GraphQLTypes['nft_collections_stream_cursor_value_input'];
  /** columns and relationships of "nft_holdings" */
  ['nft_holdings']: {
    address: GraphQLTypes['citext'];
    /** An object relationship */
    collection: GraphQLTypes['nft_collections'];
    contract: GraphQLTypes['citext'];
    image_url?: string | undefined;
    name?: string | undefined;
    /** An object relationship */
    profile?: GraphQLTypes['profiles_public'] | undefined;
    token_id: string;
  };
  /** Boolean expression to filter rows from the table "nft_holdings". All fields are combined with a logical 'AND'. */
  ['nft_holdings_bool_exp']: GraphQLTypes['nft_holdings_bool_exp'];
  /** Ordering options when selecting data from "nft_holdings". */
  ['nft_holdings_order_by']: GraphQLTypes['nft_holdings_order_by'];
  /** select columns of table "nft_holdings" */
  ['nft_holdings_select_column']: GraphQLTypes['nft_holdings_select_column'];
  /** Streaming cursor of the table "nft_holdings" */
  ['nft_holdings_stream_cursor_input']: GraphQLTypes['nft_holdings_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['nft_holdings_stream_cursor_value_input']: GraphQLTypes['nft_holdings_stream_cursor_value_input'];
  /** columns and relationships of "nominees" */
  ['nominees']: {
    address: string;
    /** An object relationship */
    circle?: GraphQLTypes['circles'] | undefined;
    circle_id: number;
    created_at: GraphQLTypes['timestamp'];
    description: string;
    ended: boolean;
    expiry_date: GraphQLTypes['timestamp'];
    id: GraphQLTypes['bigint'];
    nominated_by_user_id: number;
    nominated_date: GraphQLTypes['date'];
    /** An array relationship */
    nominations: Array<GraphQLTypes['vouches']>;
    /** An object relationship */
    nominator?: GraphQLTypes['users'] | undefined;
    /** An object relationship */
    profile?: GraphQLTypes['profiles'] | undefined;
    updated_at: GraphQLTypes['timestamp'];
    /** An object relationship */
    user?: GraphQLTypes['users'] | undefined;
    user_id?: number | undefined;
    vouches_required: number;
  };
  /** aggregated selection of "nominees" */
  ['nominees_aggregate']: {
    aggregate?: GraphQLTypes['nominees_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['nominees']>;
  };
  ['nominees_aggregate_bool_exp']: GraphQLTypes['nominees_aggregate_bool_exp'];
  ['nominees_aggregate_bool_exp_bool_and']: GraphQLTypes['nominees_aggregate_bool_exp_bool_and'];
  ['nominees_aggregate_bool_exp_bool_or']: GraphQLTypes['nominees_aggregate_bool_exp_bool_or'];
  ['nominees_aggregate_bool_exp_count']: GraphQLTypes['nominees_aggregate_bool_exp_count'];
  /** aggregate fields of "nominees" */
  ['nominees_aggregate_fields']: {
    avg?: GraphQLTypes['nominees_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['nominees_max_fields'] | undefined;
    min?: GraphQLTypes['nominees_min_fields'] | undefined;
    stddev?: GraphQLTypes['nominees_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['nominees_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['nominees_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['nominees_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['nominees_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['nominees_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['nominees_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "nominees" */
  ['nominees_aggregate_order_by']: GraphQLTypes['nominees_aggregate_order_by'];
  /** aggregate avg on columns */
  ['nominees_avg_fields']: {
    circle_id?: number | undefined;
    id?: number | undefined;
    nominated_by_user_id?: number | undefined;
    user_id?: number | undefined;
    vouches_required?: number | undefined;
  };
  /** order by avg() on columns of table "nominees" */
  ['nominees_avg_order_by']: GraphQLTypes['nominees_avg_order_by'];
  /** Boolean expression to filter rows from the table "nominees". All fields are combined with a logical 'AND'. */
  ['nominees_bool_exp']: GraphQLTypes['nominees_bool_exp'];
  /** aggregate max on columns */
  ['nominees_max_fields']: {
    address?: string | undefined;
    circle_id?: number | undefined;
    created_at?: GraphQLTypes['timestamp'] | undefined;
    description?: string | undefined;
    expiry_date?: GraphQLTypes['timestamp'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    nominated_by_user_id?: number | undefined;
    nominated_date?: GraphQLTypes['date'] | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
    user_id?: number | undefined;
    vouches_required?: number | undefined;
  };
  /** order by max() on columns of table "nominees" */
  ['nominees_max_order_by']: GraphQLTypes['nominees_max_order_by'];
  /** aggregate min on columns */
  ['nominees_min_fields']: {
    address?: string | undefined;
    circle_id?: number | undefined;
    created_at?: GraphQLTypes['timestamp'] | undefined;
    description?: string | undefined;
    expiry_date?: GraphQLTypes['timestamp'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    nominated_by_user_id?: number | undefined;
    nominated_date?: GraphQLTypes['date'] | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
    user_id?: number | undefined;
    vouches_required?: number | undefined;
  };
  /** order by min() on columns of table "nominees" */
  ['nominees_min_order_by']: GraphQLTypes['nominees_min_order_by'];
  /** Ordering options when selecting data from "nominees". */
  ['nominees_order_by']: GraphQLTypes['nominees_order_by'];
  /** select columns of table "nominees" */
  ['nominees_select_column']: GraphQLTypes['nominees_select_column'];
  /** select "nominees_aggregate_bool_exp_bool_and_arguments_columns" columns of table "nominees" */
  ['nominees_select_column_nominees_aggregate_bool_exp_bool_and_arguments_columns']: GraphQLTypes['nominees_select_column_nominees_aggregate_bool_exp_bool_and_arguments_columns'];
  /** select "nominees_aggregate_bool_exp_bool_or_arguments_columns" columns of table "nominees" */
  ['nominees_select_column_nominees_aggregate_bool_exp_bool_or_arguments_columns']: GraphQLTypes['nominees_select_column_nominees_aggregate_bool_exp_bool_or_arguments_columns'];
  /** aggregate stddev on columns */
  ['nominees_stddev_fields']: {
    circle_id?: number | undefined;
    id?: number | undefined;
    nominated_by_user_id?: number | undefined;
    user_id?: number | undefined;
    vouches_required?: number | undefined;
  };
  /** order by stddev() on columns of table "nominees" */
  ['nominees_stddev_order_by']: GraphQLTypes['nominees_stddev_order_by'];
  /** aggregate stddev_pop on columns */
  ['nominees_stddev_pop_fields']: {
    circle_id?: number | undefined;
    id?: number | undefined;
    nominated_by_user_id?: number | undefined;
    user_id?: number | undefined;
    vouches_required?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "nominees" */
  ['nominees_stddev_pop_order_by']: GraphQLTypes['nominees_stddev_pop_order_by'];
  /** aggregate stddev_samp on columns */
  ['nominees_stddev_samp_fields']: {
    circle_id?: number | undefined;
    id?: number | undefined;
    nominated_by_user_id?: number | undefined;
    user_id?: number | undefined;
    vouches_required?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "nominees" */
  ['nominees_stddev_samp_order_by']: GraphQLTypes['nominees_stddev_samp_order_by'];
  /** Streaming cursor of the table "nominees" */
  ['nominees_stream_cursor_input']: GraphQLTypes['nominees_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['nominees_stream_cursor_value_input']: GraphQLTypes['nominees_stream_cursor_value_input'];
  /** aggregate sum on columns */
  ['nominees_sum_fields']: {
    circle_id?: number | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    nominated_by_user_id?: number | undefined;
    user_id?: number | undefined;
    vouches_required?: number | undefined;
  };
  /** order by sum() on columns of table "nominees" */
  ['nominees_sum_order_by']: GraphQLTypes['nominees_sum_order_by'];
  /** aggregate var_pop on columns */
  ['nominees_var_pop_fields']: {
    circle_id?: number | undefined;
    id?: number | undefined;
    nominated_by_user_id?: number | undefined;
    user_id?: number | undefined;
    vouches_required?: number | undefined;
  };
  /** order by var_pop() on columns of table "nominees" */
  ['nominees_var_pop_order_by']: GraphQLTypes['nominees_var_pop_order_by'];
  /** aggregate var_samp on columns */
  ['nominees_var_samp_fields']: {
    circle_id?: number | undefined;
    id?: number | undefined;
    nominated_by_user_id?: number | undefined;
    user_id?: number | undefined;
    vouches_required?: number | undefined;
  };
  /** order by var_samp() on columns of table "nominees" */
  ['nominees_var_samp_order_by']: GraphQLTypes['nominees_var_samp_order_by'];
  /** aggregate variance on columns */
  ['nominees_variance_fields']: {
    circle_id?: number | undefined;
    id?: number | undefined;
    nominated_by_user_id?: number | undefined;
    user_id?: number | undefined;
    vouches_required?: number | undefined;
  };
  /** order by variance() on columns of table "nominees" */
  ['nominees_variance_order_by']: GraphQLTypes['nominees_variance_order_by'];
  /** columns and relationships of "note_count" */
  ['note_count']: {
    notes?: GraphQLTypes['bigint'] | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** Boolean expression to filter rows from the table "note_count". All fields are combined with a logical 'AND'. */
  ['note_count_bool_exp']: GraphQLTypes['note_count_bool_exp'];
  /** Ordering options when selecting data from "note_count". */
  ['note_count_order_by']: GraphQLTypes['note_count_order_by'];
  /** select columns of table "note_count" */
  ['note_count_select_column']: GraphQLTypes['note_count_select_column'];
  /** Streaming cursor of the table "note_count" */
  ['note_count_stream_cursor_input']: GraphQLTypes['note_count_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['note_count_stream_cursor_value_input']: GraphQLTypes['note_count_stream_cursor_value_input'];
  /** columns and relationships of "notifications" */
  ['notifications']: {
    /** An object relationship */
    actor_profile_public?: GraphQLTypes['profiles_public'] | undefined;
    created_at: GraphQLTypes['timestamptz'];
    /** An object relationship */
    give?: GraphQLTypes['colinks_gives'] | undefined;
    id: number;
    invite_joined_id?: GraphQLTypes['bigint'] | undefined;
    /** An object relationship */
    invited_profile_public?: GraphQLTypes['profiles_public'] | undefined;
    /** An object relationship */
    link_tx?: GraphQLTypes['link_tx'] | undefined;
    link_tx_hash?: GraphQLTypes['citext'] | undefined;
    /** An object relationship */
    mention_post?: GraphQLTypes['contributions'] | undefined;
    mention_post_id?: number | undefined;
    /** An object relationship */
    mention_reply?: GraphQLTypes['replies'] | undefined;
    mention_reply_id?: number | undefined;
    /** An object relationship */
    profile: GraphQLTypes['profiles'];
    profile_id: GraphQLTypes['bigint'];
    /** An object relationship */
    reaction?: GraphQLTypes['reactions'] | undefined;
    reaction_id?: GraphQLTypes['bigint'] | undefined;
    /** An object relationship */
    reply?: GraphQLTypes['replies'] | undefined;
    reply_id?: number | undefined;
    /** An object relationship */
    reply_reaction?: GraphQLTypes['replies_reactions'] | undefined;
    reply_reaction_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** aggregated selection of "notifications" */
  ['notifications_aggregate']: {
    aggregate?: GraphQLTypes['notifications_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['notifications']>;
  };
  /** aggregate fields of "notifications" */
  ['notifications_aggregate_fields']: {
    avg?: GraphQLTypes['notifications_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['notifications_max_fields'] | undefined;
    min?: GraphQLTypes['notifications_min_fields'] | undefined;
    stddev?: GraphQLTypes['notifications_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['notifications_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['notifications_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['notifications_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['notifications_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['notifications_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['notifications_variance_fields'] | undefined;
  };
  /** aggregate avg on columns */
  ['notifications_avg_fields']: {
    id?: number | undefined;
    invite_joined_id?: number | undefined;
    mention_post_id?: number | undefined;
    mention_reply_id?: number | undefined;
    profile_id?: number | undefined;
    reaction_id?: number | undefined;
    reply_id?: number | undefined;
    reply_reaction_id?: number | undefined;
  };
  /** Boolean expression to filter rows from the table "notifications". All fields are combined with a logical 'AND'. */
  ['notifications_bool_exp']: GraphQLTypes['notifications_bool_exp'];
  /** aggregate max on columns */
  ['notifications_max_fields']: {
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    id?: number | undefined;
    invite_joined_id?: GraphQLTypes['bigint'] | undefined;
    link_tx_hash?: GraphQLTypes['citext'] | undefined;
    mention_post_id?: number | undefined;
    mention_reply_id?: number | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    reaction_id?: GraphQLTypes['bigint'] | undefined;
    reply_id?: number | undefined;
    reply_reaction_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** aggregate min on columns */
  ['notifications_min_fields']: {
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    id?: number | undefined;
    invite_joined_id?: GraphQLTypes['bigint'] | undefined;
    link_tx_hash?: GraphQLTypes['citext'] | undefined;
    mention_post_id?: number | undefined;
    mention_reply_id?: number | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    reaction_id?: GraphQLTypes['bigint'] | undefined;
    reply_id?: number | undefined;
    reply_reaction_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** Ordering options when selecting data from "notifications". */
  ['notifications_order_by']: GraphQLTypes['notifications_order_by'];
  /** select columns of table "notifications" */
  ['notifications_select_column']: GraphQLTypes['notifications_select_column'];
  /** aggregate stddev on columns */
  ['notifications_stddev_fields']: {
    id?: number | undefined;
    invite_joined_id?: number | undefined;
    mention_post_id?: number | undefined;
    mention_reply_id?: number | undefined;
    profile_id?: number | undefined;
    reaction_id?: number | undefined;
    reply_id?: number | undefined;
    reply_reaction_id?: number | undefined;
  };
  /** aggregate stddev_pop on columns */
  ['notifications_stddev_pop_fields']: {
    id?: number | undefined;
    invite_joined_id?: number | undefined;
    mention_post_id?: number | undefined;
    mention_reply_id?: number | undefined;
    profile_id?: number | undefined;
    reaction_id?: number | undefined;
    reply_id?: number | undefined;
    reply_reaction_id?: number | undefined;
  };
  /** aggregate stddev_samp on columns */
  ['notifications_stddev_samp_fields']: {
    id?: number | undefined;
    invite_joined_id?: number | undefined;
    mention_post_id?: number | undefined;
    mention_reply_id?: number | undefined;
    profile_id?: number | undefined;
    reaction_id?: number | undefined;
    reply_id?: number | undefined;
    reply_reaction_id?: number | undefined;
  };
  /** Streaming cursor of the table "notifications" */
  ['notifications_stream_cursor_input']: GraphQLTypes['notifications_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['notifications_stream_cursor_value_input']: GraphQLTypes['notifications_stream_cursor_value_input'];
  /** aggregate sum on columns */
  ['notifications_sum_fields']: {
    id?: number | undefined;
    invite_joined_id?: GraphQLTypes['bigint'] | undefined;
    mention_post_id?: number | undefined;
    mention_reply_id?: number | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    reaction_id?: GraphQLTypes['bigint'] | undefined;
    reply_id?: number | undefined;
    reply_reaction_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** aggregate var_pop on columns */
  ['notifications_var_pop_fields']: {
    id?: number | undefined;
    invite_joined_id?: number | undefined;
    mention_post_id?: number | undefined;
    mention_reply_id?: number | undefined;
    profile_id?: number | undefined;
    reaction_id?: number | undefined;
    reply_id?: number | undefined;
    reply_reaction_id?: number | undefined;
  };
  /** aggregate var_samp on columns */
  ['notifications_var_samp_fields']: {
    id?: number | undefined;
    invite_joined_id?: number | undefined;
    mention_post_id?: number | undefined;
    mention_reply_id?: number | undefined;
    profile_id?: number | undefined;
    reaction_id?: number | undefined;
    reply_id?: number | undefined;
    reply_reaction_id?: number | undefined;
  };
  /** aggregate variance on columns */
  ['notifications_variance_fields']: {
    id?: number | undefined;
    invite_joined_id?: number | undefined;
    mention_post_id?: number | undefined;
    mention_reply_id?: number | undefined;
    profile_id?: number | undefined;
    reaction_id?: number | undefined;
    reply_id?: number | undefined;
    reply_reaction_id?: number | undefined;
  };
  ['numeric']: any;
  /** Boolean expression to compare columns of type "numeric". All fields are combined with logical 'AND'. */
  ['numeric_comparison_exp']: GraphQLTypes['numeric_comparison_exp'];
  /** column ordering options */
  ['order_by']: GraphQLTypes['order_by'];
  /** columns and relationships of "org_members" */
  ['org_members']: {
    created_at: GraphQLTypes['timestamp'];
    deleted_at?: GraphQLTypes['timestamp'] | undefined;
    hidden: boolean;
    id: GraphQLTypes['bigint'];
    org_id: GraphQLTypes['bigint'];
    /** An object relationship */
    organization: GraphQLTypes['organizations'];
    /** An object relationship */
    profile: GraphQLTypes['profiles'];
    profile_id: GraphQLTypes['bigint'];
    role: number;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
  };
  /** order by aggregate values of table "org_members" */
  ['org_members_aggregate_order_by']: GraphQLTypes['org_members_aggregate_order_by'];
  /** order by avg() on columns of table "org_members" */
  ['org_members_avg_order_by']: GraphQLTypes['org_members_avg_order_by'];
  /** Boolean expression to filter rows from the table "org_members". All fields are combined with a logical 'AND'. */
  ['org_members_bool_exp']: GraphQLTypes['org_members_bool_exp'];
  /** order by max() on columns of table "org_members" */
  ['org_members_max_order_by']: GraphQLTypes['org_members_max_order_by'];
  /** order by min() on columns of table "org_members" */
  ['org_members_min_order_by']: GraphQLTypes['org_members_min_order_by'];
  /** response of any mutation on the table "org_members" */
  ['org_members_mutation_response']: {
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['org_members']>;
  };
  /** Ordering options when selecting data from "org_members". */
  ['org_members_order_by']: GraphQLTypes['org_members_order_by'];
  /** primary key columns input for table: org_members */
  ['org_members_pk_columns_input']: GraphQLTypes['org_members_pk_columns_input'];
  /** select columns of table "org_members" */
  ['org_members_select_column']: GraphQLTypes['org_members_select_column'];
  /** input type for updating data in table "org_members" */
  ['org_members_set_input']: GraphQLTypes['org_members_set_input'];
  /** order by stddev() on columns of table "org_members" */
  ['org_members_stddev_order_by']: GraphQLTypes['org_members_stddev_order_by'];
  /** order by stddev_pop() on columns of table "org_members" */
  ['org_members_stddev_pop_order_by']: GraphQLTypes['org_members_stddev_pop_order_by'];
  /** order by stddev_samp() on columns of table "org_members" */
  ['org_members_stddev_samp_order_by']: GraphQLTypes['org_members_stddev_samp_order_by'];
  /** Streaming cursor of the table "org_members" */
  ['org_members_stream_cursor_input']: GraphQLTypes['org_members_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['org_members_stream_cursor_value_input']: GraphQLTypes['org_members_stream_cursor_value_input'];
  /** order by sum() on columns of table "org_members" */
  ['org_members_sum_order_by']: GraphQLTypes['org_members_sum_order_by'];
  ['org_members_updates']: GraphQLTypes['org_members_updates'];
  /** order by var_pop() on columns of table "org_members" */
  ['org_members_var_pop_order_by']: GraphQLTypes['org_members_var_pop_order_by'];
  /** order by var_samp() on columns of table "org_members" */
  ['org_members_var_samp_order_by']: GraphQLTypes['org_members_var_samp_order_by'];
  /** order by variance() on columns of table "org_members" */
  ['org_members_variance_order_by']: GraphQLTypes['org_members_variance_order_by'];
  /** columns and relationships of "org_share_tokens" */
  ['org_share_tokens']: {
    created_at: GraphQLTypes['timestamptz'];
    org_id: GraphQLTypes['bigint'];
    /** An object relationship */
    organization: GraphQLTypes['organizations'];
    type: number;
    updated_at: GraphQLTypes['timestamptz'];
    uuid: GraphQLTypes['uuid'];
  };
  /** Boolean expression to filter rows from the table "org_share_tokens". All fields are combined with a logical 'AND'. */
  ['org_share_tokens_bool_exp']: GraphQLTypes['org_share_tokens_bool_exp'];
  /** unique or primary key constraints on table "org_share_tokens" */
  ['org_share_tokens_constraint']: GraphQLTypes['org_share_tokens_constraint'];
  /** input type for inserting data into table "org_share_tokens" */
  ['org_share_tokens_insert_input']: GraphQLTypes['org_share_tokens_insert_input'];
  /** response of any mutation on the table "org_share_tokens" */
  ['org_share_tokens_mutation_response']: {
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['org_share_tokens']>;
  };
  /** on_conflict condition type for table "org_share_tokens" */
  ['org_share_tokens_on_conflict']: GraphQLTypes['org_share_tokens_on_conflict'];
  /** Ordering options when selecting data from "org_share_tokens". */
  ['org_share_tokens_order_by']: GraphQLTypes['org_share_tokens_order_by'];
  /** select columns of table "org_share_tokens" */
  ['org_share_tokens_select_column']: GraphQLTypes['org_share_tokens_select_column'];
  /** Streaming cursor of the table "org_share_tokens" */
  ['org_share_tokens_stream_cursor_input']: GraphQLTypes['org_share_tokens_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['org_share_tokens_stream_cursor_value_input']: GraphQLTypes['org_share_tokens_stream_cursor_value_input'];
  /** placeholder for update columns of table "org_share_tokens" (current role has no relevant permissions) */
  ['org_share_tokens_update_column']: GraphQLTypes['org_share_tokens_update_column'];
  /** columns and relationships of "organizations" */
  ['organizations']: {
    /** An array relationship */
    circles: Array<GraphQLTypes['circles']>;
    created_at: GraphQLTypes['timestamp'];
    created_by?: number | undefined;
    guild_id?: number | undefined;
    guild_role_id?: number | undefined;
    id: GraphQLTypes['bigint'];
    logo?: string | undefined;
    /** An array relationship */
    members: Array<GraphQLTypes['org_members']>;
    name: string;
    /** An object relationship */
    profile?: GraphQLTypes['profiles'] | undefined;
    /** Indicates a test/sample/sandbox org */
    sample: boolean;
    telegram_id?: string | undefined;
    updated_at: GraphQLTypes['timestamp'];
    /** An array relationship */
    vaults: Array<GraphQLTypes['vaults']>;
  };
  /** Boolean expression to filter rows from the table "organizations". All fields are combined with a logical 'AND'. */
  ['organizations_bool_exp']: GraphQLTypes['organizations_bool_exp'];
  /** input type for incrementing numeric columns in table "organizations" */
  ['organizations_inc_input']: GraphQLTypes['organizations_inc_input'];
  /** response of any mutation on the table "organizations" */
  ['organizations_mutation_response']: {
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['organizations']>;
  };
  /** Ordering options when selecting data from "organizations". */
  ['organizations_order_by']: GraphQLTypes['organizations_order_by'];
  /** primary key columns input for table: organizations */
  ['organizations_pk_columns_input']: GraphQLTypes['organizations_pk_columns_input'];
  /** select columns of table "organizations" */
  ['organizations_select_column']: GraphQLTypes['organizations_select_column'];
  /** input type for updating data in table "organizations" */
  ['organizations_set_input']: GraphQLTypes['organizations_set_input'];
  /** Streaming cursor of the table "organizations" */
  ['organizations_stream_cursor_input']: GraphQLTypes['organizations_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['organizations_stream_cursor_value_input']: GraphQLTypes['organizations_stream_cursor_value_input'];
  ['organizations_updates']: GraphQLTypes['organizations_updates'];
  /** columns and relationships of "pending_gift_private" */
  ['pending_gift_private']: {
    gift_id?: GraphQLTypes['bigint'] | undefined;
    note?: string | undefined;
    /** An object relationship */
    recipient?: GraphQLTypes['users'] | undefined;
    recipient_id?: GraphQLTypes['bigint'] | undefined;
    /** An object relationship */
    sender?: GraphQLTypes['users'] | undefined;
    sender_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** Boolean expression to filter rows from the table "pending_gift_private". All fields are combined with a logical 'AND'. */
  ['pending_gift_private_bool_exp']: GraphQLTypes['pending_gift_private_bool_exp'];
  /** Ordering options when selecting data from "pending_gift_private". */
  ['pending_gift_private_order_by']: GraphQLTypes['pending_gift_private_order_by'];
  /** select columns of table "pending_gift_private" */
  ['pending_gift_private_select_column']: GraphQLTypes['pending_gift_private_select_column'];
  /** Streaming cursor of the table "pending_gift_private" */
  ['pending_gift_private_stream_cursor_input']: GraphQLTypes['pending_gift_private_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['pending_gift_private_stream_cursor_value_input']: GraphQLTypes['pending_gift_private_stream_cursor_value_input'];
  /** GIVE allocations made by circle members for the currently running epoch */
  ['pending_token_gifts']: {
    /** An object relationship */
    circle: GraphQLTypes['circles'];
    circle_id: GraphQLTypes['bigint'];
    created_at: GraphQLTypes['timestamp'];
    dts_created: GraphQLTypes['timestamp'];
    /** An object relationship */
    epoch?: GraphQLTypes['epochs'] | undefined;
    epoch_id: number;
    /** An object relationship */
    gift_private?: GraphQLTypes['pending_gift_private'] | undefined;
    id: GraphQLTypes['bigint'];
    /** An object relationship */
    recipient: GraphQLTypes['users'];
    recipient_address: string;
    recipient_id: GraphQLTypes['bigint'];
    /** An object relationship */
    sender: GraphQLTypes['users'];
    sender_address: string;
    sender_id: GraphQLTypes['bigint'];
    tokens: number;
    updated_at: GraphQLTypes['timestamp'];
  };
  /** order by aggregate values of table "pending_token_gifts" */
  ['pending_token_gifts_aggregate_order_by']: GraphQLTypes['pending_token_gifts_aggregate_order_by'];
  /** order by avg() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_avg_order_by']: GraphQLTypes['pending_token_gifts_avg_order_by'];
  /** Boolean expression to filter rows from the table "pending_token_gifts". All fields are combined with a logical 'AND'. */
  ['pending_token_gifts_bool_exp']: GraphQLTypes['pending_token_gifts_bool_exp'];
  /** order by max() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_max_order_by']: GraphQLTypes['pending_token_gifts_max_order_by'];
  /** order by min() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_min_order_by']: GraphQLTypes['pending_token_gifts_min_order_by'];
  /** Ordering options when selecting data from "pending_token_gifts". */
  ['pending_token_gifts_order_by']: GraphQLTypes['pending_token_gifts_order_by'];
  /** select columns of table "pending_token_gifts" */
  ['pending_token_gifts_select_column']: GraphQLTypes['pending_token_gifts_select_column'];
  /** order by stddev() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_stddev_order_by']: GraphQLTypes['pending_token_gifts_stddev_order_by'];
  /** order by stddev_pop() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_stddev_pop_order_by']: GraphQLTypes['pending_token_gifts_stddev_pop_order_by'];
  /** order by stddev_samp() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_stddev_samp_order_by']: GraphQLTypes['pending_token_gifts_stddev_samp_order_by'];
  /** Streaming cursor of the table "pending_token_gifts" */
  ['pending_token_gifts_stream_cursor_input']: GraphQLTypes['pending_token_gifts_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['pending_token_gifts_stream_cursor_value_input']: GraphQLTypes['pending_token_gifts_stream_cursor_value_input'];
  /** order by sum() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_sum_order_by']: GraphQLTypes['pending_token_gifts_sum_order_by'];
  /** order by var_pop() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_var_pop_order_by']: GraphQLTypes['pending_token_gifts_var_pop_order_by'];
  /** order by var_samp() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_var_samp_order_by']: GraphQLTypes['pending_token_gifts_var_samp_order_by'];
  /** order by variance() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_variance_order_by']: GraphQLTypes['pending_token_gifts_variance_order_by'];
  /** stores app-specific context to aid in the recovery of incomplete transactions */
  ['pending_vault_transactions']: {
    chain_id: number;
    claim_id?: GraphQLTypes['bigint'] | undefined;
    created_by: GraphQLTypes['bigint'];
    /** An object relationship */
    distribution?: GraphQLTypes['distributions'] | undefined;
    distribution_id?: GraphQLTypes['bigint'] | undefined;
    org_id?: GraphQLTypes['bigint'] | undefined;
    /** An object relationship */
    organization?: GraphQLTypes['organizations'] | undefined;
    /** An object relationship */
    profile: GraphQLTypes['profiles'];
    tx_hash: string;
    tx_type: GraphQLTypes['vault_tx_types_enum'];
    /** An object relationship */
    vault_tx_type: GraphQLTypes['vault_tx_types'];
  };
  /** Boolean expression to filter rows from the table "pending_vault_transactions". All fields are combined with a logical 'AND'. */
  ['pending_vault_transactions_bool_exp']: GraphQLTypes['pending_vault_transactions_bool_exp'];
  /** unique or primary key constraints on table "pending_vault_transactions" */
  ['pending_vault_transactions_constraint']: GraphQLTypes['pending_vault_transactions_constraint'];
  /** input type for inserting data into table "pending_vault_transactions" */
  ['pending_vault_transactions_insert_input']: GraphQLTypes['pending_vault_transactions_insert_input'];
  /** response of any mutation on the table "pending_vault_transactions" */
  ['pending_vault_transactions_mutation_response']: {
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['pending_vault_transactions']>;
  };
  /** on_conflict condition type for table "pending_vault_transactions" */
  ['pending_vault_transactions_on_conflict']: GraphQLTypes['pending_vault_transactions_on_conflict'];
  /** Ordering options when selecting data from "pending_vault_transactions". */
  ['pending_vault_transactions_order_by']: GraphQLTypes['pending_vault_transactions_order_by'];
  /** select columns of table "pending_vault_transactions" */
  ['pending_vault_transactions_select_column']: GraphQLTypes['pending_vault_transactions_select_column'];
  /** Streaming cursor of the table "pending_vault_transactions" */
  ['pending_vault_transactions_stream_cursor_input']: GraphQLTypes['pending_vault_transactions_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['pending_vault_transactions_stream_cursor_value_input']: GraphQLTypes['pending_vault_transactions_stream_cursor_value_input'];
  /** placeholder for update columns of table "pending_vault_transactions" (current role has no relevant permissions) */
  ['pending_vault_transactions_update_column']: GraphQLTypes['pending_vault_transactions_update_column'];
  /** Poap event info */
  ['poap_events']: {
    city: string;
    country: string;
    created_at: GraphQLTypes['timestamptz'];
    description: string;
    embedding?: GraphQLTypes['vector'] | undefined;
    end_date: GraphQLTypes['date'];
    event_url: string;
    expiry_date: GraphQLTypes['date'];
    fancy_id: string;
    id: GraphQLTypes['bigint'];
    image_url: string;
    name: string;
    poap_id: number;
    similarity?: GraphQLTypes['float8'] | undefined;
    start_date: GraphQLTypes['date'];
    supply: number;
    updated_at: GraphQLTypes['timestamptz'];
    year: number;
  };
  /** aggregated selection of "poap_events" */
  ['poap_events_aggregate']: {
    aggregate?: GraphQLTypes['poap_events_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['poap_events']>;
  };
  /** aggregate fields of "poap_events" */
  ['poap_events_aggregate_fields']: {
    avg?: GraphQLTypes['poap_events_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['poap_events_max_fields'] | undefined;
    min?: GraphQLTypes['poap_events_min_fields'] | undefined;
    stddev?: GraphQLTypes['poap_events_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['poap_events_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['poap_events_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['poap_events_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['poap_events_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['poap_events_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['poap_events_variance_fields'] | undefined;
  };
  /** aggregate avg on columns */
  ['poap_events_avg_fields']: {
    id?: number | undefined;
    poap_id?: number | undefined;
    similarity?: number | undefined;
    supply?: number | undefined;
    year?: number | undefined;
  };
  /** Boolean expression to filter rows from the table "poap_events". All fields are combined with a logical 'AND'. */
  ['poap_events_bool_exp']: GraphQLTypes['poap_events_bool_exp'];
  /** aggregate max on columns */
  ['poap_events_max_fields']: {
    city?: string | undefined;
    country?: string | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    description?: string | undefined;
    end_date?: GraphQLTypes['date'] | undefined;
    event_url?: string | undefined;
    expiry_date?: GraphQLTypes['date'] | undefined;
    fancy_id?: string | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    image_url?: string | undefined;
    name?: string | undefined;
    poap_id?: number | undefined;
    similarity?: GraphQLTypes['float8'] | undefined;
    start_date?: GraphQLTypes['date'] | undefined;
    supply?: number | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
    year?: number | undefined;
  };
  /** aggregate min on columns */
  ['poap_events_min_fields']: {
    city?: string | undefined;
    country?: string | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    description?: string | undefined;
    end_date?: GraphQLTypes['date'] | undefined;
    event_url?: string | undefined;
    expiry_date?: GraphQLTypes['date'] | undefined;
    fancy_id?: string | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    image_url?: string | undefined;
    name?: string | undefined;
    poap_id?: number | undefined;
    similarity?: GraphQLTypes['float8'] | undefined;
    start_date?: GraphQLTypes['date'] | undefined;
    supply?: number | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
    year?: number | undefined;
  };
  /** Ordering options when selecting data from "poap_events". */
  ['poap_events_order_by']: GraphQLTypes['poap_events_order_by'];
  /** select columns of table "poap_events" */
  ['poap_events_select_column']: GraphQLTypes['poap_events_select_column'];
  /** aggregate stddev on columns */
  ['poap_events_stddev_fields']: {
    id?: number | undefined;
    poap_id?: number | undefined;
    similarity?: number | undefined;
    supply?: number | undefined;
    year?: number | undefined;
  };
  /** aggregate stddev_pop on columns */
  ['poap_events_stddev_pop_fields']: {
    id?: number | undefined;
    poap_id?: number | undefined;
    similarity?: number | undefined;
    supply?: number | undefined;
    year?: number | undefined;
  };
  /** aggregate stddev_samp on columns */
  ['poap_events_stddev_samp_fields']: {
    id?: number | undefined;
    poap_id?: number | undefined;
    similarity?: number | undefined;
    supply?: number | undefined;
    year?: number | undefined;
  };
  /** Streaming cursor of the table "poap_events" */
  ['poap_events_stream_cursor_input']: GraphQLTypes['poap_events_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['poap_events_stream_cursor_value_input']: GraphQLTypes['poap_events_stream_cursor_value_input'];
  /** aggregate sum on columns */
  ['poap_events_sum_fields']: {
    id?: GraphQLTypes['bigint'] | undefined;
    poap_id?: number | undefined;
    similarity?: GraphQLTypes['float8'] | undefined;
    supply?: number | undefined;
    year?: number | undefined;
  };
  /** aggregate var_pop on columns */
  ['poap_events_var_pop_fields']: {
    id?: number | undefined;
    poap_id?: number | undefined;
    similarity?: number | undefined;
    supply?: number | undefined;
    year?: number | undefined;
  };
  /** aggregate var_samp on columns */
  ['poap_events_var_samp_fields']: {
    id?: number | undefined;
    poap_id?: number | undefined;
    similarity?: number | undefined;
    supply?: number | undefined;
    year?: number | undefined;
  };
  /** aggregate variance on columns */
  ['poap_events_variance_fields']: {
    id?: number | undefined;
    poap_id?: number | undefined;
    similarity?: number | undefined;
    supply?: number | undefined;
    year?: number | undefined;
  };
  /** columns and relationships of "poap_holders" */
  ['poap_holders']: {
    address: GraphQLTypes['citext'];
    chain: string;
    /** An object relationship */
    cosoul?: GraphQLTypes['cosouls'] | undefined;
    created_at: GraphQLTypes['timestamptz'];
    /** An object relationship */
    event: GraphQLTypes['poap_events'];
    event_id: GraphQLTypes['bigint'];
    id: GraphQLTypes['bigint'];
    poap_created: GraphQLTypes['timestamptz'];
    token_id: GraphQLTypes['bigint'];
    updated_at: GraphQLTypes['timestamptz'];
  };
  /** aggregated selection of "poap_holders" */
  ['poap_holders_aggregate']: {
    aggregate?: GraphQLTypes['poap_holders_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['poap_holders']>;
  };
  ['poap_holders_aggregate_bool_exp']: GraphQLTypes['poap_holders_aggregate_bool_exp'];
  ['poap_holders_aggregate_bool_exp_count']: GraphQLTypes['poap_holders_aggregate_bool_exp_count'];
  /** aggregate fields of "poap_holders" */
  ['poap_holders_aggregate_fields']: {
    avg?: GraphQLTypes['poap_holders_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['poap_holders_max_fields'] | undefined;
    min?: GraphQLTypes['poap_holders_min_fields'] | undefined;
    stddev?: GraphQLTypes['poap_holders_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['poap_holders_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['poap_holders_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['poap_holders_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['poap_holders_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['poap_holders_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['poap_holders_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "poap_holders" */
  ['poap_holders_aggregate_order_by']: GraphQLTypes['poap_holders_aggregate_order_by'];
  /** aggregate avg on columns */
  ['poap_holders_avg_fields']: {
    event_id?: number | undefined;
    id?: number | undefined;
    token_id?: number | undefined;
  };
  /** order by avg() on columns of table "poap_holders" */
  ['poap_holders_avg_order_by']: GraphQLTypes['poap_holders_avg_order_by'];
  /** Boolean expression to filter rows from the table "poap_holders". All fields are combined with a logical 'AND'. */
  ['poap_holders_bool_exp']: GraphQLTypes['poap_holders_bool_exp'];
  /** aggregate max on columns */
  ['poap_holders_max_fields']: {
    address?: GraphQLTypes['citext'] | undefined;
    chain?: string | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    event_id?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    poap_created?: GraphQLTypes['timestamptz'] | undefined;
    token_id?: GraphQLTypes['bigint'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by max() on columns of table "poap_holders" */
  ['poap_holders_max_order_by']: GraphQLTypes['poap_holders_max_order_by'];
  /** aggregate min on columns */
  ['poap_holders_min_fields']: {
    address?: GraphQLTypes['citext'] | undefined;
    chain?: string | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    event_id?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    poap_created?: GraphQLTypes['timestamptz'] | undefined;
    token_id?: GraphQLTypes['bigint'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by min() on columns of table "poap_holders" */
  ['poap_holders_min_order_by']: GraphQLTypes['poap_holders_min_order_by'];
  /** Ordering options when selecting data from "poap_holders". */
  ['poap_holders_order_by']: GraphQLTypes['poap_holders_order_by'];
  /** select columns of table "poap_holders" */
  ['poap_holders_select_column']: GraphQLTypes['poap_holders_select_column'];
  /** aggregate stddev on columns */
  ['poap_holders_stddev_fields']: {
    event_id?: number | undefined;
    id?: number | undefined;
    token_id?: number | undefined;
  };
  /** order by stddev() on columns of table "poap_holders" */
  ['poap_holders_stddev_order_by']: GraphQLTypes['poap_holders_stddev_order_by'];
  /** aggregate stddev_pop on columns */
  ['poap_holders_stddev_pop_fields']: {
    event_id?: number | undefined;
    id?: number | undefined;
    token_id?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "poap_holders" */
  ['poap_holders_stddev_pop_order_by']: GraphQLTypes['poap_holders_stddev_pop_order_by'];
  /** aggregate stddev_samp on columns */
  ['poap_holders_stddev_samp_fields']: {
    event_id?: number | undefined;
    id?: number | undefined;
    token_id?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "poap_holders" */
  ['poap_holders_stddev_samp_order_by']: GraphQLTypes['poap_holders_stddev_samp_order_by'];
  /** Streaming cursor of the table "poap_holders" */
  ['poap_holders_stream_cursor_input']: GraphQLTypes['poap_holders_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['poap_holders_stream_cursor_value_input']: GraphQLTypes['poap_holders_stream_cursor_value_input'];
  /** aggregate sum on columns */
  ['poap_holders_sum_fields']: {
    event_id?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    token_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by sum() on columns of table "poap_holders" */
  ['poap_holders_sum_order_by']: GraphQLTypes['poap_holders_sum_order_by'];
  /** aggregate var_pop on columns */
  ['poap_holders_var_pop_fields']: {
    event_id?: number | undefined;
    id?: number | undefined;
    token_id?: number | undefined;
  };
  /** order by var_pop() on columns of table "poap_holders" */
  ['poap_holders_var_pop_order_by']: GraphQLTypes['poap_holders_var_pop_order_by'];
  /** aggregate var_samp on columns */
  ['poap_holders_var_samp_fields']: {
    event_id?: number | undefined;
    id?: number | undefined;
    token_id?: number | undefined;
  };
  /** order by var_samp() on columns of table "poap_holders" */
  ['poap_holders_var_samp_order_by']: GraphQLTypes['poap_holders_var_samp_order_by'];
  /** aggregate variance on columns */
  ['poap_holders_variance_fields']: {
    event_id?: number | undefined;
    id?: number | undefined;
    token_id?: number | undefined;
  };
  /** order by variance() on columns of table "poap_holders" */
  ['poap_holders_variance_order_by']: GraphQLTypes['poap_holders_variance_order_by'];
  /** columns and relationships of "private_stream_visibility" */
  ['private_stream_visibility']: {
    created_at: GraphQLTypes['timestamptz'];
    profile_id: GraphQLTypes['bigint'];
    view_profile_id: GraphQLTypes['bigint'];
  };
  /** order by aggregate values of table "private_stream_visibility" */
  ['private_stream_visibility_aggregate_order_by']: GraphQLTypes['private_stream_visibility_aggregate_order_by'];
  /** order by avg() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_avg_order_by']: GraphQLTypes['private_stream_visibility_avg_order_by'];
  /** Boolean expression to filter rows from the table "private_stream_visibility". All fields are combined with a logical 'AND'. */
  ['private_stream_visibility_bool_exp']: GraphQLTypes['private_stream_visibility_bool_exp'];
  /** order by max() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_max_order_by']: GraphQLTypes['private_stream_visibility_max_order_by'];
  /** order by min() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_min_order_by']: GraphQLTypes['private_stream_visibility_min_order_by'];
  /** Ordering options when selecting data from "private_stream_visibility". */
  ['private_stream_visibility_order_by']: GraphQLTypes['private_stream_visibility_order_by'];
  /** select columns of table "private_stream_visibility" */
  ['private_stream_visibility_select_column']: GraphQLTypes['private_stream_visibility_select_column'];
  /** order by stddev() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_stddev_order_by']: GraphQLTypes['private_stream_visibility_stddev_order_by'];
  /** order by stddev_pop() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_stddev_pop_order_by']: GraphQLTypes['private_stream_visibility_stddev_pop_order_by'];
  /** order by stddev_samp() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_stddev_samp_order_by']: GraphQLTypes['private_stream_visibility_stddev_samp_order_by'];
  /** Streaming cursor of the table "private_stream_visibility" */
  ['private_stream_visibility_stream_cursor_input']: GraphQLTypes['private_stream_visibility_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['private_stream_visibility_stream_cursor_value_input']: GraphQLTypes['private_stream_visibility_stream_cursor_value_input'];
  /** order by sum() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_sum_order_by']: GraphQLTypes['private_stream_visibility_sum_order_by'];
  /** order by var_pop() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_var_pop_order_by']: GraphQLTypes['private_stream_visibility_var_pop_order_by'];
  /** order by var_samp() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_var_samp_order_by']: GraphQLTypes['private_stream_visibility_var_samp_order_by'];
  /** order by variance() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_variance_order_by']: GraphQLTypes['private_stream_visibility_variance_order_by'];
  /** columns and relationships of "profile_skills" */
  ['profile_skills']: {
    created_at: GraphQLTypes['timestamptz'];
    /** An object relationship */
    profile?: GraphQLTypes['profiles'] | undefined;
    profile_id: number;
    /** An object relationship */
    profile_public?: GraphQLTypes['profiles_public'] | undefined;
    /** An object relationship */
    skill?: GraphQLTypes['skills'] | undefined;
    skill_name: GraphQLTypes['citext'];
  };
  /** order by aggregate values of table "profile_skills" */
  ['profile_skills_aggregate_order_by']: GraphQLTypes['profile_skills_aggregate_order_by'];
  /** order by avg() on columns of table "profile_skills" */
  ['profile_skills_avg_order_by']: GraphQLTypes['profile_skills_avg_order_by'];
  /** Boolean expression to filter rows from the table "profile_skills". All fields are combined with a logical 'AND'. */
  ['profile_skills_bool_exp']: GraphQLTypes['profile_skills_bool_exp'];
  /** unique or primary key constraints on table "profile_skills" */
  ['profile_skills_constraint']: GraphQLTypes['profile_skills_constraint'];
  /** input type for inserting data into table "profile_skills" */
  ['profile_skills_insert_input']: GraphQLTypes['profile_skills_insert_input'];
  /** order by max() on columns of table "profile_skills" */
  ['profile_skills_max_order_by']: GraphQLTypes['profile_skills_max_order_by'];
  /** order by min() on columns of table "profile_skills" */
  ['profile_skills_min_order_by']: GraphQLTypes['profile_skills_min_order_by'];
  /** response of any mutation on the table "profile_skills" */
  ['profile_skills_mutation_response']: {
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['profile_skills']>;
  };
  /** input type for inserting object relation for remote table "profile_skills" */
  ['profile_skills_obj_rel_insert_input']: GraphQLTypes['profile_skills_obj_rel_insert_input'];
  /** on_conflict condition type for table "profile_skills" */
  ['profile_skills_on_conflict']: GraphQLTypes['profile_skills_on_conflict'];
  /** Ordering options when selecting data from "profile_skills". */
  ['profile_skills_order_by']: GraphQLTypes['profile_skills_order_by'];
  /** select columns of table "profile_skills" */
  ['profile_skills_select_column']: GraphQLTypes['profile_skills_select_column'];
  /** order by stddev() on columns of table "profile_skills" */
  ['profile_skills_stddev_order_by']: GraphQLTypes['profile_skills_stddev_order_by'];
  /** order by stddev_pop() on columns of table "profile_skills" */
  ['profile_skills_stddev_pop_order_by']: GraphQLTypes['profile_skills_stddev_pop_order_by'];
  /** order by stddev_samp() on columns of table "profile_skills" */
  ['profile_skills_stddev_samp_order_by']: GraphQLTypes['profile_skills_stddev_samp_order_by'];
  /** Streaming cursor of the table "profile_skills" */
  ['profile_skills_stream_cursor_input']: GraphQLTypes['profile_skills_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['profile_skills_stream_cursor_value_input']: GraphQLTypes['profile_skills_stream_cursor_value_input'];
  /** order by sum() on columns of table "profile_skills" */
  ['profile_skills_sum_order_by']: GraphQLTypes['profile_skills_sum_order_by'];
  /** placeholder for update columns of table "profile_skills" (current role has no relevant permissions) */
  ['profile_skills_update_column']: GraphQLTypes['profile_skills_update_column'];
  /** order by var_pop() on columns of table "profile_skills" */
  ['profile_skills_var_pop_order_by']: GraphQLTypes['profile_skills_var_pop_order_by'];
  /** order by var_samp() on columns of table "profile_skills" */
  ['profile_skills_var_samp_order_by']: GraphQLTypes['profile_skills_var_samp_order_by'];
  /** order by variance() on columns of table "profile_skills" */
  ['profile_skills_variance_order_by']: GraphQLTypes['profile_skills_variance_order_by'];
  /** Coordinape user accounts that can belong to one or many circles via the relationship to the users table */
  ['profiles']: {
    address: string;
    app_emails: boolean;
    avatar?: string | undefined;
    background?: string | undefined;
    bio?: string | undefined;
    /** An array relationship */
    claims: Array<GraphQLTypes['claims']>;
    /** An aggregate relationship */
    claims_aggregate: GraphQLTypes['claims_aggregate'];
    /** An array relationship */
    colinks_gives_received: Array<GraphQLTypes['colinks_gives']>;
    /** An aggregate relationship */
    colinks_gives_received_aggregate: GraphQLTypes['colinks_gives_aggregate'];
    /** An array relationship */
    colinks_gives_sent: Array<GraphQLTypes['colinks_gives']>;
    /** An aggregate relationship */
    colinks_gives_sent_aggregate: GraphQLTypes['colinks_gives_aggregate'];
    colinks_notification_emails: boolean;
    colinks_product_emails: boolean;
    /** An object relationship */
    cosoul?: GraphQLTypes['cosouls'] | undefined;
    created_at: GraphQLTypes['timestamp'];
    description?: string | undefined;
    discord_username?: string | undefined;
    /** An array relationship */
    distributions: Array<GraphQLTypes['distributions']>;
    /** An aggregate relationship */
    distributions_aggregate: GraphQLTypes['distributions_aggregate'];
    /** An array relationship */
    emails: Array<GraphQLTypes['emails']>;
    /** An object relationship */
    farcaster_account?: GraphQLTypes['farcaster_accounts'] | undefined;
    github_username?: string | undefined;
    id: GraphQLTypes['bigint'];
    invite_code: GraphQLTypes['uuid'];
    invite_code_redeemed_at?: GraphQLTypes['timestamptz'] | undefined;
    invite_code_requested_at?: GraphQLTypes['timestamptz'] | undefined;
    invite_code_sent_at?: GraphQLTypes['timestamptz'] | undefined;
    /** An array relationship */
    invite_codes: Array<GraphQLTypes['invite_codes']>;
    /** An aggregate relationship */
    invite_codes_aggregate: GraphQLTypes['invite_codes_aggregate'];
    invited_by?: GraphQLTypes['bigint'] | undefined;
    last_read_notification_id?: number | undefined;
    links: number;
    links_held: number;
    medium_username?: string | undefined;
    name: GraphQLTypes['citext'];
    /** An array relationship */
    nominees: Array<GraphQLTypes['nominees']>;
    /** An aggregate relationship */
    nominees_aggregate: GraphQLTypes['nominees_aggregate'];
    /** An array relationship */
    org_members: Array<GraphQLTypes['org_members']>;
    product_emails: boolean;
    /** An object relationship */
    profile_skills?: GraphQLTypes['profile_skills'] | undefined;
    /** An object relationship */
    reputation_score?: GraphQLTypes['reputation_scores'] | undefined;
    skills?: string | undefined;
    telegram_username?: string | undefined;
    tos_agreed_at?: GraphQLTypes['timestamp'] | undefined;
    twitter_username?: string | undefined;
    updated_at: GraphQLTypes['timestamp'];
    /** An array relationship */
    users: Array<GraphQLTypes['users']>;
    /** An array relationship */
    vault_transactions: Array<GraphQLTypes['vault_transactions']>;
    /** An array relationship */
    vaults: Array<GraphQLTypes['vaults']>;
    website?: string | undefined;
  };
  /** Boolean expression to filter rows from the table "profiles". All fields are combined with a logical 'AND'. */
  ['profiles_bool_exp']: GraphQLTypes['profiles_bool_exp'];
  /** input type for incrementing numeric columns in table "profiles" */
  ['profiles_inc_input']: GraphQLTypes['profiles_inc_input'];
  /** response of any mutation on the table "profiles" */
  ['profiles_mutation_response']: {
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['profiles']>;
  };
  /** Ordering options when selecting data from "profiles". */
  ['profiles_order_by']: GraphQLTypes['profiles_order_by'];
  /** primary key columns input for table: profiles */
  ['profiles_pk_columns_input']: GraphQLTypes['profiles_pk_columns_input'];
  /** columns and relationships of "profiles_private" */
  ['profiles_private']: {
    address?: string | undefined;
    device_login_token?: GraphQLTypes['uuid'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    points_balance?: GraphQLTypes['float8'] | undefined;
    points_checkpointed_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** Boolean expression to filter rows from the table "profiles_private". All fields are combined with a logical 'AND'. */
  ['profiles_private_bool_exp']: GraphQLTypes['profiles_private_bool_exp'];
  /** response of any mutation on the table "profiles_private" */
  ['profiles_private_mutation_response']: {
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['profiles_private']>;
  };
  /** Ordering options when selecting data from "profiles_private". */
  ['profiles_private_order_by']: GraphQLTypes['profiles_private_order_by'];
  /** select columns of table "profiles_private" */
  ['profiles_private_select_column']: GraphQLTypes['profiles_private_select_column'];
  /** input type for updating data in table "profiles_private" */
  ['profiles_private_set_input']: GraphQLTypes['profiles_private_set_input'];
  /** Streaming cursor of the table "profiles_private" */
  ['profiles_private_stream_cursor_input']: GraphQLTypes['profiles_private_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['profiles_private_stream_cursor_value_input']: GraphQLTypes['profiles_private_stream_cursor_value_input'];
  ['profiles_private_updates']: GraphQLTypes['profiles_private_updates'];
  /** columns and relationships of "profiles_public" */
  ['profiles_public']: {
    address?: string | undefined;
    avatar?: string | undefined;
    /** An array relationship */
    colinks_given: Array<GraphQLTypes['colinks_gives']>;
    /** An aggregate relationship */
    colinks_given_aggregate: GraphQLTypes['colinks_gives_aggregate'];
    /** An array relationship */
    colinks_gives: Array<GraphQLTypes['colinks_gives']>;
    /** An aggregate relationship */
    colinks_gives_aggregate: GraphQLTypes['colinks_gives_aggregate'];
    /** An object relationship */
    cosoul?: GraphQLTypes['cosouls'] | undefined;
    created_at?: GraphQLTypes['timestamp'] | undefined;
    description?: string | undefined;
    /** An object relationship */
    farcaster_account?: GraphQLTypes['farcaster_accounts'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    joined_colinks_at?: GraphQLTypes['timestamptz'] | undefined;
    /** An array relationship */
    link_holder: Array<GraphQLTypes['link_holders']>;
    /** An aggregate relationship */
    link_holder_aggregate: GraphQLTypes['link_holders_aggregate'];
    /** An array relationship */
    link_target: Array<GraphQLTypes['link_holders']>;
    /** An aggregate relationship */
    link_target_aggregate: GraphQLTypes['link_holders_aggregate'];
    links?: number | undefined;
    links_held?: number | undefined;
    /** An array relationship */
    mutes: Array<GraphQLTypes['mutes']>;
    name?: GraphQLTypes['citext'] | undefined;
    post_count?: GraphQLTypes['bigint'] | undefined;
    post_count_last_30_days?: GraphQLTypes['bigint'] | undefined;
    /** An array relationship */
    profile_skills: Array<GraphQLTypes['profile_skills']>;
    /** An object relationship */
    reputation_score?: GraphQLTypes['reputation_scores'] | undefined;
    website?: string | undefined;
  };
  /** Boolean expression to filter rows from the table "profiles_public". All fields are combined with a logical 'AND'. */
  ['profiles_public_bool_exp']: GraphQLTypes['profiles_public_bool_exp'];
  /** Ordering options when selecting data from "profiles_public". */
  ['profiles_public_order_by']: GraphQLTypes['profiles_public_order_by'];
  /** select columns of table "profiles_public" */
  ['profiles_public_select_column']: GraphQLTypes['profiles_public_select_column'];
  /** Streaming cursor of the table "profiles_public" */
  ['profiles_public_stream_cursor_input']: GraphQLTypes['profiles_public_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['profiles_public_stream_cursor_value_input']: GraphQLTypes['profiles_public_stream_cursor_value_input'];
  /** select columns of table "profiles" */
  ['profiles_select_column']: GraphQLTypes['profiles_select_column'];
  /** input type for updating data in table "profiles" */
  ['profiles_set_input']: GraphQLTypes['profiles_set_input'];
  /** Streaming cursor of the table "profiles" */
  ['profiles_stream_cursor_input']: GraphQLTypes['profiles_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['profiles_stream_cursor_value_input']: GraphQLTypes['profiles_stream_cursor_value_input'];
  ['profiles_updates']: GraphQLTypes['profiles_updates'];
  ['query_root']: {
    /** An array relationship */
    activities: Array<GraphQLTypes['activities']>;
    /** An aggregate relationship */
    activities_aggregate: GraphQLTypes['activities_aggregate'];
    /** fetch data from the table: "activities" using primary key columns */
    activities_by_pk?: GraphQLTypes['activities'] | undefined;
    /** fetch data from the table: "big_questions" */
    big_questions: Array<GraphQLTypes['big_questions']>;
    /** fetch data from the table: "big_questions" using primary key columns */
    big_questions_by_pk?: GraphQLTypes['big_questions'] | undefined;
    /** An array relationship */
    burns: Array<GraphQLTypes['burns']>;
    /** fetch data from the table: "burns" using primary key columns */
    burns_by_pk?: GraphQLTypes['burns'] | undefined;
    /** checkEthDenverInvitee */
    checkEthDenverInvitee?:
      | GraphQLTypes['CheckEthDenverInviteeOutput']
      | undefined;
    /** An array relationship */
    circle_api_keys: Array<GraphQLTypes['circle_api_keys']>;
    /** fetch data from the table: "circle_api_keys" using primary key columns */
    circle_api_keys_by_pk?: GraphQLTypes['circle_api_keys'] | undefined;
    /** fetch data from the table: "circle_integrations" */
    circle_integrations: Array<GraphQLTypes['circle_integrations']>;
    /** fetch data from the table: "circle_integrations" using primary key columns */
    circle_integrations_by_pk?: GraphQLTypes['circle_integrations'] | undefined;
    /** fetch data from the table: "circle_private" */
    circle_private: Array<GraphQLTypes['circle_private']>;
    /** fetch data from the table: "circle_share_tokens" */
    circle_share_tokens: Array<GraphQLTypes['circle_share_tokens']>;
    /** fetch data from the table: "circle_share_tokens" using primary key columns */
    circle_share_tokens_by_pk?: GraphQLTypes['circle_share_tokens'] | undefined;
    /** An array relationship */
    circles: Array<GraphQLTypes['circles']>;
    /** fetch data from the table: "circles" using primary key columns */
    circles_by_pk?: GraphQLTypes['circles'] | undefined;
    /** An array relationship */
    claims: Array<GraphQLTypes['claims']>;
    /** An aggregate relationship */
    claims_aggregate: GraphQLTypes['claims_aggregate'];
    /** fetch data from the table: "claims" using primary key columns */
    claims_by_pk?: GraphQLTypes['claims'] | undefined;
    /** An array relationship */
    colinks_gives: Array<GraphQLTypes['colinks_gives']>;
    /** An aggregate relationship */
    colinks_gives_aggregate: GraphQLTypes['colinks_gives_aggregate'];
    /** fetch data from the table: "colinks_gives" using primary key columns */
    colinks_gives_by_pk?: GraphQLTypes['colinks_gives'] | undefined;
    /** fetch data from the table: "contribution_count" */
    contribution_count: Array<GraphQLTypes['contribution_count']>;
    /** An array relationship */
    contributions: Array<GraphQLTypes['contributions']>;
    /** An aggregate relationship */
    contributions_aggregate: GraphQLTypes['contributions_aggregate'];
    /** fetch data from the table: "contributions" using primary key columns */
    contributions_by_pk?: GraphQLTypes['contributions'] | undefined;
    /** fetch data from the table: "cosouls" */
    cosouls: Array<GraphQLTypes['cosouls']>;
    /** fetch data from the table: "cosouls" using primary key columns */
    cosouls_by_pk?: GraphQLTypes['cosouls'] | undefined;
    /** An array relationship */
    distributions: Array<GraphQLTypes['distributions']>;
    /** An aggregate relationship */
    distributions_aggregate: GraphQLTypes['distributions_aggregate'];
    /** fetch data from the table: "distributions" using primary key columns */
    distributions_by_pk?: GraphQLTypes['distributions'] | undefined;
    /** An array relationship */
    emails: Array<GraphQLTypes['emails']>;
    /** fetch data from the table: "enriched_casts" */
    enriched_casts: Array<GraphQLTypes['enriched_casts']>;
    /** fetch data from the table: "enriched_casts" using primary key columns */
    enriched_casts_by_pk?: GraphQLTypes['enriched_casts'] | undefined;
    /** fetch data from the table: "epoch_pgive_data" */
    epoch_pgive_data: Array<GraphQLTypes['epoch_pgive_data']>;
    /** fetch data from the table: "epoch_pgive_data" using primary key columns */
    epoch_pgive_data_by_pk?: GraphQLTypes['epoch_pgive_data'] | undefined;
    /** An array relationship */
    epochs: Array<GraphQLTypes['epochs']>;
    /** fetch data from the table: "epoches" using primary key columns */
    epochs_by_pk?: GraphQLTypes['epochs'] | undefined;
    /** fetch data from the table: "farcaster_accounts" */
    farcaster_accounts: Array<GraphQLTypes['farcaster_accounts']>;
    /** fetch data from the table: "farcaster_accounts" using primary key columns */
    farcaster_accounts_by_pk?: GraphQLTypes['farcaster_accounts'] | undefined;
    /** fetch data from the table: "farcaster.casts" */
    farcaster_casts: Array<GraphQLTypes['farcaster_casts']>;
    /** fetch aggregated fields from the table: "farcaster.casts" */
    farcaster_casts_aggregate: GraphQLTypes['farcaster_casts_aggregate'];
    /** fetch data from the table: "farcaster.casts" using primary key columns */
    farcaster_casts_by_pk?: GraphQLTypes['farcaster_casts'] | undefined;
    /** fetch data from the table: "farcaster.reactions" */
    farcaster_reactions: Array<GraphQLTypes['farcaster_reactions']>;
    /** fetch aggregated fields from the table: "farcaster.reactions" */
    farcaster_reactions_aggregate: GraphQLTypes['farcaster_reactions_aggregate'];
    /** fetch data from the table: "farcaster.reactions" using primary key columns */
    farcaster_reactions_by_pk?: GraphQLTypes['farcaster_reactions'] | undefined;
    /** getCasts */
    getCasts: GraphQLTypes['GetCastsOutput'];
    getGuildInfo?: GraphQLTypes['GuildInfoOutput'] | undefined;
    getHeadlines: Array<GraphQLTypes['HeadlinesOutput']>;
    getSimilarProfiles: Array<GraphQLTypes['SimilarProfileOutput']>;
    /** fetch data from the table: "gift_private" */
    gift_private: Array<GraphQLTypes['gift_private']>;
    /** fetch data from the table: "github_accounts" */
    github_accounts: Array<GraphQLTypes['github_accounts']>;
    /** fetch data from the table: "github_accounts" using primary key columns */
    github_accounts_by_pk?: GraphQLTypes['github_accounts'] | undefined;
    /** An array relationship */
    histories: Array<GraphQLTypes['histories']>;
    /** fetch data from the table: "histories" using primary key columns */
    histories_by_pk?: GraphQLTypes['histories'] | undefined;
    /** An array relationship */
    invite_codes: Array<GraphQLTypes['invite_codes']>;
    /** An aggregate relationship */
    invite_codes_aggregate: GraphQLTypes['invite_codes_aggregate'];
    /** fetch data from the table: "invite_codes" using primary key columns */
    invite_codes_by_pk?: GraphQLTypes['invite_codes'] | undefined;
    /** An array relationship */
    link_holders: Array<GraphQLTypes['link_holders']>;
    /** An aggregate relationship */
    link_holders_aggregate: GraphQLTypes['link_holders_aggregate'];
    /** fetch data from the table: "link_holders" using primary key columns */
    link_holders_by_pk?: GraphQLTypes['link_holders'] | undefined;
    /** fetch data from the table: "link_tx" */
    link_tx: Array<GraphQLTypes['link_tx']>;
    /** fetch data from the table: "link_tx" using primary key columns */
    link_tx_by_pk?: GraphQLTypes['link_tx'] | undefined;
    /** fetch data from the table: "linkedin_accounts" */
    linkedin_accounts: Array<GraphQLTypes['linkedin_accounts']>;
    /** fetch data from the table: "linkedin_accounts" using primary key columns */
    linkedin_accounts_by_pk?: GraphQLTypes['linkedin_accounts'] | undefined;
    /** An array relationship */
    locked_token_distribution_gifts: Array<
      GraphQLTypes['locked_token_distribution_gifts']
    >;
    /** fetch data from the table: "locked_token_distribution_gifts" using primary key columns */
    locked_token_distribution_gifts_by_pk?:
      | GraphQLTypes['locked_token_distribution_gifts']
      | undefined;
    /** fetch data from the table: "locked_token_distributions" */
    locked_token_distributions: Array<
      GraphQLTypes['locked_token_distributions']
    >;
    /** fetch data from the table: "locked_token_distributions" using primary key columns */
    locked_token_distributions_by_pk?:
      | GraphQLTypes['locked_token_distributions']
      | undefined;
    /** fetch data from the table: "member_circle_pgives" */
    member_circle_pgives: Array<GraphQLTypes['member_circle_pgives']>;
    /** An array relationship */
    member_epoch_pgives: Array<GraphQLTypes['member_epoch_pgives']>;
    /** An aggregate relationship */
    member_epoch_pgives_aggregate: GraphQLTypes['member_epoch_pgives_aggregate'];
    /** fetch data from the table: "member_epoch_pgives" using primary key columns */
    member_epoch_pgives_by_pk?: GraphQLTypes['member_epoch_pgives'] | undefined;
    /** An array relationship */
    mutes: Array<GraphQLTypes['mutes']>;
    /** fetch data from the table: "mutes" using primary key columns */
    mutes_by_pk?: GraphQLTypes['mutes'] | undefined;
    /** fetch data from the table: "nft_collections" */
    nft_collections: Array<GraphQLTypes['nft_collections']>;
    /** fetch data from the table: "nft_holdings" */
    nft_holdings: Array<GraphQLTypes['nft_holdings']>;
    /** An array relationship */
    nominees: Array<GraphQLTypes['nominees']>;
    /** An aggregate relationship */
    nominees_aggregate: GraphQLTypes['nominees_aggregate'];
    /** fetch data from the table: "nominees" using primary key columns */
    nominees_by_pk?: GraphQLTypes['nominees'] | undefined;
    /** fetch data from the table: "note_count" */
    note_count: Array<GraphQLTypes['note_count']>;
    /** fetch data from the table: "notifications" */
    notifications: Array<GraphQLTypes['notifications']>;
    /** fetch aggregated fields from the table: "notifications" */
    notifications_aggregate: GraphQLTypes['notifications_aggregate'];
    /** fetch data from the table: "notifications" using primary key columns */
    notifications_by_pk?: GraphQLTypes['notifications'] | undefined;
    /** An array relationship */
    org_members: Array<GraphQLTypes['org_members']>;
    /** fetch data from the table: "org_members" using primary key columns */
    org_members_by_pk?: GraphQLTypes['org_members'] | undefined;
    /** fetch data from the table: "org_share_tokens" */
    org_share_tokens: Array<GraphQLTypes['org_share_tokens']>;
    /** fetch data from the table: "org_share_tokens" using primary key columns */
    org_share_tokens_by_pk?: GraphQLTypes['org_share_tokens'] | undefined;
    /** fetch data from the table: "organizations" */
    organizations: Array<GraphQLTypes['organizations']>;
    /** fetch data from the table: "organizations" using primary key columns */
    organizations_by_pk?: GraphQLTypes['organizations'] | undefined;
    /** fetch data from the table: "pending_gift_private" */
    pending_gift_private: Array<GraphQLTypes['pending_gift_private']>;
    /** An array relationship */
    pending_token_gifts: Array<GraphQLTypes['pending_token_gifts']>;
    /** fetch data from the table: "pending_token_gifts" using primary key columns */
    pending_token_gifts_by_pk?: GraphQLTypes['pending_token_gifts'] | undefined;
    /** fetch data from the table: "pending_vault_transactions" */
    pending_vault_transactions: Array<
      GraphQLTypes['pending_vault_transactions']
    >;
    /** fetch data from the table: "pending_vault_transactions" using primary key columns */
    pending_vault_transactions_by_pk?:
      | GraphQLTypes['pending_vault_transactions']
      | undefined;
    /** fetch data from the table: "poap_events" */
    poap_events: Array<GraphQLTypes['poap_events']>;
    /** fetch aggregated fields from the table: "poap_events" */
    poap_events_aggregate: GraphQLTypes['poap_events_aggregate'];
    /** fetch data from the table: "poap_events" using primary key columns */
    poap_events_by_pk?: GraphQLTypes['poap_events'] | undefined;
    /** fetch data from the table: "poap_holders" */
    poap_holders: Array<GraphQLTypes['poap_holders']>;
    /** fetch aggregated fields from the table: "poap_holders" */
    poap_holders_aggregate: GraphQLTypes['poap_holders_aggregate'];
    /** fetch data from the table: "poap_holders" using primary key columns */
    poap_holders_by_pk?: GraphQLTypes['poap_holders'] | undefined;
    /** An array relationship */
    private_stream_visibility: Array<GraphQLTypes['private_stream_visibility']>;
    /** fetch data from the table: "private_stream_visibility" using primary key columns */
    private_stream_visibility_by_pk?:
      | GraphQLTypes['private_stream_visibility']
      | undefined;
    /** An array relationship */
    profile_skills: Array<GraphQLTypes['profile_skills']>;
    /** fetch data from the table: "profile_skills" using primary key columns */
    profile_skills_by_pk?: GraphQLTypes['profile_skills'] | undefined;
    /** fetch data from the table: "profiles" */
    profiles: Array<GraphQLTypes['profiles']>;
    /** fetch data from the table: "profiles" using primary key columns */
    profiles_by_pk?: GraphQLTypes['profiles'] | undefined;
    /** fetch data from the table: "profiles_private" */
    profiles_private: Array<GraphQLTypes['profiles_private']>;
    /** fetch data from the table: "profiles_public" */
    profiles_public: Array<GraphQLTypes['profiles_public']>;
    /** An array relationship */
    reactions: Array<GraphQLTypes['reactions']>;
    /** An aggregate relationship */
    reactions_aggregate: GraphQLTypes['reactions_aggregate'];
    /** fetch data from the table: "reactions" using primary key columns */
    reactions_by_pk?: GraphQLTypes['reactions'] | undefined;
    /** An array relationship */
    replies: Array<GraphQLTypes['replies']>;
    /** An aggregate relationship */
    replies_aggregate: GraphQLTypes['replies_aggregate'];
    /** fetch data from the table: "replies" using primary key columns */
    replies_by_pk?: GraphQLTypes['replies'] | undefined;
    /** fetch data from the table: "replies_reactions" */
    replies_reactions: Array<GraphQLTypes['replies_reactions']>;
    /** fetch aggregated fields from the table: "replies_reactions" */
    replies_reactions_aggregate: GraphQLTypes['replies_reactions_aggregate'];
    /** fetch data from the table: "replies_reactions" using primary key columns */
    replies_reactions_by_pk?: GraphQLTypes['replies_reactions'] | undefined;
    /** fetch data from the table: "reputation_scores" */
    reputation_scores: Array<GraphQLTypes['reputation_scores']>;
    /** fetch data from the table: "reputation_scores" using primary key columns */
    reputation_scores_by_pk?: GraphQLTypes['reputation_scores'] | undefined;
    /** searchCosouls */
    searchCosouls?: GraphQLTypes['SearchCosoulsOutput'] | undefined;
    /** searchProfiles */
    searchProfiles: Array<GraphQLTypes['SearchProfilesOutput']>;
    /** execute function "search_contributions" which returns "contributions" */
    search_contributions: Array<GraphQLTypes['contributions']>;
    /** execute function "search_contributions" and query aggregates on result of table type "contributions" */
    search_contributions_aggregate: GraphQLTypes['contributions_aggregate'];
    /** execute function "search_replies" which returns "replies" */
    search_replies: Array<GraphQLTypes['replies']>;
    /** execute function "search_replies" and query aggregates on result of table type "replies" */
    search_replies_aggregate: GraphQLTypes['replies_aggregate'];
    /** fetch data from the table: "skills" */
    skills: Array<GraphQLTypes['skills']>;
    /** fetch data from the table: "skills" using primary key columns */
    skills_by_pk?: GraphQLTypes['skills'] | undefined;
    /** An array relationship */
    teammates: Array<GraphQLTypes['teammates']>;
    /** fetch data from the table: "teammates" using primary key columns */
    teammates_by_pk?: GraphQLTypes['teammates'] | undefined;
    /** An array relationship */
    token_gifts: Array<GraphQLTypes['token_gifts']>;
    /** An aggregate relationship */
    token_gifts_aggregate: GraphQLTypes['token_gifts_aggregate'];
    /** fetch data from the table: "token_gifts" using primary key columns */
    token_gifts_by_pk?: GraphQLTypes['token_gifts'] | undefined;
    /** fetch data from the table: "twitter_accounts" */
    twitter_accounts: Array<GraphQLTypes['twitter_accounts']>;
    /** fetch data from the table: "twitter_accounts" using primary key columns */
    twitter_accounts_by_pk?: GraphQLTypes['twitter_accounts'] | undefined;
    /** fetch data from the table: "user_private" */
    user_private: Array<GraphQLTypes['user_private']>;
    /** fetch aggregated fields from the table: "user_private" */
    user_private_aggregate: GraphQLTypes['user_private_aggregate'];
    /** An array relationship */
    users: Array<GraphQLTypes['users']>;
    /** fetch data from the table: "users" using primary key columns */
    users_by_pk?: GraphQLTypes['users'] | undefined;
    /** An array relationship */
    vault_transactions: Array<GraphQLTypes['vault_transactions']>;
    /** fetch data from the table: "vault_transactions" using primary key columns */
    vault_transactions_by_pk?: GraphQLTypes['vault_transactions'] | undefined;
    /** fetch data from the table: "vault_tx_types" */
    vault_tx_types: Array<GraphQLTypes['vault_tx_types']>;
    /** fetch data from the table: "vault_tx_types" using primary key columns */
    vault_tx_types_by_pk?: GraphQLTypes['vault_tx_types'] | undefined;
    /** An array relationship */
    vaults: Array<GraphQLTypes['vaults']>;
    /** fetch data from the table: "vaults" using primary key columns */
    vaults_by_pk?: GraphQLTypes['vaults'] | undefined;
    /** execute function "vector_search_poap_events" which returns "poap_events" */
    vector_search_poap_events: Array<GraphQLTypes['poap_events']>;
    /** execute function "vector_search_poap_events" and query aggregates on result of table type "poap_events" */
    vector_search_poap_events_aggregate: GraphQLTypes['poap_events_aggregate'];
    /** execute function "vector_search_poap_holders" which returns "poap_holders" */
    vector_search_poap_holders: Array<GraphQLTypes['poap_holders']>;
    /** execute function "vector_search_poap_holders" and query aggregates on result of table type "poap_holders" */
    vector_search_poap_holders_aggregate: GraphQLTypes['poap_holders_aggregate'];
    /** An array relationship */
    vouches: Array<GraphQLTypes['vouches']>;
    /** fetch data from the table: "vouches" using primary key columns */
    vouches_by_pk?: GraphQLTypes['vouches'] | undefined;
  };
  /** columns and relationships of "reactions" */
  ['reactions']: {
    /** An object relationship */
    activity?: GraphQLTypes['activities'] | undefined;
    activity_id: number;
    created_at: GraphQLTypes['timestamptz'];
    id: GraphQLTypes['bigint'];
    /** An object relationship */
    profile?: GraphQLTypes['profiles'] | undefined;
    profile_id: number;
    /** An object relationship */
    profile_public?: GraphQLTypes['profiles_public'] | undefined;
    reaction: string;
    updated_at: GraphQLTypes['timestamptz'];
  };
  /** aggregated selection of "reactions" */
  ['reactions_aggregate']: {
    aggregate?: GraphQLTypes['reactions_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['reactions']>;
  };
  ['reactions_aggregate_bool_exp']: GraphQLTypes['reactions_aggregate_bool_exp'];
  ['reactions_aggregate_bool_exp_count']: GraphQLTypes['reactions_aggregate_bool_exp_count'];
  /** aggregate fields of "reactions" */
  ['reactions_aggregate_fields']: {
    avg?: GraphQLTypes['reactions_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['reactions_max_fields'] | undefined;
    min?: GraphQLTypes['reactions_min_fields'] | undefined;
    stddev?: GraphQLTypes['reactions_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['reactions_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['reactions_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['reactions_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['reactions_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['reactions_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['reactions_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "reactions" */
  ['reactions_aggregate_order_by']: GraphQLTypes['reactions_aggregate_order_by'];
  /** aggregate avg on columns */
  ['reactions_avg_fields']: {
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by avg() on columns of table "reactions" */
  ['reactions_avg_order_by']: GraphQLTypes['reactions_avg_order_by'];
  /** Boolean expression to filter rows from the table "reactions". All fields are combined with a logical 'AND'. */
  ['reactions_bool_exp']: GraphQLTypes['reactions_bool_exp'];
  /** unique or primary key constraints on table "reactions" */
  ['reactions_constraint']: GraphQLTypes['reactions_constraint'];
  /** input type for inserting data into table "reactions" */
  ['reactions_insert_input']: GraphQLTypes['reactions_insert_input'];
  /** aggregate max on columns */
  ['reactions_max_fields']: {
    activity_id?: number | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: number | undefined;
    reaction?: string | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by max() on columns of table "reactions" */
  ['reactions_max_order_by']: GraphQLTypes['reactions_max_order_by'];
  /** aggregate min on columns */
  ['reactions_min_fields']: {
    activity_id?: number | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: number | undefined;
    reaction?: string | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by min() on columns of table "reactions" */
  ['reactions_min_order_by']: GraphQLTypes['reactions_min_order_by'];
  /** response of any mutation on the table "reactions" */
  ['reactions_mutation_response']: {
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['reactions']>;
  };
  /** on_conflict condition type for table "reactions" */
  ['reactions_on_conflict']: GraphQLTypes['reactions_on_conflict'];
  /** Ordering options when selecting data from "reactions". */
  ['reactions_order_by']: GraphQLTypes['reactions_order_by'];
  /** select columns of table "reactions" */
  ['reactions_select_column']: GraphQLTypes['reactions_select_column'];
  /** aggregate stddev on columns */
  ['reactions_stddev_fields']: {
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by stddev() on columns of table "reactions" */
  ['reactions_stddev_order_by']: GraphQLTypes['reactions_stddev_order_by'];
  /** aggregate stddev_pop on columns */
  ['reactions_stddev_pop_fields']: {
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "reactions" */
  ['reactions_stddev_pop_order_by']: GraphQLTypes['reactions_stddev_pop_order_by'];
  /** aggregate stddev_samp on columns */
  ['reactions_stddev_samp_fields']: {
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "reactions" */
  ['reactions_stddev_samp_order_by']: GraphQLTypes['reactions_stddev_samp_order_by'];
  /** Streaming cursor of the table "reactions" */
  ['reactions_stream_cursor_input']: GraphQLTypes['reactions_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['reactions_stream_cursor_value_input']: GraphQLTypes['reactions_stream_cursor_value_input'];
  /** aggregate sum on columns */
  ['reactions_sum_fields']: {
    activity_id?: number | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: number | undefined;
  };
  /** order by sum() on columns of table "reactions" */
  ['reactions_sum_order_by']: GraphQLTypes['reactions_sum_order_by'];
  /** placeholder for update columns of table "reactions" (current role has no relevant permissions) */
  ['reactions_update_column']: GraphQLTypes['reactions_update_column'];
  /** aggregate var_pop on columns */
  ['reactions_var_pop_fields']: {
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by var_pop() on columns of table "reactions" */
  ['reactions_var_pop_order_by']: GraphQLTypes['reactions_var_pop_order_by'];
  /** aggregate var_samp on columns */
  ['reactions_var_samp_fields']: {
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by var_samp() on columns of table "reactions" */
  ['reactions_var_samp_order_by']: GraphQLTypes['reactions_var_samp_order_by'];
  /** aggregate variance on columns */
  ['reactions_variance_fields']: {
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by variance() on columns of table "reactions" */
  ['reactions_variance_order_by']: GraphQLTypes['reactions_variance_order_by'];
  /** Replies to activity items */
  ['replies']: {
    /** An object relationship */
    activity: GraphQLTypes['activities'];
    activity_actor_id: number;
    activity_id: number;
    created_at: GraphQLTypes['timestamptz'];
    deleted_at?: GraphQLTypes['timestamptz'] | undefined;
    id: GraphQLTypes['bigint'];
    /** An object relationship */
    private_stream_visibility?:
      | GraphQLTypes['private_stream_visibility']
      | undefined;
    /** An object relationship */
    profile: GraphQLTypes['profiles'];
    profile_id: number;
    /** An object relationship */
    profile_public?: GraphQLTypes['profiles_public'] | undefined;
    /** An array relationship */
    reactions: Array<GraphQLTypes['replies_reactions']>;
    /** An aggregate relationship */
    reactions_aggregate: GraphQLTypes['replies_reactions_aggregate'];
    reply: string;
    updated_at: GraphQLTypes['timestamptz'];
  };
  /** aggregated selection of "replies" */
  ['replies_aggregate']: {
    aggregate?: GraphQLTypes['replies_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['replies']>;
  };
  ['replies_aggregate_bool_exp']: GraphQLTypes['replies_aggregate_bool_exp'];
  ['replies_aggregate_bool_exp_count']: GraphQLTypes['replies_aggregate_bool_exp_count'];
  /** aggregate fields of "replies" */
  ['replies_aggregate_fields']: {
    avg?: GraphQLTypes['replies_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['replies_max_fields'] | undefined;
    min?: GraphQLTypes['replies_min_fields'] | undefined;
    stddev?: GraphQLTypes['replies_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['replies_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['replies_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['replies_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['replies_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['replies_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['replies_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "replies" */
  ['replies_aggregate_order_by']: GraphQLTypes['replies_aggregate_order_by'];
  /** aggregate avg on columns */
  ['replies_avg_fields']: {
    activity_actor_id?: number | undefined;
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by avg() on columns of table "replies" */
  ['replies_avg_order_by']: GraphQLTypes['replies_avg_order_by'];
  /** Boolean expression to filter rows from the table "replies". All fields are combined with a logical 'AND'. */
  ['replies_bool_exp']: GraphQLTypes['replies_bool_exp'];
  /** unique or primary key constraints on table "replies" */
  ['replies_constraint']: GraphQLTypes['replies_constraint'];
  /** input type for inserting data into table "replies" */
  ['replies_insert_input']: GraphQLTypes['replies_insert_input'];
  /** aggregate max on columns */
  ['replies_max_fields']: {
    activity_actor_id?: number | undefined;
    activity_id?: number | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    deleted_at?: GraphQLTypes['timestamptz'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: number | undefined;
    reply?: string | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by max() on columns of table "replies" */
  ['replies_max_order_by']: GraphQLTypes['replies_max_order_by'];
  /** aggregate min on columns */
  ['replies_min_fields']: {
    activity_actor_id?: number | undefined;
    activity_id?: number | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    deleted_at?: GraphQLTypes['timestamptz'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: number | undefined;
    reply?: string | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by min() on columns of table "replies" */
  ['replies_min_order_by']: GraphQLTypes['replies_min_order_by'];
  /** response of any mutation on the table "replies" */
  ['replies_mutation_response']: {
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['replies']>;
  };
  /** input type for inserting object relation for remote table "replies" */
  ['replies_obj_rel_insert_input']: GraphQLTypes['replies_obj_rel_insert_input'];
  /** on_conflict condition type for table "replies" */
  ['replies_on_conflict']: GraphQLTypes['replies_on_conflict'];
  /** Ordering options when selecting data from "replies". */
  ['replies_order_by']: GraphQLTypes['replies_order_by'];
  /** primary key columns input for table: replies */
  ['replies_pk_columns_input']: GraphQLTypes['replies_pk_columns_input'];
  /** columns and relationships of "replies_reactions" */
  ['replies_reactions']: {
    /** An object relationship */
    activity?: GraphQLTypes['activities'] | undefined;
    activity_id: number;
    created_at: GraphQLTypes['timestamptz'];
    id: GraphQLTypes['bigint'];
    /** An object relationship */
    profile?: GraphQLTypes['profiles'] | undefined;
    profile_id: number;
    /** An object relationship */
    profile_public?: GraphQLTypes['profiles_public'] | undefined;
    reaction: string;
    /** An object relationship */
    reply?: GraphQLTypes['replies'] | undefined;
    reply_id: number;
    updated_at: GraphQLTypes['timestamptz'];
  };
  /** aggregated selection of "replies_reactions" */
  ['replies_reactions_aggregate']: {
    aggregate?: GraphQLTypes['replies_reactions_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['replies_reactions']>;
  };
  ['replies_reactions_aggregate_bool_exp']: GraphQLTypes['replies_reactions_aggregate_bool_exp'];
  ['replies_reactions_aggregate_bool_exp_count']: GraphQLTypes['replies_reactions_aggregate_bool_exp_count'];
  /** aggregate fields of "replies_reactions" */
  ['replies_reactions_aggregate_fields']: {
    avg?: GraphQLTypes['replies_reactions_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['replies_reactions_max_fields'] | undefined;
    min?: GraphQLTypes['replies_reactions_min_fields'] | undefined;
    stddev?: GraphQLTypes['replies_reactions_stddev_fields'] | undefined;
    stddev_pop?:
      | GraphQLTypes['replies_reactions_stddev_pop_fields']
      | undefined;
    stddev_samp?:
      | GraphQLTypes['replies_reactions_stddev_samp_fields']
      | undefined;
    sum?: GraphQLTypes['replies_reactions_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['replies_reactions_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['replies_reactions_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['replies_reactions_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "replies_reactions" */
  ['replies_reactions_aggregate_order_by']: GraphQLTypes['replies_reactions_aggregate_order_by'];
  /** input type for inserting array relation for remote table "replies_reactions" */
  ['replies_reactions_arr_rel_insert_input']: GraphQLTypes['replies_reactions_arr_rel_insert_input'];
  /** aggregate avg on columns */
  ['replies_reactions_avg_fields']: {
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    reply_id?: number | undefined;
  };
  /** order by avg() on columns of table "replies_reactions" */
  ['replies_reactions_avg_order_by']: GraphQLTypes['replies_reactions_avg_order_by'];
  /** Boolean expression to filter rows from the table "replies_reactions". All fields are combined with a logical 'AND'. */
  ['replies_reactions_bool_exp']: GraphQLTypes['replies_reactions_bool_exp'];
  /** unique or primary key constraints on table "replies_reactions" */
  ['replies_reactions_constraint']: GraphQLTypes['replies_reactions_constraint'];
  /** input type for inserting data into table "replies_reactions" */
  ['replies_reactions_insert_input']: GraphQLTypes['replies_reactions_insert_input'];
  /** aggregate max on columns */
  ['replies_reactions_max_fields']: {
    activity_id?: number | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: number | undefined;
    reaction?: string | undefined;
    reply_id?: number | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by max() on columns of table "replies_reactions" */
  ['replies_reactions_max_order_by']: GraphQLTypes['replies_reactions_max_order_by'];
  /** aggregate min on columns */
  ['replies_reactions_min_fields']: {
    activity_id?: number | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: number | undefined;
    reaction?: string | undefined;
    reply_id?: number | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by min() on columns of table "replies_reactions" */
  ['replies_reactions_min_order_by']: GraphQLTypes['replies_reactions_min_order_by'];
  /** response of any mutation on the table "replies_reactions" */
  ['replies_reactions_mutation_response']: {
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['replies_reactions']>;
  };
  /** on_conflict condition type for table "replies_reactions" */
  ['replies_reactions_on_conflict']: GraphQLTypes['replies_reactions_on_conflict'];
  /** Ordering options when selecting data from "replies_reactions". */
  ['replies_reactions_order_by']: GraphQLTypes['replies_reactions_order_by'];
  /** select columns of table "replies_reactions" */
  ['replies_reactions_select_column']: GraphQLTypes['replies_reactions_select_column'];
  /** aggregate stddev on columns */
  ['replies_reactions_stddev_fields']: {
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    reply_id?: number | undefined;
  };
  /** order by stddev() on columns of table "replies_reactions" */
  ['replies_reactions_stddev_order_by']: GraphQLTypes['replies_reactions_stddev_order_by'];
  /** aggregate stddev_pop on columns */
  ['replies_reactions_stddev_pop_fields']: {
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    reply_id?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "replies_reactions" */
  ['replies_reactions_stddev_pop_order_by']: GraphQLTypes['replies_reactions_stddev_pop_order_by'];
  /** aggregate stddev_samp on columns */
  ['replies_reactions_stddev_samp_fields']: {
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    reply_id?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "replies_reactions" */
  ['replies_reactions_stddev_samp_order_by']: GraphQLTypes['replies_reactions_stddev_samp_order_by'];
  /** Streaming cursor of the table "replies_reactions" */
  ['replies_reactions_stream_cursor_input']: GraphQLTypes['replies_reactions_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['replies_reactions_stream_cursor_value_input']: GraphQLTypes['replies_reactions_stream_cursor_value_input'];
  /** aggregate sum on columns */
  ['replies_reactions_sum_fields']: {
    activity_id?: number | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: number | undefined;
    reply_id?: number | undefined;
  };
  /** order by sum() on columns of table "replies_reactions" */
  ['replies_reactions_sum_order_by']: GraphQLTypes['replies_reactions_sum_order_by'];
  /** placeholder for update columns of table "replies_reactions" (current role has no relevant permissions) */
  ['replies_reactions_update_column']: GraphQLTypes['replies_reactions_update_column'];
  /** aggregate var_pop on columns */
  ['replies_reactions_var_pop_fields']: {
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    reply_id?: number | undefined;
  };
  /** order by var_pop() on columns of table "replies_reactions" */
  ['replies_reactions_var_pop_order_by']: GraphQLTypes['replies_reactions_var_pop_order_by'];
  /** aggregate var_samp on columns */
  ['replies_reactions_var_samp_fields']: {
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    reply_id?: number | undefined;
  };
  /** order by var_samp() on columns of table "replies_reactions" */
  ['replies_reactions_var_samp_order_by']: GraphQLTypes['replies_reactions_var_samp_order_by'];
  /** aggregate variance on columns */
  ['replies_reactions_variance_fields']: {
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    reply_id?: number | undefined;
  };
  /** order by variance() on columns of table "replies_reactions" */
  ['replies_reactions_variance_order_by']: GraphQLTypes['replies_reactions_variance_order_by'];
  /** select columns of table "replies" */
  ['replies_select_column']: GraphQLTypes['replies_select_column'];
  /** input type for updating data in table "replies" */
  ['replies_set_input']: GraphQLTypes['replies_set_input'];
  /** aggregate stddev on columns */
  ['replies_stddev_fields']: {
    activity_actor_id?: number | undefined;
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by stddev() on columns of table "replies" */
  ['replies_stddev_order_by']: GraphQLTypes['replies_stddev_order_by'];
  /** aggregate stddev_pop on columns */
  ['replies_stddev_pop_fields']: {
    activity_actor_id?: number | undefined;
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "replies" */
  ['replies_stddev_pop_order_by']: GraphQLTypes['replies_stddev_pop_order_by'];
  /** aggregate stddev_samp on columns */
  ['replies_stddev_samp_fields']: {
    activity_actor_id?: number | undefined;
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "replies" */
  ['replies_stddev_samp_order_by']: GraphQLTypes['replies_stddev_samp_order_by'];
  /** Streaming cursor of the table "replies" */
  ['replies_stream_cursor_input']: GraphQLTypes['replies_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['replies_stream_cursor_value_input']: GraphQLTypes['replies_stream_cursor_value_input'];
  /** aggregate sum on columns */
  ['replies_sum_fields']: {
    activity_actor_id?: number | undefined;
    activity_id?: number | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: number | undefined;
  };
  /** order by sum() on columns of table "replies" */
  ['replies_sum_order_by']: GraphQLTypes['replies_sum_order_by'];
  /** update columns of table "replies" */
  ['replies_update_column']: GraphQLTypes['replies_update_column'];
  ['replies_updates']: GraphQLTypes['replies_updates'];
  /** aggregate var_pop on columns */
  ['replies_var_pop_fields']: {
    activity_actor_id?: number | undefined;
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by var_pop() on columns of table "replies" */
  ['replies_var_pop_order_by']: GraphQLTypes['replies_var_pop_order_by'];
  /** aggregate var_samp on columns */
  ['replies_var_samp_fields']: {
    activity_actor_id?: number | undefined;
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by var_samp() on columns of table "replies" */
  ['replies_var_samp_order_by']: GraphQLTypes['replies_var_samp_order_by'];
  /** aggregate variance on columns */
  ['replies_variance_fields']: {
    activity_actor_id?: number | undefined;
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by variance() on columns of table "replies" */
  ['replies_variance_order_by']: GraphQLTypes['replies_variance_order_by'];
  /** columns and relationships of "reputation_scores" */
  ['reputation_scores']: {
    colinks_engagement_score?: number | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    email_score: number;
    farcaster_score: number;
    github_score: number;
    invite_score: number;
    linkedin_score: number;
    links_score: number;
    pgive_score: number;
    poap_score: number;
    profile_id: GraphQLTypes['bigint'];
    social_give_score: number;
    total_score: number;
    twitter_score: number;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** Boolean expression to filter rows from the table "reputation_scores". All fields are combined with a logical 'AND'. */
  ['reputation_scores_bool_exp']: GraphQLTypes['reputation_scores_bool_exp'];
  /** Ordering options when selecting data from "reputation_scores". */
  ['reputation_scores_order_by']: GraphQLTypes['reputation_scores_order_by'];
  /** select columns of table "reputation_scores" */
  ['reputation_scores_select_column']: GraphQLTypes['reputation_scores_select_column'];
  /** Streaming cursor of the table "reputation_scores" */
  ['reputation_scores_stream_cursor_input']: GraphQLTypes['reputation_scores_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['reputation_scores_stream_cursor_value_input']: GraphQLTypes['reputation_scores_stream_cursor_value_input'];
  ['search_contributions_args']: GraphQLTypes['search_contributions_args'];
  ['search_replies_args']: GraphQLTypes['search_replies_args'];
  /** columns and relationships of "skills" */
  ['skills']: {
    count: number;
    created_at: GraphQLTypes['timestamptz'];
    hidden: boolean;
    name: GraphQLTypes['citext'];
    /** An object relationship */
    profile_skills?: GraphQLTypes['profile_skills'] | undefined;
    updated_at: GraphQLTypes['timestamptz'];
  };
  /** Boolean expression to filter rows from the table "skills". All fields are combined with a logical 'AND'. */
  ['skills_bool_exp']: GraphQLTypes['skills_bool_exp'];
  /** unique or primary key constraints on table "skills" */
  ['skills_constraint']: GraphQLTypes['skills_constraint'];
  /** input type for inserting data into table "skills" */
  ['skills_insert_input']: GraphQLTypes['skills_insert_input'];
  /** response of any mutation on the table "skills" */
  ['skills_mutation_response']: {
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['skills']>;
  };
  /** input type for inserting object relation for remote table "skills" */
  ['skills_obj_rel_insert_input']: GraphQLTypes['skills_obj_rel_insert_input'];
  /** on_conflict condition type for table "skills" */
  ['skills_on_conflict']: GraphQLTypes['skills_on_conflict'];
  /** Ordering options when selecting data from "skills". */
  ['skills_order_by']: GraphQLTypes['skills_order_by'];
  /** select columns of table "skills" */
  ['skills_select_column']: GraphQLTypes['skills_select_column'];
  /** Streaming cursor of the table "skills" */
  ['skills_stream_cursor_input']: GraphQLTypes['skills_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['skills_stream_cursor_value_input']: GraphQLTypes['skills_stream_cursor_value_input'];
  /** placeholder for update columns of table "skills" (current role has no relevant permissions) */
  ['skills_update_column']: GraphQLTypes['skills_update_column'];
  ['smallint']: any;
  /** Boolean expression to compare columns of type "smallint". All fields are combined with logical 'AND'. */
  ['smallint_array_comparison_exp']: GraphQLTypes['smallint_array_comparison_exp'];
  /** Boolean expression to compare columns of type "smallint". All fields are combined with logical 'AND'. */
  ['smallint_comparison_exp']: GraphQLTypes['smallint_comparison_exp'];
  ['subscription_root']: {
    /** An array relationship */
    activities: Array<GraphQLTypes['activities']>;
    /** An aggregate relationship */
    activities_aggregate: GraphQLTypes['activities_aggregate'];
    /** fetch data from the table: "activities" using primary key columns */
    activities_by_pk?: GraphQLTypes['activities'] | undefined;
    /** fetch data from the table in a streaming manner: "activities" */
    activities_stream: Array<GraphQLTypes['activities']>;
    /** fetch data from the table: "big_questions" */
    big_questions: Array<GraphQLTypes['big_questions']>;
    /** fetch data from the table: "big_questions" using primary key columns */
    big_questions_by_pk?: GraphQLTypes['big_questions'] | undefined;
    /** fetch data from the table in a streaming manner: "big_questions" */
    big_questions_stream: Array<GraphQLTypes['big_questions']>;
    /** An array relationship */
    burns: Array<GraphQLTypes['burns']>;
    /** fetch data from the table: "burns" using primary key columns */
    burns_by_pk?: GraphQLTypes['burns'] | undefined;
    /** fetch data from the table in a streaming manner: "burns" */
    burns_stream: Array<GraphQLTypes['burns']>;
    /** An array relationship */
    circle_api_keys: Array<GraphQLTypes['circle_api_keys']>;
    /** fetch data from the table: "circle_api_keys" using primary key columns */
    circle_api_keys_by_pk?: GraphQLTypes['circle_api_keys'] | undefined;
    /** fetch data from the table in a streaming manner: "circle_api_keys" */
    circle_api_keys_stream: Array<GraphQLTypes['circle_api_keys']>;
    /** fetch data from the table: "circle_integrations" */
    circle_integrations: Array<GraphQLTypes['circle_integrations']>;
    /** fetch data from the table: "circle_integrations" using primary key columns */
    circle_integrations_by_pk?: GraphQLTypes['circle_integrations'] | undefined;
    /** fetch data from the table in a streaming manner: "circle_integrations" */
    circle_integrations_stream: Array<GraphQLTypes['circle_integrations']>;
    /** fetch data from the table: "circle_private" */
    circle_private: Array<GraphQLTypes['circle_private']>;
    /** fetch data from the table in a streaming manner: "circle_private" */
    circle_private_stream: Array<GraphQLTypes['circle_private']>;
    /** fetch data from the table: "circle_share_tokens" */
    circle_share_tokens: Array<GraphQLTypes['circle_share_tokens']>;
    /** fetch data from the table: "circle_share_tokens" using primary key columns */
    circle_share_tokens_by_pk?: GraphQLTypes['circle_share_tokens'] | undefined;
    /** fetch data from the table in a streaming manner: "circle_share_tokens" */
    circle_share_tokens_stream: Array<GraphQLTypes['circle_share_tokens']>;
    /** An array relationship */
    circles: Array<GraphQLTypes['circles']>;
    /** fetch data from the table: "circles" using primary key columns */
    circles_by_pk?: GraphQLTypes['circles'] | undefined;
    /** fetch data from the table in a streaming manner: "circles" */
    circles_stream: Array<GraphQLTypes['circles']>;
    /** An array relationship */
    claims: Array<GraphQLTypes['claims']>;
    /** An aggregate relationship */
    claims_aggregate: GraphQLTypes['claims_aggregate'];
    /** fetch data from the table: "claims" using primary key columns */
    claims_by_pk?: GraphQLTypes['claims'] | undefined;
    /** fetch data from the table in a streaming manner: "claims" */
    claims_stream: Array<GraphQLTypes['claims']>;
    /** An array relationship */
    colinks_gives: Array<GraphQLTypes['colinks_gives']>;
    /** An aggregate relationship */
    colinks_gives_aggregate: GraphQLTypes['colinks_gives_aggregate'];
    /** fetch data from the table: "colinks_gives" using primary key columns */
    colinks_gives_by_pk?: GraphQLTypes['colinks_gives'] | undefined;
    /** fetch data from the table in a streaming manner: "colinks_gives" */
    colinks_gives_stream: Array<GraphQLTypes['colinks_gives']>;
    /** fetch data from the table: "contribution_count" */
    contribution_count: Array<GraphQLTypes['contribution_count']>;
    /** fetch data from the table in a streaming manner: "contribution_count" */
    contribution_count_stream: Array<GraphQLTypes['contribution_count']>;
    /** An array relationship */
    contributions: Array<GraphQLTypes['contributions']>;
    /** An aggregate relationship */
    contributions_aggregate: GraphQLTypes['contributions_aggregate'];
    /** fetch data from the table: "contributions" using primary key columns */
    contributions_by_pk?: GraphQLTypes['contributions'] | undefined;
    /** fetch data from the table in a streaming manner: "contributions" */
    contributions_stream: Array<GraphQLTypes['contributions']>;
    /** fetch data from the table: "cosouls" */
    cosouls: Array<GraphQLTypes['cosouls']>;
    /** fetch data from the table: "cosouls" using primary key columns */
    cosouls_by_pk?: GraphQLTypes['cosouls'] | undefined;
    /** fetch data from the table in a streaming manner: "cosouls" */
    cosouls_stream: Array<GraphQLTypes['cosouls']>;
    /** An array relationship */
    distributions: Array<GraphQLTypes['distributions']>;
    /** An aggregate relationship */
    distributions_aggregate: GraphQLTypes['distributions_aggregate'];
    /** fetch data from the table: "distributions" using primary key columns */
    distributions_by_pk?: GraphQLTypes['distributions'] | undefined;
    /** fetch data from the table in a streaming manner: "distributions" */
    distributions_stream: Array<GraphQLTypes['distributions']>;
    /** An array relationship */
    emails: Array<GraphQLTypes['emails']>;
    /** fetch data from the table in a streaming manner: "emails" */
    emails_stream: Array<GraphQLTypes['emails']>;
    /** fetch data from the table: "enriched_casts" */
    enriched_casts: Array<GraphQLTypes['enriched_casts']>;
    /** fetch data from the table: "enriched_casts" using primary key columns */
    enriched_casts_by_pk?: GraphQLTypes['enriched_casts'] | undefined;
    /** fetch data from the table in a streaming manner: "enriched_casts" */
    enriched_casts_stream: Array<GraphQLTypes['enriched_casts']>;
    /** fetch data from the table: "epoch_pgive_data" */
    epoch_pgive_data: Array<GraphQLTypes['epoch_pgive_data']>;
    /** fetch data from the table: "epoch_pgive_data" using primary key columns */
    epoch_pgive_data_by_pk?: GraphQLTypes['epoch_pgive_data'] | undefined;
    /** fetch data from the table in a streaming manner: "epoch_pgive_data" */
    epoch_pgive_data_stream: Array<GraphQLTypes['epoch_pgive_data']>;
    /** An array relationship */
    epochs: Array<GraphQLTypes['epochs']>;
    /** fetch data from the table: "epoches" using primary key columns */
    epochs_by_pk?: GraphQLTypes['epochs'] | undefined;
    /** fetch data from the table in a streaming manner: "epoches" */
    epochs_stream: Array<GraphQLTypes['epochs']>;
    /** fetch data from the table: "farcaster_accounts" */
    farcaster_accounts: Array<GraphQLTypes['farcaster_accounts']>;
    /** fetch data from the table: "farcaster_accounts" using primary key columns */
    farcaster_accounts_by_pk?: GraphQLTypes['farcaster_accounts'] | undefined;
    /** fetch data from the table in a streaming manner: "farcaster_accounts" */
    farcaster_accounts_stream: Array<GraphQLTypes['farcaster_accounts']>;
    /** fetch data from the table: "farcaster.casts" */
    farcaster_casts: Array<GraphQLTypes['farcaster_casts']>;
    /** fetch aggregated fields from the table: "farcaster.casts" */
    farcaster_casts_aggregate: GraphQLTypes['farcaster_casts_aggregate'];
    /** fetch data from the table: "farcaster.casts" using primary key columns */
    farcaster_casts_by_pk?: GraphQLTypes['farcaster_casts'] | undefined;
    /** fetch data from the table in a streaming manner: "farcaster.casts" */
    farcaster_casts_stream: Array<GraphQLTypes['farcaster_casts']>;
    /** fetch data from the table: "farcaster.reactions" */
    farcaster_reactions: Array<GraphQLTypes['farcaster_reactions']>;
    /** fetch aggregated fields from the table: "farcaster.reactions" */
    farcaster_reactions_aggregate: GraphQLTypes['farcaster_reactions_aggregate'];
    /** fetch data from the table: "farcaster.reactions" using primary key columns */
    farcaster_reactions_by_pk?: GraphQLTypes['farcaster_reactions'] | undefined;
    /** fetch data from the table in a streaming manner: "farcaster.reactions" */
    farcaster_reactions_stream: Array<GraphQLTypes['farcaster_reactions']>;
    /** fetch data from the table: "gift_private" */
    gift_private: Array<GraphQLTypes['gift_private']>;
    /** fetch data from the table in a streaming manner: "gift_private" */
    gift_private_stream: Array<GraphQLTypes['gift_private']>;
    /** fetch data from the table: "github_accounts" */
    github_accounts: Array<GraphQLTypes['github_accounts']>;
    /** fetch data from the table: "github_accounts" using primary key columns */
    github_accounts_by_pk?: GraphQLTypes['github_accounts'] | undefined;
    /** fetch data from the table in a streaming manner: "github_accounts" */
    github_accounts_stream: Array<GraphQLTypes['github_accounts']>;
    /** An array relationship */
    histories: Array<GraphQLTypes['histories']>;
    /** fetch data from the table: "histories" using primary key columns */
    histories_by_pk?: GraphQLTypes['histories'] | undefined;
    /** fetch data from the table in a streaming manner: "histories" */
    histories_stream: Array<GraphQLTypes['histories']>;
    /** An array relationship */
    invite_codes: Array<GraphQLTypes['invite_codes']>;
    /** An aggregate relationship */
    invite_codes_aggregate: GraphQLTypes['invite_codes_aggregate'];
    /** fetch data from the table: "invite_codes" using primary key columns */
    invite_codes_by_pk?: GraphQLTypes['invite_codes'] | undefined;
    /** fetch data from the table in a streaming manner: "invite_codes" */
    invite_codes_stream: Array<GraphQLTypes['invite_codes']>;
    /** An array relationship */
    link_holders: Array<GraphQLTypes['link_holders']>;
    /** An aggregate relationship */
    link_holders_aggregate: GraphQLTypes['link_holders_aggregate'];
    /** fetch data from the table: "link_holders" using primary key columns */
    link_holders_by_pk?: GraphQLTypes['link_holders'] | undefined;
    /** fetch data from the table in a streaming manner: "link_holders" */
    link_holders_stream: Array<GraphQLTypes['link_holders']>;
    /** fetch data from the table: "link_tx" */
    link_tx: Array<GraphQLTypes['link_tx']>;
    /** fetch data from the table: "link_tx" using primary key columns */
    link_tx_by_pk?: GraphQLTypes['link_tx'] | undefined;
    /** fetch data from the table in a streaming manner: "link_tx" */
    link_tx_stream: Array<GraphQLTypes['link_tx']>;
    /** fetch data from the table: "linkedin_accounts" */
    linkedin_accounts: Array<GraphQLTypes['linkedin_accounts']>;
    /** fetch data from the table: "linkedin_accounts" using primary key columns */
    linkedin_accounts_by_pk?: GraphQLTypes['linkedin_accounts'] | undefined;
    /** fetch data from the table in a streaming manner: "linkedin_accounts" */
    linkedin_accounts_stream: Array<GraphQLTypes['linkedin_accounts']>;
    /** An array relationship */
    locked_token_distribution_gifts: Array<
      GraphQLTypes['locked_token_distribution_gifts']
    >;
    /** fetch data from the table: "locked_token_distribution_gifts" using primary key columns */
    locked_token_distribution_gifts_by_pk?:
      | GraphQLTypes['locked_token_distribution_gifts']
      | undefined;
    /** fetch data from the table in a streaming manner: "locked_token_distribution_gifts" */
    locked_token_distribution_gifts_stream: Array<
      GraphQLTypes['locked_token_distribution_gifts']
    >;
    /** fetch data from the table: "locked_token_distributions" */
    locked_token_distributions: Array<
      GraphQLTypes['locked_token_distributions']
    >;
    /** fetch data from the table: "locked_token_distributions" using primary key columns */
    locked_token_distributions_by_pk?:
      | GraphQLTypes['locked_token_distributions']
      | undefined;
    /** fetch data from the table in a streaming manner: "locked_token_distributions" */
    locked_token_distributions_stream: Array<
      GraphQLTypes['locked_token_distributions']
    >;
    /** fetch data from the table: "member_circle_pgives" */
    member_circle_pgives: Array<GraphQLTypes['member_circle_pgives']>;
    /** fetch data from the table in a streaming manner: "member_circle_pgives" */
    member_circle_pgives_stream: Array<GraphQLTypes['member_circle_pgives']>;
    /** An array relationship */
    member_epoch_pgives: Array<GraphQLTypes['member_epoch_pgives']>;
    /** An aggregate relationship */
    member_epoch_pgives_aggregate: GraphQLTypes['member_epoch_pgives_aggregate'];
    /** fetch data from the table: "member_epoch_pgives" using primary key columns */
    member_epoch_pgives_by_pk?: GraphQLTypes['member_epoch_pgives'] | undefined;
    /** fetch data from the table in a streaming manner: "member_epoch_pgives" */
    member_epoch_pgives_stream: Array<GraphQLTypes['member_epoch_pgives']>;
    /** An array relationship */
    mutes: Array<GraphQLTypes['mutes']>;
    /** fetch data from the table: "mutes" using primary key columns */
    mutes_by_pk?: GraphQLTypes['mutes'] | undefined;
    /** fetch data from the table in a streaming manner: "mutes" */
    mutes_stream: Array<GraphQLTypes['mutes']>;
    /** fetch data from the table: "nft_collections" */
    nft_collections: Array<GraphQLTypes['nft_collections']>;
    /** fetch data from the table in a streaming manner: "nft_collections" */
    nft_collections_stream: Array<GraphQLTypes['nft_collections']>;
    /** fetch data from the table: "nft_holdings" */
    nft_holdings: Array<GraphQLTypes['nft_holdings']>;
    /** fetch data from the table in a streaming manner: "nft_holdings" */
    nft_holdings_stream: Array<GraphQLTypes['nft_holdings']>;
    /** An array relationship */
    nominees: Array<GraphQLTypes['nominees']>;
    /** An aggregate relationship */
    nominees_aggregate: GraphQLTypes['nominees_aggregate'];
    /** fetch data from the table: "nominees" using primary key columns */
    nominees_by_pk?: GraphQLTypes['nominees'] | undefined;
    /** fetch data from the table in a streaming manner: "nominees" */
    nominees_stream: Array<GraphQLTypes['nominees']>;
    /** fetch data from the table: "note_count" */
    note_count: Array<GraphQLTypes['note_count']>;
    /** fetch data from the table in a streaming manner: "note_count" */
    note_count_stream: Array<GraphQLTypes['note_count']>;
    /** fetch data from the table: "notifications" */
    notifications: Array<GraphQLTypes['notifications']>;
    /** fetch aggregated fields from the table: "notifications" */
    notifications_aggregate: GraphQLTypes['notifications_aggregate'];
    /** fetch data from the table: "notifications" using primary key columns */
    notifications_by_pk?: GraphQLTypes['notifications'] | undefined;
    /** fetch data from the table in a streaming manner: "notifications" */
    notifications_stream: Array<GraphQLTypes['notifications']>;
    /** An array relationship */
    org_members: Array<GraphQLTypes['org_members']>;
    /** fetch data from the table: "org_members" using primary key columns */
    org_members_by_pk?: GraphQLTypes['org_members'] | undefined;
    /** fetch data from the table in a streaming manner: "org_members" */
    org_members_stream: Array<GraphQLTypes['org_members']>;
    /** fetch data from the table: "org_share_tokens" */
    org_share_tokens: Array<GraphQLTypes['org_share_tokens']>;
    /** fetch data from the table: "org_share_tokens" using primary key columns */
    org_share_tokens_by_pk?: GraphQLTypes['org_share_tokens'] | undefined;
    /** fetch data from the table in a streaming manner: "org_share_tokens" */
    org_share_tokens_stream: Array<GraphQLTypes['org_share_tokens']>;
    /** fetch data from the table: "organizations" */
    organizations: Array<GraphQLTypes['organizations']>;
    /** fetch data from the table: "organizations" using primary key columns */
    organizations_by_pk?: GraphQLTypes['organizations'] | undefined;
    /** fetch data from the table in a streaming manner: "organizations" */
    organizations_stream: Array<GraphQLTypes['organizations']>;
    /** fetch data from the table: "pending_gift_private" */
    pending_gift_private: Array<GraphQLTypes['pending_gift_private']>;
    /** fetch data from the table in a streaming manner: "pending_gift_private" */
    pending_gift_private_stream: Array<GraphQLTypes['pending_gift_private']>;
    /** An array relationship */
    pending_token_gifts: Array<GraphQLTypes['pending_token_gifts']>;
    /** fetch data from the table: "pending_token_gifts" using primary key columns */
    pending_token_gifts_by_pk?: GraphQLTypes['pending_token_gifts'] | undefined;
    /** fetch data from the table in a streaming manner: "pending_token_gifts" */
    pending_token_gifts_stream: Array<GraphQLTypes['pending_token_gifts']>;
    /** fetch data from the table: "pending_vault_transactions" */
    pending_vault_transactions: Array<
      GraphQLTypes['pending_vault_transactions']
    >;
    /** fetch data from the table: "pending_vault_transactions" using primary key columns */
    pending_vault_transactions_by_pk?:
      | GraphQLTypes['pending_vault_transactions']
      | undefined;
    /** fetch data from the table in a streaming manner: "pending_vault_transactions" */
    pending_vault_transactions_stream: Array<
      GraphQLTypes['pending_vault_transactions']
    >;
    /** fetch data from the table: "poap_events" */
    poap_events: Array<GraphQLTypes['poap_events']>;
    /** fetch aggregated fields from the table: "poap_events" */
    poap_events_aggregate: GraphQLTypes['poap_events_aggregate'];
    /** fetch data from the table: "poap_events" using primary key columns */
    poap_events_by_pk?: GraphQLTypes['poap_events'] | undefined;
    /** fetch data from the table in a streaming manner: "poap_events" */
    poap_events_stream: Array<GraphQLTypes['poap_events']>;
    /** fetch data from the table: "poap_holders" */
    poap_holders: Array<GraphQLTypes['poap_holders']>;
    /** fetch aggregated fields from the table: "poap_holders" */
    poap_holders_aggregate: GraphQLTypes['poap_holders_aggregate'];
    /** fetch data from the table: "poap_holders" using primary key columns */
    poap_holders_by_pk?: GraphQLTypes['poap_holders'] | undefined;
    /** fetch data from the table in a streaming manner: "poap_holders" */
    poap_holders_stream: Array<GraphQLTypes['poap_holders']>;
    /** An array relationship */
    private_stream_visibility: Array<GraphQLTypes['private_stream_visibility']>;
    /** fetch data from the table: "private_stream_visibility" using primary key columns */
    private_stream_visibility_by_pk?:
      | GraphQLTypes['private_stream_visibility']
      | undefined;
    /** fetch data from the table in a streaming manner: "private_stream_visibility" */
    private_stream_visibility_stream: Array<
      GraphQLTypes['private_stream_visibility']
    >;
    /** An array relationship */
    profile_skills: Array<GraphQLTypes['profile_skills']>;
    /** fetch data from the table: "profile_skills" using primary key columns */
    profile_skills_by_pk?: GraphQLTypes['profile_skills'] | undefined;
    /** fetch data from the table in a streaming manner: "profile_skills" */
    profile_skills_stream: Array<GraphQLTypes['profile_skills']>;
    /** fetch data from the table: "profiles" */
    profiles: Array<GraphQLTypes['profiles']>;
    /** fetch data from the table: "profiles" using primary key columns */
    profiles_by_pk?: GraphQLTypes['profiles'] | undefined;
    /** fetch data from the table: "profiles_private" */
    profiles_private: Array<GraphQLTypes['profiles_private']>;
    /** fetch data from the table in a streaming manner: "profiles_private" */
    profiles_private_stream: Array<GraphQLTypes['profiles_private']>;
    /** fetch data from the table: "profiles_public" */
    profiles_public: Array<GraphQLTypes['profiles_public']>;
    /** fetch data from the table in a streaming manner: "profiles_public" */
    profiles_public_stream: Array<GraphQLTypes['profiles_public']>;
    /** fetch data from the table in a streaming manner: "profiles" */
    profiles_stream: Array<GraphQLTypes['profiles']>;
    /** An array relationship */
    reactions: Array<GraphQLTypes['reactions']>;
    /** An aggregate relationship */
    reactions_aggregate: GraphQLTypes['reactions_aggregate'];
    /** fetch data from the table: "reactions" using primary key columns */
    reactions_by_pk?: GraphQLTypes['reactions'] | undefined;
    /** fetch data from the table in a streaming manner: "reactions" */
    reactions_stream: Array<GraphQLTypes['reactions']>;
    /** An array relationship */
    replies: Array<GraphQLTypes['replies']>;
    /** An aggregate relationship */
    replies_aggregate: GraphQLTypes['replies_aggregate'];
    /** fetch data from the table: "replies" using primary key columns */
    replies_by_pk?: GraphQLTypes['replies'] | undefined;
    /** fetch data from the table: "replies_reactions" */
    replies_reactions: Array<GraphQLTypes['replies_reactions']>;
    /** fetch aggregated fields from the table: "replies_reactions" */
    replies_reactions_aggregate: GraphQLTypes['replies_reactions_aggregate'];
    /** fetch data from the table: "replies_reactions" using primary key columns */
    replies_reactions_by_pk?: GraphQLTypes['replies_reactions'] | undefined;
    /** fetch data from the table in a streaming manner: "replies_reactions" */
    replies_reactions_stream: Array<GraphQLTypes['replies_reactions']>;
    /** fetch data from the table in a streaming manner: "replies" */
    replies_stream: Array<GraphQLTypes['replies']>;
    /** fetch data from the table: "reputation_scores" */
    reputation_scores: Array<GraphQLTypes['reputation_scores']>;
    /** fetch data from the table: "reputation_scores" using primary key columns */
    reputation_scores_by_pk?: GraphQLTypes['reputation_scores'] | undefined;
    /** fetch data from the table in a streaming manner: "reputation_scores" */
    reputation_scores_stream: Array<GraphQLTypes['reputation_scores']>;
    /** execute function "search_contributions" which returns "contributions" */
    search_contributions: Array<GraphQLTypes['contributions']>;
    /** execute function "search_contributions" and query aggregates on result of table type "contributions" */
    search_contributions_aggregate: GraphQLTypes['contributions_aggregate'];
    /** execute function "search_replies" which returns "replies" */
    search_replies: Array<GraphQLTypes['replies']>;
    /** execute function "search_replies" and query aggregates on result of table type "replies" */
    search_replies_aggregate: GraphQLTypes['replies_aggregate'];
    /** fetch data from the table: "skills" */
    skills: Array<GraphQLTypes['skills']>;
    /** fetch data from the table: "skills" using primary key columns */
    skills_by_pk?: GraphQLTypes['skills'] | undefined;
    /** fetch data from the table in a streaming manner: "skills" */
    skills_stream: Array<GraphQLTypes['skills']>;
    /** An array relationship */
    teammates: Array<GraphQLTypes['teammates']>;
    /** fetch data from the table: "teammates" using primary key columns */
    teammates_by_pk?: GraphQLTypes['teammates'] | undefined;
    /** fetch data from the table in a streaming manner: "teammates" */
    teammates_stream: Array<GraphQLTypes['teammates']>;
    /** An array relationship */
    token_gifts: Array<GraphQLTypes['token_gifts']>;
    /** An aggregate relationship */
    token_gifts_aggregate: GraphQLTypes['token_gifts_aggregate'];
    /** fetch data from the table: "token_gifts" using primary key columns */
    token_gifts_by_pk?: GraphQLTypes['token_gifts'] | undefined;
    /** fetch data from the table in a streaming manner: "token_gifts" */
    token_gifts_stream: Array<GraphQLTypes['token_gifts']>;
    /** fetch data from the table: "twitter_accounts" */
    twitter_accounts: Array<GraphQLTypes['twitter_accounts']>;
    /** fetch data from the table: "twitter_accounts" using primary key columns */
    twitter_accounts_by_pk?: GraphQLTypes['twitter_accounts'] | undefined;
    /** fetch data from the table in a streaming manner: "twitter_accounts" */
    twitter_accounts_stream: Array<GraphQLTypes['twitter_accounts']>;
    /** fetch data from the table: "user_private" */
    user_private: Array<GraphQLTypes['user_private']>;
    /** fetch aggregated fields from the table: "user_private" */
    user_private_aggregate: GraphQLTypes['user_private_aggregate'];
    /** fetch data from the table in a streaming manner: "user_private" */
    user_private_stream: Array<GraphQLTypes['user_private']>;
    /** An array relationship */
    users: Array<GraphQLTypes['users']>;
    /** fetch data from the table: "users" using primary key columns */
    users_by_pk?: GraphQLTypes['users'] | undefined;
    /** fetch data from the table in a streaming manner: "users" */
    users_stream: Array<GraphQLTypes['users']>;
    /** An array relationship */
    vault_transactions: Array<GraphQLTypes['vault_transactions']>;
    /** fetch data from the table: "vault_transactions" using primary key columns */
    vault_transactions_by_pk?: GraphQLTypes['vault_transactions'] | undefined;
    /** fetch data from the table in a streaming manner: "vault_transactions" */
    vault_transactions_stream: Array<GraphQLTypes['vault_transactions']>;
    /** fetch data from the table: "vault_tx_types" */
    vault_tx_types: Array<GraphQLTypes['vault_tx_types']>;
    /** fetch data from the table: "vault_tx_types" using primary key columns */
    vault_tx_types_by_pk?: GraphQLTypes['vault_tx_types'] | undefined;
    /** fetch data from the table in a streaming manner: "vault_tx_types" */
    vault_tx_types_stream: Array<GraphQLTypes['vault_tx_types']>;
    /** An array relationship */
    vaults: Array<GraphQLTypes['vaults']>;
    /** fetch data from the table: "vaults" using primary key columns */
    vaults_by_pk?: GraphQLTypes['vaults'] | undefined;
    /** fetch data from the table in a streaming manner: "vaults" */
    vaults_stream: Array<GraphQLTypes['vaults']>;
    /** execute function "vector_search_poap_events" which returns "poap_events" */
    vector_search_poap_events: Array<GraphQLTypes['poap_events']>;
    /** execute function "vector_search_poap_events" and query aggregates on result of table type "poap_events" */
    vector_search_poap_events_aggregate: GraphQLTypes['poap_events_aggregate'];
    /** execute function "vector_search_poap_holders" which returns "poap_holders" */
    vector_search_poap_holders: Array<GraphQLTypes['poap_holders']>;
    /** execute function "vector_search_poap_holders" and query aggregates on result of table type "poap_holders" */
    vector_search_poap_holders_aggregate: GraphQLTypes['poap_holders_aggregate'];
    /** An array relationship */
    vouches: Array<GraphQLTypes['vouches']>;
    /** fetch data from the table: "vouches" using primary key columns */
    vouches_by_pk?: GraphQLTypes['vouches'] | undefined;
    /** fetch data from the table in a streaming manner: "vouches" */
    vouches_stream: Array<GraphQLTypes['vouches']>;
  };
  /** columns and relationships of "teammates" */
  ['teammates']: {
    created_at: GraphQLTypes['timestamp'];
    id: GraphQLTypes['bigint'];
    team_mate_id: number;
    /** An object relationship */
    teammate?: GraphQLTypes['users'] | undefined;
    updated_at: GraphQLTypes['timestamp'];
    /** An object relationship */
    user?: GraphQLTypes['users'] | undefined;
    user_id: number;
  };
  /** order by aggregate values of table "teammates" */
  ['teammates_aggregate_order_by']: GraphQLTypes['teammates_aggregate_order_by'];
  /** order by avg() on columns of table "teammates" */
  ['teammates_avg_order_by']: GraphQLTypes['teammates_avg_order_by'];
  /** Boolean expression to filter rows from the table "teammates". All fields are combined with a logical 'AND'. */
  ['teammates_bool_exp']: GraphQLTypes['teammates_bool_exp'];
  /** order by max() on columns of table "teammates" */
  ['teammates_max_order_by']: GraphQLTypes['teammates_max_order_by'];
  /** order by min() on columns of table "teammates" */
  ['teammates_min_order_by']: GraphQLTypes['teammates_min_order_by'];
  /** Ordering options when selecting data from "teammates". */
  ['teammates_order_by']: GraphQLTypes['teammates_order_by'];
  /** select columns of table "teammates" */
  ['teammates_select_column']: GraphQLTypes['teammates_select_column'];
  /** order by stddev() on columns of table "teammates" */
  ['teammates_stddev_order_by']: GraphQLTypes['teammates_stddev_order_by'];
  /** order by stddev_pop() on columns of table "teammates" */
  ['teammates_stddev_pop_order_by']: GraphQLTypes['teammates_stddev_pop_order_by'];
  /** order by stddev_samp() on columns of table "teammates" */
  ['teammates_stddev_samp_order_by']: GraphQLTypes['teammates_stddev_samp_order_by'];
  /** Streaming cursor of the table "teammates" */
  ['teammates_stream_cursor_input']: GraphQLTypes['teammates_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['teammates_stream_cursor_value_input']: GraphQLTypes['teammates_stream_cursor_value_input'];
  /** order by sum() on columns of table "teammates" */
  ['teammates_sum_order_by']: GraphQLTypes['teammates_sum_order_by'];
  /** order by var_pop() on columns of table "teammates" */
  ['teammates_var_pop_order_by']: GraphQLTypes['teammates_var_pop_order_by'];
  /** order by var_samp() on columns of table "teammates" */
  ['teammates_var_samp_order_by']: GraphQLTypes['teammates_var_samp_order_by'];
  /** order by variance() on columns of table "teammates" */
  ['teammates_variance_order_by']: GraphQLTypes['teammates_variance_order_by'];
  ['timestamp']: any;
  /** Boolean expression to compare columns of type "timestamp". All fields are combined with logical 'AND'. */
  ['timestamp_comparison_exp']: GraphQLTypes['timestamp_comparison_exp'];
  ['timestamptz']: any;
  /** Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'. */
  ['timestamptz_comparison_exp']: GraphQLTypes['timestamptz_comparison_exp'];
  /** GIVE allocations made by circle members for completed epochs */
  ['token_gifts']: {
    /** An object relationship */
    circle: GraphQLTypes['circles'];
    circle_id: GraphQLTypes['bigint'];
    created_at: GraphQLTypes['timestamp'];
    dts_created: GraphQLTypes['timestamp'];
    /** An object relationship */
    epoch: GraphQLTypes['epochs'];
    epoch_id: number;
    /** An object relationship */
    gift_private?: GraphQLTypes['gift_private'] | undefined;
    id: GraphQLTypes['bigint'];
    /** An object relationship */
    recipient: GraphQLTypes['users'];
    recipient_address: string;
    recipient_id: GraphQLTypes['bigint'];
    /** An object relationship */
    sender: GraphQLTypes['users'];
    sender_address: string;
    sender_id: GraphQLTypes['bigint'];
    tokens: number;
    updated_at: GraphQLTypes['timestamp'];
  };
  /** aggregated selection of "token_gifts" */
  ['token_gifts_aggregate']: {
    aggregate?: GraphQLTypes['token_gifts_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['token_gifts']>;
  };
  ['token_gifts_aggregate_bool_exp']: GraphQLTypes['token_gifts_aggregate_bool_exp'];
  ['token_gifts_aggregate_bool_exp_count']: GraphQLTypes['token_gifts_aggregate_bool_exp_count'];
  /** aggregate fields of "token_gifts" */
  ['token_gifts_aggregate_fields']: {
    avg?: GraphQLTypes['token_gifts_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['token_gifts_max_fields'] | undefined;
    min?: GraphQLTypes['token_gifts_min_fields'] | undefined;
    stddev?: GraphQLTypes['token_gifts_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['token_gifts_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['token_gifts_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['token_gifts_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['token_gifts_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['token_gifts_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['token_gifts_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "token_gifts" */
  ['token_gifts_aggregate_order_by']: GraphQLTypes['token_gifts_aggregate_order_by'];
  /** aggregate avg on columns */
  ['token_gifts_avg_fields']: {
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    id?: number | undefined;
    recipient_id?: number | undefined;
    sender_id?: number | undefined;
    tokens?: number | undefined;
  };
  /** order by avg() on columns of table "token_gifts" */
  ['token_gifts_avg_order_by']: GraphQLTypes['token_gifts_avg_order_by'];
  /** Boolean expression to filter rows from the table "token_gifts". All fields are combined with a logical 'AND'. */
  ['token_gifts_bool_exp']: GraphQLTypes['token_gifts_bool_exp'];
  /** aggregate max on columns */
  ['token_gifts_max_fields']: {
    circle_id?: GraphQLTypes['bigint'] | undefined;
    created_at?: GraphQLTypes['timestamp'] | undefined;
    dts_created?: GraphQLTypes['timestamp'] | undefined;
    epoch_id?: number | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    recipient_address?: string | undefined;
    recipient_id?: GraphQLTypes['bigint'] | undefined;
    sender_address?: string | undefined;
    sender_id?: GraphQLTypes['bigint'] | undefined;
    tokens?: number | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
  };
  /** order by max() on columns of table "token_gifts" */
  ['token_gifts_max_order_by']: GraphQLTypes['token_gifts_max_order_by'];
  /** aggregate min on columns */
  ['token_gifts_min_fields']: {
    circle_id?: GraphQLTypes['bigint'] | undefined;
    created_at?: GraphQLTypes['timestamp'] | undefined;
    dts_created?: GraphQLTypes['timestamp'] | undefined;
    epoch_id?: number | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    recipient_address?: string | undefined;
    recipient_id?: GraphQLTypes['bigint'] | undefined;
    sender_address?: string | undefined;
    sender_id?: GraphQLTypes['bigint'] | undefined;
    tokens?: number | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
  };
  /** order by min() on columns of table "token_gifts" */
  ['token_gifts_min_order_by']: GraphQLTypes['token_gifts_min_order_by'];
  /** Ordering options when selecting data from "token_gifts". */
  ['token_gifts_order_by']: GraphQLTypes['token_gifts_order_by'];
  /** select columns of table "token_gifts" */
  ['token_gifts_select_column']: GraphQLTypes['token_gifts_select_column'];
  /** aggregate stddev on columns */
  ['token_gifts_stddev_fields']: {
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    id?: number | undefined;
    recipient_id?: number | undefined;
    sender_id?: number | undefined;
    tokens?: number | undefined;
  };
  /** order by stddev() on columns of table "token_gifts" */
  ['token_gifts_stddev_order_by']: GraphQLTypes['token_gifts_stddev_order_by'];
  /** aggregate stddev_pop on columns */
  ['token_gifts_stddev_pop_fields']: {
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    id?: number | undefined;
    recipient_id?: number | undefined;
    sender_id?: number | undefined;
    tokens?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "token_gifts" */
  ['token_gifts_stddev_pop_order_by']: GraphQLTypes['token_gifts_stddev_pop_order_by'];
  /** aggregate stddev_samp on columns */
  ['token_gifts_stddev_samp_fields']: {
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    id?: number | undefined;
    recipient_id?: number | undefined;
    sender_id?: number | undefined;
    tokens?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "token_gifts" */
  ['token_gifts_stddev_samp_order_by']: GraphQLTypes['token_gifts_stddev_samp_order_by'];
  /** Streaming cursor of the table "token_gifts" */
  ['token_gifts_stream_cursor_input']: GraphQLTypes['token_gifts_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['token_gifts_stream_cursor_value_input']: GraphQLTypes['token_gifts_stream_cursor_value_input'];
  /** aggregate sum on columns */
  ['token_gifts_sum_fields']: {
    circle_id?: GraphQLTypes['bigint'] | undefined;
    epoch_id?: number | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    recipient_id?: GraphQLTypes['bigint'] | undefined;
    sender_id?: GraphQLTypes['bigint'] | undefined;
    tokens?: number | undefined;
  };
  /** order by sum() on columns of table "token_gifts" */
  ['token_gifts_sum_order_by']: GraphQLTypes['token_gifts_sum_order_by'];
  /** aggregate var_pop on columns */
  ['token_gifts_var_pop_fields']: {
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    id?: number | undefined;
    recipient_id?: number | undefined;
    sender_id?: number | undefined;
    tokens?: number | undefined;
  };
  /** order by var_pop() on columns of table "token_gifts" */
  ['token_gifts_var_pop_order_by']: GraphQLTypes['token_gifts_var_pop_order_by'];
  /** aggregate var_samp on columns */
  ['token_gifts_var_samp_fields']: {
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    id?: number | undefined;
    recipient_id?: number | undefined;
    sender_id?: number | undefined;
    tokens?: number | undefined;
  };
  /** order by var_samp() on columns of table "token_gifts" */
  ['token_gifts_var_samp_order_by']: GraphQLTypes['token_gifts_var_samp_order_by'];
  /** aggregate variance on columns */
  ['token_gifts_variance_fields']: {
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    id?: number | undefined;
    recipient_id?: number | undefined;
    sender_id?: number | undefined;
    tokens?: number | undefined;
  };
  /** order by variance() on columns of table "token_gifts" */
  ['token_gifts_variance_order_by']: GraphQLTypes['token_gifts_variance_order_by'];
  /** twitter accounts connected to profiles */
  ['twitter_accounts']: {
    description?: string | undefined;
    id: string;
    name: string;
    /** An object relationship */
    profile: GraphQLTypes['profiles'];
    profile_id: number;
    profile_image_url?: string | undefined;
    username: string;
  };
  /** Boolean expression to filter rows from the table "twitter_accounts". All fields are combined with a logical 'AND'. */
  ['twitter_accounts_bool_exp']: GraphQLTypes['twitter_accounts_bool_exp'];
  /** response of any mutation on the table "twitter_accounts" */
  ['twitter_accounts_mutation_response']: {
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['twitter_accounts']>;
  };
  /** Ordering options when selecting data from "twitter_accounts". */
  ['twitter_accounts_order_by']: GraphQLTypes['twitter_accounts_order_by'];
  /** select columns of table "twitter_accounts" */
  ['twitter_accounts_select_column']: GraphQLTypes['twitter_accounts_select_column'];
  /** Streaming cursor of the table "twitter_accounts" */
  ['twitter_accounts_stream_cursor_input']: GraphQLTypes['twitter_accounts_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['twitter_accounts_stream_cursor_value_input']: GraphQLTypes['twitter_accounts_stream_cursor_value_input'];
  /** columns and relationships of "user_private" */
  ['user_private']: {
    /** An object relationship */
    circle?: GraphQLTypes['circles'] | undefined;
    fixed_payment_amount?: GraphQLTypes['numeric'] | undefined;
    fixed_payment_token_type?: string | undefined;
    /** An object relationship */
    user?: GraphQLTypes['users'] | undefined;
    user_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** aggregated selection of "user_private" */
  ['user_private_aggregate']: {
    aggregate?: GraphQLTypes['user_private_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['user_private']>;
  };
  /** aggregate fields of "user_private" */
  ['user_private_aggregate_fields']: {
    avg?: GraphQLTypes['user_private_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['user_private_max_fields'] | undefined;
    min?: GraphQLTypes['user_private_min_fields'] | undefined;
    stddev?: GraphQLTypes['user_private_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['user_private_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['user_private_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['user_private_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['user_private_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['user_private_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['user_private_variance_fields'] | undefined;
  };
  /** aggregate avg on columns */
  ['user_private_avg_fields']: {
    fixed_payment_amount?: number | undefined;
    user_id?: number | undefined;
  };
  /** Boolean expression to filter rows from the table "user_private". All fields are combined with a logical 'AND'. */
  ['user_private_bool_exp']: GraphQLTypes['user_private_bool_exp'];
  /** aggregate max on columns */
  ['user_private_max_fields']: {
    fixed_payment_amount?: GraphQLTypes['numeric'] | undefined;
    fixed_payment_token_type?: string | undefined;
    user_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** aggregate min on columns */
  ['user_private_min_fields']: {
    fixed_payment_amount?: GraphQLTypes['numeric'] | undefined;
    fixed_payment_token_type?: string | undefined;
    user_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** Ordering options when selecting data from "user_private". */
  ['user_private_order_by']: GraphQLTypes['user_private_order_by'];
  /** select columns of table "user_private" */
  ['user_private_select_column']: GraphQLTypes['user_private_select_column'];
  /** aggregate stddev on columns */
  ['user_private_stddev_fields']: {
    fixed_payment_amount?: number | undefined;
    user_id?: number | undefined;
  };
  /** aggregate stddev_pop on columns */
  ['user_private_stddev_pop_fields']: {
    fixed_payment_amount?: number | undefined;
    user_id?: number | undefined;
  };
  /** aggregate stddev_samp on columns */
  ['user_private_stddev_samp_fields']: {
    fixed_payment_amount?: number | undefined;
    user_id?: number | undefined;
  };
  /** Streaming cursor of the table "user_private" */
  ['user_private_stream_cursor_input']: GraphQLTypes['user_private_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['user_private_stream_cursor_value_input']: GraphQLTypes['user_private_stream_cursor_value_input'];
  /** aggregate sum on columns */
  ['user_private_sum_fields']: {
    fixed_payment_amount?: GraphQLTypes['numeric'] | undefined;
    user_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** aggregate var_pop on columns */
  ['user_private_var_pop_fields']: {
    fixed_payment_amount?: number | undefined;
    user_id?: number | undefined;
  };
  /** aggregate var_samp on columns */
  ['user_private_var_samp_fields']: {
    fixed_payment_amount?: number | undefined;
    user_id?: number | undefined;
  };
  /** aggregate variance on columns */
  ['user_private_variance_fields']: {
    fixed_payment_amount?: number | undefined;
    user_id?: number | undefined;
  };
  /** Members of a circle */
  ['users']: {
    bio?: string | undefined;
    /** An array relationship */
    burns: Array<GraphQLTypes['burns']>;
    /** An object relationship */
    circle: GraphQLTypes['circles'];
    /** An array relationship */
    circle_api_keys: Array<GraphQLTypes['circle_api_keys']>;
    circle_id: GraphQLTypes['bigint'];
    /** An array relationship */
    contributions: Array<GraphQLTypes['contributions']>;
    /** An aggregate relationship */
    contributions_aggregate: GraphQLTypes['contributions_aggregate'];
    created_at: GraphQLTypes['timestamp'];
    deleted_at?: GraphQLTypes['timestamp'] | undefined;
    epoch_first_visit: boolean;
    fixed_non_receiver: boolean;
    give_token_received: number;
    give_token_remaining: number;
    id: GraphQLTypes['bigint'];
    /** An array relationship */
    member_epoch_pgivess: Array<GraphQLTypes['member_epoch_pgives']>;
    /** An aggregate relationship */
    member_epoch_pgivess_aggregate: GraphQLTypes['member_epoch_pgives_aggregate'];
    non_giver: boolean;
    non_receiver: boolean;
    /** An array relationship */
    pending_received_gifts: Array<GraphQLTypes['pending_token_gifts']>;
    /** An array relationship */
    pending_sent_gifts: Array<GraphQLTypes['pending_token_gifts']>;
    /** An object relationship */
    profile: GraphQLTypes['profiles'];
    profile_id: GraphQLTypes['bigint'];
    /** An array relationship */
    received_gifts: Array<GraphQLTypes['token_gifts']>;
    /** An aggregate relationship */
    received_gifts_aggregate: GraphQLTypes['token_gifts_aggregate'];
    role: number;
    /** An array relationship */
    sent_gifts: Array<GraphQLTypes['token_gifts']>;
    /** An aggregate relationship */
    sent_gifts_aggregate: GraphQLTypes['token_gifts_aggregate'];
    starting_tokens: number;
    /** An array relationship */
    teammates: Array<GraphQLTypes['teammates']>;
    updated_at: GraphQLTypes['timestamp'];
    /** An object relationship */
    user_private?: GraphQLTypes['user_private'] | undefined;
    /** An array relationship */
    vouches: Array<GraphQLTypes['vouches']>;
  };
  /** order by aggregate values of table "users" */
  ['users_aggregate_order_by']: GraphQLTypes['users_aggregate_order_by'];
  /** order by avg() on columns of table "users" */
  ['users_avg_order_by']: GraphQLTypes['users_avg_order_by'];
  /** Boolean expression to filter rows from the table "users". All fields are combined with a logical 'AND'. */
  ['users_bool_exp']: GraphQLTypes['users_bool_exp'];
  /** order by max() on columns of table "users" */
  ['users_max_order_by']: GraphQLTypes['users_max_order_by'];
  /** order by min() on columns of table "users" */
  ['users_min_order_by']: GraphQLTypes['users_min_order_by'];
  /** Ordering options when selecting data from "users". */
  ['users_order_by']: GraphQLTypes['users_order_by'];
  /** select columns of table "users" */
  ['users_select_column']: GraphQLTypes['users_select_column'];
  /** order by stddev() on columns of table "users" */
  ['users_stddev_order_by']: GraphQLTypes['users_stddev_order_by'];
  /** order by stddev_pop() on columns of table "users" */
  ['users_stddev_pop_order_by']: GraphQLTypes['users_stddev_pop_order_by'];
  /** order by stddev_samp() on columns of table "users" */
  ['users_stddev_samp_order_by']: GraphQLTypes['users_stddev_samp_order_by'];
  /** Streaming cursor of the table "users" */
  ['users_stream_cursor_input']: GraphQLTypes['users_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['users_stream_cursor_value_input']: GraphQLTypes['users_stream_cursor_value_input'];
  /** order by sum() on columns of table "users" */
  ['users_sum_order_by']: GraphQLTypes['users_sum_order_by'];
  /** order by var_pop() on columns of table "users" */
  ['users_var_pop_order_by']: GraphQLTypes['users_var_pop_order_by'];
  /** order by var_samp() on columns of table "users" */
  ['users_var_samp_order_by']: GraphQLTypes['users_var_samp_order_by'];
  /** order by variance() on columns of table "users" */
  ['users_variance_order_by']: GraphQLTypes['users_variance_order_by'];
  ['uuid']: any;
  /** Boolean expression to compare columns of type "uuid". All fields are combined with logical 'AND'. */
  ['uuid_comparison_exp']: GraphQLTypes['uuid_comparison_exp'];
  /** columns and relationships of "vault_transactions" */
  ['vault_transactions']: {
    /** An object relationship */
    circle?: GraphQLTypes['circles'] | undefined;
    circle_id?: GraphQLTypes['bigint'] | undefined;
    created_at: GraphQLTypes['timestamp'];
    created_by?: GraphQLTypes['bigint'] | undefined;
    /** An object relationship */
    distribution?: GraphQLTypes['distributions'] | undefined;
    distribution_id?: GraphQLTypes['bigint'] | undefined;
    id: GraphQLTypes['bigint'];
    /** An object relationship */
    profile?: GraphQLTypes['profiles'] | undefined;
    tx_hash: string;
    tx_type: GraphQLTypes['vault_tx_types_enum'];
    updated_at: GraphQLTypes['timestamp'];
    /** An object relationship */
    vault: GraphQLTypes['vaults'];
    vault_id: GraphQLTypes['bigint'];
    /** An object relationship */
    vault_tx_type: GraphQLTypes['vault_tx_types'];
  };
  /** order by aggregate values of table "vault_transactions" */
  ['vault_transactions_aggregate_order_by']: GraphQLTypes['vault_transactions_aggregate_order_by'];
  /** order by avg() on columns of table "vault_transactions" */
  ['vault_transactions_avg_order_by']: GraphQLTypes['vault_transactions_avg_order_by'];
  /** Boolean expression to filter rows from the table "vault_transactions". All fields are combined with a logical 'AND'. */
  ['vault_transactions_bool_exp']: GraphQLTypes['vault_transactions_bool_exp'];
  /** order by max() on columns of table "vault_transactions" */
  ['vault_transactions_max_order_by']: GraphQLTypes['vault_transactions_max_order_by'];
  /** order by min() on columns of table "vault_transactions" */
  ['vault_transactions_min_order_by']: GraphQLTypes['vault_transactions_min_order_by'];
  /** Ordering options when selecting data from "vault_transactions". */
  ['vault_transactions_order_by']: GraphQLTypes['vault_transactions_order_by'];
  /** select columns of table "vault_transactions" */
  ['vault_transactions_select_column']: GraphQLTypes['vault_transactions_select_column'];
  /** order by stddev() on columns of table "vault_transactions" */
  ['vault_transactions_stddev_order_by']: GraphQLTypes['vault_transactions_stddev_order_by'];
  /** order by stddev_pop() on columns of table "vault_transactions" */
  ['vault_transactions_stddev_pop_order_by']: GraphQLTypes['vault_transactions_stddev_pop_order_by'];
  /** order by stddev_samp() on columns of table "vault_transactions" */
  ['vault_transactions_stddev_samp_order_by']: GraphQLTypes['vault_transactions_stddev_samp_order_by'];
  /** Streaming cursor of the table "vault_transactions" */
  ['vault_transactions_stream_cursor_input']: GraphQLTypes['vault_transactions_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['vault_transactions_stream_cursor_value_input']: GraphQLTypes['vault_transactions_stream_cursor_value_input'];
  /** order by sum() on columns of table "vault_transactions" */
  ['vault_transactions_sum_order_by']: GraphQLTypes['vault_transactions_sum_order_by'];
  /** order by var_pop() on columns of table "vault_transactions" */
  ['vault_transactions_var_pop_order_by']: GraphQLTypes['vault_transactions_var_pop_order_by'];
  /** order by var_samp() on columns of table "vault_transactions" */
  ['vault_transactions_var_samp_order_by']: GraphQLTypes['vault_transactions_var_samp_order_by'];
  /** order by variance() on columns of table "vault_transactions" */
  ['vault_transactions_variance_order_by']: GraphQLTypes['vault_transactions_variance_order_by'];
  /** columns and relationships of "vault_tx_types" */
  ['vault_tx_types']: {
    comment?: string | undefined;
    value: string;
    /** An array relationship */
    vault_transactions: Array<GraphQLTypes['vault_transactions']>;
  };
  /** Boolean expression to filter rows from the table "vault_tx_types". All fields are combined with a logical 'AND'. */
  ['vault_tx_types_bool_exp']: GraphQLTypes['vault_tx_types_bool_exp'];
  ['vault_tx_types_enum']: GraphQLTypes['vault_tx_types_enum'];
  /** Boolean expression to compare columns of type "vault_tx_types_enum". All fields are combined with logical 'AND'. */
  ['vault_tx_types_enum_comparison_exp']: GraphQLTypes['vault_tx_types_enum_comparison_exp'];
  /** Ordering options when selecting data from "vault_tx_types". */
  ['vault_tx_types_order_by']: GraphQLTypes['vault_tx_types_order_by'];
  /** select columns of table "vault_tx_types" */
  ['vault_tx_types_select_column']: GraphQLTypes['vault_tx_types_select_column'];
  /** Streaming cursor of the table "vault_tx_types" */
  ['vault_tx_types_stream_cursor_input']: GraphQLTypes['vault_tx_types_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['vault_tx_types_stream_cursor_value_input']: GraphQLTypes['vault_tx_types_stream_cursor_value_input'];
  /** columns and relationships of "vaults" */
  ['vaults']: {
    chain_id: number;
    created_at: GraphQLTypes['timestamptz'];
    created_by: GraphQLTypes['bigint'];
    decimals: number;
    deployment_block: GraphQLTypes['bigint'];
    /** An array relationship */
    distributions: Array<GraphQLTypes['distributions']>;
    /** An aggregate relationship */
    distributions_aggregate: GraphQLTypes['distributions_aggregate'];
    id: GraphQLTypes['bigint'];
    /** An object relationship */
    organization: GraphQLTypes['organizations'];
    /** An object relationship */
    profile: GraphQLTypes['profiles'];
    simple_token_address: string;
    symbol: string;
    token_address: string;
    updated_at: GraphQLTypes['timestamptz'];
    vault_address: string;
    /** An array relationship */
    vault_transactions: Array<GraphQLTypes['vault_transactions']>;
  };
  /** order by aggregate values of table "vaults" */
  ['vaults_aggregate_order_by']: GraphQLTypes['vaults_aggregate_order_by'];
  /** order by avg() on columns of table "vaults" */
  ['vaults_avg_order_by']: GraphQLTypes['vaults_avg_order_by'];
  /** Boolean expression to filter rows from the table "vaults". All fields are combined with a logical 'AND'. */
  ['vaults_bool_exp']: GraphQLTypes['vaults_bool_exp'];
  /** order by max() on columns of table "vaults" */
  ['vaults_max_order_by']: GraphQLTypes['vaults_max_order_by'];
  /** order by min() on columns of table "vaults" */
  ['vaults_min_order_by']: GraphQLTypes['vaults_min_order_by'];
  /** Ordering options when selecting data from "vaults". */
  ['vaults_order_by']: GraphQLTypes['vaults_order_by'];
  /** select columns of table "vaults" */
  ['vaults_select_column']: GraphQLTypes['vaults_select_column'];
  /** order by stddev() on columns of table "vaults" */
  ['vaults_stddev_order_by']: GraphQLTypes['vaults_stddev_order_by'];
  /** order by stddev_pop() on columns of table "vaults" */
  ['vaults_stddev_pop_order_by']: GraphQLTypes['vaults_stddev_pop_order_by'];
  /** order by stddev_samp() on columns of table "vaults" */
  ['vaults_stddev_samp_order_by']: GraphQLTypes['vaults_stddev_samp_order_by'];
  /** Streaming cursor of the table "vaults" */
  ['vaults_stream_cursor_input']: GraphQLTypes['vaults_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['vaults_stream_cursor_value_input']: GraphQLTypes['vaults_stream_cursor_value_input'];
  /** order by sum() on columns of table "vaults" */
  ['vaults_sum_order_by']: GraphQLTypes['vaults_sum_order_by'];
  /** order by var_pop() on columns of table "vaults" */
  ['vaults_var_pop_order_by']: GraphQLTypes['vaults_var_pop_order_by'];
  /** order by var_samp() on columns of table "vaults" */
  ['vaults_var_samp_order_by']: GraphQLTypes['vaults_var_samp_order_by'];
  /** order by variance() on columns of table "vaults" */
  ['vaults_variance_order_by']: GraphQLTypes['vaults_variance_order_by'];
  ['vector']: any;
  /** Boolean expression to compare columns of type "vector". All fields are combined with logical 'AND'. */
  ['vector_comparison_exp']: GraphQLTypes['vector_comparison_exp'];
  ['vector_search_poap_events_args']: GraphQLTypes['vector_search_poap_events_args'];
  ['vector_search_poap_holders_args']: GraphQLTypes['vector_search_poap_holders_args'];
  /** columns and relationships of "vouches" */
  ['vouches']: {
    created_at: GraphQLTypes['timestamp'];
    id: GraphQLTypes['bigint'];
    /** An object relationship */
    nominee?: GraphQLTypes['nominees'] | undefined;
    nominee_id: number;
    updated_at: GraphQLTypes['timestamp'];
    /** An object relationship */
    voucher?: GraphQLTypes['users'] | undefined;
    voucher_id: number;
  };
  /** order by aggregate values of table "vouches" */
  ['vouches_aggregate_order_by']: GraphQLTypes['vouches_aggregate_order_by'];
  /** order by avg() on columns of table "vouches" */
  ['vouches_avg_order_by']: GraphQLTypes['vouches_avg_order_by'];
  /** Boolean expression to filter rows from the table "vouches". All fields are combined with a logical 'AND'. */
  ['vouches_bool_exp']: GraphQLTypes['vouches_bool_exp'];
  /** order by max() on columns of table "vouches" */
  ['vouches_max_order_by']: GraphQLTypes['vouches_max_order_by'];
  /** order by min() on columns of table "vouches" */
  ['vouches_min_order_by']: GraphQLTypes['vouches_min_order_by'];
  /** Ordering options when selecting data from "vouches". */
  ['vouches_order_by']: GraphQLTypes['vouches_order_by'];
  /** select columns of table "vouches" */
  ['vouches_select_column']: GraphQLTypes['vouches_select_column'];
  /** order by stddev() on columns of table "vouches" */
  ['vouches_stddev_order_by']: GraphQLTypes['vouches_stddev_order_by'];
  /** order by stddev_pop() on columns of table "vouches" */
  ['vouches_stddev_pop_order_by']: GraphQLTypes['vouches_stddev_pop_order_by'];
  /** order by stddev_samp() on columns of table "vouches" */
  ['vouches_stddev_samp_order_by']: GraphQLTypes['vouches_stddev_samp_order_by'];
  /** Streaming cursor of the table "vouches" */
  ['vouches_stream_cursor_input']: GraphQLTypes['vouches_stream_cursor_input'];
  /** Initial value of the column from where the streaming should start */
  ['vouches_stream_cursor_value_input']: GraphQLTypes['vouches_stream_cursor_value_input'];
  /** order by sum() on columns of table "vouches" */
  ['vouches_sum_order_by']: GraphQLTypes['vouches_sum_order_by'];
  /** order by var_pop() on columns of table "vouches" */
  ['vouches_var_pop_order_by']: GraphQLTypes['vouches_var_pop_order_by'];
  /** order by var_samp() on columns of table "vouches" */
  ['vouches_var_samp_order_by']: GraphQLTypes['vouches_var_samp_order_by'];
  /** order by variance() on columns of table "vouches" */
  ['vouches_variance_order_by']: GraphQLTypes['vouches_variance_order_by'];
};

export type GraphQLTypes = {
  ['AcceptTOSOutput']: {
    __typename: 'AcceptTOSOutput';
    tos_agreed_at: string;
  };
  ['AddEmailInput']: {
    co_links: boolean;
    email: string;
  };
  ['AdminUpdateUserInput']: {
    circle_id: number;
    fixed_non_receiver?: boolean | undefined;
    fixed_payment_amount?: number | undefined;
    name?: string | undefined;
    non_giver?: boolean | undefined;
    non_receiver?: boolean | undefined;
    profile_id: number;
    role?: number | undefined;
    starting_tokens?: number | undefined;
  };
  ['Allocation']: {
    note: string;
    recipient_id: number;
    tokens: number;
  };
  ['AllocationCsvInput']: {
    circle_id: number;
    epoch?: number | undefined;
    epoch_id?: number | undefined;
    form_gift_amount?: number | undefined;
    gift_token_symbol?: string | undefined;
    grant?: number | undefined;
  };
  ['AllocationCsvResponse']: {
    __typename: 'AllocationCsvResponse';
    file: string;
  };
  ['Allocations']: {
    allocations?: Array<GraphQLTypes['Allocation']> | undefined;
    circle_id: number;
    user_id?: number | undefined;
  };
  ['AllocationsResponse']: {
    __typename: 'AllocationsResponse';
    user?: GraphQLTypes['users'] | undefined;
    user_id: number;
  };
  /** Boolean expression to compare columns of type "Boolean". All fields are combined with logical 'AND'. */
  ['Boolean_comparison_exp']: {
    _eq?: boolean | undefined;
    _gt?: boolean | undefined;
    _gte?: boolean | undefined;
    _in?: Array<boolean> | undefined;
    _is_null?: boolean | undefined;
    _lt?: boolean | undefined;
    _lte?: boolean | undefined;
    _neq?: boolean | undefined;
    _nin?: Array<boolean> | undefined;
  };
  ['Cast']: {
    __typename: 'Cast';
    address: string;
    avatar_url: string;
    created_at: string;
    embeds: Array<GraphQLTypes['CastEmbed']>;
    fid: GraphQLTypes['bigint'];
    fname: string;
    hash: string;
    id: GraphQLTypes['bigint'];
    like_count: number;
    mentioned_addresses: Array<GraphQLTypes['CastMention']>;
    recast_count: number;
    replies_count: number;
    text: string;
    text_with_mentions: string;
  };
  ['CastEmbed']: {
    __typename: 'CastEmbed';
    type: string;
    url: string;
  };
  ['CastMention']: {
    __typename: 'CastMention';
    address: string;
    fname: string;
  };
  ['CheckEthDenverInviteeOutput']: {
    __typename: 'CheckEthDenverInviteeOutput';
    is_eth_denver_invitee: boolean;
  };
  ['ConfirmationResponse']: {
    __typename: 'ConfirmationResponse';
    success: boolean;
  };
  ['ConfirmationWithErrorResponse']: {
    __typename: 'ConfirmationWithErrorResponse';
    error?: string | undefined;
    success: boolean;
  };
  ['CoordinapeInput']: {
    circle_id: number;
  };
  ['CreateCircleInput']: {
    circle_name: string;
    contact?: string | undefined;
    image_data_base64?: string | undefined;
    organization_id?: number | undefined;
    organization_name?: string | undefined;
    user_name: string;
  };
  ['CreateCircleResponse']: {
    __typename: 'CreateCircleResponse';
    circle?: GraphQLTypes['circles'] | undefined;
    id: number;
    /** An array relationship */
    users: Array<GraphQLTypes['users']>;
  };
  ['CreateCoLinksGiveInput']: {
    activity_id?: number | undefined;
    address?: string | undefined;
    cast_hash?: string | undefined;
    skill?: string | undefined;
  };
  ['CreateCoLinksGiveResponse']: {
    __typename: 'CreateCoLinksGiveResponse';
    id: number;
  };
  ['CreateEpochInput']: {
    circle_id: number;
    grant?: number | undefined;
    params: GraphQLTypes['EpochInputParams'];
  };
  ['CreateNomineeInput']: {
    address: string;
    circle_id: number;
    description: string;
    name: string;
  };
  ['CreateNomineeResponse']: {
    __typename: 'CreateNomineeResponse';
    id?: number | undefined;
    nominee?: GraphQLTypes['nominees'] | undefined;
  };
  ['CreateOrgMembersInput']: {
    org_id: number;
    users: Array<GraphQLTypes['UserObj'] | undefined>;
  };
  ['CreateSampleCircleResponse']: {
    __typename: 'CreateSampleCircleResponse';
    circle?: GraphQLTypes['circles'] | undefined;
    id: number;
  };
  ['CreateUserWithTokenInput']: {
    token: string;
  };
  ['CreateUsersInput']: {
    circle_id: number;
    users: Array<GraphQLTypes['UserObj'] | undefined>;
  };
  ['CreateVaultInput']: {
    chain_id: number;
    deployment_block: number;
    org_id: number;
    tx_hash: string;
    vault_address: string;
  };
  ['DeleteCircleInput']: {
    circle_id: number;
  };
  ['DeleteCoLinksGiveInput']: {
    give_id: number;
  };
  ['DeleteContributionInput']: {
    contribution_id: number;
  };
  ['DeleteEmailInput']: {
    email: string;
  };
  ['DeleteEpochInput']: {
    circle_id: number;
    id: number;
  };
  ['DeleteEpochResponse']: {
    __typename: 'DeleteEpochResponse';
    success: boolean;
  };
  ['DeleteUserInput']: {
    circle_id: number;
    profile_id: number;
  };
  ['DeleteUsersInput']: {
    addresses: Array<string>;
    circle_id: number;
  };
  ['DeleteUsersResponse']: {
    __typename: 'DeleteUsersResponse';
    success: boolean;
  };
  ['EndEpochInput']: {
    circle_id: number;
    id: number;
  };
  ['EpochInputParams']: {
    duration?: number | undefined;
    duration_unit?: string | undefined;
    end_date: GraphQLTypes['timestamptz'];
    frequency?: number | undefined;
    frequency_unit?: string | undefined;
    start_date: GraphQLTypes['timestamptz'];
    time_zone?: string | undefined;
    type: string;
    week?: number | undefined;
    weekday?: number | undefined;
  };
  ['EpochResponse']: {
    __typename: 'EpochResponse';
    epoch?: GraphQLTypes['epochs'] | undefined;
    id: string;
  };
  ['GenerateApiKeyInput']: {
    circle_id: number;
    create_contributions?: boolean | undefined;
    create_vouches?: boolean | undefined;
    manage_users?: boolean | undefined;
    name: string;
    read_circle?: boolean | undefined;
    read_contributions?: boolean | undefined;
    read_discord?: boolean | undefined;
    read_epochs?: boolean | undefined;
    read_member_profiles?: boolean | undefined;
    read_nominees?: boolean | undefined;
    read_pending_token_gifts?: boolean | undefined;
    update_circle?: boolean | undefined;
    update_pending_token_gifts?: boolean | undefined;
  };
  ['GenerateApiKeyResponse']: {
    __typename: 'GenerateApiKeyResponse';
    api_key: string;
    circleApiKey?: GraphQLTypes['circle_api_keys'] | undefined;
    hash: string;
  };
  ['GetCastsInput']: {
    cast_ids?: Array<GraphQLTypes['bigint']> | undefined;
    fid?: GraphQLTypes['bigint'] | undefined;
  };
  ['GetCastsOutput']: {
    __typename: 'GetCastsOutput';
    casts: Array<GraphQLTypes['Cast']>;
  };
  ['GiveCsvInput']: {
    circle_id: number;
    epoch?: number | undefined;
    epoch_id?: number | undefined;
  };
  ['GiveCsvResponse']: {
    __typename: 'GiveCsvResponse';
    file: string;
  };
  ['GuildAdmin']: {
    __typename: 'GuildAdmin';
    address: string;
  };
  ['GuildInfoInput']: {
    id: string;
  };
  ['GuildInfoOutput']: {
    __typename: 'GuildInfoOutput';
    admins?: Array<GraphQLTypes['GuildAdmin'] | undefined> | undefined;
    description: string;
    id: number;
    image_url: string;
    member_count: number;
    name: string;
    roles?: Array<GraphQLTypes['GuildRole'] | undefined> | undefined;
    url_name: string;
  };
  ['GuildRole']: {
    __typename: 'GuildRole';
    id: number;
    image_url: string;
    member_count: number;
    name: string;
  };
  ['HeadlinesOutput']: {
    __typename: 'HeadlinesOutput';
    activity?: GraphQLTypes['activities'] | undefined;
    activity_id: number;
    description: string;
    headline: string;
  };
  ['IdInput']: {
    id: number;
  };
  /** Boolean expression to compare columns of type "Int". All fields are combined with logical 'AND'. */
  ['Int_comparison_exp']: {
    _eq?: number | undefined;
    _gt?: number | undefined;
    _gte?: number | undefined;
    _in?: Array<number> | undefined;
    _is_null?: boolean | undefined;
    _lt?: number | undefined;
    _lte?: number | undefined;
    _neq?: number | undefined;
    _nin?: Array<number> | undefined;
  };
  ['LogVaultTxInput']: {
    amount?: number | undefined;
    circle_id?: number | undefined;
    distribution_id?: number | undefined;
    org_id?: number | undefined;
    symbol?: string | undefined;
    tx_hash: string;
    tx_type: string;
    vault_id: number;
  };
  ['LogVaultTxResponse']: {
    __typename: 'LogVaultTxResponse';
    id: string;
    vault_tx_return_object?: GraphQLTypes['vault_transactions'] | undefined;
  };
  ['LogoutResponse']: {
    __typename: 'LogoutResponse';
    id?: number | undefined;
    profile?: GraphQLTypes['profiles'] | undefined;
  };
  ['MarkClaimedInput']: {
    claim_id: number;
    tx_hash: string;
  };
  ['MarkClaimedOutput']: {
    __typename: 'MarkClaimedOutput';
    ids: Array<number>;
  };
  ['OrgMemberResponse']: {
    __typename: 'OrgMemberResponse';
    OrgMemberResponse?: GraphQLTypes['org_members'] | undefined;
    id: string;
    new: boolean;
  };
  ['RedeemInviteCodeInput']: {
    code: string;
  };
  ['RequestInviteCodeInput']: {
    email: string;
  };
  ['SearchCosoulsInput']: {
    search_query: string;
  };
  ['SearchCosoulsOutput']: {
    __typename: 'SearchCosoulsOutput';
    cosoul_ids: Array<number>;
  };
  ['SearchProfilesInput']: {
    limit?: number | undefined;
    search_query: string;
  };
  ['SearchProfilesOutput']: {
    __typename: 'SearchProfilesOutput';
    profile_id: number;
    profile_public?: GraphQLTypes['profiles_public'] | undefined;
    similarity: number;
  };
  ['SetPrimaryEmailInput']: {
    email: string;
  };
  ['ShareInput']: {
    activity_id: number;
  };
  ['ShareOutput']: {
    __typename: 'ShareOutput';
    token: string;
  };
  ['SimilarProfileInput']: {
    address: string;
  };
  ['SimilarProfileOutput']: {
    __typename: 'SimilarProfileOutput';
    profile_id: number;
    profile_public?: GraphQLTypes['profiles_public'] | undefined;
  };
  /** Boolean expression to compare columns of type "String". All fields are combined with logical 'AND'. */
  ['String_comparison_exp']: {
    _eq?: string | undefined;
    _gt?: string | undefined;
    _gte?: string | undefined;
    /** does the column match the given case-insensitive pattern */
    _ilike?: string | undefined;
    _in?: Array<string> | undefined;
    /** does the column match the given POSIX regular expression, case insensitive */
    _iregex?: string | undefined;
    _is_null?: boolean | undefined;
    /** does the column match the given pattern */
    _like?: string | undefined;
    _lt?: string | undefined;
    _lte?: string | undefined;
    _neq?: string | undefined;
    /** does the column NOT match the given case-insensitive pattern */
    _nilike?: string | undefined;
    _nin?: Array<string> | undefined;
    /** does the column NOT match the given POSIX regular expression, case insensitive */
    _niregex?: string | undefined;
    /** does the column NOT match the given pattern */
    _nlike?: string | undefined;
    /** does the column NOT match the given POSIX regular expression, case sensitive */
    _nregex?: string | undefined;
    /** does the column NOT match the given SQL regular expression */
    _nsimilar?: string | undefined;
    /** does the column match the given POSIX regular expression, case sensitive */
    _regex?: string | undefined;
    /** does the column match the given SQL regular expression */
    _similar?: string | undefined;
  };
  ['SuccessResponse']: {
    __typename: 'SuccessResponse';
    success: boolean;
  };
  ['SyncCoSoulInput']: {
    tx_hash: string;
  };
  ['SyncCoSoulOutput']: {
    __typename: 'SyncCoSoulOutput';
    token_id?: string | undefined;
  };
  ['UpdateCircleInput']: {
    alloc_text?: string | undefined;
    allow_distribute_evenly?: boolean | undefined;
    auto_opt_out?: boolean | undefined;
    circle_id: number;
    cont_help_text?: string | undefined;
    default_opt_in?: boolean | undefined;
    discord_webhook?: string | undefined;
    fixed_payment_token_type?: string | undefined;
    fixed_payment_vault_id?: number | undefined;
    guild_id?: number | undefined;
    guild_role_id?: number | undefined;
    min_vouches?: number | undefined;
    name?: string | undefined;
    nomination_days_limit?: number | undefined;
    only_giver_vouch?: boolean | undefined;
    show_pending_gives?: boolean | undefined;
    team_selection?: boolean | undefined;
    token_name?: string | undefined;
    update_webhook?: boolean | undefined;
    vouching?: boolean | undefined;
    vouching_text?: string | undefined;
  };
  ['UpdateCircleOutput']: {
    __typename: 'UpdateCircleOutput';
    circle?: GraphQLTypes['circles'] | undefined;
    id: number;
  };
  ['UpdateCircleResponse']: {
    __typename: 'UpdateCircleResponse';
    circle?: GraphQLTypes['circles'] | undefined;
    id: number;
  };
  ['UpdateCircleStartingGiveInput']: {
    circle_id: number;
    starting_tokens: number;
  };
  ['UpdateContributionInput']: {
    description: string;
    id: number;
  };
  ['UpdateContributionResponse']: {
    __typename: 'UpdateContributionResponse';
    id: string;
    updateContribution_Contribution?: GraphQLTypes['contributions'] | undefined;
  };
  ['UpdateEpochInput']: {
    circle_id: number;
    description?: string | undefined;
    grant?: number | undefined;
    id: number;
    params?: GraphQLTypes['EpochInputParams'] | undefined;
  };
  ['UpdateOrgResponse']: {
    __typename: 'UpdateOrgResponse';
    id: number;
    org?: GraphQLTypes['organizations'] | undefined;
  };
  ['UpdateProfileInput']: {
    bio?: string | undefined;
    description?: string | undefined;
    discord_username?: string | undefined;
    github_username?: string | undefined;
    medium_username?: string | undefined;
    name: string;
    skills?: string | undefined;
    telegram_username?: string | undefined;
    twitter_username?: string | undefined;
    website?: string | undefined;
  };
  ['UpdateProfileResponse']: {
    __typename: 'UpdateProfileResponse';
    id: number;
    profile?: GraphQLTypes['profiles'] | undefined;
  };
  ['UpdateTeammatesInput']: {
    circle_id: number;
    teammates: Array<number | undefined>;
  };
  ['UpdateTeammatesResponse']: {
    __typename: 'UpdateTeammatesResponse';
    user?: GraphQLTypes['users'] | undefined;
    user_id: string;
  };
  ['UpdateUserInput']: {
    bio?: string | undefined;
    circle_id: number;
    epoch_first_visit?: boolean | undefined;
    non_receiver?: boolean | undefined;
  };
  ['UploadCircleImageInput']: {
    circle_id: number;
    image_data_base64: string;
  };
  ['UploadImageInput']: {
    url: string;
  };
  ['UploadOrgImageInput']: {
    image_data_base64: string;
    org_id: number;
  };
  ['UploadUrlResponse']: {
    __typename: 'UploadUrlResponse';
    errors?: Array<string | undefined> | undefined;
    messages?: Array<string | undefined> | undefined;
    result?: GraphQLTypes['UploadUrlResult'] | undefined;
    result_info?: string | undefined;
    success?: boolean | undefined;
  };
  ['UploadUrlResult']: {
    __typename: 'UploadUrlResult';
    id?: string | undefined;
    upload_url?: string | undefined;
  };
  ['UserObj']: {
    address: string;
    entrance?: string | undefined;
    fixed_non_receiver?: boolean | undefined;
    name: string;
    non_giver?: boolean | undefined;
    non_receiver?: boolean | undefined;
    role?: number | undefined;
    starting_tokens?: number | undefined;
  };
  ['UserResponse']: {
    __typename: 'UserResponse';
    UserResponse?: GraphQLTypes['users'] | undefined;
    id: string;
  };
  ['VaultResponse']: {
    __typename: 'VaultResponse';
    id: string;
    vault?: GraphQLTypes['vaults'] | undefined;
  };
  ['VouchInput']: {
    nominee_id: number;
  };
  ['VouchOutput']: {
    __typename: 'VouchOutput';
    id: number;
    nominee?: GraphQLTypes['nominees'] | undefined;
  };
  /** Table containing activity on our platform */
  ['activities']: {
    __typename: 'activities';
    action: string;
    /** An object relationship */
    actor_profile?: GraphQLTypes['profiles'] | undefined;
    actor_profile_id?: GraphQLTypes['bigint'] | undefined;
    /** An object relationship */
    actor_profile_public?: GraphQLTypes['profiles_public'] | undefined;
    /** An object relationship */
    big_question?: GraphQLTypes['big_questions'] | undefined;
    big_question_id?: GraphQLTypes['bigint'] | undefined;
    cast_id?: GraphQLTypes['bigint'] | undefined;
    /** An object relationship */
    circle?: GraphQLTypes['circles'] | undefined;
    circle_id?: GraphQLTypes['bigint'] | undefined;
    /** An object relationship */
    contribution?: GraphQLTypes['contributions'] | undefined;
    contribution_id?: GraphQLTypes['bigint'] | undefined;
    created_at: GraphQLTypes['timestamptz'];
    /** An object relationship */
    enriched_cast?: GraphQLTypes['enriched_casts'] | undefined;
    /** An object relationship */
    epoch?: GraphQLTypes['epochs'] | undefined;
    epoch_id?: GraphQLTypes['bigint'] | undefined;
    /** An array relationship */
    gives: Array<GraphQLTypes['colinks_gives']>;
    /** An aggregate relationship */
    gives_aggregate: GraphQLTypes['colinks_gives_aggregate'];
    id: GraphQLTypes['bigint'];
    /** An object relationship */
    organization?: GraphQLTypes['organizations'] | undefined;
    organization_id?: GraphQLTypes['bigint'] | undefined;
    private_stream: boolean;
    /** An array relationship */
    private_stream_visibility: Array<GraphQLTypes['private_stream_visibility']>;
    reaction_count: number;
    /** An array relationship */
    reactions: Array<GraphQLTypes['reactions']>;
    /** An aggregate relationship */
    reactions_aggregate: GraphQLTypes['reactions_aggregate'];
    /** An array relationship */
    replies: Array<GraphQLTypes['replies']>;
    /** An aggregate relationship */
    replies_aggregate: GraphQLTypes['replies_aggregate'];
    reply_count: number;
    /** An object relationship */
    target_profile?: GraphQLTypes['profiles'] | undefined;
    target_profile_id?: GraphQLTypes['bigint'] | undefined;
    /** An object relationship */
    target_profile_public?: GraphQLTypes['profiles_public'] | undefined;
    updated_at: GraphQLTypes['timestamptz'];
    /** An object relationship */
    user?: GraphQLTypes['users'] | undefined;
  };
  /** aggregated selection of "activities" */
  ['activities_aggregate']: {
    __typename: 'activities_aggregate';
    aggregate?: GraphQLTypes['activities_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['activities']>;
  };
  ['activities_aggregate_bool_exp']: {
    bool_and?:
      | GraphQLTypes['activities_aggregate_bool_exp_bool_and']
      | undefined;
    bool_or?: GraphQLTypes['activities_aggregate_bool_exp_bool_or'] | undefined;
    count?: GraphQLTypes['activities_aggregate_bool_exp_count'] | undefined;
  };
  ['activities_aggregate_bool_exp_bool_and']: {
    arguments: GraphQLTypes['activities_select_column_activities_aggregate_bool_exp_bool_and_arguments_columns'];
    distinct?: boolean | undefined;
    filter?: GraphQLTypes['activities_bool_exp'] | undefined;
    predicate: GraphQLTypes['Boolean_comparison_exp'];
  };
  ['activities_aggregate_bool_exp_bool_or']: {
    arguments: GraphQLTypes['activities_select_column_activities_aggregate_bool_exp_bool_or_arguments_columns'];
    distinct?: boolean | undefined;
    filter?: GraphQLTypes['activities_bool_exp'] | undefined;
    predicate: GraphQLTypes['Boolean_comparison_exp'];
  };
  ['activities_aggregate_bool_exp_count']: {
    arguments?: Array<GraphQLTypes['activities_select_column']> | undefined;
    distinct?: boolean | undefined;
    filter?: GraphQLTypes['activities_bool_exp'] | undefined;
    predicate: GraphQLTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "activities" */
  ['activities_aggregate_fields']: {
    __typename: 'activities_aggregate_fields';
    avg?: GraphQLTypes['activities_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['activities_max_fields'] | undefined;
    min?: GraphQLTypes['activities_min_fields'] | undefined;
    stddev?: GraphQLTypes['activities_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['activities_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['activities_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['activities_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['activities_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['activities_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['activities_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "activities" */
  ['activities_aggregate_order_by']: {
    avg?: GraphQLTypes['activities_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['activities_max_order_by'] | undefined;
    min?: GraphQLTypes['activities_min_order_by'] | undefined;
    stddev?: GraphQLTypes['activities_stddev_order_by'] | undefined;
    stddev_pop?: GraphQLTypes['activities_stddev_pop_order_by'] | undefined;
    stddev_samp?: GraphQLTypes['activities_stddev_samp_order_by'] | undefined;
    sum?: GraphQLTypes['activities_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['activities_var_pop_order_by'] | undefined;
    var_samp?: GraphQLTypes['activities_var_samp_order_by'] | undefined;
    variance?: GraphQLTypes['activities_variance_order_by'] | undefined;
  };
  /** aggregate avg on columns */
  ['activities_avg_fields']: {
    __typename: 'activities_avg_fields';
    actor_profile_id?: number | undefined;
    big_question_id?: number | undefined;
    cast_id?: number | undefined;
    circle_id?: number | undefined;
    contribution_id?: number | undefined;
    epoch_id?: number | undefined;
    id?: number | undefined;
    organization_id?: number | undefined;
    reaction_count?: number | undefined;
    reply_count?: number | undefined;
    target_profile_id?: number | undefined;
  };
  /** order by avg() on columns of table "activities" */
  ['activities_avg_order_by']: {
    actor_profile_id?: GraphQLTypes['order_by'] | undefined;
    big_question_id?: GraphQLTypes['order_by'] | undefined;
    cast_id?: GraphQLTypes['order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    contribution_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    reaction_count?: GraphQLTypes['order_by'] | undefined;
    reply_count?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "activities". All fields are combined with a logical 'AND'. */
  ['activities_bool_exp']: {
    _and?: Array<GraphQLTypes['activities_bool_exp']> | undefined;
    _not?: GraphQLTypes['activities_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['activities_bool_exp']> | undefined;
    action?: GraphQLTypes['String_comparison_exp'] | undefined;
    actor_profile?: GraphQLTypes['profiles_bool_exp'] | undefined;
    actor_profile_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    actor_profile_public?: GraphQLTypes['profiles_public_bool_exp'] | undefined;
    big_question?: GraphQLTypes['big_questions_bool_exp'] | undefined;
    big_question_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    cast_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    circle?: GraphQLTypes['circles_bool_exp'] | undefined;
    circle_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    contribution?: GraphQLTypes['contributions_bool_exp'] | undefined;
    contribution_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    created_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    enriched_cast?: GraphQLTypes['enriched_casts_bool_exp'] | undefined;
    epoch?: GraphQLTypes['epochs_bool_exp'] | undefined;
    epoch_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    gives?: GraphQLTypes['colinks_gives_bool_exp'] | undefined;
    gives_aggregate?:
      | GraphQLTypes['colinks_gives_aggregate_bool_exp']
      | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    organization?: GraphQLTypes['organizations_bool_exp'] | undefined;
    organization_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    private_stream?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    private_stream_visibility?:
      | GraphQLTypes['private_stream_visibility_bool_exp']
      | undefined;
    reaction_count?: GraphQLTypes['Int_comparison_exp'] | undefined;
    reactions?: GraphQLTypes['reactions_bool_exp'] | undefined;
    reactions_aggregate?:
      | GraphQLTypes['reactions_aggregate_bool_exp']
      | undefined;
    replies?: GraphQLTypes['replies_bool_exp'] | undefined;
    replies_aggregate?: GraphQLTypes['replies_aggregate_bool_exp'] | undefined;
    reply_count?: GraphQLTypes['Int_comparison_exp'] | undefined;
    target_profile?: GraphQLTypes['profiles_bool_exp'] | undefined;
    target_profile_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    target_profile_public?:
      | GraphQLTypes['profiles_public_bool_exp']
      | undefined;
    updated_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    user?: GraphQLTypes['users_bool_exp'] | undefined;
  };
  /** aggregate max on columns */
  ['activities_max_fields']: {
    __typename: 'activities_max_fields';
    action?: string | undefined;
    actor_profile_id?: GraphQLTypes['bigint'] | undefined;
    big_question_id?: GraphQLTypes['bigint'] | undefined;
    cast_id?: GraphQLTypes['bigint'] | undefined;
    circle_id?: GraphQLTypes['bigint'] | undefined;
    contribution_id?: GraphQLTypes['bigint'] | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    epoch_id?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    organization_id?: GraphQLTypes['bigint'] | undefined;
    reaction_count?: number | undefined;
    reply_count?: number | undefined;
    target_profile_id?: GraphQLTypes['bigint'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by max() on columns of table "activities" */
  ['activities_max_order_by']: {
    action?: GraphQLTypes['order_by'] | undefined;
    actor_profile_id?: GraphQLTypes['order_by'] | undefined;
    big_question_id?: GraphQLTypes['order_by'] | undefined;
    cast_id?: GraphQLTypes['order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    contribution_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    reaction_count?: GraphQLTypes['order_by'] | undefined;
    reply_count?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate min on columns */
  ['activities_min_fields']: {
    __typename: 'activities_min_fields';
    action?: string | undefined;
    actor_profile_id?: GraphQLTypes['bigint'] | undefined;
    big_question_id?: GraphQLTypes['bigint'] | undefined;
    cast_id?: GraphQLTypes['bigint'] | undefined;
    circle_id?: GraphQLTypes['bigint'] | undefined;
    contribution_id?: GraphQLTypes['bigint'] | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    epoch_id?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    organization_id?: GraphQLTypes['bigint'] | undefined;
    reaction_count?: number | undefined;
    reply_count?: number | undefined;
    target_profile_id?: GraphQLTypes['bigint'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by min() on columns of table "activities" */
  ['activities_min_order_by']: {
    action?: GraphQLTypes['order_by'] | undefined;
    actor_profile_id?: GraphQLTypes['order_by'] | undefined;
    big_question_id?: GraphQLTypes['order_by'] | undefined;
    cast_id?: GraphQLTypes['order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    contribution_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    reaction_count?: GraphQLTypes['order_by'] | undefined;
    reply_count?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** Ordering options when selecting data from "activities". */
  ['activities_order_by']: {
    action?: GraphQLTypes['order_by'] | undefined;
    actor_profile?: GraphQLTypes['profiles_order_by'] | undefined;
    actor_profile_id?: GraphQLTypes['order_by'] | undefined;
    actor_profile_public?: GraphQLTypes['profiles_public_order_by'] | undefined;
    big_question?: GraphQLTypes['big_questions_order_by'] | undefined;
    big_question_id?: GraphQLTypes['order_by'] | undefined;
    cast_id?: GraphQLTypes['order_by'] | undefined;
    circle?: GraphQLTypes['circles_order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    contribution?: GraphQLTypes['contributions_order_by'] | undefined;
    contribution_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    enriched_cast?: GraphQLTypes['enriched_casts_order_by'] | undefined;
    epoch?: GraphQLTypes['epochs_order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    gives_aggregate?:
      | GraphQLTypes['colinks_gives_aggregate_order_by']
      | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    organization?: GraphQLTypes['organizations_order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    private_stream?: GraphQLTypes['order_by'] | undefined;
    private_stream_visibility_aggregate?:
      | GraphQLTypes['private_stream_visibility_aggregate_order_by']
      | undefined;
    reaction_count?: GraphQLTypes['order_by'] | undefined;
    reactions_aggregate?:
      | GraphQLTypes['reactions_aggregate_order_by']
      | undefined;
    replies_aggregate?: GraphQLTypes['replies_aggregate_order_by'] | undefined;
    reply_count?: GraphQLTypes['order_by'] | undefined;
    target_profile?: GraphQLTypes['profiles_order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
    target_profile_public?:
      | GraphQLTypes['profiles_public_order_by']
      | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    user?: GraphQLTypes['users_order_by'] | undefined;
  };
  /** select columns of table "activities" */
  ['activities_select_column']: activities_select_column;
  /** select "activities_aggregate_bool_exp_bool_and_arguments_columns" columns of table "activities" */
  ['activities_select_column_activities_aggregate_bool_exp_bool_and_arguments_columns']: activities_select_column_activities_aggregate_bool_exp_bool_and_arguments_columns;
  /** select "activities_aggregate_bool_exp_bool_or_arguments_columns" columns of table "activities" */
  ['activities_select_column_activities_aggregate_bool_exp_bool_or_arguments_columns']: activities_select_column_activities_aggregate_bool_exp_bool_or_arguments_columns;
  /** aggregate stddev on columns */
  ['activities_stddev_fields']: {
    __typename: 'activities_stddev_fields';
    actor_profile_id?: number | undefined;
    big_question_id?: number | undefined;
    cast_id?: number | undefined;
    circle_id?: number | undefined;
    contribution_id?: number | undefined;
    epoch_id?: number | undefined;
    id?: number | undefined;
    organization_id?: number | undefined;
    reaction_count?: number | undefined;
    reply_count?: number | undefined;
    target_profile_id?: number | undefined;
  };
  /** order by stddev() on columns of table "activities" */
  ['activities_stddev_order_by']: {
    actor_profile_id?: GraphQLTypes['order_by'] | undefined;
    big_question_id?: GraphQLTypes['order_by'] | undefined;
    cast_id?: GraphQLTypes['order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    contribution_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    reaction_count?: GraphQLTypes['order_by'] | undefined;
    reply_count?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_pop on columns */
  ['activities_stddev_pop_fields']: {
    __typename: 'activities_stddev_pop_fields';
    actor_profile_id?: number | undefined;
    big_question_id?: number | undefined;
    cast_id?: number | undefined;
    circle_id?: number | undefined;
    contribution_id?: number | undefined;
    epoch_id?: number | undefined;
    id?: number | undefined;
    organization_id?: number | undefined;
    reaction_count?: number | undefined;
    reply_count?: number | undefined;
    target_profile_id?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "activities" */
  ['activities_stddev_pop_order_by']: {
    actor_profile_id?: GraphQLTypes['order_by'] | undefined;
    big_question_id?: GraphQLTypes['order_by'] | undefined;
    cast_id?: GraphQLTypes['order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    contribution_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    reaction_count?: GraphQLTypes['order_by'] | undefined;
    reply_count?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_samp on columns */
  ['activities_stddev_samp_fields']: {
    __typename: 'activities_stddev_samp_fields';
    actor_profile_id?: number | undefined;
    big_question_id?: number | undefined;
    cast_id?: number | undefined;
    circle_id?: number | undefined;
    contribution_id?: number | undefined;
    epoch_id?: number | undefined;
    id?: number | undefined;
    organization_id?: number | undefined;
    reaction_count?: number | undefined;
    reply_count?: number | undefined;
    target_profile_id?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "activities" */
  ['activities_stddev_samp_order_by']: {
    actor_profile_id?: GraphQLTypes['order_by'] | undefined;
    big_question_id?: GraphQLTypes['order_by'] | undefined;
    cast_id?: GraphQLTypes['order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    contribution_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    reaction_count?: GraphQLTypes['order_by'] | undefined;
    reply_count?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "activities" */
  ['activities_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['activities_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['activities_stream_cursor_value_input']: {
    action?: string | undefined;
    actor_profile_id?: GraphQLTypes['bigint'] | undefined;
    big_question_id?: GraphQLTypes['bigint'] | undefined;
    cast_id?: GraphQLTypes['bigint'] | undefined;
    circle_id?: GraphQLTypes['bigint'] | undefined;
    contribution_id?: GraphQLTypes['bigint'] | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    epoch_id?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    organization_id?: GraphQLTypes['bigint'] | undefined;
    private_stream?: boolean | undefined;
    reaction_count?: number | undefined;
    reply_count?: number | undefined;
    target_profile_id?: GraphQLTypes['bigint'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** aggregate sum on columns */
  ['activities_sum_fields']: {
    __typename: 'activities_sum_fields';
    actor_profile_id?: GraphQLTypes['bigint'] | undefined;
    big_question_id?: GraphQLTypes['bigint'] | undefined;
    cast_id?: GraphQLTypes['bigint'] | undefined;
    circle_id?: GraphQLTypes['bigint'] | undefined;
    contribution_id?: GraphQLTypes['bigint'] | undefined;
    epoch_id?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    organization_id?: GraphQLTypes['bigint'] | undefined;
    reaction_count?: number | undefined;
    reply_count?: number | undefined;
    target_profile_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by sum() on columns of table "activities" */
  ['activities_sum_order_by']: {
    actor_profile_id?: GraphQLTypes['order_by'] | undefined;
    big_question_id?: GraphQLTypes['order_by'] | undefined;
    cast_id?: GraphQLTypes['order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    contribution_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    reaction_count?: GraphQLTypes['order_by'] | undefined;
    reply_count?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate var_pop on columns */
  ['activities_var_pop_fields']: {
    __typename: 'activities_var_pop_fields';
    actor_profile_id?: number | undefined;
    big_question_id?: number | undefined;
    cast_id?: number | undefined;
    circle_id?: number | undefined;
    contribution_id?: number | undefined;
    epoch_id?: number | undefined;
    id?: number | undefined;
    organization_id?: number | undefined;
    reaction_count?: number | undefined;
    reply_count?: number | undefined;
    target_profile_id?: number | undefined;
  };
  /** order by var_pop() on columns of table "activities" */
  ['activities_var_pop_order_by']: {
    actor_profile_id?: GraphQLTypes['order_by'] | undefined;
    big_question_id?: GraphQLTypes['order_by'] | undefined;
    cast_id?: GraphQLTypes['order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    contribution_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    reaction_count?: GraphQLTypes['order_by'] | undefined;
    reply_count?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate var_samp on columns */
  ['activities_var_samp_fields']: {
    __typename: 'activities_var_samp_fields';
    actor_profile_id?: number | undefined;
    big_question_id?: number | undefined;
    cast_id?: number | undefined;
    circle_id?: number | undefined;
    contribution_id?: number | undefined;
    epoch_id?: number | undefined;
    id?: number | undefined;
    organization_id?: number | undefined;
    reaction_count?: number | undefined;
    reply_count?: number | undefined;
    target_profile_id?: number | undefined;
  };
  /** order by var_samp() on columns of table "activities" */
  ['activities_var_samp_order_by']: {
    actor_profile_id?: GraphQLTypes['order_by'] | undefined;
    big_question_id?: GraphQLTypes['order_by'] | undefined;
    cast_id?: GraphQLTypes['order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    contribution_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    reaction_count?: GraphQLTypes['order_by'] | undefined;
    reply_count?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate variance on columns */
  ['activities_variance_fields']: {
    __typename: 'activities_variance_fields';
    actor_profile_id?: number | undefined;
    big_question_id?: number | undefined;
    cast_id?: number | undefined;
    circle_id?: number | undefined;
    contribution_id?: number | undefined;
    epoch_id?: number | undefined;
    id?: number | undefined;
    organization_id?: number | undefined;
    reaction_count?: number | undefined;
    reply_count?: number | undefined;
    target_profile_id?: number | undefined;
  };
  /** order by variance() on columns of table "activities" */
  ['activities_variance_order_by']: {
    actor_profile_id?: GraphQLTypes['order_by'] | undefined;
    big_question_id?: GraphQLTypes['order_by'] | undefined;
    cast_id?: GraphQLTypes['order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    contribution_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    reaction_count?: GraphQLTypes['order_by'] | undefined;
    reply_count?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** columns and relationships of "big_questions" */
  ['big_questions']: {
    __typename: 'big_questions';
    /** An array relationship */
    activities: Array<GraphQLTypes['activities']>;
    /** An aggregate relationship */
    activities_aggregate: GraphQLTypes['activities_aggregate'];
    cover_image_url: string;
    created_at: GraphQLTypes['timestamp'];
    css_background_position?: string | undefined;
    description?: string | undefined;
    expire_at?: GraphQLTypes['timestamp'] | undefined;
    id: GraphQLTypes['bigint'];
    prompt: string;
    publish_at?: GraphQLTypes['timestamp'] | undefined;
    updated_at: GraphQLTypes['timestamp'];
  };
  /** Boolean expression to filter rows from the table "big_questions". All fields are combined with a logical 'AND'. */
  ['big_questions_bool_exp']: {
    _and?: Array<GraphQLTypes['big_questions_bool_exp']> | undefined;
    _not?: GraphQLTypes['big_questions_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['big_questions_bool_exp']> | undefined;
    activities?: GraphQLTypes['activities_bool_exp'] | undefined;
    activities_aggregate?:
      | GraphQLTypes['activities_aggregate_bool_exp']
      | undefined;
    cover_image_url?: GraphQLTypes['String_comparison_exp'] | undefined;
    created_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    css_background_position?: GraphQLTypes['String_comparison_exp'] | undefined;
    description?: GraphQLTypes['String_comparison_exp'] | undefined;
    expire_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    prompt?: GraphQLTypes['String_comparison_exp'] | undefined;
    publish_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
  };
  /** Ordering options when selecting data from "big_questions". */
  ['big_questions_order_by']: {
    activities_aggregate?:
      | GraphQLTypes['activities_aggregate_order_by']
      | undefined;
    cover_image_url?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    css_background_position?: GraphQLTypes['order_by'] | undefined;
    description?: GraphQLTypes['order_by'] | undefined;
    expire_at?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    prompt?: GraphQLTypes['order_by'] | undefined;
    publish_at?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "big_questions" */
  ['big_questions_select_column']: big_questions_select_column;
  /** Streaming cursor of the table "big_questions" */
  ['big_questions_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['big_questions_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['big_questions_stream_cursor_value_input']: {
    cover_image_url?: string | undefined;
    created_at?: GraphQLTypes['timestamp'] | undefined;
    css_background_position?: string | undefined;
    description?: string | undefined;
    expire_at?: GraphQLTypes['timestamp'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    prompt?: string | undefined;
    publish_at?: GraphQLTypes['timestamp'] | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
  };
  ['bigint']: any;
  /** Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'. */
  ['bigint_array_comparison_exp']: {
    /** is the array contained in the given array value */
    _contained_in?: Array<GraphQLTypes['bigint']> | undefined;
    /** does the array contain the given value */
    _contains?: Array<GraphQLTypes['bigint']> | undefined;
    _eq?: Array<GraphQLTypes['bigint']> | undefined;
    _gt?: Array<GraphQLTypes['bigint']> | undefined;
    _gte?: Array<GraphQLTypes['bigint']> | undefined;
    _in?: Array<Array<GraphQLTypes['bigint']> | undefined>;
    _is_null?: boolean | undefined;
    _lt?: Array<GraphQLTypes['bigint']> | undefined;
    _lte?: Array<GraphQLTypes['bigint']> | undefined;
    _neq?: Array<GraphQLTypes['bigint']> | undefined;
    _nin?: Array<Array<GraphQLTypes['bigint']> | undefined>;
  };
  /** Boolean expression to compare columns of type "bigint". All fields are combined with logical 'AND'. */
  ['bigint_comparison_exp']: {
    _eq?: GraphQLTypes['bigint'] | undefined;
    _gt?: GraphQLTypes['bigint'] | undefined;
    _gte?: GraphQLTypes['bigint'] | undefined;
    _in?: Array<GraphQLTypes['bigint']> | undefined;
    _is_null?: boolean | undefined;
    _lt?: GraphQLTypes['bigint'] | undefined;
    _lte?: GraphQLTypes['bigint'] | undefined;
    _neq?: GraphQLTypes['bigint'] | undefined;
    _nin?: Array<GraphQLTypes['bigint']> | undefined;
  };
  /** columns and relationships of "burns" */
  ['burns']: {
    __typename: 'burns';
    /** An object relationship */
    circle: GraphQLTypes['circles'];
    circle_id: GraphQLTypes['bigint'];
    created_at: GraphQLTypes['timestamp'];
    /** An object relationship */
    epoch: GraphQLTypes['epochs'];
    epoch_id: GraphQLTypes['bigint'];
    id: GraphQLTypes['bigint'];
    original_amount: number;
    regift_percent: number;
    tokens_burnt: number;
    updated_at: GraphQLTypes['timestamp'];
    /** An object relationship */
    user: GraphQLTypes['users'];
    user_id: GraphQLTypes['bigint'];
  };
  /** order by aggregate values of table "burns" */
  ['burns_aggregate_order_by']: {
    avg?: GraphQLTypes['burns_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['burns_max_order_by'] | undefined;
    min?: GraphQLTypes['burns_min_order_by'] | undefined;
    stddev?: GraphQLTypes['burns_stddev_order_by'] | undefined;
    stddev_pop?: GraphQLTypes['burns_stddev_pop_order_by'] | undefined;
    stddev_samp?: GraphQLTypes['burns_stddev_samp_order_by'] | undefined;
    sum?: GraphQLTypes['burns_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['burns_var_pop_order_by'] | undefined;
    var_samp?: GraphQLTypes['burns_var_samp_order_by'] | undefined;
    variance?: GraphQLTypes['burns_variance_order_by'] | undefined;
  };
  /** order by avg() on columns of table "burns" */
  ['burns_avg_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    original_amount?: GraphQLTypes['order_by'] | undefined;
    regift_percent?: GraphQLTypes['order_by'] | undefined;
    tokens_burnt?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "burns". All fields are combined with a logical 'AND'. */
  ['burns_bool_exp']: {
    _and?: Array<GraphQLTypes['burns_bool_exp']> | undefined;
    _not?: GraphQLTypes['burns_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['burns_bool_exp']> | undefined;
    circle?: GraphQLTypes['circles_bool_exp'] | undefined;
    circle_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    created_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    epoch?: GraphQLTypes['epochs_bool_exp'] | undefined;
    epoch_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    original_amount?: GraphQLTypes['Int_comparison_exp'] | undefined;
    regift_percent?: GraphQLTypes['Int_comparison_exp'] | undefined;
    tokens_burnt?: GraphQLTypes['Int_comparison_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    user?: GraphQLTypes['users_bool_exp'] | undefined;
    user_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
  };
  /** order by max() on columns of table "burns" */
  ['burns_max_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    original_amount?: GraphQLTypes['order_by'] | undefined;
    regift_percent?: GraphQLTypes['order_by'] | undefined;
    tokens_burnt?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by min() on columns of table "burns" */
  ['burns_min_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    original_amount?: GraphQLTypes['order_by'] | undefined;
    regift_percent?: GraphQLTypes['order_by'] | undefined;
    tokens_burnt?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Ordering options when selecting data from "burns". */
  ['burns_order_by']: {
    circle?: GraphQLTypes['circles_order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    epoch?: GraphQLTypes['epochs_order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    original_amount?: GraphQLTypes['order_by'] | undefined;
    regift_percent?: GraphQLTypes['order_by'] | undefined;
    tokens_burnt?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    user?: GraphQLTypes['users_order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "burns" */
  ['burns_select_column']: burns_select_column;
  /** order by stddev() on columns of table "burns" */
  ['burns_stddev_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    original_amount?: GraphQLTypes['order_by'] | undefined;
    regift_percent?: GraphQLTypes['order_by'] | undefined;
    tokens_burnt?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_pop() on columns of table "burns" */
  ['burns_stddev_pop_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    original_amount?: GraphQLTypes['order_by'] | undefined;
    regift_percent?: GraphQLTypes['order_by'] | undefined;
    tokens_burnt?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_samp() on columns of table "burns" */
  ['burns_stddev_samp_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    original_amount?: GraphQLTypes['order_by'] | undefined;
    regift_percent?: GraphQLTypes['order_by'] | undefined;
    tokens_burnt?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "burns" */
  ['burns_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['burns_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['burns_stream_cursor_value_input']: {
    circle_id?: GraphQLTypes['bigint'] | undefined;
    created_at?: GraphQLTypes['timestamp'] | undefined;
    epoch_id?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    original_amount?: number | undefined;
    regift_percent?: number | undefined;
    tokens_burnt?: number | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
    user_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by sum() on columns of table "burns" */
  ['burns_sum_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    original_amount?: GraphQLTypes['order_by'] | undefined;
    regift_percent?: GraphQLTypes['order_by'] | undefined;
    tokens_burnt?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by var_pop() on columns of table "burns" */
  ['burns_var_pop_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    original_amount?: GraphQLTypes['order_by'] | undefined;
    regift_percent?: GraphQLTypes['order_by'] | undefined;
    tokens_burnt?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by var_samp() on columns of table "burns" */
  ['burns_var_samp_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    original_amount?: GraphQLTypes['order_by'] | undefined;
    regift_percent?: GraphQLTypes['order_by'] | undefined;
    tokens_burnt?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by variance() on columns of table "burns" */
  ['burns_variance_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    original_amount?: GraphQLTypes['order_by'] | undefined;
    regift_percent?: GraphQLTypes['order_by'] | undefined;
    tokens_burnt?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  ['bytea']: any;
  /** Boolean expression to compare columns of type "bytea". All fields are combined with logical 'AND'. */
  ['bytea_comparison_exp']: {
    _eq?: GraphQLTypes['bytea'] | undefined;
    _gt?: GraphQLTypes['bytea'] | undefined;
    _gte?: GraphQLTypes['bytea'] | undefined;
    _in?: Array<GraphQLTypes['bytea']> | undefined;
    _is_null?: boolean | undefined;
    _lt?: GraphQLTypes['bytea'] | undefined;
    _lte?: GraphQLTypes['bytea'] | undefined;
    _neq?: GraphQLTypes['bytea'] | undefined;
    _nin?: Array<GraphQLTypes['bytea']> | undefined;
  };
  /** Circle-scoped API keys with user defined permissions to allow third parties to authenticate to Coordinape's GraphQL API. */
  ['circle_api_keys']: {
    __typename: 'circle_api_keys';
    /** An object relationship */
    circle: GraphQLTypes['circles'];
    circle_id: GraphQLTypes['bigint'];
    create_contributions: boolean;
    create_vouches: boolean;
    /** An object relationship */
    createdByUser: GraphQLTypes['users'];
    created_at: GraphQLTypes['timestamptz'];
    created_by: GraphQLTypes['bigint'];
    hash: string;
    manage_users: boolean;
    name: string;
    read_circle: boolean;
    read_contributions: boolean;
    read_epochs: boolean;
    read_member_profiles: boolean;
    read_nominees: boolean;
    read_pending_token_gifts: boolean;
    update_circle: boolean;
    update_pending_token_gifts: boolean;
  };
  /** order by aggregate values of table "circle_api_keys" */
  ['circle_api_keys_aggregate_order_by']: {
    avg?: GraphQLTypes['circle_api_keys_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['circle_api_keys_max_order_by'] | undefined;
    min?: GraphQLTypes['circle_api_keys_min_order_by'] | undefined;
    stddev?: GraphQLTypes['circle_api_keys_stddev_order_by'] | undefined;
    stddev_pop?:
      | GraphQLTypes['circle_api_keys_stddev_pop_order_by']
      | undefined;
    stddev_samp?:
      | GraphQLTypes['circle_api_keys_stddev_samp_order_by']
      | undefined;
    sum?: GraphQLTypes['circle_api_keys_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['circle_api_keys_var_pop_order_by'] | undefined;
    var_samp?: GraphQLTypes['circle_api_keys_var_samp_order_by'] | undefined;
    variance?: GraphQLTypes['circle_api_keys_variance_order_by'] | undefined;
  };
  /** order by avg() on columns of table "circle_api_keys" */
  ['circle_api_keys_avg_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "circle_api_keys". All fields are combined with a logical 'AND'. */
  ['circle_api_keys_bool_exp']: {
    _and?: Array<GraphQLTypes['circle_api_keys_bool_exp']> | undefined;
    _not?: GraphQLTypes['circle_api_keys_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['circle_api_keys_bool_exp']> | undefined;
    circle?: GraphQLTypes['circles_bool_exp'] | undefined;
    circle_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    create_contributions?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    create_vouches?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    createdByUser?: GraphQLTypes['users_bool_exp'] | undefined;
    created_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    created_by?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    hash?: GraphQLTypes['String_comparison_exp'] | undefined;
    manage_users?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    name?: GraphQLTypes['String_comparison_exp'] | undefined;
    read_circle?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    read_contributions?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    read_epochs?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    read_member_profiles?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    read_nominees?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    read_pending_token_gifts?:
      | GraphQLTypes['Boolean_comparison_exp']
      | undefined;
    update_circle?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    update_pending_token_gifts?:
      | GraphQLTypes['Boolean_comparison_exp']
      | undefined;
  };
  /** order by max() on columns of table "circle_api_keys" */
  ['circle_api_keys_max_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    hash?: GraphQLTypes['order_by'] | undefined;
    name?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by min() on columns of table "circle_api_keys" */
  ['circle_api_keys_min_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    hash?: GraphQLTypes['order_by'] | undefined;
    name?: GraphQLTypes['order_by'] | undefined;
  };
  /** response of any mutation on the table "circle_api_keys" */
  ['circle_api_keys_mutation_response']: {
    __typename: 'circle_api_keys_mutation_response';
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['circle_api_keys']>;
  };
  /** Ordering options when selecting data from "circle_api_keys". */
  ['circle_api_keys_order_by']: {
    circle?: GraphQLTypes['circles_order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    create_contributions?: GraphQLTypes['order_by'] | undefined;
    create_vouches?: GraphQLTypes['order_by'] | undefined;
    createdByUser?: GraphQLTypes['users_order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    hash?: GraphQLTypes['order_by'] | undefined;
    manage_users?: GraphQLTypes['order_by'] | undefined;
    name?: GraphQLTypes['order_by'] | undefined;
    read_circle?: GraphQLTypes['order_by'] | undefined;
    read_contributions?: GraphQLTypes['order_by'] | undefined;
    read_epochs?: GraphQLTypes['order_by'] | undefined;
    read_member_profiles?: GraphQLTypes['order_by'] | undefined;
    read_nominees?: GraphQLTypes['order_by'] | undefined;
    read_pending_token_gifts?: GraphQLTypes['order_by'] | undefined;
    update_circle?: GraphQLTypes['order_by'] | undefined;
    update_pending_token_gifts?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "circle_api_keys" */
  ['circle_api_keys_select_column']: circle_api_keys_select_column;
  /** order by stddev() on columns of table "circle_api_keys" */
  ['circle_api_keys_stddev_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_pop() on columns of table "circle_api_keys" */
  ['circle_api_keys_stddev_pop_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_samp() on columns of table "circle_api_keys" */
  ['circle_api_keys_stddev_samp_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "circle_api_keys" */
  ['circle_api_keys_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['circle_api_keys_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['circle_api_keys_stream_cursor_value_input']: {
    circle_id?: GraphQLTypes['bigint'] | undefined;
    create_contributions?: boolean | undefined;
    create_vouches?: boolean | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    created_by?: GraphQLTypes['bigint'] | undefined;
    hash?: string | undefined;
    manage_users?: boolean | undefined;
    name?: string | undefined;
    read_circle?: boolean | undefined;
    read_contributions?: boolean | undefined;
    read_epochs?: boolean | undefined;
    read_member_profiles?: boolean | undefined;
    read_nominees?: boolean | undefined;
    read_pending_token_gifts?: boolean | undefined;
    update_circle?: boolean | undefined;
    update_pending_token_gifts?: boolean | undefined;
  };
  /** order by sum() on columns of table "circle_api_keys" */
  ['circle_api_keys_sum_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by var_pop() on columns of table "circle_api_keys" */
  ['circle_api_keys_var_pop_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by var_samp() on columns of table "circle_api_keys" */
  ['circle_api_keys_var_samp_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by variance() on columns of table "circle_api_keys" */
  ['circle_api_keys_variance_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
  };
  /** columns and relationships of "circle_integrations" */
  ['circle_integrations']: {
    __typename: 'circle_integrations';
    /** An object relationship */
    circle: GraphQLTypes['circles'];
    circle_id: GraphQLTypes['bigint'];
    data: GraphQLTypes['json'];
    id: GraphQLTypes['bigint'];
    name: string;
    type: string;
  };
  /** order by aggregate values of table "circle_integrations" */
  ['circle_integrations_aggregate_order_by']: {
    avg?: GraphQLTypes['circle_integrations_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['circle_integrations_max_order_by'] | undefined;
    min?: GraphQLTypes['circle_integrations_min_order_by'] | undefined;
    stddev?: GraphQLTypes['circle_integrations_stddev_order_by'] | undefined;
    stddev_pop?:
      | GraphQLTypes['circle_integrations_stddev_pop_order_by']
      | undefined;
    stddev_samp?:
      | GraphQLTypes['circle_integrations_stddev_samp_order_by']
      | undefined;
    sum?: GraphQLTypes['circle_integrations_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['circle_integrations_var_pop_order_by'] | undefined;
    var_samp?:
      | GraphQLTypes['circle_integrations_var_samp_order_by']
      | undefined;
    variance?:
      | GraphQLTypes['circle_integrations_variance_order_by']
      | undefined;
  };
  /** order by avg() on columns of table "circle_integrations" */
  ['circle_integrations_avg_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "circle_integrations". All fields are combined with a logical 'AND'. */
  ['circle_integrations_bool_exp']: {
    _and?: Array<GraphQLTypes['circle_integrations_bool_exp']> | undefined;
    _not?: GraphQLTypes['circle_integrations_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['circle_integrations_bool_exp']> | undefined;
    circle?: GraphQLTypes['circles_bool_exp'] | undefined;
    circle_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    data?: GraphQLTypes['json_comparison_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    name?: GraphQLTypes['String_comparison_exp'] | undefined;
    type?: GraphQLTypes['String_comparison_exp'] | undefined;
  };
  /** unique or primary key constraints on table "circle_integrations" */
  ['circle_integrations_constraint']: circle_integrations_constraint;
  /** input type for inserting data into table "circle_integrations" */
  ['circle_integrations_insert_input']: {
    circle_id?: GraphQLTypes['bigint'] | undefined;
    data?: GraphQLTypes['json'] | undefined;
    name?: string | undefined;
    type?: string | undefined;
  };
  /** order by max() on columns of table "circle_integrations" */
  ['circle_integrations_max_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    name?: GraphQLTypes['order_by'] | undefined;
    type?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by min() on columns of table "circle_integrations" */
  ['circle_integrations_min_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    name?: GraphQLTypes['order_by'] | undefined;
    type?: GraphQLTypes['order_by'] | undefined;
  };
  /** response of any mutation on the table "circle_integrations" */
  ['circle_integrations_mutation_response']: {
    __typename: 'circle_integrations_mutation_response';
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['circle_integrations']>;
  };
  /** on_conflict condition type for table "circle_integrations" */
  ['circle_integrations_on_conflict']: {
    constraint: GraphQLTypes['circle_integrations_constraint'];
    update_columns: Array<GraphQLTypes['circle_integrations_update_column']>;
    where?: GraphQLTypes['circle_integrations_bool_exp'] | undefined;
  };
  /** Ordering options when selecting data from "circle_integrations". */
  ['circle_integrations_order_by']: {
    circle?: GraphQLTypes['circles_order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    data?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    name?: GraphQLTypes['order_by'] | undefined;
    type?: GraphQLTypes['order_by'] | undefined;
  };
  /** primary key columns input for table: circle_integrations */
  ['circle_integrations_pk_columns_input']: {
    id: GraphQLTypes['bigint'];
  };
  /** select columns of table "circle_integrations" */
  ['circle_integrations_select_column']: circle_integrations_select_column;
  /** input type for updating data in table "circle_integrations" */
  ['circle_integrations_set_input']: {
    data?: GraphQLTypes['json'] | undefined;
  };
  /** order by stddev() on columns of table "circle_integrations" */
  ['circle_integrations_stddev_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_pop() on columns of table "circle_integrations" */
  ['circle_integrations_stddev_pop_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_samp() on columns of table "circle_integrations" */
  ['circle_integrations_stddev_samp_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "circle_integrations" */
  ['circle_integrations_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['circle_integrations_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['circle_integrations_stream_cursor_value_input']: {
    circle_id?: GraphQLTypes['bigint'] | undefined;
    data?: GraphQLTypes['json'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    name?: string | undefined;
    type?: string | undefined;
  };
  /** order by sum() on columns of table "circle_integrations" */
  ['circle_integrations_sum_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
  };
  /** update columns of table "circle_integrations" */
  ['circle_integrations_update_column']: circle_integrations_update_column;
  ['circle_integrations_updates']: {
    /** sets the columns of the filtered rows to the given values */
    _set?: GraphQLTypes['circle_integrations_set_input'] | undefined;
    /** filter the rows which have to be updated */
    where: GraphQLTypes['circle_integrations_bool_exp'];
  };
  /** order by var_pop() on columns of table "circle_integrations" */
  ['circle_integrations_var_pop_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by var_samp() on columns of table "circle_integrations" */
  ['circle_integrations_var_samp_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by variance() on columns of table "circle_integrations" */
  ['circle_integrations_variance_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
  };
  /** columns and relationships of "circle_private" */
  ['circle_private']: {
    __typename: 'circle_private';
    /** An object relationship */
    circle?: GraphQLTypes['circles'] | undefined;
    circle_id?: GraphQLTypes['bigint'] | undefined;
    discord_webhook?: string | undefined;
  };
  /** Boolean expression to filter rows from the table "circle_private". All fields are combined with a logical 'AND'. */
  ['circle_private_bool_exp']: {
    _and?: Array<GraphQLTypes['circle_private_bool_exp']> | undefined;
    _not?: GraphQLTypes['circle_private_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['circle_private_bool_exp']> | undefined;
    circle?: GraphQLTypes['circles_bool_exp'] | undefined;
    circle_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    discord_webhook?: GraphQLTypes['String_comparison_exp'] | undefined;
  };
  /** Ordering options when selecting data from "circle_private". */
  ['circle_private_order_by']: {
    circle?: GraphQLTypes['circles_order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    discord_webhook?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "circle_private" */
  ['circle_private_select_column']: circle_private_select_column;
  /** Streaming cursor of the table "circle_private" */
  ['circle_private_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['circle_private_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['circle_private_stream_cursor_value_input']: {
    circle_id?: GraphQLTypes['bigint'] | undefined;
    discord_webhook?: string | undefined;
  };
  /** columns and relationships of "circle_share_tokens" */
  ['circle_share_tokens']: {
    __typename: 'circle_share_tokens';
    /** An object relationship */
    circle: GraphQLTypes['circles'];
    circle_id: GraphQLTypes['bigint'];
    created_at: GraphQLTypes['timestamptz'];
    type: number;
    updated_at: GraphQLTypes['timestamptz'];
    uuid: GraphQLTypes['uuid'];
  };
  /** Boolean expression to filter rows from the table "circle_share_tokens". All fields are combined with a logical 'AND'. */
  ['circle_share_tokens_bool_exp']: {
    _and?: Array<GraphQLTypes['circle_share_tokens_bool_exp']> | undefined;
    _not?: GraphQLTypes['circle_share_tokens_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['circle_share_tokens_bool_exp']> | undefined;
    circle?: GraphQLTypes['circles_bool_exp'] | undefined;
    circle_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    created_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    type?: GraphQLTypes['Int_comparison_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    uuid?: GraphQLTypes['uuid_comparison_exp'] | undefined;
  };
  /** unique or primary key constraints on table "circle_share_tokens" */
  ['circle_share_tokens_constraint']: circle_share_tokens_constraint;
  /** input type for inserting data into table "circle_share_tokens" */
  ['circle_share_tokens_insert_input']: {
    circle_id?: GraphQLTypes['bigint'] | undefined;
    type?: number | undefined;
  };
  /** response of any mutation on the table "circle_share_tokens" */
  ['circle_share_tokens_mutation_response']: {
    __typename: 'circle_share_tokens_mutation_response';
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['circle_share_tokens']>;
  };
  /** on_conflict condition type for table "circle_share_tokens" */
  ['circle_share_tokens_on_conflict']: {
    constraint: GraphQLTypes['circle_share_tokens_constraint'];
    update_columns: Array<GraphQLTypes['circle_share_tokens_update_column']>;
    where?: GraphQLTypes['circle_share_tokens_bool_exp'] | undefined;
  };
  /** Ordering options when selecting data from "circle_share_tokens". */
  ['circle_share_tokens_order_by']: {
    circle?: GraphQLTypes['circles_order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    type?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    uuid?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "circle_share_tokens" */
  ['circle_share_tokens_select_column']: circle_share_tokens_select_column;
  /** Streaming cursor of the table "circle_share_tokens" */
  ['circle_share_tokens_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['circle_share_tokens_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['circle_share_tokens_stream_cursor_value_input']: {
    circle_id?: GraphQLTypes['bigint'] | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    type?: number | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
    uuid?: GraphQLTypes['uuid'] | undefined;
  };
  /** placeholder for update columns of table "circle_share_tokens" (current role has no relevant permissions) */
  ['circle_share_tokens_update_column']: circle_share_tokens_update_column;
  /** columns and relationships of "circles" */
  ['circles']: {
    __typename: 'circles';
    alloc_text?: string | undefined;
    allow_distribute_evenly: boolean;
    /** An array relationship */
    api_keys: Array<GraphQLTypes['circle_api_keys']>;
    auto_opt_out: boolean;
    /** An array relationship */
    burns: Array<GraphQLTypes['burns']>;
    /** An object relationship */
    circle_private?: GraphQLTypes['circle_private'] | undefined;
    cont_help_text?: string | undefined;
    /** An array relationship */
    contributions: Array<GraphQLTypes['contributions']>;
    /** An aggregate relationship */
    contributions_aggregate: GraphQLTypes['contributions_aggregate'];
    created_at: GraphQLTypes['timestamp'];
    default_opt_in: boolean;
    deleted_at?: GraphQLTypes['timestamp'] | undefined;
    /** An array relationship */
    epochs: Array<GraphQLTypes['epochs']>;
    fixed_payment_token_type?: string | undefined;
    fixed_payment_vault_id?: number | undefined;
    guild_id?: number | undefined;
    guild_role_id?: number | undefined;
    id: GraphQLTypes['bigint'];
    /** An array relationship */
    integrations: Array<GraphQLTypes['circle_integrations']>;
    is_verified: boolean;
    logo?: string | undefined;
    min_vouches: number;
    name: string;
    nomination_days_limit: number;
    /** An array relationship */
    nominees: Array<GraphQLTypes['nominees']>;
    /** An aggregate relationship */
    nominees_aggregate: GraphQLTypes['nominees_aggregate'];
    only_giver_vouch: boolean;
    /** An object relationship */
    organization: GraphQLTypes['organizations'];
    organization_id: number;
    /** An array relationship */
    pending_token_gifts: Array<GraphQLTypes['pending_token_gifts']>;
    show_pending_gives: boolean;
    starting_tokens: number;
    team_selection: boolean;
    /** An array relationship */
    token_gifts: Array<GraphQLTypes['token_gifts']>;
    /** An aggregate relationship */
    token_gifts_aggregate: GraphQLTypes['token_gifts_aggregate'];
    token_name: string;
    updated_at: GraphQLTypes['timestamp'];
    /** An array relationship */
    users: Array<GraphQLTypes['users']>;
    /** An array relationship */
    vault_transactions: Array<GraphQLTypes['vault_transactions']>;
    vouching: boolean;
    vouching_text?: string | undefined;
  };
  /** order by aggregate values of table "circles" */
  ['circles_aggregate_order_by']: {
    avg?: GraphQLTypes['circles_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['circles_max_order_by'] | undefined;
    min?: GraphQLTypes['circles_min_order_by'] | undefined;
    stddev?: GraphQLTypes['circles_stddev_order_by'] | undefined;
    stddev_pop?: GraphQLTypes['circles_stddev_pop_order_by'] | undefined;
    stddev_samp?: GraphQLTypes['circles_stddev_samp_order_by'] | undefined;
    sum?: GraphQLTypes['circles_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['circles_var_pop_order_by'] | undefined;
    var_samp?: GraphQLTypes['circles_var_samp_order_by'] | undefined;
    variance?: GraphQLTypes['circles_variance_order_by'] | undefined;
  };
  /** order by avg() on columns of table "circles" */
  ['circles_avg_order_by']: {
    fixed_payment_vault_id?: GraphQLTypes['order_by'] | undefined;
    guild_id?: GraphQLTypes['order_by'] | undefined;
    guild_role_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    min_vouches?: GraphQLTypes['order_by'] | undefined;
    nomination_days_limit?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    starting_tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "circles". All fields are combined with a logical 'AND'. */
  ['circles_bool_exp']: {
    _and?: Array<GraphQLTypes['circles_bool_exp']> | undefined;
    _not?: GraphQLTypes['circles_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['circles_bool_exp']> | undefined;
    alloc_text?: GraphQLTypes['String_comparison_exp'] | undefined;
    allow_distribute_evenly?:
      | GraphQLTypes['Boolean_comparison_exp']
      | undefined;
    api_keys?: GraphQLTypes['circle_api_keys_bool_exp'] | undefined;
    auto_opt_out?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    burns?: GraphQLTypes['burns_bool_exp'] | undefined;
    circle_private?: GraphQLTypes['circle_private_bool_exp'] | undefined;
    cont_help_text?: GraphQLTypes['String_comparison_exp'] | undefined;
    contributions?: GraphQLTypes['contributions_bool_exp'] | undefined;
    contributions_aggregate?:
      | GraphQLTypes['contributions_aggregate_bool_exp']
      | undefined;
    created_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    default_opt_in?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    deleted_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    epochs?: GraphQLTypes['epochs_bool_exp'] | undefined;
    fixed_payment_token_type?:
      | GraphQLTypes['String_comparison_exp']
      | undefined;
    fixed_payment_vault_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    guild_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    guild_role_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    integrations?: GraphQLTypes['circle_integrations_bool_exp'] | undefined;
    is_verified?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    logo?: GraphQLTypes['String_comparison_exp'] | undefined;
    min_vouches?: GraphQLTypes['Int_comparison_exp'] | undefined;
    name?: GraphQLTypes['String_comparison_exp'] | undefined;
    nomination_days_limit?: GraphQLTypes['Int_comparison_exp'] | undefined;
    nominees?: GraphQLTypes['nominees_bool_exp'] | undefined;
    nominees_aggregate?:
      | GraphQLTypes['nominees_aggregate_bool_exp']
      | undefined;
    only_giver_vouch?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    organization?: GraphQLTypes['organizations_bool_exp'] | undefined;
    organization_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    pending_token_gifts?:
      | GraphQLTypes['pending_token_gifts_bool_exp']
      | undefined;
    show_pending_gives?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    starting_tokens?: GraphQLTypes['Int_comparison_exp'] | undefined;
    team_selection?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    token_gifts?: GraphQLTypes['token_gifts_bool_exp'] | undefined;
    token_gifts_aggregate?:
      | GraphQLTypes['token_gifts_aggregate_bool_exp']
      | undefined;
    token_name?: GraphQLTypes['String_comparison_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    users?: GraphQLTypes['users_bool_exp'] | undefined;
    vault_transactions?:
      | GraphQLTypes['vault_transactions_bool_exp']
      | undefined;
    vouching?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    vouching_text?: GraphQLTypes['String_comparison_exp'] | undefined;
  };
  /** order by max() on columns of table "circles" */
  ['circles_max_order_by']: {
    alloc_text?: GraphQLTypes['order_by'] | undefined;
    cont_help_text?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    deleted_at?: GraphQLTypes['order_by'] | undefined;
    fixed_payment_token_type?: GraphQLTypes['order_by'] | undefined;
    fixed_payment_vault_id?: GraphQLTypes['order_by'] | undefined;
    guild_id?: GraphQLTypes['order_by'] | undefined;
    guild_role_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    logo?: GraphQLTypes['order_by'] | undefined;
    min_vouches?: GraphQLTypes['order_by'] | undefined;
    name?: GraphQLTypes['order_by'] | undefined;
    nomination_days_limit?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    starting_tokens?: GraphQLTypes['order_by'] | undefined;
    token_name?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    vouching_text?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by min() on columns of table "circles" */
  ['circles_min_order_by']: {
    alloc_text?: GraphQLTypes['order_by'] | undefined;
    cont_help_text?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    deleted_at?: GraphQLTypes['order_by'] | undefined;
    fixed_payment_token_type?: GraphQLTypes['order_by'] | undefined;
    fixed_payment_vault_id?: GraphQLTypes['order_by'] | undefined;
    guild_id?: GraphQLTypes['order_by'] | undefined;
    guild_role_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    logo?: GraphQLTypes['order_by'] | undefined;
    min_vouches?: GraphQLTypes['order_by'] | undefined;
    name?: GraphQLTypes['order_by'] | undefined;
    nomination_days_limit?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    starting_tokens?: GraphQLTypes['order_by'] | undefined;
    token_name?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    vouching_text?: GraphQLTypes['order_by'] | undefined;
  };
  /** Ordering options when selecting data from "circles". */
  ['circles_order_by']: {
    alloc_text?: GraphQLTypes['order_by'] | undefined;
    allow_distribute_evenly?: GraphQLTypes['order_by'] | undefined;
    api_keys_aggregate?:
      | GraphQLTypes['circle_api_keys_aggregate_order_by']
      | undefined;
    auto_opt_out?: GraphQLTypes['order_by'] | undefined;
    burns_aggregate?: GraphQLTypes['burns_aggregate_order_by'] | undefined;
    circle_private?: GraphQLTypes['circle_private_order_by'] | undefined;
    cont_help_text?: GraphQLTypes['order_by'] | undefined;
    contributions_aggregate?:
      | GraphQLTypes['contributions_aggregate_order_by']
      | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    default_opt_in?: GraphQLTypes['order_by'] | undefined;
    deleted_at?: GraphQLTypes['order_by'] | undefined;
    epochs_aggregate?: GraphQLTypes['epochs_aggregate_order_by'] | undefined;
    fixed_payment_token_type?: GraphQLTypes['order_by'] | undefined;
    fixed_payment_vault_id?: GraphQLTypes['order_by'] | undefined;
    guild_id?: GraphQLTypes['order_by'] | undefined;
    guild_role_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    integrations_aggregate?:
      | GraphQLTypes['circle_integrations_aggregate_order_by']
      | undefined;
    is_verified?: GraphQLTypes['order_by'] | undefined;
    logo?: GraphQLTypes['order_by'] | undefined;
    min_vouches?: GraphQLTypes['order_by'] | undefined;
    name?: GraphQLTypes['order_by'] | undefined;
    nomination_days_limit?: GraphQLTypes['order_by'] | undefined;
    nominees_aggregate?:
      | GraphQLTypes['nominees_aggregate_order_by']
      | undefined;
    only_giver_vouch?: GraphQLTypes['order_by'] | undefined;
    organization?: GraphQLTypes['organizations_order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    pending_token_gifts_aggregate?:
      | GraphQLTypes['pending_token_gifts_aggregate_order_by']
      | undefined;
    show_pending_gives?: GraphQLTypes['order_by'] | undefined;
    starting_tokens?: GraphQLTypes['order_by'] | undefined;
    team_selection?: GraphQLTypes['order_by'] | undefined;
    token_gifts_aggregate?:
      | GraphQLTypes['token_gifts_aggregate_order_by']
      | undefined;
    token_name?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    users_aggregate?: GraphQLTypes['users_aggregate_order_by'] | undefined;
    vault_transactions_aggregate?:
      | GraphQLTypes['vault_transactions_aggregate_order_by']
      | undefined;
    vouching?: GraphQLTypes['order_by'] | undefined;
    vouching_text?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "circles" */
  ['circles_select_column']: circles_select_column;
  /** order by stddev() on columns of table "circles" */
  ['circles_stddev_order_by']: {
    fixed_payment_vault_id?: GraphQLTypes['order_by'] | undefined;
    guild_id?: GraphQLTypes['order_by'] | undefined;
    guild_role_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    min_vouches?: GraphQLTypes['order_by'] | undefined;
    nomination_days_limit?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    starting_tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_pop() on columns of table "circles" */
  ['circles_stddev_pop_order_by']: {
    fixed_payment_vault_id?: GraphQLTypes['order_by'] | undefined;
    guild_id?: GraphQLTypes['order_by'] | undefined;
    guild_role_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    min_vouches?: GraphQLTypes['order_by'] | undefined;
    nomination_days_limit?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    starting_tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_samp() on columns of table "circles" */
  ['circles_stddev_samp_order_by']: {
    fixed_payment_vault_id?: GraphQLTypes['order_by'] | undefined;
    guild_id?: GraphQLTypes['order_by'] | undefined;
    guild_role_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    min_vouches?: GraphQLTypes['order_by'] | undefined;
    nomination_days_limit?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    starting_tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "circles" */
  ['circles_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['circles_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['circles_stream_cursor_value_input']: {
    alloc_text?: string | undefined;
    allow_distribute_evenly?: boolean | undefined;
    auto_opt_out?: boolean | undefined;
    cont_help_text?: string | undefined;
    created_at?: GraphQLTypes['timestamp'] | undefined;
    default_opt_in?: boolean | undefined;
    deleted_at?: GraphQLTypes['timestamp'] | undefined;
    fixed_payment_token_type?: string | undefined;
    fixed_payment_vault_id?: number | undefined;
    guild_id?: number | undefined;
    guild_role_id?: number | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    is_verified?: boolean | undefined;
    logo?: string | undefined;
    min_vouches?: number | undefined;
    name?: string | undefined;
    nomination_days_limit?: number | undefined;
    only_giver_vouch?: boolean | undefined;
    organization_id?: number | undefined;
    show_pending_gives?: boolean | undefined;
    starting_tokens?: number | undefined;
    team_selection?: boolean | undefined;
    token_name?: string | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
    vouching?: boolean | undefined;
    vouching_text?: string | undefined;
  };
  /** order by sum() on columns of table "circles" */
  ['circles_sum_order_by']: {
    fixed_payment_vault_id?: GraphQLTypes['order_by'] | undefined;
    guild_id?: GraphQLTypes['order_by'] | undefined;
    guild_role_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    min_vouches?: GraphQLTypes['order_by'] | undefined;
    nomination_days_limit?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    starting_tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by var_pop() on columns of table "circles" */
  ['circles_var_pop_order_by']: {
    fixed_payment_vault_id?: GraphQLTypes['order_by'] | undefined;
    guild_id?: GraphQLTypes['order_by'] | undefined;
    guild_role_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    min_vouches?: GraphQLTypes['order_by'] | undefined;
    nomination_days_limit?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    starting_tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by var_samp() on columns of table "circles" */
  ['circles_var_samp_order_by']: {
    fixed_payment_vault_id?: GraphQLTypes['order_by'] | undefined;
    guild_id?: GraphQLTypes['order_by'] | undefined;
    guild_role_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    min_vouches?: GraphQLTypes['order_by'] | undefined;
    nomination_days_limit?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    starting_tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by variance() on columns of table "circles" */
  ['circles_variance_order_by']: {
    fixed_payment_vault_id?: GraphQLTypes['order_by'] | undefined;
    guild_id?: GraphQLTypes['order_by'] | undefined;
    guild_role_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    min_vouches?: GraphQLTypes['order_by'] | undefined;
    nomination_days_limit?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    starting_tokens?: GraphQLTypes['order_by'] | undefined;
  };
  ['citext']: any;
  /** Boolean expression to compare columns of type "citext". All fields are combined with logical 'AND'. */
  ['citext_comparison_exp']: {
    _eq?: GraphQLTypes['citext'] | undefined;
    _gt?: GraphQLTypes['citext'] | undefined;
    _gte?: GraphQLTypes['citext'] | undefined;
    /** does the column match the given case-insensitive pattern */
    _ilike?: GraphQLTypes['citext'] | undefined;
    _in?: Array<GraphQLTypes['citext']> | undefined;
    /** does the column match the given POSIX regular expression, case insensitive */
    _iregex?: GraphQLTypes['citext'] | undefined;
    _is_null?: boolean | undefined;
    /** does the column match the given pattern */
    _like?: GraphQLTypes['citext'] | undefined;
    _lt?: GraphQLTypes['citext'] | undefined;
    _lte?: GraphQLTypes['citext'] | undefined;
    _neq?: GraphQLTypes['citext'] | undefined;
    /** does the column NOT match the given case-insensitive pattern */
    _nilike?: GraphQLTypes['citext'] | undefined;
    _nin?: Array<GraphQLTypes['citext']> | undefined;
    /** does the column NOT match the given POSIX regular expression, case insensitive */
    _niregex?: GraphQLTypes['citext'] | undefined;
    /** does the column NOT match the given pattern */
    _nlike?: GraphQLTypes['citext'] | undefined;
    /** does the column NOT match the given POSIX regular expression, case sensitive */
    _nregex?: GraphQLTypes['citext'] | undefined;
    /** does the column NOT match the given SQL regular expression */
    _nsimilar?: GraphQLTypes['citext'] | undefined;
    /** does the column match the given POSIX regular expression, case sensitive */
    _regex?: GraphQLTypes['citext'] | undefined;
    /** does the column match the given SQL regular expression */
    _similar?: GraphQLTypes['citext'] | undefined;
  };
  /** columns and relationships of "claims" */
  ['claims']: {
    __typename: 'claims';
    address: string;
    amount: GraphQLTypes['numeric'];
    created_at: GraphQLTypes['timestamptz'];
    /** An object relationship */
    distribution: GraphQLTypes['distributions'];
    distribution_id: GraphQLTypes['bigint'];
    id: GraphQLTypes['bigint'];
    index: GraphQLTypes['bigint'];
    new_amount: GraphQLTypes['numeric'];
    /** An object relationship */
    profile?: GraphQLTypes['profiles'] | undefined;
    profile_id: GraphQLTypes['bigint'];
    proof: string;
    txHash?: string | undefined;
    updated_at: GraphQLTypes['timestamptz'];
  };
  /** aggregated selection of "claims" */
  ['claims_aggregate']: {
    __typename: 'claims_aggregate';
    aggregate?: GraphQLTypes['claims_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['claims']>;
  };
  ['claims_aggregate_bool_exp']: {
    count?: GraphQLTypes['claims_aggregate_bool_exp_count'] | undefined;
  };
  ['claims_aggregate_bool_exp_count']: {
    arguments?: Array<GraphQLTypes['claims_select_column']> | undefined;
    distinct?: boolean | undefined;
    filter?: GraphQLTypes['claims_bool_exp'] | undefined;
    predicate: GraphQLTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "claims" */
  ['claims_aggregate_fields']: {
    __typename: 'claims_aggregate_fields';
    avg?: GraphQLTypes['claims_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['claims_max_fields'] | undefined;
    min?: GraphQLTypes['claims_min_fields'] | undefined;
    stddev?: GraphQLTypes['claims_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['claims_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['claims_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['claims_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['claims_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['claims_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['claims_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "claims" */
  ['claims_aggregate_order_by']: {
    avg?: GraphQLTypes['claims_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['claims_max_order_by'] | undefined;
    min?: GraphQLTypes['claims_min_order_by'] | undefined;
    stddev?: GraphQLTypes['claims_stddev_order_by'] | undefined;
    stddev_pop?: GraphQLTypes['claims_stddev_pop_order_by'] | undefined;
    stddev_samp?: GraphQLTypes['claims_stddev_samp_order_by'] | undefined;
    sum?: GraphQLTypes['claims_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['claims_var_pop_order_by'] | undefined;
    var_samp?: GraphQLTypes['claims_var_samp_order_by'] | undefined;
    variance?: GraphQLTypes['claims_variance_order_by'] | undefined;
  };
  /** input type for inserting array relation for remote table "claims" */
  ['claims_arr_rel_insert_input']: {
    data: Array<GraphQLTypes['claims_insert_input']>;
    /** upsert condition */
    on_conflict?: GraphQLTypes['claims_on_conflict'] | undefined;
  };
  /** aggregate avg on columns */
  ['claims_avg_fields']: {
    __typename: 'claims_avg_fields';
    amount?: number | undefined;
    distribution_id?: number | undefined;
    id?: number | undefined;
    index?: number | undefined;
    new_amount?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by avg() on columns of table "claims" */
  ['claims_avg_order_by']: {
    amount?: GraphQLTypes['order_by'] | undefined;
    distribution_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    index?: GraphQLTypes['order_by'] | undefined;
    new_amount?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "claims". All fields are combined with a logical 'AND'. */
  ['claims_bool_exp']: {
    _and?: Array<GraphQLTypes['claims_bool_exp']> | undefined;
    _not?: GraphQLTypes['claims_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['claims_bool_exp']> | undefined;
    address?: GraphQLTypes['String_comparison_exp'] | undefined;
    amount?: GraphQLTypes['numeric_comparison_exp'] | undefined;
    created_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    distribution?: GraphQLTypes['distributions_bool_exp'] | undefined;
    distribution_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    index?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    new_amount?: GraphQLTypes['numeric_comparison_exp'] | undefined;
    profile?: GraphQLTypes['profiles_bool_exp'] | undefined;
    profile_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    proof?: GraphQLTypes['String_comparison_exp'] | undefined;
    txHash?: GraphQLTypes['String_comparison_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
  };
  /** unique or primary key constraints on table "claims" */
  ['claims_constraint']: claims_constraint;
  /** input type for inserting data into table "claims" */
  ['claims_insert_input']: {
    address?: string | undefined;
    amount?: GraphQLTypes['numeric'] | undefined;
    distribution?:
      | GraphQLTypes['distributions_obj_rel_insert_input']
      | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    index?: GraphQLTypes['bigint'] | undefined;
    new_amount?: GraphQLTypes['numeric'] | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    proof?: string | undefined;
  };
  /** aggregate max on columns */
  ['claims_max_fields']: {
    __typename: 'claims_max_fields';
    address?: string | undefined;
    amount?: GraphQLTypes['numeric'] | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    distribution_id?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    index?: GraphQLTypes['bigint'] | undefined;
    new_amount?: GraphQLTypes['numeric'] | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    proof?: string | undefined;
    txHash?: string | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by max() on columns of table "claims" */
  ['claims_max_order_by']: {
    address?: GraphQLTypes['order_by'] | undefined;
    amount?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    distribution_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    index?: GraphQLTypes['order_by'] | undefined;
    new_amount?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    proof?: GraphQLTypes['order_by'] | undefined;
    txHash?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate min on columns */
  ['claims_min_fields']: {
    __typename: 'claims_min_fields';
    address?: string | undefined;
    amount?: GraphQLTypes['numeric'] | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    distribution_id?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    index?: GraphQLTypes['bigint'] | undefined;
    new_amount?: GraphQLTypes['numeric'] | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    proof?: string | undefined;
    txHash?: string | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by min() on columns of table "claims" */
  ['claims_min_order_by']: {
    address?: GraphQLTypes['order_by'] | undefined;
    amount?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    distribution_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    index?: GraphQLTypes['order_by'] | undefined;
    new_amount?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    proof?: GraphQLTypes['order_by'] | undefined;
    txHash?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** response of any mutation on the table "claims" */
  ['claims_mutation_response']: {
    __typename: 'claims_mutation_response';
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['claims']>;
  };
  /** on_conflict condition type for table "claims" */
  ['claims_on_conflict']: {
    constraint: GraphQLTypes['claims_constraint'];
    update_columns: Array<GraphQLTypes['claims_update_column']>;
    where?: GraphQLTypes['claims_bool_exp'] | undefined;
  };
  /** Ordering options when selecting data from "claims". */
  ['claims_order_by']: {
    address?: GraphQLTypes['order_by'] | undefined;
    amount?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    distribution?: GraphQLTypes['distributions_order_by'] | undefined;
    distribution_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    index?: GraphQLTypes['order_by'] | undefined;
    new_amount?: GraphQLTypes['order_by'] | undefined;
    profile?: GraphQLTypes['profiles_order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    proof?: GraphQLTypes['order_by'] | undefined;
    txHash?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** primary key columns input for table: claims */
  ['claims_pk_columns_input']: {
    id: GraphQLTypes['bigint'];
  };
  /** select columns of table "claims" */
  ['claims_select_column']: claims_select_column;
  /** input type for updating data in table "claims" */
  ['claims_set_input']: {
    txHash?: string | undefined;
  };
  /** aggregate stddev on columns */
  ['claims_stddev_fields']: {
    __typename: 'claims_stddev_fields';
    amount?: number | undefined;
    distribution_id?: number | undefined;
    id?: number | undefined;
    index?: number | undefined;
    new_amount?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by stddev() on columns of table "claims" */
  ['claims_stddev_order_by']: {
    amount?: GraphQLTypes['order_by'] | undefined;
    distribution_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    index?: GraphQLTypes['order_by'] | undefined;
    new_amount?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_pop on columns */
  ['claims_stddev_pop_fields']: {
    __typename: 'claims_stddev_pop_fields';
    amount?: number | undefined;
    distribution_id?: number | undefined;
    id?: number | undefined;
    index?: number | undefined;
    new_amount?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "claims" */
  ['claims_stddev_pop_order_by']: {
    amount?: GraphQLTypes['order_by'] | undefined;
    distribution_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    index?: GraphQLTypes['order_by'] | undefined;
    new_amount?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_samp on columns */
  ['claims_stddev_samp_fields']: {
    __typename: 'claims_stddev_samp_fields';
    amount?: number | undefined;
    distribution_id?: number | undefined;
    id?: number | undefined;
    index?: number | undefined;
    new_amount?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "claims" */
  ['claims_stddev_samp_order_by']: {
    amount?: GraphQLTypes['order_by'] | undefined;
    distribution_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    index?: GraphQLTypes['order_by'] | undefined;
    new_amount?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "claims" */
  ['claims_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['claims_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['claims_stream_cursor_value_input']: {
    address?: string | undefined;
    amount?: GraphQLTypes['numeric'] | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    distribution_id?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    index?: GraphQLTypes['bigint'] | undefined;
    new_amount?: GraphQLTypes['numeric'] | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    proof?: string | undefined;
    txHash?: string | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** aggregate sum on columns */
  ['claims_sum_fields']: {
    __typename: 'claims_sum_fields';
    amount?: GraphQLTypes['numeric'] | undefined;
    distribution_id?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    index?: GraphQLTypes['bigint'] | undefined;
    new_amount?: GraphQLTypes['numeric'] | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by sum() on columns of table "claims" */
  ['claims_sum_order_by']: {
    amount?: GraphQLTypes['order_by'] | undefined;
    distribution_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    index?: GraphQLTypes['order_by'] | undefined;
    new_amount?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** update columns of table "claims" */
  ['claims_update_column']: claims_update_column;
  ['claims_updates']: {
    /** sets the columns of the filtered rows to the given values */
    _set?: GraphQLTypes['claims_set_input'] | undefined;
    /** filter the rows which have to be updated */
    where: GraphQLTypes['claims_bool_exp'];
  };
  /** aggregate var_pop on columns */
  ['claims_var_pop_fields']: {
    __typename: 'claims_var_pop_fields';
    amount?: number | undefined;
    distribution_id?: number | undefined;
    id?: number | undefined;
    index?: number | undefined;
    new_amount?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by var_pop() on columns of table "claims" */
  ['claims_var_pop_order_by']: {
    amount?: GraphQLTypes['order_by'] | undefined;
    distribution_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    index?: GraphQLTypes['order_by'] | undefined;
    new_amount?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate var_samp on columns */
  ['claims_var_samp_fields']: {
    __typename: 'claims_var_samp_fields';
    amount?: number | undefined;
    distribution_id?: number | undefined;
    id?: number | undefined;
    index?: number | undefined;
    new_amount?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by var_samp() on columns of table "claims" */
  ['claims_var_samp_order_by']: {
    amount?: GraphQLTypes['order_by'] | undefined;
    distribution_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    index?: GraphQLTypes['order_by'] | undefined;
    new_amount?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate variance on columns */
  ['claims_variance_fields']: {
    __typename: 'claims_variance_fields';
    amount?: number | undefined;
    distribution_id?: number | undefined;
    id?: number | undefined;
    index?: number | undefined;
    new_amount?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by variance() on columns of table "claims" */
  ['claims_variance_order_by']: {
    amount?: GraphQLTypes['order_by'] | undefined;
    distribution_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    index?: GraphQLTypes['order_by'] | undefined;
    new_amount?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** columns and relationships of "colinks_gives" */
  ['colinks_gives']: {
    __typename: 'colinks_gives';
    activity_id?: GraphQLTypes['bigint'] | undefined;
    attestation_uid?: string | undefined;
    cast_hash?: string | undefined;
    created_at: GraphQLTypes['timestamptz'];
    /** An object relationship */
    give_skill?: GraphQLTypes['skills'] | undefined;
    /** An object relationship */
    giver_profile_public?: GraphQLTypes['profiles_public'] | undefined;
    id: number;
    profile_id: GraphQLTypes['bigint'];
    skill?: GraphQLTypes['citext'] | undefined;
    target_profile_id: GraphQLTypes['bigint'];
    /** An object relationship */
    target_profile_public?: GraphQLTypes['profiles_public'] | undefined;
    updated_at: GraphQLTypes['timestamptz'];
    warpcast_url?: string | undefined;
  };
  /** aggregated selection of "colinks_gives" */
  ['colinks_gives_aggregate']: {
    __typename: 'colinks_gives_aggregate';
    aggregate?: GraphQLTypes['colinks_gives_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['colinks_gives']>;
  };
  ['colinks_gives_aggregate_bool_exp']: {
    count?: GraphQLTypes['colinks_gives_aggregate_bool_exp_count'] | undefined;
  };
  ['colinks_gives_aggregate_bool_exp_count']: {
    arguments?: Array<GraphQLTypes['colinks_gives_select_column']> | undefined;
    distinct?: boolean | undefined;
    filter?: GraphQLTypes['colinks_gives_bool_exp'] | undefined;
    predicate: GraphQLTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "colinks_gives" */
  ['colinks_gives_aggregate_fields']: {
    __typename: 'colinks_gives_aggregate_fields';
    avg?: GraphQLTypes['colinks_gives_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['colinks_gives_max_fields'] | undefined;
    min?: GraphQLTypes['colinks_gives_min_fields'] | undefined;
    stddev?: GraphQLTypes['colinks_gives_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['colinks_gives_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['colinks_gives_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['colinks_gives_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['colinks_gives_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['colinks_gives_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['colinks_gives_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "colinks_gives" */
  ['colinks_gives_aggregate_order_by']: {
    avg?: GraphQLTypes['colinks_gives_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['colinks_gives_max_order_by'] | undefined;
    min?: GraphQLTypes['colinks_gives_min_order_by'] | undefined;
    stddev?: GraphQLTypes['colinks_gives_stddev_order_by'] | undefined;
    stddev_pop?: GraphQLTypes['colinks_gives_stddev_pop_order_by'] | undefined;
    stddev_samp?:
      | GraphQLTypes['colinks_gives_stddev_samp_order_by']
      | undefined;
    sum?: GraphQLTypes['colinks_gives_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['colinks_gives_var_pop_order_by'] | undefined;
    var_samp?: GraphQLTypes['colinks_gives_var_samp_order_by'] | undefined;
    variance?: GraphQLTypes['colinks_gives_variance_order_by'] | undefined;
  };
  /** aggregate avg on columns */
  ['colinks_gives_avg_fields']: {
    __typename: 'colinks_gives_avg_fields';
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    target_profile_id?: number | undefined;
  };
  /** order by avg() on columns of table "colinks_gives" */
  ['colinks_gives_avg_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "colinks_gives". All fields are combined with a logical 'AND'. */
  ['colinks_gives_bool_exp']: {
    _and?: Array<GraphQLTypes['colinks_gives_bool_exp']> | undefined;
    _not?: GraphQLTypes['colinks_gives_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['colinks_gives_bool_exp']> | undefined;
    activity_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    attestation_uid?: GraphQLTypes['String_comparison_exp'] | undefined;
    cast_hash?: GraphQLTypes['String_comparison_exp'] | undefined;
    created_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    give_skill?: GraphQLTypes['skills_bool_exp'] | undefined;
    giver_profile_public?: GraphQLTypes['profiles_public_bool_exp'] | undefined;
    id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    profile_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    skill?: GraphQLTypes['citext_comparison_exp'] | undefined;
    target_profile_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    target_profile_public?:
      | GraphQLTypes['profiles_public_bool_exp']
      | undefined;
    updated_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    warpcast_url?: GraphQLTypes['String_comparison_exp'] | undefined;
  };
  /** aggregate max on columns */
  ['colinks_gives_max_fields']: {
    __typename: 'colinks_gives_max_fields';
    activity_id?: GraphQLTypes['bigint'] | undefined;
    attestation_uid?: string | undefined;
    cast_hash?: string | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    id?: number | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    skill?: GraphQLTypes['citext'] | undefined;
    target_profile_id?: GraphQLTypes['bigint'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
    warpcast_url?: string | undefined;
  };
  /** order by max() on columns of table "colinks_gives" */
  ['colinks_gives_max_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    attestation_uid?: GraphQLTypes['order_by'] | undefined;
    cast_hash?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    skill?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    warpcast_url?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate min on columns */
  ['colinks_gives_min_fields']: {
    __typename: 'colinks_gives_min_fields';
    activity_id?: GraphQLTypes['bigint'] | undefined;
    attestation_uid?: string | undefined;
    cast_hash?: string | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    id?: number | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    skill?: GraphQLTypes['citext'] | undefined;
    target_profile_id?: GraphQLTypes['bigint'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
    warpcast_url?: string | undefined;
  };
  /** order by min() on columns of table "colinks_gives" */
  ['colinks_gives_min_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    attestation_uid?: GraphQLTypes['order_by'] | undefined;
    cast_hash?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    skill?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    warpcast_url?: GraphQLTypes['order_by'] | undefined;
  };
  /** response of any mutation on the table "colinks_gives" */
  ['colinks_gives_mutation_response']: {
    __typename: 'colinks_gives_mutation_response';
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['colinks_gives']>;
  };
  /** Ordering options when selecting data from "colinks_gives". */
  ['colinks_gives_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    attestation_uid?: GraphQLTypes['order_by'] | undefined;
    cast_hash?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    give_skill?: GraphQLTypes['skills_order_by'] | undefined;
    giver_profile_public?: GraphQLTypes['profiles_public_order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    skill?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
    target_profile_public?:
      | GraphQLTypes['profiles_public_order_by']
      | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    warpcast_url?: GraphQLTypes['order_by'] | undefined;
  };
  /** primary key columns input for table: colinks_gives */
  ['colinks_gives_pk_columns_input']: {
    id: number;
  };
  /** select columns of table "colinks_gives" */
  ['colinks_gives_select_column']: colinks_gives_select_column;
  /** input type for updating data in table "colinks_gives" */
  ['colinks_gives_set_input']: {
    skill?: GraphQLTypes['citext'] | undefined;
  };
  /** aggregate stddev on columns */
  ['colinks_gives_stddev_fields']: {
    __typename: 'colinks_gives_stddev_fields';
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    target_profile_id?: number | undefined;
  };
  /** order by stddev() on columns of table "colinks_gives" */
  ['colinks_gives_stddev_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_pop on columns */
  ['colinks_gives_stddev_pop_fields']: {
    __typename: 'colinks_gives_stddev_pop_fields';
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    target_profile_id?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "colinks_gives" */
  ['colinks_gives_stddev_pop_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_samp on columns */
  ['colinks_gives_stddev_samp_fields']: {
    __typename: 'colinks_gives_stddev_samp_fields';
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    target_profile_id?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "colinks_gives" */
  ['colinks_gives_stddev_samp_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "colinks_gives" */
  ['colinks_gives_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['colinks_gives_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['colinks_gives_stream_cursor_value_input']: {
    activity_id?: GraphQLTypes['bigint'] | undefined;
    attestation_uid?: string | undefined;
    cast_hash?: string | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    id?: number | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    skill?: GraphQLTypes['citext'] | undefined;
    target_profile_id?: GraphQLTypes['bigint'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
    warpcast_url?: string | undefined;
  };
  /** aggregate sum on columns */
  ['colinks_gives_sum_fields']: {
    __typename: 'colinks_gives_sum_fields';
    activity_id?: GraphQLTypes['bigint'] | undefined;
    id?: number | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    target_profile_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by sum() on columns of table "colinks_gives" */
  ['colinks_gives_sum_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  ['colinks_gives_updates']: {
    /** sets the columns of the filtered rows to the given values */
    _set?: GraphQLTypes['colinks_gives_set_input'] | undefined;
    /** filter the rows which have to be updated */
    where: GraphQLTypes['colinks_gives_bool_exp'];
  };
  /** aggregate var_pop on columns */
  ['colinks_gives_var_pop_fields']: {
    __typename: 'colinks_gives_var_pop_fields';
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    target_profile_id?: number | undefined;
  };
  /** order by var_pop() on columns of table "colinks_gives" */
  ['colinks_gives_var_pop_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate var_samp on columns */
  ['colinks_gives_var_samp_fields']: {
    __typename: 'colinks_gives_var_samp_fields';
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    target_profile_id?: number | undefined;
  };
  /** order by var_samp() on columns of table "colinks_gives" */
  ['colinks_gives_var_samp_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate variance on columns */
  ['colinks_gives_variance_fields']: {
    __typename: 'colinks_gives_variance_fields';
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    target_profile_id?: number | undefined;
  };
  /** order by variance() on columns of table "colinks_gives" */
  ['colinks_gives_variance_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** columns and relationships of "contribution_count" */
  ['contribution_count']: {
    __typename: 'contribution_count';
    contributions?: GraphQLTypes['bigint'] | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** Boolean expression to filter rows from the table "contribution_count". All fields are combined with a logical 'AND'. */
  ['contribution_count_bool_exp']: {
    _and?: Array<GraphQLTypes['contribution_count_bool_exp']> | undefined;
    _not?: GraphQLTypes['contribution_count_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['contribution_count_bool_exp']> | undefined;
    contributions?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    profile_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
  };
  /** Ordering options when selecting data from "contribution_count". */
  ['contribution_count_order_by']: {
    contributions?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "contribution_count" */
  ['contribution_count_select_column']: contribution_count_select_column;
  /** Streaming cursor of the table "contribution_count" */
  ['contribution_count_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['contribution_count_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['contribution_count_stream_cursor_value_input']: {
    contributions?: GraphQLTypes['bigint'] | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** columns and relationships of "contributions" */
  ['contributions']: {
    __typename: 'contributions';
    /** An object relationship */
    activity?: GraphQLTypes['activities'] | undefined;
    /** An object relationship */
    big_question?: GraphQLTypes['big_questions'] | undefined;
    big_question_id?: GraphQLTypes['bigint'] | undefined;
    /** An object relationship */
    circle?: GraphQLTypes['circles'] | undefined;
    circle_id?: GraphQLTypes['bigint'] | undefined;
    created_at: GraphQLTypes['timestamptz'];
    /** An object relationship */
    created_with_api_key?: GraphQLTypes['circle_api_keys'] | undefined;
    created_with_api_key_hash?: string | undefined;
    description: string;
    id: GraphQLTypes['bigint'];
    private_stream: boolean;
    /** An array relationship */
    private_stream_visibility: Array<GraphQLTypes['private_stream_visibility']>;
    /** An object relationship */
    profile?: GraphQLTypes['profiles'] | undefined;
    profile_id: GraphQLTypes['bigint'];
    /** An object relationship */
    profile_public?: GraphQLTypes['profiles_public'] | undefined;
    updated_at: GraphQLTypes['timestamptz'];
    /** An object relationship */
    user?: GraphQLTypes['users'] | undefined;
    user_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** aggregated selection of "contributions" */
  ['contributions_aggregate']: {
    __typename: 'contributions_aggregate';
    aggregate?: GraphQLTypes['contributions_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['contributions']>;
  };
  ['contributions_aggregate_bool_exp']: {
    bool_and?:
      | GraphQLTypes['contributions_aggregate_bool_exp_bool_and']
      | undefined;
    bool_or?:
      | GraphQLTypes['contributions_aggregate_bool_exp_bool_or']
      | undefined;
    count?: GraphQLTypes['contributions_aggregate_bool_exp_count'] | undefined;
  };
  ['contributions_aggregate_bool_exp_bool_and']: {
    arguments: GraphQLTypes['contributions_select_column_contributions_aggregate_bool_exp_bool_and_arguments_columns'];
    distinct?: boolean | undefined;
    filter?: GraphQLTypes['contributions_bool_exp'] | undefined;
    predicate: GraphQLTypes['Boolean_comparison_exp'];
  };
  ['contributions_aggregate_bool_exp_bool_or']: {
    arguments: GraphQLTypes['contributions_select_column_contributions_aggregate_bool_exp_bool_or_arguments_columns'];
    distinct?: boolean | undefined;
    filter?: GraphQLTypes['contributions_bool_exp'] | undefined;
    predicate: GraphQLTypes['Boolean_comparison_exp'];
  };
  ['contributions_aggregate_bool_exp_count']: {
    arguments?: Array<GraphQLTypes['contributions_select_column']> | undefined;
    distinct?: boolean | undefined;
    filter?: GraphQLTypes['contributions_bool_exp'] | undefined;
    predicate: GraphQLTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "contributions" */
  ['contributions_aggregate_fields']: {
    __typename: 'contributions_aggregate_fields';
    avg?: GraphQLTypes['contributions_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['contributions_max_fields'] | undefined;
    min?: GraphQLTypes['contributions_min_fields'] | undefined;
    stddev?: GraphQLTypes['contributions_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['contributions_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['contributions_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['contributions_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['contributions_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['contributions_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['contributions_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "contributions" */
  ['contributions_aggregate_order_by']: {
    avg?: GraphQLTypes['contributions_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['contributions_max_order_by'] | undefined;
    min?: GraphQLTypes['contributions_min_order_by'] | undefined;
    stddev?: GraphQLTypes['contributions_stddev_order_by'] | undefined;
    stddev_pop?: GraphQLTypes['contributions_stddev_pop_order_by'] | undefined;
    stddev_samp?:
      | GraphQLTypes['contributions_stddev_samp_order_by']
      | undefined;
    sum?: GraphQLTypes['contributions_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['contributions_var_pop_order_by'] | undefined;
    var_samp?: GraphQLTypes['contributions_var_samp_order_by'] | undefined;
    variance?: GraphQLTypes['contributions_variance_order_by'] | undefined;
  };
  /** aggregate avg on columns */
  ['contributions_avg_fields']: {
    __typename: 'contributions_avg_fields';
    big_question_id?: number | undefined;
    circle_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    user_id?: number | undefined;
  };
  /** order by avg() on columns of table "contributions" */
  ['contributions_avg_order_by']: {
    big_question_id?: GraphQLTypes['order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "contributions". All fields are combined with a logical 'AND'. */
  ['contributions_bool_exp']: {
    _and?: Array<GraphQLTypes['contributions_bool_exp']> | undefined;
    _not?: GraphQLTypes['contributions_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['contributions_bool_exp']> | undefined;
    activity?: GraphQLTypes['activities_bool_exp'] | undefined;
    big_question?: GraphQLTypes['big_questions_bool_exp'] | undefined;
    big_question_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    circle?: GraphQLTypes['circles_bool_exp'] | undefined;
    circle_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    created_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    created_with_api_key?: GraphQLTypes['circle_api_keys_bool_exp'] | undefined;
    created_with_api_key_hash?:
      | GraphQLTypes['String_comparison_exp']
      | undefined;
    description?: GraphQLTypes['String_comparison_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    private_stream?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    private_stream_visibility?:
      | GraphQLTypes['private_stream_visibility_bool_exp']
      | undefined;
    profile?: GraphQLTypes['profiles_bool_exp'] | undefined;
    profile_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    profile_public?: GraphQLTypes['profiles_public_bool_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    user?: GraphQLTypes['users_bool_exp'] | undefined;
    user_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
  };
  /** unique or primary key constraints on table "contributions" */
  ['contributions_constraint']: contributions_constraint;
  /** input type for inserting data into table "contributions" */
  ['contributions_insert_input']: {
    big_question_id?: GraphQLTypes['bigint'] | undefined;
    circle_id?: GraphQLTypes['bigint'] | undefined;
    description?: string | undefined;
    private_stream?: boolean | undefined;
    user_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** aggregate max on columns */
  ['contributions_max_fields']: {
    __typename: 'contributions_max_fields';
    big_question_id?: GraphQLTypes['bigint'] | undefined;
    circle_id?: GraphQLTypes['bigint'] | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    created_with_api_key_hash?: string | undefined;
    description?: string | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
    user_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by max() on columns of table "contributions" */
  ['contributions_max_order_by']: {
    big_question_id?: GraphQLTypes['order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    created_with_api_key_hash?: GraphQLTypes['order_by'] | undefined;
    description?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate min on columns */
  ['contributions_min_fields']: {
    __typename: 'contributions_min_fields';
    big_question_id?: GraphQLTypes['bigint'] | undefined;
    circle_id?: GraphQLTypes['bigint'] | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    created_with_api_key_hash?: string | undefined;
    description?: string | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
    user_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by min() on columns of table "contributions" */
  ['contributions_min_order_by']: {
    big_question_id?: GraphQLTypes['order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    created_with_api_key_hash?: GraphQLTypes['order_by'] | undefined;
    description?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** response of any mutation on the table "contributions" */
  ['contributions_mutation_response']: {
    __typename: 'contributions_mutation_response';
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['contributions']>;
  };
  /** on_conflict condition type for table "contributions" */
  ['contributions_on_conflict']: {
    constraint: GraphQLTypes['contributions_constraint'];
    update_columns: Array<GraphQLTypes['contributions_update_column']>;
    where?: GraphQLTypes['contributions_bool_exp'] | undefined;
  };
  /** Ordering options when selecting data from "contributions". */
  ['contributions_order_by']: {
    activity?: GraphQLTypes['activities_order_by'] | undefined;
    big_question?: GraphQLTypes['big_questions_order_by'] | undefined;
    big_question_id?: GraphQLTypes['order_by'] | undefined;
    circle?: GraphQLTypes['circles_order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    created_with_api_key?: GraphQLTypes['circle_api_keys_order_by'] | undefined;
    created_with_api_key_hash?: GraphQLTypes['order_by'] | undefined;
    description?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    private_stream?: GraphQLTypes['order_by'] | undefined;
    private_stream_visibility_aggregate?:
      | GraphQLTypes['private_stream_visibility_aggregate_order_by']
      | undefined;
    profile?: GraphQLTypes['profiles_order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    profile_public?: GraphQLTypes['profiles_public_order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    user?: GraphQLTypes['users_order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "contributions" */
  ['contributions_select_column']: contributions_select_column;
  /** select "contributions_aggregate_bool_exp_bool_and_arguments_columns" columns of table "contributions" */
  ['contributions_select_column_contributions_aggregate_bool_exp_bool_and_arguments_columns']: contributions_select_column_contributions_aggregate_bool_exp_bool_and_arguments_columns;
  /** select "contributions_aggregate_bool_exp_bool_or_arguments_columns" columns of table "contributions" */
  ['contributions_select_column_contributions_aggregate_bool_exp_bool_or_arguments_columns']: contributions_select_column_contributions_aggregate_bool_exp_bool_or_arguments_columns;
  /** aggregate stddev on columns */
  ['contributions_stddev_fields']: {
    __typename: 'contributions_stddev_fields';
    big_question_id?: number | undefined;
    circle_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    user_id?: number | undefined;
  };
  /** order by stddev() on columns of table "contributions" */
  ['contributions_stddev_order_by']: {
    big_question_id?: GraphQLTypes['order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_pop on columns */
  ['contributions_stddev_pop_fields']: {
    __typename: 'contributions_stddev_pop_fields';
    big_question_id?: number | undefined;
    circle_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    user_id?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "contributions" */
  ['contributions_stddev_pop_order_by']: {
    big_question_id?: GraphQLTypes['order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_samp on columns */
  ['contributions_stddev_samp_fields']: {
    __typename: 'contributions_stddev_samp_fields';
    big_question_id?: number | undefined;
    circle_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    user_id?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "contributions" */
  ['contributions_stddev_samp_order_by']: {
    big_question_id?: GraphQLTypes['order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "contributions" */
  ['contributions_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['contributions_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['contributions_stream_cursor_value_input']: {
    big_question_id?: GraphQLTypes['bigint'] | undefined;
    circle_id?: GraphQLTypes['bigint'] | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    created_with_api_key_hash?: string | undefined;
    description?: string | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    private_stream?: boolean | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
    user_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** aggregate sum on columns */
  ['contributions_sum_fields']: {
    __typename: 'contributions_sum_fields';
    big_question_id?: GraphQLTypes['bigint'] | undefined;
    circle_id?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    user_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by sum() on columns of table "contributions" */
  ['contributions_sum_order_by']: {
    big_question_id?: GraphQLTypes['order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** placeholder for update columns of table "contributions" (current role has no relevant permissions) */
  ['contributions_update_column']: contributions_update_column;
  /** aggregate var_pop on columns */
  ['contributions_var_pop_fields']: {
    __typename: 'contributions_var_pop_fields';
    big_question_id?: number | undefined;
    circle_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    user_id?: number | undefined;
  };
  /** order by var_pop() on columns of table "contributions" */
  ['contributions_var_pop_order_by']: {
    big_question_id?: GraphQLTypes['order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate var_samp on columns */
  ['contributions_var_samp_fields']: {
    __typename: 'contributions_var_samp_fields';
    big_question_id?: number | undefined;
    circle_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    user_id?: number | undefined;
  };
  /** order by var_samp() on columns of table "contributions" */
  ['contributions_var_samp_order_by']: {
    big_question_id?: GraphQLTypes['order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate variance on columns */
  ['contributions_variance_fields']: {
    __typename: 'contributions_variance_fields';
    big_question_id?: number | undefined;
    circle_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    user_id?: number | undefined;
  };
  /** order by variance() on columns of table "contributions" */
  ['contributions_variance_order_by']: {
    big_question_id?: GraphQLTypes['order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** local db copy of last synced on-chain cosoul data */
  ['cosouls']: {
    __typename: 'cosouls';
    address: GraphQLTypes['citext'];
    created_at: GraphQLTypes['timestamptz'];
    created_tx_hash: string;
    /** An array relationship */
    held_links: Array<GraphQLTypes['link_holders']>;
    /** An aggregate relationship */
    held_links_aggregate: GraphQLTypes['link_holders_aggregate'];
    id: number;
    /** An array relationship */
    link_holders: Array<GraphQLTypes['link_holders']>;
    /** An aggregate relationship */
    link_holders_aggregate: GraphQLTypes['link_holders_aggregate'];
    pgive?: number | undefined;
    /** An array relationship */
    poaps: Array<GraphQLTypes['poap_holders']>;
    /** An aggregate relationship */
    poaps_aggregate: GraphQLTypes['poap_holders_aggregate'];
    /** An object relationship */
    profile?: GraphQLTypes['profiles'] | undefined;
    /** An object relationship */
    profile_public?: GraphQLTypes['profiles_public'] | undefined;
    synced_at?: GraphQLTypes['timestamptz'] | undefined;
    token_id: number;
    updated_at: GraphQLTypes['timestamptz'];
  };
  /** Boolean expression to filter rows from the table "cosouls". All fields are combined with a logical 'AND'. */
  ['cosouls_bool_exp']: {
    _and?: Array<GraphQLTypes['cosouls_bool_exp']> | undefined;
    _not?: GraphQLTypes['cosouls_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['cosouls_bool_exp']> | undefined;
    address?: GraphQLTypes['citext_comparison_exp'] | undefined;
    created_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    created_tx_hash?: GraphQLTypes['String_comparison_exp'] | undefined;
    held_links?: GraphQLTypes['link_holders_bool_exp'] | undefined;
    held_links_aggregate?:
      | GraphQLTypes['link_holders_aggregate_bool_exp']
      | undefined;
    id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    link_holders?: GraphQLTypes['link_holders_bool_exp'] | undefined;
    link_holders_aggregate?:
      | GraphQLTypes['link_holders_aggregate_bool_exp']
      | undefined;
    pgive?: GraphQLTypes['Int_comparison_exp'] | undefined;
    poaps?: GraphQLTypes['poap_holders_bool_exp'] | undefined;
    poaps_aggregate?:
      | GraphQLTypes['poap_holders_aggregate_bool_exp']
      | undefined;
    profile?: GraphQLTypes['profiles_bool_exp'] | undefined;
    profile_public?: GraphQLTypes['profiles_public_bool_exp'] | undefined;
    synced_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    token_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
  };
  /** Ordering options when selecting data from "cosouls". */
  ['cosouls_order_by']: {
    address?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    created_tx_hash?: GraphQLTypes['order_by'] | undefined;
    held_links_aggregate?:
      | GraphQLTypes['link_holders_aggregate_order_by']
      | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    link_holders_aggregate?:
      | GraphQLTypes['link_holders_aggregate_order_by']
      | undefined;
    pgive?: GraphQLTypes['order_by'] | undefined;
    poaps_aggregate?:
      | GraphQLTypes['poap_holders_aggregate_order_by']
      | undefined;
    profile?: GraphQLTypes['profiles_order_by'] | undefined;
    profile_public?: GraphQLTypes['profiles_public_order_by'] | undefined;
    synced_at?: GraphQLTypes['order_by'] | undefined;
    token_id?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "cosouls" */
  ['cosouls_select_column']: cosouls_select_column;
  /** Streaming cursor of the table "cosouls" */
  ['cosouls_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['cosouls_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['cosouls_stream_cursor_value_input']: {
    address?: GraphQLTypes['citext'] | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    created_tx_hash?: string | undefined;
    id?: number | undefined;
    pgive?: number | undefined;
    synced_at?: GraphQLTypes['timestamptz'] | undefined;
    token_id?: number | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** ordering argument of a cursor */
  ['cursor_ordering']: cursor_ordering;
  ['date']: any;
  /** Boolean expression to compare columns of type "date". All fields are combined with logical 'AND'. */
  ['date_comparison_exp']: {
    _eq?: GraphQLTypes['date'] | undefined;
    _gt?: GraphQLTypes['date'] | undefined;
    _gte?: GraphQLTypes['date'] | undefined;
    _in?: Array<GraphQLTypes['date']> | undefined;
    _is_null?: boolean | undefined;
    _lt?: GraphQLTypes['date'] | undefined;
    _lte?: GraphQLTypes['date'] | undefined;
    _neq?: GraphQLTypes['date'] | undefined;
    _nin?: Array<GraphQLTypes['date']> | undefined;
  };
  /** Vault Distributions */
  ['distributions']: {
    __typename: 'distributions';
    /** An array relationship */
    claims: Array<GraphQLTypes['claims']>;
    /** An aggregate relationship */
    claims_aggregate: GraphQLTypes['claims_aggregate'];
    created_at: GraphQLTypes['timestamp'];
    created_by: GraphQLTypes['bigint'];
    distribution_epoch_id?: GraphQLTypes['bigint'] | undefined;
    distribution_json: GraphQLTypes['jsonb'];
    distribution_type: number;
    /** An object relationship */
    epoch: GraphQLTypes['epochs'];
    epoch_id: GraphQLTypes['bigint'];
    fixed_amount: GraphQLTypes['numeric'];
    gift_amount: GraphQLTypes['numeric'];
    id: GraphQLTypes['bigint'];
    merkle_root?: string | undefined;
    /** An object relationship */
    profile: GraphQLTypes['profiles'];
    total_amount: string;
    tx_hash?: string | undefined;
    /** An object relationship */
    vault: GraphQLTypes['vaults'];
    vault_id: GraphQLTypes['bigint'];
    /** An array relationship */
    vault_transactions: Array<GraphQLTypes['vault_transactions']>;
  };
  /** aggregated selection of "distributions" */
  ['distributions_aggregate']: {
    __typename: 'distributions_aggregate';
    aggregate?: GraphQLTypes['distributions_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['distributions']>;
  };
  ['distributions_aggregate_bool_exp']: {
    count?: GraphQLTypes['distributions_aggregate_bool_exp_count'] | undefined;
  };
  ['distributions_aggregate_bool_exp_count']: {
    arguments?: Array<GraphQLTypes['distributions_select_column']> | undefined;
    distinct?: boolean | undefined;
    filter?: GraphQLTypes['distributions_bool_exp'] | undefined;
    predicate: GraphQLTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "distributions" */
  ['distributions_aggregate_fields']: {
    __typename: 'distributions_aggregate_fields';
    avg?: GraphQLTypes['distributions_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['distributions_max_fields'] | undefined;
    min?: GraphQLTypes['distributions_min_fields'] | undefined;
    stddev?: GraphQLTypes['distributions_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['distributions_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['distributions_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['distributions_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['distributions_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['distributions_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['distributions_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "distributions" */
  ['distributions_aggregate_order_by']: {
    avg?: GraphQLTypes['distributions_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['distributions_max_order_by'] | undefined;
    min?: GraphQLTypes['distributions_min_order_by'] | undefined;
    stddev?: GraphQLTypes['distributions_stddev_order_by'] | undefined;
    stddev_pop?: GraphQLTypes['distributions_stddev_pop_order_by'] | undefined;
    stddev_samp?:
      | GraphQLTypes['distributions_stddev_samp_order_by']
      | undefined;
    sum?: GraphQLTypes['distributions_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['distributions_var_pop_order_by'] | undefined;
    var_samp?: GraphQLTypes['distributions_var_samp_order_by'] | undefined;
    variance?: GraphQLTypes['distributions_variance_order_by'] | undefined;
  };
  /** aggregate avg on columns */
  ['distributions_avg_fields']: {
    __typename: 'distributions_avg_fields';
    created_by?: number | undefined;
    distribution_epoch_id?: number | undefined;
    distribution_type?: number | undefined;
    epoch_id?: number | undefined;
    fixed_amount?: number | undefined;
    gift_amount?: number | undefined;
    id?: number | undefined;
    vault_id?: number | undefined;
  };
  /** order by avg() on columns of table "distributions" */
  ['distributions_avg_order_by']: {
    created_by?: GraphQLTypes['order_by'] | undefined;
    distribution_epoch_id?: GraphQLTypes['order_by'] | undefined;
    distribution_type?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    fixed_amount?: GraphQLTypes['order_by'] | undefined;
    gift_amount?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    vault_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "distributions". All fields are combined with a logical 'AND'. */
  ['distributions_bool_exp']: {
    _and?: Array<GraphQLTypes['distributions_bool_exp']> | undefined;
    _not?: GraphQLTypes['distributions_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['distributions_bool_exp']> | undefined;
    claims?: GraphQLTypes['claims_bool_exp'] | undefined;
    claims_aggregate?: GraphQLTypes['claims_aggregate_bool_exp'] | undefined;
    created_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    created_by?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    distribution_epoch_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    distribution_json?: GraphQLTypes['jsonb_comparison_exp'] | undefined;
    distribution_type?: GraphQLTypes['Int_comparison_exp'] | undefined;
    epoch?: GraphQLTypes['epochs_bool_exp'] | undefined;
    epoch_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    fixed_amount?: GraphQLTypes['numeric_comparison_exp'] | undefined;
    gift_amount?: GraphQLTypes['numeric_comparison_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    merkle_root?: GraphQLTypes['String_comparison_exp'] | undefined;
    profile?: GraphQLTypes['profiles_bool_exp'] | undefined;
    total_amount?: GraphQLTypes['String_comparison_exp'] | undefined;
    tx_hash?: GraphQLTypes['String_comparison_exp'] | undefined;
    vault?: GraphQLTypes['vaults_bool_exp'] | undefined;
    vault_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    vault_transactions?:
      | GraphQLTypes['vault_transactions_bool_exp']
      | undefined;
  };
  /** unique or primary key constraints on table "distributions" */
  ['distributions_constraint']: distributions_constraint;
  /** input type for incrementing numeric columns in table "distributions" */
  ['distributions_inc_input']: {
    distribution_epoch_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** input type for inserting data into table "distributions" */
  ['distributions_insert_input']: {
    claims?: GraphQLTypes['claims_arr_rel_insert_input'] | undefined;
    distribution_epoch_id?: GraphQLTypes['bigint'] | undefined;
    distribution_json?: GraphQLTypes['jsonb'] | undefined;
    distribution_type?: number | undefined;
    epoch_id?: GraphQLTypes['bigint'] | undefined;
    fixed_amount?: GraphQLTypes['numeric'] | undefined;
    gift_amount?: GraphQLTypes['numeric'] | undefined;
    merkle_root?: string | undefined;
    total_amount?: string | undefined;
    vault_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** aggregate max on columns */
  ['distributions_max_fields']: {
    __typename: 'distributions_max_fields';
    created_at?: GraphQLTypes['timestamp'] | undefined;
    created_by?: GraphQLTypes['bigint'] | undefined;
    distribution_epoch_id?: GraphQLTypes['bigint'] | undefined;
    distribution_type?: number | undefined;
    epoch_id?: GraphQLTypes['bigint'] | undefined;
    fixed_amount?: GraphQLTypes['numeric'] | undefined;
    gift_amount?: GraphQLTypes['numeric'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    merkle_root?: string | undefined;
    total_amount?: string | undefined;
    tx_hash?: string | undefined;
    vault_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by max() on columns of table "distributions" */
  ['distributions_max_order_by']: {
    created_at?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    distribution_epoch_id?: GraphQLTypes['order_by'] | undefined;
    distribution_type?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    fixed_amount?: GraphQLTypes['order_by'] | undefined;
    gift_amount?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    merkle_root?: GraphQLTypes['order_by'] | undefined;
    total_amount?: GraphQLTypes['order_by'] | undefined;
    tx_hash?: GraphQLTypes['order_by'] | undefined;
    vault_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate min on columns */
  ['distributions_min_fields']: {
    __typename: 'distributions_min_fields';
    created_at?: GraphQLTypes['timestamp'] | undefined;
    created_by?: GraphQLTypes['bigint'] | undefined;
    distribution_epoch_id?: GraphQLTypes['bigint'] | undefined;
    distribution_type?: number | undefined;
    epoch_id?: GraphQLTypes['bigint'] | undefined;
    fixed_amount?: GraphQLTypes['numeric'] | undefined;
    gift_amount?: GraphQLTypes['numeric'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    merkle_root?: string | undefined;
    total_amount?: string | undefined;
    tx_hash?: string | undefined;
    vault_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by min() on columns of table "distributions" */
  ['distributions_min_order_by']: {
    created_at?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    distribution_epoch_id?: GraphQLTypes['order_by'] | undefined;
    distribution_type?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    fixed_amount?: GraphQLTypes['order_by'] | undefined;
    gift_amount?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    merkle_root?: GraphQLTypes['order_by'] | undefined;
    total_amount?: GraphQLTypes['order_by'] | undefined;
    tx_hash?: GraphQLTypes['order_by'] | undefined;
    vault_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** response of any mutation on the table "distributions" */
  ['distributions_mutation_response']: {
    __typename: 'distributions_mutation_response';
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['distributions']>;
  };
  /** input type for inserting object relation for remote table "distributions" */
  ['distributions_obj_rel_insert_input']: {
    data: GraphQLTypes['distributions_insert_input'];
    /** upsert condition */
    on_conflict?: GraphQLTypes['distributions_on_conflict'] | undefined;
  };
  /** on_conflict condition type for table "distributions" */
  ['distributions_on_conflict']: {
    constraint: GraphQLTypes['distributions_constraint'];
    update_columns: Array<GraphQLTypes['distributions_update_column']>;
    where?: GraphQLTypes['distributions_bool_exp'] | undefined;
  };
  /** Ordering options when selecting data from "distributions". */
  ['distributions_order_by']: {
    claims_aggregate?: GraphQLTypes['claims_aggregate_order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    distribution_epoch_id?: GraphQLTypes['order_by'] | undefined;
    distribution_json?: GraphQLTypes['order_by'] | undefined;
    distribution_type?: GraphQLTypes['order_by'] | undefined;
    epoch?: GraphQLTypes['epochs_order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    fixed_amount?: GraphQLTypes['order_by'] | undefined;
    gift_amount?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    merkle_root?: GraphQLTypes['order_by'] | undefined;
    profile?: GraphQLTypes['profiles_order_by'] | undefined;
    total_amount?: GraphQLTypes['order_by'] | undefined;
    tx_hash?: GraphQLTypes['order_by'] | undefined;
    vault?: GraphQLTypes['vaults_order_by'] | undefined;
    vault_id?: GraphQLTypes['order_by'] | undefined;
    vault_transactions_aggregate?:
      | GraphQLTypes['vault_transactions_aggregate_order_by']
      | undefined;
  };
  /** primary key columns input for table: distributions */
  ['distributions_pk_columns_input']: {
    id: GraphQLTypes['bigint'];
  };
  /** select columns of table "distributions" */
  ['distributions_select_column']: distributions_select_column;
  /** input type for updating data in table "distributions" */
  ['distributions_set_input']: {
    distribution_epoch_id?: GraphQLTypes['bigint'] | undefined;
    tx_hash?: string | undefined;
  };
  /** aggregate stddev on columns */
  ['distributions_stddev_fields']: {
    __typename: 'distributions_stddev_fields';
    created_by?: number | undefined;
    distribution_epoch_id?: number | undefined;
    distribution_type?: number | undefined;
    epoch_id?: number | undefined;
    fixed_amount?: number | undefined;
    gift_amount?: number | undefined;
    id?: number | undefined;
    vault_id?: number | undefined;
  };
  /** order by stddev() on columns of table "distributions" */
  ['distributions_stddev_order_by']: {
    created_by?: GraphQLTypes['order_by'] | undefined;
    distribution_epoch_id?: GraphQLTypes['order_by'] | undefined;
    distribution_type?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    fixed_amount?: GraphQLTypes['order_by'] | undefined;
    gift_amount?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    vault_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_pop on columns */
  ['distributions_stddev_pop_fields']: {
    __typename: 'distributions_stddev_pop_fields';
    created_by?: number | undefined;
    distribution_epoch_id?: number | undefined;
    distribution_type?: number | undefined;
    epoch_id?: number | undefined;
    fixed_amount?: number | undefined;
    gift_amount?: number | undefined;
    id?: number | undefined;
    vault_id?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "distributions" */
  ['distributions_stddev_pop_order_by']: {
    created_by?: GraphQLTypes['order_by'] | undefined;
    distribution_epoch_id?: GraphQLTypes['order_by'] | undefined;
    distribution_type?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    fixed_amount?: GraphQLTypes['order_by'] | undefined;
    gift_amount?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    vault_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_samp on columns */
  ['distributions_stddev_samp_fields']: {
    __typename: 'distributions_stddev_samp_fields';
    created_by?: number | undefined;
    distribution_epoch_id?: number | undefined;
    distribution_type?: number | undefined;
    epoch_id?: number | undefined;
    fixed_amount?: number | undefined;
    gift_amount?: number | undefined;
    id?: number | undefined;
    vault_id?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "distributions" */
  ['distributions_stddev_samp_order_by']: {
    created_by?: GraphQLTypes['order_by'] | undefined;
    distribution_epoch_id?: GraphQLTypes['order_by'] | undefined;
    distribution_type?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    fixed_amount?: GraphQLTypes['order_by'] | undefined;
    gift_amount?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    vault_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "distributions" */
  ['distributions_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['distributions_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['distributions_stream_cursor_value_input']: {
    created_at?: GraphQLTypes['timestamp'] | undefined;
    created_by?: GraphQLTypes['bigint'] | undefined;
    distribution_epoch_id?: GraphQLTypes['bigint'] | undefined;
    distribution_json?: GraphQLTypes['jsonb'] | undefined;
    distribution_type?: number | undefined;
    epoch_id?: GraphQLTypes['bigint'] | undefined;
    fixed_amount?: GraphQLTypes['numeric'] | undefined;
    gift_amount?: GraphQLTypes['numeric'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    merkle_root?: string | undefined;
    total_amount?: string | undefined;
    tx_hash?: string | undefined;
    vault_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** aggregate sum on columns */
  ['distributions_sum_fields']: {
    __typename: 'distributions_sum_fields';
    created_by?: GraphQLTypes['bigint'] | undefined;
    distribution_epoch_id?: GraphQLTypes['bigint'] | undefined;
    distribution_type?: number | undefined;
    epoch_id?: GraphQLTypes['bigint'] | undefined;
    fixed_amount?: GraphQLTypes['numeric'] | undefined;
    gift_amount?: GraphQLTypes['numeric'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    vault_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by sum() on columns of table "distributions" */
  ['distributions_sum_order_by']: {
    created_by?: GraphQLTypes['order_by'] | undefined;
    distribution_epoch_id?: GraphQLTypes['order_by'] | undefined;
    distribution_type?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    fixed_amount?: GraphQLTypes['order_by'] | undefined;
    gift_amount?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    vault_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** update columns of table "distributions" */
  ['distributions_update_column']: distributions_update_column;
  ['distributions_updates']: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: GraphQLTypes['distributions_inc_input'] | undefined;
    /** sets the columns of the filtered rows to the given values */
    _set?: GraphQLTypes['distributions_set_input'] | undefined;
    /** filter the rows which have to be updated */
    where: GraphQLTypes['distributions_bool_exp'];
  };
  /** aggregate var_pop on columns */
  ['distributions_var_pop_fields']: {
    __typename: 'distributions_var_pop_fields';
    created_by?: number | undefined;
    distribution_epoch_id?: number | undefined;
    distribution_type?: number | undefined;
    epoch_id?: number | undefined;
    fixed_amount?: number | undefined;
    gift_amount?: number | undefined;
    id?: number | undefined;
    vault_id?: number | undefined;
  };
  /** order by var_pop() on columns of table "distributions" */
  ['distributions_var_pop_order_by']: {
    created_by?: GraphQLTypes['order_by'] | undefined;
    distribution_epoch_id?: GraphQLTypes['order_by'] | undefined;
    distribution_type?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    fixed_amount?: GraphQLTypes['order_by'] | undefined;
    gift_amount?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    vault_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate var_samp on columns */
  ['distributions_var_samp_fields']: {
    __typename: 'distributions_var_samp_fields';
    created_by?: number | undefined;
    distribution_epoch_id?: number | undefined;
    distribution_type?: number | undefined;
    epoch_id?: number | undefined;
    fixed_amount?: number | undefined;
    gift_amount?: number | undefined;
    id?: number | undefined;
    vault_id?: number | undefined;
  };
  /** order by var_samp() on columns of table "distributions" */
  ['distributions_var_samp_order_by']: {
    created_by?: GraphQLTypes['order_by'] | undefined;
    distribution_epoch_id?: GraphQLTypes['order_by'] | undefined;
    distribution_type?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    fixed_amount?: GraphQLTypes['order_by'] | undefined;
    gift_amount?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    vault_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate variance on columns */
  ['distributions_variance_fields']: {
    __typename: 'distributions_variance_fields';
    created_by?: number | undefined;
    distribution_epoch_id?: number | undefined;
    distribution_type?: number | undefined;
    epoch_id?: number | undefined;
    fixed_amount?: number | undefined;
    gift_amount?: number | undefined;
    id?: number | undefined;
    vault_id?: number | undefined;
  };
  /** order by variance() on columns of table "distributions" */
  ['distributions_variance_order_by']: {
    created_by?: GraphQLTypes['order_by'] | undefined;
    distribution_epoch_id?: GraphQLTypes['order_by'] | undefined;
    distribution_type?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    fixed_amount?: GraphQLTypes['order_by'] | undefined;
    gift_amount?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    vault_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** columns and relationships of "emails" */
  ['emails']: {
    __typename: 'emails';
    email: GraphQLTypes['citext'];
    primary: boolean;
    /** An object relationship */
    profile: GraphQLTypes['profiles'];
    verified_at?: GraphQLTypes['timestamp'] | undefined;
  };
  /** order by aggregate values of table "emails" */
  ['emails_aggregate_order_by']: {
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['emails_max_order_by'] | undefined;
    min?: GraphQLTypes['emails_min_order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "emails". All fields are combined with a logical 'AND'. */
  ['emails_bool_exp']: {
    _and?: Array<GraphQLTypes['emails_bool_exp']> | undefined;
    _not?: GraphQLTypes['emails_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['emails_bool_exp']> | undefined;
    email?: GraphQLTypes['citext_comparison_exp'] | undefined;
    primary?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    profile?: GraphQLTypes['profiles_bool_exp'] | undefined;
    verified_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
  };
  /** order by max() on columns of table "emails" */
  ['emails_max_order_by']: {
    email?: GraphQLTypes['order_by'] | undefined;
    verified_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by min() on columns of table "emails" */
  ['emails_min_order_by']: {
    email?: GraphQLTypes['order_by'] | undefined;
    verified_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** Ordering options when selecting data from "emails". */
  ['emails_order_by']: {
    email?: GraphQLTypes['order_by'] | undefined;
    primary?: GraphQLTypes['order_by'] | undefined;
    profile?: GraphQLTypes['profiles_order_by'] | undefined;
    verified_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "emails" */
  ['emails_select_column']: emails_select_column;
  /** Streaming cursor of the table "emails" */
  ['emails_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['emails_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['emails_stream_cursor_value_input']: {
    email?: GraphQLTypes['citext'] | undefined;
    primary?: boolean | undefined;
    verified_at?: GraphQLTypes['timestamp'] | undefined;
  };
  /** farcaster casts that we actually care about, with some materialized fields */
  ['enriched_casts']: {
    __typename: 'enriched_casts';
    created_at: GraphQLTypes['timestamp'];
    deleted_at?: GraphQLTypes['timestamp'] | undefined;
    embeds: GraphQLTypes['jsonb'];
    fid: GraphQLTypes['bigint'];
    hash: GraphQLTypes['bytea'];
    id: GraphQLTypes['bigint'];
    mentions: Array<GraphQLTypes['bigint']>;
    mentions_positions: Array<GraphQLTypes['smallint']>;
    parent_fid?: GraphQLTypes['bigint'] | undefined;
    parent_hash?: GraphQLTypes['bytea'] | undefined;
    parent_url?: string | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    /** An object relationship */
    profile_public?: GraphQLTypes['profiles_public'] | undefined;
    /** An array relationship */
    reactions: Array<GraphQLTypes['farcaster_reactions']>;
    /** An aggregate relationship */
    reactions_aggregate: GraphQLTypes['farcaster_reactions_aggregate'];
    /** An array relationship */
    replies: Array<GraphQLTypes['farcaster_casts']>;
    /** An aggregate relationship */
    replies_aggregate: GraphQLTypes['farcaster_casts_aggregate'];
    root_parent_hash?: GraphQLTypes['bytea'] | undefined;
    root_parent_url?: string | undefined;
    text: string;
    timestamp: GraphQLTypes['timestamp'];
    updated_at: GraphQLTypes['timestamp'];
  };
  /** Boolean expression to filter rows from the table "enriched_casts". All fields are combined with a logical 'AND'. */
  ['enriched_casts_bool_exp']: {
    _and?: Array<GraphQLTypes['enriched_casts_bool_exp']> | undefined;
    _not?: GraphQLTypes['enriched_casts_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['enriched_casts_bool_exp']> | undefined;
    created_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    deleted_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    embeds?: GraphQLTypes['jsonb_comparison_exp'] | undefined;
    fid?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    hash?: GraphQLTypes['bytea_comparison_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    mentions?: GraphQLTypes['bigint_array_comparison_exp'] | undefined;
    mentions_positions?:
      | GraphQLTypes['smallint_array_comparison_exp']
      | undefined;
    parent_fid?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    parent_hash?: GraphQLTypes['bytea_comparison_exp'] | undefined;
    parent_url?: GraphQLTypes['String_comparison_exp'] | undefined;
    profile_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    profile_public?: GraphQLTypes['profiles_public_bool_exp'] | undefined;
    reactions?: GraphQLTypes['farcaster_reactions_bool_exp'] | undefined;
    reactions_aggregate?:
      | GraphQLTypes['farcaster_reactions_aggregate_bool_exp']
      | undefined;
    replies?: GraphQLTypes['farcaster_casts_bool_exp'] | undefined;
    replies_aggregate?:
      | GraphQLTypes['farcaster_casts_aggregate_bool_exp']
      | undefined;
    root_parent_hash?: GraphQLTypes['bytea_comparison_exp'] | undefined;
    root_parent_url?: GraphQLTypes['String_comparison_exp'] | undefined;
    text?: GraphQLTypes['String_comparison_exp'] | undefined;
    timestamp?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
  };
  /** Ordering options when selecting data from "enriched_casts". */
  ['enriched_casts_order_by']: {
    created_at?: GraphQLTypes['order_by'] | undefined;
    deleted_at?: GraphQLTypes['order_by'] | undefined;
    embeds?: GraphQLTypes['order_by'] | undefined;
    fid?: GraphQLTypes['order_by'] | undefined;
    hash?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    mentions?: GraphQLTypes['order_by'] | undefined;
    mentions_positions?: GraphQLTypes['order_by'] | undefined;
    parent_fid?: GraphQLTypes['order_by'] | undefined;
    parent_hash?: GraphQLTypes['order_by'] | undefined;
    parent_url?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    profile_public?: GraphQLTypes['profiles_public_order_by'] | undefined;
    reactions_aggregate?:
      | GraphQLTypes['farcaster_reactions_aggregate_order_by']
      | undefined;
    replies_aggregate?:
      | GraphQLTypes['farcaster_casts_aggregate_order_by']
      | undefined;
    root_parent_hash?: GraphQLTypes['order_by'] | undefined;
    root_parent_url?: GraphQLTypes['order_by'] | undefined;
    text?: GraphQLTypes['order_by'] | undefined;
    timestamp?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "enriched_casts" */
  ['enriched_casts_select_column']: enriched_casts_select_column;
  /** Streaming cursor of the table "enriched_casts" */
  ['enriched_casts_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['enriched_casts_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['enriched_casts_stream_cursor_value_input']: {
    created_at?: GraphQLTypes['timestamp'] | undefined;
    deleted_at?: GraphQLTypes['timestamp'] | undefined;
    embeds?: GraphQLTypes['jsonb'] | undefined;
    fid?: GraphQLTypes['bigint'] | undefined;
    hash?: GraphQLTypes['bytea'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    mentions?: Array<GraphQLTypes['bigint']> | undefined;
    mentions_positions?: Array<GraphQLTypes['smallint']> | undefined;
    parent_fid?: GraphQLTypes['bigint'] | undefined;
    parent_hash?: GraphQLTypes['bytea'] | undefined;
    parent_url?: string | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    root_parent_hash?: GraphQLTypes['bytea'] | undefined;
    root_parent_url?: string | undefined;
    text?: string | undefined;
    timestamp?: GraphQLTypes['timestamp'] | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
  };
  /** columns and relationships of "epoch_pgive_data" */
  ['epoch_pgive_data']: {
    __typename: 'epoch_pgive_data';
    active_months: number;
    active_months_bonus: GraphQLTypes['numeric'];
    created_at: GraphQLTypes['timestamptz'];
    /** An object relationship */
    epoch: GraphQLTypes['epochs'];
    epoch_id: number;
    gives_receiver_base: GraphQLTypes['numeric'];
    id: number;
    notes_bonus: GraphQLTypes['numeric'];
    pgive: GraphQLTypes['numeric'];
  };
  /** Boolean expression to filter rows from the table "epoch_pgive_data". All fields are combined with a logical 'AND'. */
  ['epoch_pgive_data_bool_exp']: {
    _and?: Array<GraphQLTypes['epoch_pgive_data_bool_exp']> | undefined;
    _not?: GraphQLTypes['epoch_pgive_data_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['epoch_pgive_data_bool_exp']> | undefined;
    active_months?: GraphQLTypes['Int_comparison_exp'] | undefined;
    active_months_bonus?: GraphQLTypes['numeric_comparison_exp'] | undefined;
    created_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    epoch?: GraphQLTypes['epochs_bool_exp'] | undefined;
    epoch_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    gives_receiver_base?: GraphQLTypes['numeric_comparison_exp'] | undefined;
    id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    notes_bonus?: GraphQLTypes['numeric_comparison_exp'] | undefined;
    pgive?: GraphQLTypes['numeric_comparison_exp'] | undefined;
  };
  /** Ordering options when selecting data from "epoch_pgive_data". */
  ['epoch_pgive_data_order_by']: {
    active_months?: GraphQLTypes['order_by'] | undefined;
    active_months_bonus?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    epoch?: GraphQLTypes['epochs_order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    gives_receiver_base?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    notes_bonus?: GraphQLTypes['order_by'] | undefined;
    pgive?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "epoch_pgive_data" */
  ['epoch_pgive_data_select_column']: epoch_pgive_data_select_column;
  /** Streaming cursor of the table "epoch_pgive_data" */
  ['epoch_pgive_data_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['epoch_pgive_data_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['epoch_pgive_data_stream_cursor_value_input']: {
    active_months?: number | undefined;
    active_months_bonus?: GraphQLTypes['numeric'] | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    epoch_id?: number | undefined;
    gives_receiver_base?: GraphQLTypes['numeric'] | undefined;
    id?: number | undefined;
    notes_bonus?: GraphQLTypes['numeric'] | undefined;
    pgive?: GraphQLTypes['numeric'] | undefined;
  };
  /** columns and relationships of "epoches" */
  ['epochs']: {
    __typename: 'epochs';
    /** An array relationship */
    activities: Array<GraphQLTypes['activities']>;
    /** An aggregate relationship */
    activities_aggregate: GraphQLTypes['activities_aggregate'];
    /** An array relationship */
    burns: Array<GraphQLTypes['burns']>;
    /** An object relationship */
    circle?: GraphQLTypes['circles'] | undefined;
    circle_id: number;
    created_at: GraphQLTypes['timestamp'];
    days?: number | undefined;
    description?: string | undefined;
    /** An array relationship */
    distributions: Array<GraphQLTypes['distributions']>;
    /** An aggregate relationship */
    distributions_aggregate: GraphQLTypes['distributions_aggregate'];
    end_date: GraphQLTypes['timestamptz'];
    ended: boolean;
    /** An array relationship */
    epoch_pending_token_gifts: Array<GraphQLTypes['pending_token_gifts']>;
    grant: GraphQLTypes['numeric'];
    /** An array relationship */
    histories: Array<GraphQLTypes['histories']>;
    id: GraphQLTypes['bigint'];
    /** An array relationship */
    member_epoch_pgives: Array<GraphQLTypes['member_epoch_pgives']>;
    /** An aggregate relationship */
    member_epoch_pgives_aggregate: GraphQLTypes['member_epoch_pgives_aggregate'];
    notified_before_end?: GraphQLTypes['timestamp'] | undefined;
    notified_end?: GraphQLTypes['timestamp'] | undefined;
    notified_start?: GraphQLTypes['timestamp'] | undefined;
    number?: number | undefined;
    /** An object relationship */
    pgive_data?: GraphQLTypes['epoch_pgive_data'] | undefined;
    repeat: number;
    repeat_data?: GraphQLTypes['jsonb'] | undefined;
    repeat_day_of_month: number;
    start_date: GraphQLTypes['timestamptz'];
    /** An array relationship */
    token_gifts: Array<GraphQLTypes['token_gifts']>;
    /** An aggregate relationship */
    token_gifts_aggregate: GraphQLTypes['token_gifts_aggregate'];
    updated_at: GraphQLTypes['timestamp'];
  };
  /** order by aggregate values of table "epoches" */
  ['epochs_aggregate_order_by']: {
    avg?: GraphQLTypes['epochs_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['epochs_max_order_by'] | undefined;
    min?: GraphQLTypes['epochs_min_order_by'] | undefined;
    stddev?: GraphQLTypes['epochs_stddev_order_by'] | undefined;
    stddev_pop?: GraphQLTypes['epochs_stddev_pop_order_by'] | undefined;
    stddev_samp?: GraphQLTypes['epochs_stddev_samp_order_by'] | undefined;
    sum?: GraphQLTypes['epochs_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['epochs_var_pop_order_by'] | undefined;
    var_samp?: GraphQLTypes['epochs_var_samp_order_by'] | undefined;
    variance?: GraphQLTypes['epochs_variance_order_by'] | undefined;
  };
  /** order by avg() on columns of table "epoches" */
  ['epochs_avg_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    days?: GraphQLTypes['order_by'] | undefined;
    grant?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    number?: GraphQLTypes['order_by'] | undefined;
    repeat?: GraphQLTypes['order_by'] | undefined;
    repeat_day_of_month?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "epoches". All fields are combined with a logical 'AND'. */
  ['epochs_bool_exp']: {
    _and?: Array<GraphQLTypes['epochs_bool_exp']> | undefined;
    _not?: GraphQLTypes['epochs_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['epochs_bool_exp']> | undefined;
    activities?: GraphQLTypes['activities_bool_exp'] | undefined;
    activities_aggregate?:
      | GraphQLTypes['activities_aggregate_bool_exp']
      | undefined;
    burns?: GraphQLTypes['burns_bool_exp'] | undefined;
    circle?: GraphQLTypes['circles_bool_exp'] | undefined;
    circle_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    created_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    days?: GraphQLTypes['Int_comparison_exp'] | undefined;
    description?: GraphQLTypes['String_comparison_exp'] | undefined;
    distributions?: GraphQLTypes['distributions_bool_exp'] | undefined;
    distributions_aggregate?:
      | GraphQLTypes['distributions_aggregate_bool_exp']
      | undefined;
    end_date?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    ended?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    epoch_pending_token_gifts?:
      | GraphQLTypes['pending_token_gifts_bool_exp']
      | undefined;
    grant?: GraphQLTypes['numeric_comparison_exp'] | undefined;
    histories?: GraphQLTypes['histories_bool_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    member_epoch_pgives?:
      | GraphQLTypes['member_epoch_pgives_bool_exp']
      | undefined;
    member_epoch_pgives_aggregate?:
      | GraphQLTypes['member_epoch_pgives_aggregate_bool_exp']
      | undefined;
    notified_before_end?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    notified_end?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    notified_start?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    number?: GraphQLTypes['Int_comparison_exp'] | undefined;
    pgive_data?: GraphQLTypes['epoch_pgive_data_bool_exp'] | undefined;
    repeat?: GraphQLTypes['Int_comparison_exp'] | undefined;
    repeat_data?: GraphQLTypes['jsonb_comparison_exp'] | undefined;
    repeat_day_of_month?: GraphQLTypes['Int_comparison_exp'] | undefined;
    start_date?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    token_gifts?: GraphQLTypes['token_gifts_bool_exp'] | undefined;
    token_gifts_aggregate?:
      | GraphQLTypes['token_gifts_aggregate_bool_exp']
      | undefined;
    updated_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
  };
  /** order by max() on columns of table "epoches" */
  ['epochs_max_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    days?: GraphQLTypes['order_by'] | undefined;
    description?: GraphQLTypes['order_by'] | undefined;
    end_date?: GraphQLTypes['order_by'] | undefined;
    grant?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    notified_before_end?: GraphQLTypes['order_by'] | undefined;
    notified_end?: GraphQLTypes['order_by'] | undefined;
    notified_start?: GraphQLTypes['order_by'] | undefined;
    number?: GraphQLTypes['order_by'] | undefined;
    repeat?: GraphQLTypes['order_by'] | undefined;
    repeat_day_of_month?: GraphQLTypes['order_by'] | undefined;
    start_date?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by min() on columns of table "epoches" */
  ['epochs_min_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    days?: GraphQLTypes['order_by'] | undefined;
    description?: GraphQLTypes['order_by'] | undefined;
    end_date?: GraphQLTypes['order_by'] | undefined;
    grant?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    notified_before_end?: GraphQLTypes['order_by'] | undefined;
    notified_end?: GraphQLTypes['order_by'] | undefined;
    notified_start?: GraphQLTypes['order_by'] | undefined;
    number?: GraphQLTypes['order_by'] | undefined;
    repeat?: GraphQLTypes['order_by'] | undefined;
    repeat_day_of_month?: GraphQLTypes['order_by'] | undefined;
    start_date?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** response of any mutation on the table "epoches" */
  ['epochs_mutation_response']: {
    __typename: 'epochs_mutation_response';
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['epochs']>;
  };
  /** Ordering options when selecting data from "epoches". */
  ['epochs_order_by']: {
    activities_aggregate?:
      | GraphQLTypes['activities_aggregate_order_by']
      | undefined;
    burns_aggregate?: GraphQLTypes['burns_aggregate_order_by'] | undefined;
    circle?: GraphQLTypes['circles_order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    days?: GraphQLTypes['order_by'] | undefined;
    description?: GraphQLTypes['order_by'] | undefined;
    distributions_aggregate?:
      | GraphQLTypes['distributions_aggregate_order_by']
      | undefined;
    end_date?: GraphQLTypes['order_by'] | undefined;
    ended?: GraphQLTypes['order_by'] | undefined;
    epoch_pending_token_gifts_aggregate?:
      | GraphQLTypes['pending_token_gifts_aggregate_order_by']
      | undefined;
    grant?: GraphQLTypes['order_by'] | undefined;
    histories_aggregate?:
      | GraphQLTypes['histories_aggregate_order_by']
      | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    member_epoch_pgives_aggregate?:
      | GraphQLTypes['member_epoch_pgives_aggregate_order_by']
      | undefined;
    notified_before_end?: GraphQLTypes['order_by'] | undefined;
    notified_end?: GraphQLTypes['order_by'] | undefined;
    notified_start?: GraphQLTypes['order_by'] | undefined;
    number?: GraphQLTypes['order_by'] | undefined;
    pgive_data?: GraphQLTypes['epoch_pgive_data_order_by'] | undefined;
    repeat?: GraphQLTypes['order_by'] | undefined;
    repeat_data?: GraphQLTypes['order_by'] | undefined;
    repeat_day_of_month?: GraphQLTypes['order_by'] | undefined;
    start_date?: GraphQLTypes['order_by'] | undefined;
    token_gifts_aggregate?:
      | GraphQLTypes['token_gifts_aggregate_order_by']
      | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** primary key columns input for table: epoches */
  ['epochs_pk_columns_input']: {
    id: GraphQLTypes['bigint'];
  };
  /** select columns of table "epoches" */
  ['epochs_select_column']: epochs_select_column;
  /** input type for updating data in table "epoches" */
  ['epochs_set_input']: {
    description?: string | undefined;
  };
  /** order by stddev() on columns of table "epoches" */
  ['epochs_stddev_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    days?: GraphQLTypes['order_by'] | undefined;
    grant?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    number?: GraphQLTypes['order_by'] | undefined;
    repeat?: GraphQLTypes['order_by'] | undefined;
    repeat_day_of_month?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_pop() on columns of table "epoches" */
  ['epochs_stddev_pop_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    days?: GraphQLTypes['order_by'] | undefined;
    grant?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    number?: GraphQLTypes['order_by'] | undefined;
    repeat?: GraphQLTypes['order_by'] | undefined;
    repeat_day_of_month?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_samp() on columns of table "epoches" */
  ['epochs_stddev_samp_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    days?: GraphQLTypes['order_by'] | undefined;
    grant?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    number?: GraphQLTypes['order_by'] | undefined;
    repeat?: GraphQLTypes['order_by'] | undefined;
    repeat_day_of_month?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "epochs" */
  ['epochs_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['epochs_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['epochs_stream_cursor_value_input']: {
    circle_id?: number | undefined;
    created_at?: GraphQLTypes['timestamp'] | undefined;
    days?: number | undefined;
    description?: string | undefined;
    end_date?: GraphQLTypes['timestamptz'] | undefined;
    ended?: boolean | undefined;
    grant?: GraphQLTypes['numeric'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    notified_before_end?: GraphQLTypes['timestamp'] | undefined;
    notified_end?: GraphQLTypes['timestamp'] | undefined;
    notified_start?: GraphQLTypes['timestamp'] | undefined;
    number?: number | undefined;
    repeat?: number | undefined;
    repeat_data?: GraphQLTypes['jsonb'] | undefined;
    repeat_day_of_month?: number | undefined;
    start_date?: GraphQLTypes['timestamptz'] | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
  };
  /** order by sum() on columns of table "epoches" */
  ['epochs_sum_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    days?: GraphQLTypes['order_by'] | undefined;
    grant?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    number?: GraphQLTypes['order_by'] | undefined;
    repeat?: GraphQLTypes['order_by'] | undefined;
    repeat_day_of_month?: GraphQLTypes['order_by'] | undefined;
  };
  ['epochs_updates']: {
    /** sets the columns of the filtered rows to the given values */
    _set?: GraphQLTypes['epochs_set_input'] | undefined;
    /** filter the rows which have to be updated */
    where: GraphQLTypes['epochs_bool_exp'];
  };
  /** order by var_pop() on columns of table "epoches" */
  ['epochs_var_pop_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    days?: GraphQLTypes['order_by'] | undefined;
    grant?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    number?: GraphQLTypes['order_by'] | undefined;
    repeat?: GraphQLTypes['order_by'] | undefined;
    repeat_day_of_month?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by var_samp() on columns of table "epoches" */
  ['epochs_var_samp_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    days?: GraphQLTypes['order_by'] | undefined;
    grant?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    number?: GraphQLTypes['order_by'] | undefined;
    repeat?: GraphQLTypes['order_by'] | undefined;
    repeat_day_of_month?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by variance() on columns of table "epoches" */
  ['epochs_variance_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    days?: GraphQLTypes['order_by'] | undefined;
    grant?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    number?: GraphQLTypes['order_by'] | undefined;
    repeat?: GraphQLTypes['order_by'] | undefined;
    repeat_day_of_month?: GraphQLTypes['order_by'] | undefined;
  };
  /** columns and relationships of "farcaster_accounts" */
  ['farcaster_accounts']: {
    __typename: 'farcaster_accounts';
    bio_text?: string | undefined;
    created_at: GraphQLTypes['timestamptz'];
    custody_address: string;
    fid: GraphQLTypes['bigint'];
    followers_count: number;
    following_count: number;
    name: string;
    pfp_url?: string | undefined;
    profile_id: GraphQLTypes['bigint'];
    /** An object relationship */
    profile_public: GraphQLTypes['profiles'];
    updated_at: GraphQLTypes['timestamptz'];
    username: string;
  };
  /** Boolean expression to filter rows from the table "farcaster_accounts". All fields are combined with a logical 'AND'. */
  ['farcaster_accounts_bool_exp']: {
    _and?: Array<GraphQLTypes['farcaster_accounts_bool_exp']> | undefined;
    _not?: GraphQLTypes['farcaster_accounts_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['farcaster_accounts_bool_exp']> | undefined;
    bio_text?: GraphQLTypes['String_comparison_exp'] | undefined;
    created_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    custody_address?: GraphQLTypes['String_comparison_exp'] | undefined;
    fid?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    followers_count?: GraphQLTypes['Int_comparison_exp'] | undefined;
    following_count?: GraphQLTypes['Int_comparison_exp'] | undefined;
    name?: GraphQLTypes['String_comparison_exp'] | undefined;
    pfp_url?: GraphQLTypes['String_comparison_exp'] | undefined;
    profile_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    profile_public?: GraphQLTypes['profiles_bool_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    username?: GraphQLTypes['String_comparison_exp'] | undefined;
  };
  /** response of any mutation on the table "farcaster_accounts" */
  ['farcaster_accounts_mutation_response']: {
    __typename: 'farcaster_accounts_mutation_response';
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['farcaster_accounts']>;
  };
  /** Ordering options when selecting data from "farcaster_accounts". */
  ['farcaster_accounts_order_by']: {
    bio_text?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    custody_address?: GraphQLTypes['order_by'] | undefined;
    fid?: GraphQLTypes['order_by'] | undefined;
    followers_count?: GraphQLTypes['order_by'] | undefined;
    following_count?: GraphQLTypes['order_by'] | undefined;
    name?: GraphQLTypes['order_by'] | undefined;
    pfp_url?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    profile_public?: GraphQLTypes['profiles_order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    username?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "farcaster_accounts" */
  ['farcaster_accounts_select_column']: farcaster_accounts_select_column;
  /** Streaming cursor of the table "farcaster_accounts" */
  ['farcaster_accounts_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['farcaster_accounts_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['farcaster_accounts_stream_cursor_value_input']: {
    bio_text?: string | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    custody_address?: string | undefined;
    fid?: GraphQLTypes['bigint'] | undefined;
    followers_count?: number | undefined;
    following_count?: number | undefined;
    name?: string | undefined;
    pfp_url?: string | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
    username?: string | undefined;
  };
  /** columns and relationships of "farcaster.casts" */
  ['farcaster_casts']: {
    __typename: 'farcaster_casts';
    created_at: GraphQLTypes['timestamp'];
    deleted_at?: GraphQLTypes['timestamp'] | undefined;
    embeds: GraphQLTypes['jsonb'];
    /** An object relationship */
    farcaster_account?: GraphQLTypes['farcaster_accounts'] | undefined;
    fid: GraphQLTypes['bigint'];
    hash: GraphQLTypes['bytea'];
    id: GraphQLTypes['bigint'];
    mentions: Array<GraphQLTypes['bigint']>;
    mentions_positions: Array<GraphQLTypes['smallint']>;
    parent_fid?: GraphQLTypes['bigint'] | undefined;
    parent_hash?: GraphQLTypes['bytea'] | undefined;
    parent_url?: string | undefined;
    /** An array relationship */
    reactions: Array<GraphQLTypes['farcaster_reactions']>;
    /** An aggregate relationship */
    reactions_aggregate: GraphQLTypes['farcaster_reactions_aggregate'];
    /** An array relationship */
    replies: Array<GraphQLTypes['farcaster_casts']>;
    /** An aggregate relationship */
    replies_aggregate: GraphQLTypes['farcaster_casts_aggregate'];
    root_parent_hash?: GraphQLTypes['bytea'] | undefined;
    root_parent_url?: string | undefined;
    text: string;
    timestamp: GraphQLTypes['timestamp'];
    updated_at: GraphQLTypes['timestamp'];
  };
  /** aggregated selection of "farcaster.casts" */
  ['farcaster_casts_aggregate']: {
    __typename: 'farcaster_casts_aggregate';
    aggregate?: GraphQLTypes['farcaster_casts_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['farcaster_casts']>;
  };
  ['farcaster_casts_aggregate_bool_exp']: {
    count?:
      | GraphQLTypes['farcaster_casts_aggregate_bool_exp_count']
      | undefined;
  };
  ['farcaster_casts_aggregate_bool_exp_count']: {
    arguments?:
      | Array<GraphQLTypes['farcaster_casts_select_column']>
      | undefined;
    distinct?: boolean | undefined;
    filter?: GraphQLTypes['farcaster_casts_bool_exp'] | undefined;
    predicate: GraphQLTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "farcaster.casts" */
  ['farcaster_casts_aggregate_fields']: {
    __typename: 'farcaster_casts_aggregate_fields';
    avg?: GraphQLTypes['farcaster_casts_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['farcaster_casts_max_fields'] | undefined;
    min?: GraphQLTypes['farcaster_casts_min_fields'] | undefined;
    stddev?: GraphQLTypes['farcaster_casts_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['farcaster_casts_stddev_pop_fields'] | undefined;
    stddev_samp?:
      | GraphQLTypes['farcaster_casts_stddev_samp_fields']
      | undefined;
    sum?: GraphQLTypes['farcaster_casts_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['farcaster_casts_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['farcaster_casts_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['farcaster_casts_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "farcaster.casts" */
  ['farcaster_casts_aggregate_order_by']: {
    avg?: GraphQLTypes['farcaster_casts_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['farcaster_casts_max_order_by'] | undefined;
    min?: GraphQLTypes['farcaster_casts_min_order_by'] | undefined;
    stddev?: GraphQLTypes['farcaster_casts_stddev_order_by'] | undefined;
    stddev_pop?:
      | GraphQLTypes['farcaster_casts_stddev_pop_order_by']
      | undefined;
    stddev_samp?:
      | GraphQLTypes['farcaster_casts_stddev_samp_order_by']
      | undefined;
    sum?: GraphQLTypes['farcaster_casts_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['farcaster_casts_var_pop_order_by'] | undefined;
    var_samp?: GraphQLTypes['farcaster_casts_var_samp_order_by'] | undefined;
    variance?: GraphQLTypes['farcaster_casts_variance_order_by'] | undefined;
  };
  /** aggregate avg on columns */
  ['farcaster_casts_avg_fields']: {
    __typename: 'farcaster_casts_avg_fields';
    fid?: number | undefined;
    id?: number | undefined;
    parent_fid?: number | undefined;
  };
  /** order by avg() on columns of table "farcaster.casts" */
  ['farcaster_casts_avg_order_by']: {
    fid?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    parent_fid?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "farcaster.casts". All fields are combined with a logical 'AND'. */
  ['farcaster_casts_bool_exp']: {
    _and?: Array<GraphQLTypes['farcaster_casts_bool_exp']> | undefined;
    _not?: GraphQLTypes['farcaster_casts_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['farcaster_casts_bool_exp']> | undefined;
    created_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    deleted_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    embeds?: GraphQLTypes['jsonb_comparison_exp'] | undefined;
    farcaster_account?: GraphQLTypes['farcaster_accounts_bool_exp'] | undefined;
    fid?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    hash?: GraphQLTypes['bytea_comparison_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    mentions?: GraphQLTypes['bigint_array_comparison_exp'] | undefined;
    mentions_positions?:
      | GraphQLTypes['smallint_array_comparison_exp']
      | undefined;
    parent_fid?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    parent_hash?: GraphQLTypes['bytea_comparison_exp'] | undefined;
    parent_url?: GraphQLTypes['String_comparison_exp'] | undefined;
    reactions?: GraphQLTypes['farcaster_reactions_bool_exp'] | undefined;
    reactions_aggregate?:
      | GraphQLTypes['farcaster_reactions_aggregate_bool_exp']
      | undefined;
    replies?: GraphQLTypes['farcaster_casts_bool_exp'] | undefined;
    replies_aggregate?:
      | GraphQLTypes['farcaster_casts_aggregate_bool_exp']
      | undefined;
    root_parent_hash?: GraphQLTypes['bytea_comparison_exp'] | undefined;
    root_parent_url?: GraphQLTypes['String_comparison_exp'] | undefined;
    text?: GraphQLTypes['String_comparison_exp'] | undefined;
    timestamp?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
  };
  /** aggregate max on columns */
  ['farcaster_casts_max_fields']: {
    __typename: 'farcaster_casts_max_fields';
    created_at?: GraphQLTypes['timestamp'] | undefined;
    deleted_at?: GraphQLTypes['timestamp'] | undefined;
    fid?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    mentions?: Array<GraphQLTypes['bigint']> | undefined;
    mentions_positions?: Array<GraphQLTypes['smallint']> | undefined;
    parent_fid?: GraphQLTypes['bigint'] | undefined;
    parent_url?: string | undefined;
    root_parent_url?: string | undefined;
    text?: string | undefined;
    timestamp?: GraphQLTypes['timestamp'] | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
  };
  /** order by max() on columns of table "farcaster.casts" */
  ['farcaster_casts_max_order_by']: {
    created_at?: GraphQLTypes['order_by'] | undefined;
    deleted_at?: GraphQLTypes['order_by'] | undefined;
    fid?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    mentions?: GraphQLTypes['order_by'] | undefined;
    mentions_positions?: GraphQLTypes['order_by'] | undefined;
    parent_fid?: GraphQLTypes['order_by'] | undefined;
    parent_url?: GraphQLTypes['order_by'] | undefined;
    root_parent_url?: GraphQLTypes['order_by'] | undefined;
    text?: GraphQLTypes['order_by'] | undefined;
    timestamp?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate min on columns */
  ['farcaster_casts_min_fields']: {
    __typename: 'farcaster_casts_min_fields';
    created_at?: GraphQLTypes['timestamp'] | undefined;
    deleted_at?: GraphQLTypes['timestamp'] | undefined;
    fid?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    mentions?: Array<GraphQLTypes['bigint']> | undefined;
    mentions_positions?: Array<GraphQLTypes['smallint']> | undefined;
    parent_fid?: GraphQLTypes['bigint'] | undefined;
    parent_url?: string | undefined;
    root_parent_url?: string | undefined;
    text?: string | undefined;
    timestamp?: GraphQLTypes['timestamp'] | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
  };
  /** order by min() on columns of table "farcaster.casts" */
  ['farcaster_casts_min_order_by']: {
    created_at?: GraphQLTypes['order_by'] | undefined;
    deleted_at?: GraphQLTypes['order_by'] | undefined;
    fid?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    mentions?: GraphQLTypes['order_by'] | undefined;
    mentions_positions?: GraphQLTypes['order_by'] | undefined;
    parent_fid?: GraphQLTypes['order_by'] | undefined;
    parent_url?: GraphQLTypes['order_by'] | undefined;
    root_parent_url?: GraphQLTypes['order_by'] | undefined;
    text?: GraphQLTypes['order_by'] | undefined;
    timestamp?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** Ordering options when selecting data from "farcaster.casts". */
  ['farcaster_casts_order_by']: {
    created_at?: GraphQLTypes['order_by'] | undefined;
    deleted_at?: GraphQLTypes['order_by'] | undefined;
    embeds?: GraphQLTypes['order_by'] | undefined;
    farcaster_account?: GraphQLTypes['farcaster_accounts_order_by'] | undefined;
    fid?: GraphQLTypes['order_by'] | undefined;
    hash?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    mentions?: GraphQLTypes['order_by'] | undefined;
    mentions_positions?: GraphQLTypes['order_by'] | undefined;
    parent_fid?: GraphQLTypes['order_by'] | undefined;
    parent_hash?: GraphQLTypes['order_by'] | undefined;
    parent_url?: GraphQLTypes['order_by'] | undefined;
    reactions_aggregate?:
      | GraphQLTypes['farcaster_reactions_aggregate_order_by']
      | undefined;
    replies_aggregate?:
      | GraphQLTypes['farcaster_casts_aggregate_order_by']
      | undefined;
    root_parent_hash?: GraphQLTypes['order_by'] | undefined;
    root_parent_url?: GraphQLTypes['order_by'] | undefined;
    text?: GraphQLTypes['order_by'] | undefined;
    timestamp?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "farcaster.casts" */
  ['farcaster_casts_select_column']: farcaster_casts_select_column;
  /** aggregate stddev on columns */
  ['farcaster_casts_stddev_fields']: {
    __typename: 'farcaster_casts_stddev_fields';
    fid?: number | undefined;
    id?: number | undefined;
    parent_fid?: number | undefined;
  };
  /** order by stddev() on columns of table "farcaster.casts" */
  ['farcaster_casts_stddev_order_by']: {
    fid?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    parent_fid?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_pop on columns */
  ['farcaster_casts_stddev_pop_fields']: {
    __typename: 'farcaster_casts_stddev_pop_fields';
    fid?: number | undefined;
    id?: number | undefined;
    parent_fid?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "farcaster.casts" */
  ['farcaster_casts_stddev_pop_order_by']: {
    fid?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    parent_fid?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_samp on columns */
  ['farcaster_casts_stddev_samp_fields']: {
    __typename: 'farcaster_casts_stddev_samp_fields';
    fid?: number | undefined;
    id?: number | undefined;
    parent_fid?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "farcaster.casts" */
  ['farcaster_casts_stddev_samp_order_by']: {
    fid?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    parent_fid?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "farcaster_casts" */
  ['farcaster_casts_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['farcaster_casts_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['farcaster_casts_stream_cursor_value_input']: {
    created_at?: GraphQLTypes['timestamp'] | undefined;
    deleted_at?: GraphQLTypes['timestamp'] | undefined;
    embeds?: GraphQLTypes['jsonb'] | undefined;
    fid?: GraphQLTypes['bigint'] | undefined;
    hash?: GraphQLTypes['bytea'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    mentions?: Array<GraphQLTypes['bigint']> | undefined;
    mentions_positions?: Array<GraphQLTypes['smallint']> | undefined;
    parent_fid?: GraphQLTypes['bigint'] | undefined;
    parent_hash?: GraphQLTypes['bytea'] | undefined;
    parent_url?: string | undefined;
    root_parent_hash?: GraphQLTypes['bytea'] | undefined;
    root_parent_url?: string | undefined;
    text?: string | undefined;
    timestamp?: GraphQLTypes['timestamp'] | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
  };
  /** aggregate sum on columns */
  ['farcaster_casts_sum_fields']: {
    __typename: 'farcaster_casts_sum_fields';
    fid?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    parent_fid?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by sum() on columns of table "farcaster.casts" */
  ['farcaster_casts_sum_order_by']: {
    fid?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    parent_fid?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate var_pop on columns */
  ['farcaster_casts_var_pop_fields']: {
    __typename: 'farcaster_casts_var_pop_fields';
    fid?: number | undefined;
    id?: number | undefined;
    parent_fid?: number | undefined;
  };
  /** order by var_pop() on columns of table "farcaster.casts" */
  ['farcaster_casts_var_pop_order_by']: {
    fid?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    parent_fid?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate var_samp on columns */
  ['farcaster_casts_var_samp_fields']: {
    __typename: 'farcaster_casts_var_samp_fields';
    fid?: number | undefined;
    id?: number | undefined;
    parent_fid?: number | undefined;
  };
  /** order by var_samp() on columns of table "farcaster.casts" */
  ['farcaster_casts_var_samp_order_by']: {
    fid?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    parent_fid?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate variance on columns */
  ['farcaster_casts_variance_fields']: {
    __typename: 'farcaster_casts_variance_fields';
    fid?: number | undefined;
    id?: number | undefined;
    parent_fid?: number | undefined;
  };
  /** order by variance() on columns of table "farcaster.casts" */
  ['farcaster_casts_variance_order_by']: {
    fid?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    parent_fid?: GraphQLTypes['order_by'] | undefined;
  };
  /** columns and relationships of "farcaster.reactions" */
  ['farcaster_reactions']: {
    __typename: 'farcaster_reactions';
    created_at: GraphQLTypes['timestamp'];
    deleted_at?: GraphQLTypes['timestamp'] | undefined;
    fid: GraphQLTypes['bigint'];
    hash: GraphQLTypes['bytea'];
    id: GraphQLTypes['bigint'];
    reaction_type: GraphQLTypes['smallint'];
    target_fid?: GraphQLTypes['bigint'] | undefined;
    target_hash?: GraphQLTypes['bytea'] | undefined;
    target_url?: string | undefined;
    timestamp: GraphQLTypes['timestamp'];
    updated_at: GraphQLTypes['timestamp'];
  };
  /** aggregated selection of "farcaster.reactions" */
  ['farcaster_reactions_aggregate']: {
    __typename: 'farcaster_reactions_aggregate';
    aggregate?:
      | GraphQLTypes['farcaster_reactions_aggregate_fields']
      | undefined;
    nodes: Array<GraphQLTypes['farcaster_reactions']>;
  };
  ['farcaster_reactions_aggregate_bool_exp']: {
    count?:
      | GraphQLTypes['farcaster_reactions_aggregate_bool_exp_count']
      | undefined;
  };
  ['farcaster_reactions_aggregate_bool_exp_count']: {
    arguments?:
      | Array<GraphQLTypes['farcaster_reactions_select_column']>
      | undefined;
    distinct?: boolean | undefined;
    filter?: GraphQLTypes['farcaster_reactions_bool_exp'] | undefined;
    predicate: GraphQLTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "farcaster.reactions" */
  ['farcaster_reactions_aggregate_fields']: {
    __typename: 'farcaster_reactions_aggregate_fields';
    avg?: GraphQLTypes['farcaster_reactions_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['farcaster_reactions_max_fields'] | undefined;
    min?: GraphQLTypes['farcaster_reactions_min_fields'] | undefined;
    stddev?: GraphQLTypes['farcaster_reactions_stddev_fields'] | undefined;
    stddev_pop?:
      | GraphQLTypes['farcaster_reactions_stddev_pop_fields']
      | undefined;
    stddev_samp?:
      | GraphQLTypes['farcaster_reactions_stddev_samp_fields']
      | undefined;
    sum?: GraphQLTypes['farcaster_reactions_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['farcaster_reactions_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['farcaster_reactions_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['farcaster_reactions_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "farcaster.reactions" */
  ['farcaster_reactions_aggregate_order_by']: {
    avg?: GraphQLTypes['farcaster_reactions_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['farcaster_reactions_max_order_by'] | undefined;
    min?: GraphQLTypes['farcaster_reactions_min_order_by'] | undefined;
    stddev?: GraphQLTypes['farcaster_reactions_stddev_order_by'] | undefined;
    stddev_pop?:
      | GraphQLTypes['farcaster_reactions_stddev_pop_order_by']
      | undefined;
    stddev_samp?:
      | GraphQLTypes['farcaster_reactions_stddev_samp_order_by']
      | undefined;
    sum?: GraphQLTypes['farcaster_reactions_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['farcaster_reactions_var_pop_order_by'] | undefined;
    var_samp?:
      | GraphQLTypes['farcaster_reactions_var_samp_order_by']
      | undefined;
    variance?:
      | GraphQLTypes['farcaster_reactions_variance_order_by']
      | undefined;
  };
  /** aggregate avg on columns */
  ['farcaster_reactions_avg_fields']: {
    __typename: 'farcaster_reactions_avg_fields';
    fid?: number | undefined;
    id?: number | undefined;
    reaction_type?: number | undefined;
    target_fid?: number | undefined;
  };
  /** order by avg() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_avg_order_by']: {
    fid?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    reaction_type?: GraphQLTypes['order_by'] | undefined;
    target_fid?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "farcaster.reactions". All fields are combined with a logical 'AND'. */
  ['farcaster_reactions_bool_exp']: {
    _and?: Array<GraphQLTypes['farcaster_reactions_bool_exp']> | undefined;
    _not?: GraphQLTypes['farcaster_reactions_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['farcaster_reactions_bool_exp']> | undefined;
    created_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    deleted_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    fid?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    hash?: GraphQLTypes['bytea_comparison_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    reaction_type?: GraphQLTypes['smallint_comparison_exp'] | undefined;
    target_fid?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    target_hash?: GraphQLTypes['bytea_comparison_exp'] | undefined;
    target_url?: GraphQLTypes['String_comparison_exp'] | undefined;
    timestamp?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
  };
  /** aggregate max on columns */
  ['farcaster_reactions_max_fields']: {
    __typename: 'farcaster_reactions_max_fields';
    created_at?: GraphQLTypes['timestamp'] | undefined;
    deleted_at?: GraphQLTypes['timestamp'] | undefined;
    fid?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    reaction_type?: GraphQLTypes['smallint'] | undefined;
    target_fid?: GraphQLTypes['bigint'] | undefined;
    target_url?: string | undefined;
    timestamp?: GraphQLTypes['timestamp'] | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
  };
  /** order by max() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_max_order_by']: {
    created_at?: GraphQLTypes['order_by'] | undefined;
    deleted_at?: GraphQLTypes['order_by'] | undefined;
    fid?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    reaction_type?: GraphQLTypes['order_by'] | undefined;
    target_fid?: GraphQLTypes['order_by'] | undefined;
    target_url?: GraphQLTypes['order_by'] | undefined;
    timestamp?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate min on columns */
  ['farcaster_reactions_min_fields']: {
    __typename: 'farcaster_reactions_min_fields';
    created_at?: GraphQLTypes['timestamp'] | undefined;
    deleted_at?: GraphQLTypes['timestamp'] | undefined;
    fid?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    reaction_type?: GraphQLTypes['smallint'] | undefined;
    target_fid?: GraphQLTypes['bigint'] | undefined;
    target_url?: string | undefined;
    timestamp?: GraphQLTypes['timestamp'] | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
  };
  /** order by min() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_min_order_by']: {
    created_at?: GraphQLTypes['order_by'] | undefined;
    deleted_at?: GraphQLTypes['order_by'] | undefined;
    fid?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    reaction_type?: GraphQLTypes['order_by'] | undefined;
    target_fid?: GraphQLTypes['order_by'] | undefined;
    target_url?: GraphQLTypes['order_by'] | undefined;
    timestamp?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** Ordering options when selecting data from "farcaster.reactions". */
  ['farcaster_reactions_order_by']: {
    created_at?: GraphQLTypes['order_by'] | undefined;
    deleted_at?: GraphQLTypes['order_by'] | undefined;
    fid?: GraphQLTypes['order_by'] | undefined;
    hash?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    reaction_type?: GraphQLTypes['order_by'] | undefined;
    target_fid?: GraphQLTypes['order_by'] | undefined;
    target_hash?: GraphQLTypes['order_by'] | undefined;
    target_url?: GraphQLTypes['order_by'] | undefined;
    timestamp?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "farcaster.reactions" */
  ['farcaster_reactions_select_column']: farcaster_reactions_select_column;
  /** aggregate stddev on columns */
  ['farcaster_reactions_stddev_fields']: {
    __typename: 'farcaster_reactions_stddev_fields';
    fid?: number | undefined;
    id?: number | undefined;
    reaction_type?: number | undefined;
    target_fid?: number | undefined;
  };
  /** order by stddev() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_stddev_order_by']: {
    fid?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    reaction_type?: GraphQLTypes['order_by'] | undefined;
    target_fid?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_pop on columns */
  ['farcaster_reactions_stddev_pop_fields']: {
    __typename: 'farcaster_reactions_stddev_pop_fields';
    fid?: number | undefined;
    id?: number | undefined;
    reaction_type?: number | undefined;
    target_fid?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_stddev_pop_order_by']: {
    fid?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    reaction_type?: GraphQLTypes['order_by'] | undefined;
    target_fid?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_samp on columns */
  ['farcaster_reactions_stddev_samp_fields']: {
    __typename: 'farcaster_reactions_stddev_samp_fields';
    fid?: number | undefined;
    id?: number | undefined;
    reaction_type?: number | undefined;
    target_fid?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_stddev_samp_order_by']: {
    fid?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    reaction_type?: GraphQLTypes['order_by'] | undefined;
    target_fid?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "farcaster_reactions" */
  ['farcaster_reactions_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['farcaster_reactions_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['farcaster_reactions_stream_cursor_value_input']: {
    created_at?: GraphQLTypes['timestamp'] | undefined;
    deleted_at?: GraphQLTypes['timestamp'] | undefined;
    fid?: GraphQLTypes['bigint'] | undefined;
    hash?: GraphQLTypes['bytea'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    reaction_type?: GraphQLTypes['smallint'] | undefined;
    target_fid?: GraphQLTypes['bigint'] | undefined;
    target_hash?: GraphQLTypes['bytea'] | undefined;
    target_url?: string | undefined;
    timestamp?: GraphQLTypes['timestamp'] | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
  };
  /** aggregate sum on columns */
  ['farcaster_reactions_sum_fields']: {
    __typename: 'farcaster_reactions_sum_fields';
    fid?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    reaction_type?: GraphQLTypes['smallint'] | undefined;
    target_fid?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by sum() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_sum_order_by']: {
    fid?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    reaction_type?: GraphQLTypes['order_by'] | undefined;
    target_fid?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate var_pop on columns */
  ['farcaster_reactions_var_pop_fields']: {
    __typename: 'farcaster_reactions_var_pop_fields';
    fid?: number | undefined;
    id?: number | undefined;
    reaction_type?: number | undefined;
    target_fid?: number | undefined;
  };
  /** order by var_pop() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_var_pop_order_by']: {
    fid?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    reaction_type?: GraphQLTypes['order_by'] | undefined;
    target_fid?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate var_samp on columns */
  ['farcaster_reactions_var_samp_fields']: {
    __typename: 'farcaster_reactions_var_samp_fields';
    fid?: number | undefined;
    id?: number | undefined;
    reaction_type?: number | undefined;
    target_fid?: number | undefined;
  };
  /** order by var_samp() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_var_samp_order_by']: {
    fid?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    reaction_type?: GraphQLTypes['order_by'] | undefined;
    target_fid?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate variance on columns */
  ['farcaster_reactions_variance_fields']: {
    __typename: 'farcaster_reactions_variance_fields';
    fid?: number | undefined;
    id?: number | undefined;
    reaction_type?: number | undefined;
    target_fid?: number | undefined;
  };
  /** order by variance() on columns of table "farcaster.reactions" */
  ['farcaster_reactions_variance_order_by']: {
    fid?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    reaction_type?: GraphQLTypes['order_by'] | undefined;
    target_fid?: GraphQLTypes['order_by'] | undefined;
  };
  ['float8']: any;
  /** Boolean expression to compare columns of type "float8". All fields are combined with logical 'AND'. */
  ['float8_comparison_exp']: {
    _eq?: GraphQLTypes['float8'] | undefined;
    _gt?: GraphQLTypes['float8'] | undefined;
    _gte?: GraphQLTypes['float8'] | undefined;
    _in?: Array<GraphQLTypes['float8']> | undefined;
    _is_null?: boolean | undefined;
    _lt?: GraphQLTypes['float8'] | undefined;
    _lte?: GraphQLTypes['float8'] | undefined;
    _neq?: GraphQLTypes['float8'] | undefined;
    _nin?: Array<GraphQLTypes['float8']> | undefined;
  };
  /** columns and relationships of "gift_private" */
  ['gift_private']: {
    __typename: 'gift_private';
    gift_id?: GraphQLTypes['bigint'] | undefined;
    note?: string | undefined;
    /** An object relationship */
    recipient?: GraphQLTypes['users'] | undefined;
    recipient_id?: GraphQLTypes['bigint'] | undefined;
    /** An object relationship */
    sender?: GraphQLTypes['users'] | undefined;
    sender_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** Boolean expression to filter rows from the table "gift_private". All fields are combined with a logical 'AND'. */
  ['gift_private_bool_exp']: {
    _and?: Array<GraphQLTypes['gift_private_bool_exp']> | undefined;
    _not?: GraphQLTypes['gift_private_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['gift_private_bool_exp']> | undefined;
    gift_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    note?: GraphQLTypes['String_comparison_exp'] | undefined;
    recipient?: GraphQLTypes['users_bool_exp'] | undefined;
    recipient_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    sender?: GraphQLTypes['users_bool_exp'] | undefined;
    sender_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
  };
  /** Ordering options when selecting data from "gift_private". */
  ['gift_private_order_by']: {
    gift_id?: GraphQLTypes['order_by'] | undefined;
    note?: GraphQLTypes['order_by'] | undefined;
    recipient?: GraphQLTypes['users_order_by'] | undefined;
    recipient_id?: GraphQLTypes['order_by'] | undefined;
    sender?: GraphQLTypes['users_order_by'] | undefined;
    sender_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "gift_private" */
  ['gift_private_select_column']: gift_private_select_column;
  /** Streaming cursor of the table "gift_private" */
  ['gift_private_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['gift_private_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['gift_private_stream_cursor_value_input']: {
    gift_id?: GraphQLTypes['bigint'] | undefined;
    note?: string | undefined;
    recipient_id?: GraphQLTypes['bigint'] | undefined;
    sender_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** columns and relationships of "github_accounts" */
  ['github_accounts']: {
    __typename: 'github_accounts';
    avatar_url: string;
    github_id: GraphQLTypes['bigint'];
    /** An object relationship */
    profile: GraphQLTypes['profiles'];
    profile_id: GraphQLTypes['bigint'];
    username: string;
  };
  /** Boolean expression to filter rows from the table "github_accounts". All fields are combined with a logical 'AND'. */
  ['github_accounts_bool_exp']: {
    _and?: Array<GraphQLTypes['github_accounts_bool_exp']> | undefined;
    _not?: GraphQLTypes['github_accounts_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['github_accounts_bool_exp']> | undefined;
    avatar_url?: GraphQLTypes['String_comparison_exp'] | undefined;
    github_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    profile?: GraphQLTypes['profiles_bool_exp'] | undefined;
    profile_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    username?: GraphQLTypes['String_comparison_exp'] | undefined;
  };
  /** response of any mutation on the table "github_accounts" */
  ['github_accounts_mutation_response']: {
    __typename: 'github_accounts_mutation_response';
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['github_accounts']>;
  };
  /** Ordering options when selecting data from "github_accounts". */
  ['github_accounts_order_by']: {
    avatar_url?: GraphQLTypes['order_by'] | undefined;
    github_id?: GraphQLTypes['order_by'] | undefined;
    profile?: GraphQLTypes['profiles_order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    username?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "github_accounts" */
  ['github_accounts_select_column']: github_accounts_select_column;
  /** Streaming cursor of the table "github_accounts" */
  ['github_accounts_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['github_accounts_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['github_accounts_stream_cursor_value_input']: {
    avatar_url?: string | undefined;
    github_id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    username?: string | undefined;
  };
  /** columns and relationships of "histories" */
  ['histories']: {
    __typename: 'histories';
    bio?: string | undefined;
    /** An object relationship */
    circle?: GraphQLTypes['circles'] | undefined;
    /** An object relationship */
    epoch?: GraphQLTypes['epochs'] | undefined;
    id: GraphQLTypes['bigint'];
    /** An object relationship */
    user?: GraphQLTypes['users'] | undefined;
  };
  /** order by aggregate values of table "histories" */
  ['histories_aggregate_order_by']: {
    avg?: GraphQLTypes['histories_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['histories_max_order_by'] | undefined;
    min?: GraphQLTypes['histories_min_order_by'] | undefined;
    stddev?: GraphQLTypes['histories_stddev_order_by'] | undefined;
    stddev_pop?: GraphQLTypes['histories_stddev_pop_order_by'] | undefined;
    stddev_samp?: GraphQLTypes['histories_stddev_samp_order_by'] | undefined;
    sum?: GraphQLTypes['histories_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['histories_var_pop_order_by'] | undefined;
    var_samp?: GraphQLTypes['histories_var_samp_order_by'] | undefined;
    variance?: GraphQLTypes['histories_variance_order_by'] | undefined;
  };
  /** order by avg() on columns of table "histories" */
  ['histories_avg_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "histories". All fields are combined with a logical 'AND'. */
  ['histories_bool_exp']: {
    _and?: Array<GraphQLTypes['histories_bool_exp']> | undefined;
    _not?: GraphQLTypes['histories_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['histories_bool_exp']> | undefined;
    bio?: GraphQLTypes['String_comparison_exp'] | undefined;
    circle?: GraphQLTypes['circles_bool_exp'] | undefined;
    epoch?: GraphQLTypes['epochs_bool_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    user?: GraphQLTypes['users_bool_exp'] | undefined;
  };
  /** order by max() on columns of table "histories" */
  ['histories_max_order_by']: {
    bio?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by min() on columns of table "histories" */
  ['histories_min_order_by']: {
    bio?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Ordering options when selecting data from "histories". */
  ['histories_order_by']: {
    bio?: GraphQLTypes['order_by'] | undefined;
    circle?: GraphQLTypes['circles_order_by'] | undefined;
    epoch?: GraphQLTypes['epochs_order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    user?: GraphQLTypes['users_order_by'] | undefined;
  };
  /** select columns of table "histories" */
  ['histories_select_column']: histories_select_column;
  /** order by stddev() on columns of table "histories" */
  ['histories_stddev_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_pop() on columns of table "histories" */
  ['histories_stddev_pop_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_samp() on columns of table "histories" */
  ['histories_stddev_samp_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "histories" */
  ['histories_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['histories_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['histories_stream_cursor_value_input']: {
    bio?: string | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by sum() on columns of table "histories" */
  ['histories_sum_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by var_pop() on columns of table "histories" */
  ['histories_var_pop_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by var_samp() on columns of table "histories" */
  ['histories_var_samp_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by variance() on columns of table "histories" */
  ['histories_variance_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Invite codes table for restricting access to app */
  ['invite_codes']: {
    __typename: 'invite_codes';
    code: GraphQLTypes['citext'];
    created_at: GraphQLTypes['timestamptz'];
    /** An object relationship */
    invited?: GraphQLTypes['profiles_public'] | undefined;
    invited_id?: GraphQLTypes['bigint'] | undefined;
    /** An object relationship */
    inviter?: GraphQLTypes['profiles_public'] | undefined;
    inviter_id: GraphQLTypes['bigint'];
    updated_at: GraphQLTypes['timestamptz'];
  };
  /** aggregated selection of "invite_codes" */
  ['invite_codes_aggregate']: {
    __typename: 'invite_codes_aggregate';
    aggregate?: GraphQLTypes['invite_codes_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['invite_codes']>;
  };
  ['invite_codes_aggregate_bool_exp']: {
    count?: GraphQLTypes['invite_codes_aggregate_bool_exp_count'] | undefined;
  };
  ['invite_codes_aggregate_bool_exp_count']: {
    arguments?: Array<GraphQLTypes['invite_codes_select_column']> | undefined;
    distinct?: boolean | undefined;
    filter?: GraphQLTypes['invite_codes_bool_exp'] | undefined;
    predicate: GraphQLTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "invite_codes" */
  ['invite_codes_aggregate_fields']: {
    __typename: 'invite_codes_aggregate_fields';
    avg?: GraphQLTypes['invite_codes_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['invite_codes_max_fields'] | undefined;
    min?: GraphQLTypes['invite_codes_min_fields'] | undefined;
    stddev?: GraphQLTypes['invite_codes_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['invite_codes_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['invite_codes_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['invite_codes_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['invite_codes_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['invite_codes_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['invite_codes_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "invite_codes" */
  ['invite_codes_aggregate_order_by']: {
    avg?: GraphQLTypes['invite_codes_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['invite_codes_max_order_by'] | undefined;
    min?: GraphQLTypes['invite_codes_min_order_by'] | undefined;
    stddev?: GraphQLTypes['invite_codes_stddev_order_by'] | undefined;
    stddev_pop?: GraphQLTypes['invite_codes_stddev_pop_order_by'] | undefined;
    stddev_samp?: GraphQLTypes['invite_codes_stddev_samp_order_by'] | undefined;
    sum?: GraphQLTypes['invite_codes_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['invite_codes_var_pop_order_by'] | undefined;
    var_samp?: GraphQLTypes['invite_codes_var_samp_order_by'] | undefined;
    variance?: GraphQLTypes['invite_codes_variance_order_by'] | undefined;
  };
  /** aggregate avg on columns */
  ['invite_codes_avg_fields']: {
    __typename: 'invite_codes_avg_fields';
    invited_id?: number | undefined;
    inviter_id?: number | undefined;
  };
  /** order by avg() on columns of table "invite_codes" */
  ['invite_codes_avg_order_by']: {
    invited_id?: GraphQLTypes['order_by'] | undefined;
    inviter_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "invite_codes". All fields are combined with a logical 'AND'. */
  ['invite_codes_bool_exp']: {
    _and?: Array<GraphQLTypes['invite_codes_bool_exp']> | undefined;
    _not?: GraphQLTypes['invite_codes_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['invite_codes_bool_exp']> | undefined;
    code?: GraphQLTypes['citext_comparison_exp'] | undefined;
    created_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    invited?: GraphQLTypes['profiles_public_bool_exp'] | undefined;
    invited_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    inviter?: GraphQLTypes['profiles_public_bool_exp'] | undefined;
    inviter_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
  };
  /** aggregate max on columns */
  ['invite_codes_max_fields']: {
    __typename: 'invite_codes_max_fields';
    code?: GraphQLTypes['citext'] | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    invited_id?: GraphQLTypes['bigint'] | undefined;
    inviter_id?: GraphQLTypes['bigint'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by max() on columns of table "invite_codes" */
  ['invite_codes_max_order_by']: {
    code?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    invited_id?: GraphQLTypes['order_by'] | undefined;
    inviter_id?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate min on columns */
  ['invite_codes_min_fields']: {
    __typename: 'invite_codes_min_fields';
    code?: GraphQLTypes['citext'] | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    invited_id?: GraphQLTypes['bigint'] | undefined;
    inviter_id?: GraphQLTypes['bigint'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by min() on columns of table "invite_codes" */
  ['invite_codes_min_order_by']: {
    code?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    invited_id?: GraphQLTypes['order_by'] | undefined;
    inviter_id?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** Ordering options when selecting data from "invite_codes". */
  ['invite_codes_order_by']: {
    code?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    invited?: GraphQLTypes['profiles_public_order_by'] | undefined;
    invited_id?: GraphQLTypes['order_by'] | undefined;
    inviter?: GraphQLTypes['profiles_public_order_by'] | undefined;
    inviter_id?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "invite_codes" */
  ['invite_codes_select_column']: invite_codes_select_column;
  /** aggregate stddev on columns */
  ['invite_codes_stddev_fields']: {
    __typename: 'invite_codes_stddev_fields';
    invited_id?: number | undefined;
    inviter_id?: number | undefined;
  };
  /** order by stddev() on columns of table "invite_codes" */
  ['invite_codes_stddev_order_by']: {
    invited_id?: GraphQLTypes['order_by'] | undefined;
    inviter_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_pop on columns */
  ['invite_codes_stddev_pop_fields']: {
    __typename: 'invite_codes_stddev_pop_fields';
    invited_id?: number | undefined;
    inviter_id?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "invite_codes" */
  ['invite_codes_stddev_pop_order_by']: {
    invited_id?: GraphQLTypes['order_by'] | undefined;
    inviter_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_samp on columns */
  ['invite_codes_stddev_samp_fields']: {
    __typename: 'invite_codes_stddev_samp_fields';
    invited_id?: number | undefined;
    inviter_id?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "invite_codes" */
  ['invite_codes_stddev_samp_order_by']: {
    invited_id?: GraphQLTypes['order_by'] | undefined;
    inviter_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "invite_codes" */
  ['invite_codes_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['invite_codes_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['invite_codes_stream_cursor_value_input']: {
    code?: GraphQLTypes['citext'] | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    invited_id?: GraphQLTypes['bigint'] | undefined;
    inviter_id?: GraphQLTypes['bigint'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** aggregate sum on columns */
  ['invite_codes_sum_fields']: {
    __typename: 'invite_codes_sum_fields';
    invited_id?: GraphQLTypes['bigint'] | undefined;
    inviter_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by sum() on columns of table "invite_codes" */
  ['invite_codes_sum_order_by']: {
    invited_id?: GraphQLTypes['order_by'] | undefined;
    inviter_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate var_pop on columns */
  ['invite_codes_var_pop_fields']: {
    __typename: 'invite_codes_var_pop_fields';
    invited_id?: number | undefined;
    inviter_id?: number | undefined;
  };
  /** order by var_pop() on columns of table "invite_codes" */
  ['invite_codes_var_pop_order_by']: {
    invited_id?: GraphQLTypes['order_by'] | undefined;
    inviter_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate var_samp on columns */
  ['invite_codes_var_samp_fields']: {
    __typename: 'invite_codes_var_samp_fields';
    invited_id?: number | undefined;
    inviter_id?: number | undefined;
  };
  /** order by var_samp() on columns of table "invite_codes" */
  ['invite_codes_var_samp_order_by']: {
    invited_id?: GraphQLTypes['order_by'] | undefined;
    inviter_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate variance on columns */
  ['invite_codes_variance_fields']: {
    __typename: 'invite_codes_variance_fields';
    invited_id?: number | undefined;
    inviter_id?: number | undefined;
  };
  /** order by variance() on columns of table "invite_codes" */
  ['invite_codes_variance_order_by']: {
    invited_id?: GraphQLTypes['order_by'] | undefined;
    inviter_id?: GraphQLTypes['order_by'] | undefined;
  };
  ['json']: any;
  /** Boolean expression to compare columns of type "json". All fields are combined with logical 'AND'. */
  ['json_comparison_exp']: {
    _eq?: GraphQLTypes['json'] | undefined;
    _gt?: GraphQLTypes['json'] | undefined;
    _gte?: GraphQLTypes['json'] | undefined;
    _in?: Array<GraphQLTypes['json']> | undefined;
    _is_null?: boolean | undefined;
    _lt?: GraphQLTypes['json'] | undefined;
    _lte?: GraphQLTypes['json'] | undefined;
    _neq?: GraphQLTypes['json'] | undefined;
    _nin?: Array<GraphQLTypes['json']> | undefined;
  };
  ['jsonb']: any;
  ['jsonb_cast_exp']: {
    String?: GraphQLTypes['String_comparison_exp'] | undefined;
  };
  /** Boolean expression to compare columns of type "jsonb". All fields are combined with logical 'AND'. */
  ['jsonb_comparison_exp']: {
    _cast?: GraphQLTypes['jsonb_cast_exp'] | undefined;
    /** is the column contained in the given json value */
    _contained_in?: GraphQLTypes['jsonb'] | undefined;
    /** does the column contain the given json value at the top level */
    _contains?: GraphQLTypes['jsonb'] | undefined;
    _eq?: GraphQLTypes['jsonb'] | undefined;
    _gt?: GraphQLTypes['jsonb'] | undefined;
    _gte?: GraphQLTypes['jsonb'] | undefined;
    /** does the string exist as a top-level key in the column */
    _has_key?: string | undefined;
    /** do all of these strings exist as top-level keys in the column */
    _has_keys_all?: Array<string> | undefined;
    /** do any of these strings exist as top-level keys in the column */
    _has_keys_any?: Array<string> | undefined;
    _in?: Array<GraphQLTypes['jsonb']> | undefined;
    _is_null?: boolean | undefined;
    _lt?: GraphQLTypes['jsonb'] | undefined;
    _lte?: GraphQLTypes['jsonb'] | undefined;
    _neq?: GraphQLTypes['jsonb'] | undefined;
    _nin?: Array<GraphQLTypes['jsonb']> | undefined;
  };
  /** tracks the amount of keys an address holds in a given subject. updated with data from the key_tx table */
  ['link_holders']: {
    __typename: 'link_holders';
    amount: number;
    holder: GraphQLTypes['citext'];
    /** An object relationship */
    holder_cosoul?: GraphQLTypes['cosouls'] | undefined;
    /** An object relationship */
    holder_profile_public?: GraphQLTypes['profiles_public'] | undefined;
    target: GraphQLTypes['citext'];
    /** An object relationship */
    target_cosoul?: GraphQLTypes['cosouls'] | undefined;
    /** An object relationship */
    target_profile_public?: GraphQLTypes['profiles_public'] | undefined;
    updated_at: GraphQLTypes['timestamptz'];
  };
  /** aggregated selection of "link_holders" */
  ['link_holders_aggregate']: {
    __typename: 'link_holders_aggregate';
    aggregate?: GraphQLTypes['link_holders_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['link_holders']>;
  };
  ['link_holders_aggregate_bool_exp']: {
    count?: GraphQLTypes['link_holders_aggregate_bool_exp_count'] | undefined;
  };
  ['link_holders_aggregate_bool_exp_count']: {
    arguments?: Array<GraphQLTypes['link_holders_select_column']> | undefined;
    distinct?: boolean | undefined;
    filter?: GraphQLTypes['link_holders_bool_exp'] | undefined;
    predicate: GraphQLTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "link_holders" */
  ['link_holders_aggregate_fields']: {
    __typename: 'link_holders_aggregate_fields';
    avg?: GraphQLTypes['link_holders_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['link_holders_max_fields'] | undefined;
    min?: GraphQLTypes['link_holders_min_fields'] | undefined;
    stddev?: GraphQLTypes['link_holders_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['link_holders_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['link_holders_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['link_holders_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['link_holders_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['link_holders_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['link_holders_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "link_holders" */
  ['link_holders_aggregate_order_by']: {
    avg?: GraphQLTypes['link_holders_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['link_holders_max_order_by'] | undefined;
    min?: GraphQLTypes['link_holders_min_order_by'] | undefined;
    stddev?: GraphQLTypes['link_holders_stddev_order_by'] | undefined;
    stddev_pop?: GraphQLTypes['link_holders_stddev_pop_order_by'] | undefined;
    stddev_samp?: GraphQLTypes['link_holders_stddev_samp_order_by'] | undefined;
    sum?: GraphQLTypes['link_holders_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['link_holders_var_pop_order_by'] | undefined;
    var_samp?: GraphQLTypes['link_holders_var_samp_order_by'] | undefined;
    variance?: GraphQLTypes['link_holders_variance_order_by'] | undefined;
  };
  /** aggregate avg on columns */
  ['link_holders_avg_fields']: {
    __typename: 'link_holders_avg_fields';
    amount?: number | undefined;
  };
  /** order by avg() on columns of table "link_holders" */
  ['link_holders_avg_order_by']: {
    amount?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "link_holders". All fields are combined with a logical 'AND'. */
  ['link_holders_bool_exp']: {
    _and?: Array<GraphQLTypes['link_holders_bool_exp']> | undefined;
    _not?: GraphQLTypes['link_holders_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['link_holders_bool_exp']> | undefined;
    amount?: GraphQLTypes['Int_comparison_exp'] | undefined;
    holder?: GraphQLTypes['citext_comparison_exp'] | undefined;
    holder_cosoul?: GraphQLTypes['cosouls_bool_exp'] | undefined;
    holder_profile_public?:
      | GraphQLTypes['profiles_public_bool_exp']
      | undefined;
    target?: GraphQLTypes['citext_comparison_exp'] | undefined;
    target_cosoul?: GraphQLTypes['cosouls_bool_exp'] | undefined;
    target_profile_public?:
      | GraphQLTypes['profiles_public_bool_exp']
      | undefined;
    updated_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
  };
  /** aggregate max on columns */
  ['link_holders_max_fields']: {
    __typename: 'link_holders_max_fields';
    amount?: number | undefined;
    holder?: GraphQLTypes['citext'] | undefined;
    target?: GraphQLTypes['citext'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by max() on columns of table "link_holders" */
  ['link_holders_max_order_by']: {
    amount?: GraphQLTypes['order_by'] | undefined;
    holder?: GraphQLTypes['order_by'] | undefined;
    target?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate min on columns */
  ['link_holders_min_fields']: {
    __typename: 'link_holders_min_fields';
    amount?: number | undefined;
    holder?: GraphQLTypes['citext'] | undefined;
    target?: GraphQLTypes['citext'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by min() on columns of table "link_holders" */
  ['link_holders_min_order_by']: {
    amount?: GraphQLTypes['order_by'] | undefined;
    holder?: GraphQLTypes['order_by'] | undefined;
    target?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** Ordering options when selecting data from "link_holders". */
  ['link_holders_order_by']: {
    amount?: GraphQLTypes['order_by'] | undefined;
    holder?: GraphQLTypes['order_by'] | undefined;
    holder_cosoul?: GraphQLTypes['cosouls_order_by'] | undefined;
    holder_profile_public?:
      | GraphQLTypes['profiles_public_order_by']
      | undefined;
    target?: GraphQLTypes['order_by'] | undefined;
    target_cosoul?: GraphQLTypes['cosouls_order_by'] | undefined;
    target_profile_public?:
      | GraphQLTypes['profiles_public_order_by']
      | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "link_holders" */
  ['link_holders_select_column']: link_holders_select_column;
  /** aggregate stddev on columns */
  ['link_holders_stddev_fields']: {
    __typename: 'link_holders_stddev_fields';
    amount?: number | undefined;
  };
  /** order by stddev() on columns of table "link_holders" */
  ['link_holders_stddev_order_by']: {
    amount?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_pop on columns */
  ['link_holders_stddev_pop_fields']: {
    __typename: 'link_holders_stddev_pop_fields';
    amount?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "link_holders" */
  ['link_holders_stddev_pop_order_by']: {
    amount?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_samp on columns */
  ['link_holders_stddev_samp_fields']: {
    __typename: 'link_holders_stddev_samp_fields';
    amount?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "link_holders" */
  ['link_holders_stddev_samp_order_by']: {
    amount?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "link_holders" */
  ['link_holders_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['link_holders_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['link_holders_stream_cursor_value_input']: {
    amount?: number | undefined;
    holder?: GraphQLTypes['citext'] | undefined;
    target?: GraphQLTypes['citext'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** aggregate sum on columns */
  ['link_holders_sum_fields']: {
    __typename: 'link_holders_sum_fields';
    amount?: number | undefined;
  };
  /** order by sum() on columns of table "link_holders" */
  ['link_holders_sum_order_by']: {
    amount?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate var_pop on columns */
  ['link_holders_var_pop_fields']: {
    __typename: 'link_holders_var_pop_fields';
    amount?: number | undefined;
  };
  /** order by var_pop() on columns of table "link_holders" */
  ['link_holders_var_pop_order_by']: {
    amount?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate var_samp on columns */
  ['link_holders_var_samp_fields']: {
    __typename: 'link_holders_var_samp_fields';
    amount?: number | undefined;
  };
  /** order by var_samp() on columns of table "link_holders" */
  ['link_holders_var_samp_order_by']: {
    amount?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate variance on columns */
  ['link_holders_variance_fields']: {
    __typename: 'link_holders_variance_fields';
    amount?: number | undefined;
  };
  /** order by variance() on columns of table "link_holders" */
  ['link_holders_variance_order_by']: {
    amount?: GraphQLTypes['order_by'] | undefined;
  };
  /** columns and relationships of "link_tx" */
  ['link_tx']: {
    __typename: 'link_tx';
    buy: boolean;
    created_at: GraphQLTypes['timestamptz'];
    eth_amount: string;
    holder: GraphQLTypes['citext'];
    /** An object relationship */
    holder_profile?: GraphQLTypes['profiles_public'] | undefined;
    link_amount: string;
    protocol_fee_amount: string;
    supply: GraphQLTypes['numeric'];
    target: GraphQLTypes['citext'];
    target_fee_amount: string;
    /** An object relationship */
    target_profile?: GraphQLTypes['profiles_public'] | undefined;
    tx_hash: GraphQLTypes['citext'];
  };
  /** Boolean expression to filter rows from the table "link_tx". All fields are combined with a logical 'AND'. */
  ['link_tx_bool_exp']: {
    _and?: Array<GraphQLTypes['link_tx_bool_exp']> | undefined;
    _not?: GraphQLTypes['link_tx_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['link_tx_bool_exp']> | undefined;
    buy?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    created_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    eth_amount?: GraphQLTypes['String_comparison_exp'] | undefined;
    holder?: GraphQLTypes['citext_comparison_exp'] | undefined;
    holder_profile?: GraphQLTypes['profiles_public_bool_exp'] | undefined;
    link_amount?: GraphQLTypes['String_comparison_exp'] | undefined;
    protocol_fee_amount?: GraphQLTypes['String_comparison_exp'] | undefined;
    supply?: GraphQLTypes['numeric_comparison_exp'] | undefined;
    target?: GraphQLTypes['citext_comparison_exp'] | undefined;
    target_fee_amount?: GraphQLTypes['String_comparison_exp'] | undefined;
    target_profile?: GraphQLTypes['profiles_public_bool_exp'] | undefined;
    tx_hash?: GraphQLTypes['citext_comparison_exp'] | undefined;
  };
  /** Ordering options when selecting data from "link_tx". */
  ['link_tx_order_by']: {
    buy?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    eth_amount?: GraphQLTypes['order_by'] | undefined;
    holder?: GraphQLTypes['order_by'] | undefined;
    holder_profile?: GraphQLTypes['profiles_public_order_by'] | undefined;
    link_amount?: GraphQLTypes['order_by'] | undefined;
    protocol_fee_amount?: GraphQLTypes['order_by'] | undefined;
    supply?: GraphQLTypes['order_by'] | undefined;
    target?: GraphQLTypes['order_by'] | undefined;
    target_fee_amount?: GraphQLTypes['order_by'] | undefined;
    target_profile?: GraphQLTypes['profiles_public_order_by'] | undefined;
    tx_hash?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "link_tx" */
  ['link_tx_select_column']: link_tx_select_column;
  /** Streaming cursor of the table "link_tx" */
  ['link_tx_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['link_tx_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['link_tx_stream_cursor_value_input']: {
    buy?: boolean | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    eth_amount?: string | undefined;
    holder?: GraphQLTypes['citext'] | undefined;
    link_amount?: string | undefined;
    protocol_fee_amount?: string | undefined;
    supply?: GraphQLTypes['numeric'] | undefined;
    target?: GraphQLTypes['citext'] | undefined;
    target_fee_amount?: string | undefined;
    tx_hash?: GraphQLTypes['citext'] | undefined;
  };
  /** columns and relationships of "linkedin_accounts" */
  ['linkedin_accounts']: {
    __typename: 'linkedin_accounts';
    name: string;
    picture?: string | undefined;
    profile_id: GraphQLTypes['bigint'];
  };
  /** Boolean expression to filter rows from the table "linkedin_accounts". All fields are combined with a logical 'AND'. */
  ['linkedin_accounts_bool_exp']: {
    _and?: Array<GraphQLTypes['linkedin_accounts_bool_exp']> | undefined;
    _not?: GraphQLTypes['linkedin_accounts_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['linkedin_accounts_bool_exp']> | undefined;
    name?: GraphQLTypes['String_comparison_exp'] | undefined;
    picture?: GraphQLTypes['String_comparison_exp'] | undefined;
    profile_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
  };
  /** response of any mutation on the table "linkedin_accounts" */
  ['linkedin_accounts_mutation_response']: {
    __typename: 'linkedin_accounts_mutation_response';
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['linkedin_accounts']>;
  };
  /** Ordering options when selecting data from "linkedin_accounts". */
  ['linkedin_accounts_order_by']: {
    name?: GraphQLTypes['order_by'] | undefined;
    picture?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "linkedin_accounts" */
  ['linkedin_accounts_select_column']: linkedin_accounts_select_column;
  /** Streaming cursor of the table "linkedin_accounts" */
  ['linkedin_accounts_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['linkedin_accounts_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['linkedin_accounts_stream_cursor_value_input']: {
    name?: string | undefined;
    picture?: string | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** columns and relationships of "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts']: {
    __typename: 'locked_token_distribution_gifts';
    earnings: GraphQLTypes['numeric'];
    id: GraphQLTypes['bigint'];
    /** An object relationship */
    locked_token_distribution: GraphQLTypes['locked_token_distributions'];
    locked_token_distribution_id: GraphQLTypes['bigint'];
    /** An object relationship */
    profile: GraphQLTypes['profiles'];
    profile_id: GraphQLTypes['bigint'];
  };
  /** order by aggregate values of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_aggregate_order_by']: {
    avg?:
      | GraphQLTypes['locked_token_distribution_gifts_avg_order_by']
      | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?:
      | GraphQLTypes['locked_token_distribution_gifts_max_order_by']
      | undefined;
    min?:
      | GraphQLTypes['locked_token_distribution_gifts_min_order_by']
      | undefined;
    stddev?:
      | GraphQLTypes['locked_token_distribution_gifts_stddev_order_by']
      | undefined;
    stddev_pop?:
      | GraphQLTypes['locked_token_distribution_gifts_stddev_pop_order_by']
      | undefined;
    stddev_samp?:
      | GraphQLTypes['locked_token_distribution_gifts_stddev_samp_order_by']
      | undefined;
    sum?:
      | GraphQLTypes['locked_token_distribution_gifts_sum_order_by']
      | undefined;
    var_pop?:
      | GraphQLTypes['locked_token_distribution_gifts_var_pop_order_by']
      | undefined;
    var_samp?:
      | GraphQLTypes['locked_token_distribution_gifts_var_samp_order_by']
      | undefined;
    variance?:
      | GraphQLTypes['locked_token_distribution_gifts_variance_order_by']
      | undefined;
  };
  /** input type for inserting array relation for remote table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_arr_rel_insert_input']: {
    data: Array<GraphQLTypes['locked_token_distribution_gifts_insert_input']>;
    /** upsert condition */
    on_conflict?:
      | GraphQLTypes['locked_token_distribution_gifts_on_conflict']
      | undefined;
  };
  /** order by avg() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_avg_order_by']: {
    earnings?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    locked_token_distribution_id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "locked_token_distribution_gifts". All fields are combined with a logical 'AND'. */
  ['locked_token_distribution_gifts_bool_exp']: {
    _and?:
      | Array<GraphQLTypes['locked_token_distribution_gifts_bool_exp']>
      | undefined;
    _not?: GraphQLTypes['locked_token_distribution_gifts_bool_exp'] | undefined;
    _or?:
      | Array<GraphQLTypes['locked_token_distribution_gifts_bool_exp']>
      | undefined;
    earnings?: GraphQLTypes['numeric_comparison_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    locked_token_distribution?:
      | GraphQLTypes['locked_token_distributions_bool_exp']
      | undefined;
    locked_token_distribution_id?:
      | GraphQLTypes['bigint_comparison_exp']
      | undefined;
    profile?: GraphQLTypes['profiles_bool_exp'] | undefined;
    profile_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
  };
  /** unique or primary key constraints on table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_constraint']: locked_token_distribution_gifts_constraint;
  /** input type for inserting data into table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_insert_input']: {
    earnings?: GraphQLTypes['numeric'] | undefined;
    locked_token_distribution?:
      | GraphQLTypes['locked_token_distributions_obj_rel_insert_input']
      | undefined;
    locked_token_distribution_id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by max() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_max_order_by']: {
    earnings?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    locked_token_distribution_id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by min() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_min_order_by']: {
    earnings?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    locked_token_distribution_id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** response of any mutation on the table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_mutation_response']: {
    __typename: 'locked_token_distribution_gifts_mutation_response';
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['locked_token_distribution_gifts']>;
  };
  /** on_conflict condition type for table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_on_conflict']: {
    constraint: GraphQLTypes['locked_token_distribution_gifts_constraint'];
    update_columns: Array<
      GraphQLTypes['locked_token_distribution_gifts_update_column']
    >;
    where?:
      | GraphQLTypes['locked_token_distribution_gifts_bool_exp']
      | undefined;
  };
  /** Ordering options when selecting data from "locked_token_distribution_gifts". */
  ['locked_token_distribution_gifts_order_by']: {
    earnings?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    locked_token_distribution?:
      | GraphQLTypes['locked_token_distributions_order_by']
      | undefined;
    locked_token_distribution_id?: GraphQLTypes['order_by'] | undefined;
    profile?: GraphQLTypes['profiles_order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_select_column']: locked_token_distribution_gifts_select_column;
  /** order by stddev() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_stddev_order_by']: {
    earnings?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    locked_token_distribution_id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_pop() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_stddev_pop_order_by']: {
    earnings?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    locked_token_distribution_id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_samp() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_stddev_samp_order_by']: {
    earnings?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    locked_token_distribution_id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['locked_token_distribution_gifts_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['locked_token_distribution_gifts_stream_cursor_value_input']: {
    earnings?: GraphQLTypes['numeric'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    locked_token_distribution_id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by sum() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_sum_order_by']: {
    earnings?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    locked_token_distribution_id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** placeholder for update columns of table "locked_token_distribution_gifts" (current role has no relevant permissions) */
  ['locked_token_distribution_gifts_update_column']: locked_token_distribution_gifts_update_column;
  /** order by var_pop() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_var_pop_order_by']: {
    earnings?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    locked_token_distribution_id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by var_samp() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_var_samp_order_by']: {
    earnings?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    locked_token_distribution_id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by variance() on columns of table "locked_token_distribution_gifts" */
  ['locked_token_distribution_gifts_variance_order_by']: {
    earnings?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    locked_token_distribution_id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** columns and relationships of "locked_token_distributions" */
  ['locked_token_distributions']: {
    __typename: 'locked_token_distributions';
    chain_id: number;
    distributed_by: GraphQLTypes['bigint'];
    /** An object relationship */
    epoch: GraphQLTypes['epochs'];
    epoch_id: GraphQLTypes['bigint'];
    gift_amount: GraphQLTypes['numeric'];
    id: GraphQLTypes['bigint'];
    /** An array relationship */
    locked_token_distribution_gifts: Array<
      GraphQLTypes['locked_token_distribution_gifts']
    >;
    /** An object relationship */
    profile: GraphQLTypes['profiles'];
    token_contract_address?: string | undefined;
    token_decimals: number;
    token_symbol?: string | undefined;
    tx_hash?: string | undefined;
  };
  /** Boolean expression to filter rows from the table "locked_token_distributions". All fields are combined with a logical 'AND'. */
  ['locked_token_distributions_bool_exp']: {
    _and?:
      | Array<GraphQLTypes['locked_token_distributions_bool_exp']>
      | undefined;
    _not?: GraphQLTypes['locked_token_distributions_bool_exp'] | undefined;
    _or?:
      | Array<GraphQLTypes['locked_token_distributions_bool_exp']>
      | undefined;
    chain_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    distributed_by?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    epoch?: GraphQLTypes['epochs_bool_exp'] | undefined;
    epoch_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    gift_amount?: GraphQLTypes['numeric_comparison_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    locked_token_distribution_gifts?:
      | GraphQLTypes['locked_token_distribution_gifts_bool_exp']
      | undefined;
    profile?: GraphQLTypes['profiles_bool_exp'] | undefined;
    token_contract_address?: GraphQLTypes['String_comparison_exp'] | undefined;
    token_decimals?: GraphQLTypes['Int_comparison_exp'] | undefined;
    token_symbol?: GraphQLTypes['String_comparison_exp'] | undefined;
    tx_hash?: GraphQLTypes['String_comparison_exp'] | undefined;
  };
  /** unique or primary key constraints on table "locked_token_distributions" */
  ['locked_token_distributions_constraint']: locked_token_distributions_constraint;
  /** input type for inserting data into table "locked_token_distributions" */
  ['locked_token_distributions_insert_input']: {
    chain_id?: number | undefined;
    epoch_id?: GraphQLTypes['bigint'] | undefined;
    gift_amount?: GraphQLTypes['numeric'] | undefined;
    locked_token_distribution_gifts?:
      | GraphQLTypes['locked_token_distribution_gifts_arr_rel_insert_input']
      | undefined;
    token_contract_address?: string | undefined;
    token_decimals?: number | undefined;
    token_symbol?: string | undefined;
    tx_hash?: string | undefined;
  };
  /** response of any mutation on the table "locked_token_distributions" */
  ['locked_token_distributions_mutation_response']: {
    __typename: 'locked_token_distributions_mutation_response';
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['locked_token_distributions']>;
  };
  /** input type for inserting object relation for remote table "locked_token_distributions" */
  ['locked_token_distributions_obj_rel_insert_input']: {
    data: GraphQLTypes['locked_token_distributions_insert_input'];
    /** upsert condition */
    on_conflict?:
      | GraphQLTypes['locked_token_distributions_on_conflict']
      | undefined;
  };
  /** on_conflict condition type for table "locked_token_distributions" */
  ['locked_token_distributions_on_conflict']: {
    constraint: GraphQLTypes['locked_token_distributions_constraint'];
    update_columns: Array<
      GraphQLTypes['locked_token_distributions_update_column']
    >;
    where?: GraphQLTypes['locked_token_distributions_bool_exp'] | undefined;
  };
  /** Ordering options when selecting data from "locked_token_distributions". */
  ['locked_token_distributions_order_by']: {
    chain_id?: GraphQLTypes['order_by'] | undefined;
    distributed_by?: GraphQLTypes['order_by'] | undefined;
    epoch?: GraphQLTypes['epochs_order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    gift_amount?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    locked_token_distribution_gifts_aggregate?:
      | GraphQLTypes['locked_token_distribution_gifts_aggregate_order_by']
      | undefined;
    profile?: GraphQLTypes['profiles_order_by'] | undefined;
    token_contract_address?: GraphQLTypes['order_by'] | undefined;
    token_decimals?: GraphQLTypes['order_by'] | undefined;
    token_symbol?: GraphQLTypes['order_by'] | undefined;
    tx_hash?: GraphQLTypes['order_by'] | undefined;
  };
  /** primary key columns input for table: locked_token_distributions */
  ['locked_token_distributions_pk_columns_input']: {
    id: GraphQLTypes['bigint'];
  };
  /** select columns of table "locked_token_distributions" */
  ['locked_token_distributions_select_column']: locked_token_distributions_select_column;
  /** input type for updating data in table "locked_token_distributions" */
  ['locked_token_distributions_set_input']: {
    tx_hash?: string | undefined;
  };
  /** Streaming cursor of the table "locked_token_distributions" */
  ['locked_token_distributions_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['locked_token_distributions_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['locked_token_distributions_stream_cursor_value_input']: {
    chain_id?: number | undefined;
    distributed_by?: GraphQLTypes['bigint'] | undefined;
    epoch_id?: GraphQLTypes['bigint'] | undefined;
    gift_amount?: GraphQLTypes['numeric'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    token_contract_address?: string | undefined;
    token_decimals?: number | undefined;
    token_symbol?: string | undefined;
    tx_hash?: string | undefined;
  };
  /** update columns of table "locked_token_distributions" */
  ['locked_token_distributions_update_column']: locked_token_distributions_update_column;
  ['locked_token_distributions_updates']: {
    /** sets the columns of the filtered rows to the given values */
    _set?: GraphQLTypes['locked_token_distributions_set_input'] | undefined;
    /** filter the rows which have to be updated */
    where: GraphQLTypes['locked_token_distributions_bool_exp'];
  };
  /** columns and relationships of "member_circle_pgives" */
  ['member_circle_pgives']: {
    __typename: 'member_circle_pgives';
    /** An object relationship */
    circle?: GraphQLTypes['circles'] | undefined;
    circle_id?: number | undefined;
    epochs?: GraphQLTypes['bigint'] | undefined;
    pgive?: GraphQLTypes['numeric'] | undefined;
    /** An object relationship */
    user?: GraphQLTypes['users'] | undefined;
    user_id?: number | undefined;
  };
  /** Boolean expression to filter rows from the table "member_circle_pgives". All fields are combined with a logical 'AND'. */
  ['member_circle_pgives_bool_exp']: {
    _and?: Array<GraphQLTypes['member_circle_pgives_bool_exp']> | undefined;
    _not?: GraphQLTypes['member_circle_pgives_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['member_circle_pgives_bool_exp']> | undefined;
    circle?: GraphQLTypes['circles_bool_exp'] | undefined;
    circle_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    epochs?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    pgive?: GraphQLTypes['numeric_comparison_exp'] | undefined;
    user?: GraphQLTypes['users_bool_exp'] | undefined;
    user_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
  };
  /** Ordering options when selecting data from "member_circle_pgives". */
  ['member_circle_pgives_order_by']: {
    circle?: GraphQLTypes['circles_order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epochs?: GraphQLTypes['order_by'] | undefined;
    pgive?: GraphQLTypes['order_by'] | undefined;
    user?: GraphQLTypes['users_order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "member_circle_pgives" */
  ['member_circle_pgives_select_column']: member_circle_pgives_select_column;
  /** Streaming cursor of the table "member_circle_pgives" */
  ['member_circle_pgives_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['member_circle_pgives_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['member_circle_pgives_stream_cursor_value_input']: {
    circle_id?: number | undefined;
    epochs?: GraphQLTypes['bigint'] | undefined;
    pgive?: GraphQLTypes['numeric'] | undefined;
    user_id?: number | undefined;
  };
  /** member allocated pgives per epoch */
  ['member_epoch_pgives']: {
    __typename: 'member_epoch_pgives';
    /** An object relationship */
    circle?: GraphQLTypes['circles'] | undefined;
    circle_id?: number | undefined;
    created_at: GraphQLTypes['timestamptz'];
    /** An object relationship */
    epoch: GraphQLTypes['epochs'];
    epoch_id: number;
    gives_received: number;
    id: number;
    normalized_pgive: GraphQLTypes['numeric'];
    opt_out_bonus: GraphQLTypes['numeric'];
    /** An object relationship */
    organization?: GraphQLTypes['organizations'] | undefined;
    organization_id?: number | undefined;
    pgive: GraphQLTypes['numeric'];
    /** An object relationship */
    user: GraphQLTypes['users'];
    user_id: number;
  };
  /** aggregated selection of "member_epoch_pgives" */
  ['member_epoch_pgives_aggregate']: {
    __typename: 'member_epoch_pgives_aggregate';
    aggregate?:
      | GraphQLTypes['member_epoch_pgives_aggregate_fields']
      | undefined;
    nodes: Array<GraphQLTypes['member_epoch_pgives']>;
  };
  ['member_epoch_pgives_aggregate_bool_exp']: {
    count?:
      | GraphQLTypes['member_epoch_pgives_aggregate_bool_exp_count']
      | undefined;
  };
  ['member_epoch_pgives_aggregate_bool_exp_count']: {
    arguments?:
      | Array<GraphQLTypes['member_epoch_pgives_select_column']>
      | undefined;
    distinct?: boolean | undefined;
    filter?: GraphQLTypes['member_epoch_pgives_bool_exp'] | undefined;
    predicate: GraphQLTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "member_epoch_pgives" */
  ['member_epoch_pgives_aggregate_fields']: {
    __typename: 'member_epoch_pgives_aggregate_fields';
    avg?: GraphQLTypes['member_epoch_pgives_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['member_epoch_pgives_max_fields'] | undefined;
    min?: GraphQLTypes['member_epoch_pgives_min_fields'] | undefined;
    stddev?: GraphQLTypes['member_epoch_pgives_stddev_fields'] | undefined;
    stddev_pop?:
      | GraphQLTypes['member_epoch_pgives_stddev_pop_fields']
      | undefined;
    stddev_samp?:
      | GraphQLTypes['member_epoch_pgives_stddev_samp_fields']
      | undefined;
    sum?: GraphQLTypes['member_epoch_pgives_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['member_epoch_pgives_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['member_epoch_pgives_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['member_epoch_pgives_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "member_epoch_pgives" */
  ['member_epoch_pgives_aggregate_order_by']: {
    avg?: GraphQLTypes['member_epoch_pgives_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['member_epoch_pgives_max_order_by'] | undefined;
    min?: GraphQLTypes['member_epoch_pgives_min_order_by'] | undefined;
    stddev?: GraphQLTypes['member_epoch_pgives_stddev_order_by'] | undefined;
    stddev_pop?:
      | GraphQLTypes['member_epoch_pgives_stddev_pop_order_by']
      | undefined;
    stddev_samp?:
      | GraphQLTypes['member_epoch_pgives_stddev_samp_order_by']
      | undefined;
    sum?: GraphQLTypes['member_epoch_pgives_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['member_epoch_pgives_var_pop_order_by'] | undefined;
    var_samp?:
      | GraphQLTypes['member_epoch_pgives_var_samp_order_by']
      | undefined;
    variance?:
      | GraphQLTypes['member_epoch_pgives_variance_order_by']
      | undefined;
  };
  /** aggregate avg on columns */
  ['member_epoch_pgives_avg_fields']: {
    __typename: 'member_epoch_pgives_avg_fields';
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    gives_received?: number | undefined;
    id?: number | undefined;
    normalized_pgive?: number | undefined;
    opt_out_bonus?: number | undefined;
    organization_id?: number | undefined;
    pgive?: number | undefined;
    user_id?: number | undefined;
  };
  /** order by avg() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_avg_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    gives_received?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    normalized_pgive?: GraphQLTypes['order_by'] | undefined;
    opt_out_bonus?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    pgive?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "member_epoch_pgives". All fields are combined with a logical 'AND'. */
  ['member_epoch_pgives_bool_exp']: {
    _and?: Array<GraphQLTypes['member_epoch_pgives_bool_exp']> | undefined;
    _not?: GraphQLTypes['member_epoch_pgives_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['member_epoch_pgives_bool_exp']> | undefined;
    circle?: GraphQLTypes['circles_bool_exp'] | undefined;
    circle_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    created_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    epoch?: GraphQLTypes['epochs_bool_exp'] | undefined;
    epoch_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    gives_received?: GraphQLTypes['Int_comparison_exp'] | undefined;
    id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    normalized_pgive?: GraphQLTypes['numeric_comparison_exp'] | undefined;
    opt_out_bonus?: GraphQLTypes['numeric_comparison_exp'] | undefined;
    organization?: GraphQLTypes['organizations_bool_exp'] | undefined;
    organization_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    pgive?: GraphQLTypes['numeric_comparison_exp'] | undefined;
    user?: GraphQLTypes['users_bool_exp'] | undefined;
    user_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
  };
  /** aggregate max on columns */
  ['member_epoch_pgives_max_fields']: {
    __typename: 'member_epoch_pgives_max_fields';
    circle_id?: number | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    epoch_id?: number | undefined;
    gives_received?: number | undefined;
    id?: number | undefined;
    normalized_pgive?: GraphQLTypes['numeric'] | undefined;
    opt_out_bonus?: GraphQLTypes['numeric'] | undefined;
    organization_id?: number | undefined;
    pgive?: GraphQLTypes['numeric'] | undefined;
    user_id?: number | undefined;
  };
  /** order by max() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_max_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    gives_received?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    normalized_pgive?: GraphQLTypes['order_by'] | undefined;
    opt_out_bonus?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    pgive?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate min on columns */
  ['member_epoch_pgives_min_fields']: {
    __typename: 'member_epoch_pgives_min_fields';
    circle_id?: number | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    epoch_id?: number | undefined;
    gives_received?: number | undefined;
    id?: number | undefined;
    normalized_pgive?: GraphQLTypes['numeric'] | undefined;
    opt_out_bonus?: GraphQLTypes['numeric'] | undefined;
    organization_id?: number | undefined;
    pgive?: GraphQLTypes['numeric'] | undefined;
    user_id?: number | undefined;
  };
  /** order by min() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_min_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    gives_received?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    normalized_pgive?: GraphQLTypes['order_by'] | undefined;
    opt_out_bonus?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    pgive?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Ordering options when selecting data from "member_epoch_pgives". */
  ['member_epoch_pgives_order_by']: {
    circle?: GraphQLTypes['circles_order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    epoch?: GraphQLTypes['epochs_order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    gives_received?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    normalized_pgive?: GraphQLTypes['order_by'] | undefined;
    opt_out_bonus?: GraphQLTypes['order_by'] | undefined;
    organization?: GraphQLTypes['organizations_order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    pgive?: GraphQLTypes['order_by'] | undefined;
    user?: GraphQLTypes['users_order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_select_column']: member_epoch_pgives_select_column;
  /** aggregate stddev on columns */
  ['member_epoch_pgives_stddev_fields']: {
    __typename: 'member_epoch_pgives_stddev_fields';
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    gives_received?: number | undefined;
    id?: number | undefined;
    normalized_pgive?: number | undefined;
    opt_out_bonus?: number | undefined;
    organization_id?: number | undefined;
    pgive?: number | undefined;
    user_id?: number | undefined;
  };
  /** order by stddev() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_stddev_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    gives_received?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    normalized_pgive?: GraphQLTypes['order_by'] | undefined;
    opt_out_bonus?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    pgive?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_pop on columns */
  ['member_epoch_pgives_stddev_pop_fields']: {
    __typename: 'member_epoch_pgives_stddev_pop_fields';
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    gives_received?: number | undefined;
    id?: number | undefined;
    normalized_pgive?: number | undefined;
    opt_out_bonus?: number | undefined;
    organization_id?: number | undefined;
    pgive?: number | undefined;
    user_id?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_stddev_pop_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    gives_received?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    normalized_pgive?: GraphQLTypes['order_by'] | undefined;
    opt_out_bonus?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    pgive?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_samp on columns */
  ['member_epoch_pgives_stddev_samp_fields']: {
    __typename: 'member_epoch_pgives_stddev_samp_fields';
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    gives_received?: number | undefined;
    id?: number | undefined;
    normalized_pgive?: number | undefined;
    opt_out_bonus?: number | undefined;
    organization_id?: number | undefined;
    pgive?: number | undefined;
    user_id?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_stddev_samp_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    gives_received?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    normalized_pgive?: GraphQLTypes['order_by'] | undefined;
    opt_out_bonus?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    pgive?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "member_epoch_pgives" */
  ['member_epoch_pgives_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['member_epoch_pgives_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['member_epoch_pgives_stream_cursor_value_input']: {
    circle_id?: number | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    epoch_id?: number | undefined;
    gives_received?: number | undefined;
    id?: number | undefined;
    normalized_pgive?: GraphQLTypes['numeric'] | undefined;
    opt_out_bonus?: GraphQLTypes['numeric'] | undefined;
    organization_id?: number | undefined;
    pgive?: GraphQLTypes['numeric'] | undefined;
    user_id?: number | undefined;
  };
  /** aggregate sum on columns */
  ['member_epoch_pgives_sum_fields']: {
    __typename: 'member_epoch_pgives_sum_fields';
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    gives_received?: number | undefined;
    id?: number | undefined;
    normalized_pgive?: GraphQLTypes['numeric'] | undefined;
    opt_out_bonus?: GraphQLTypes['numeric'] | undefined;
    organization_id?: number | undefined;
    pgive?: GraphQLTypes['numeric'] | undefined;
    user_id?: number | undefined;
  };
  /** order by sum() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_sum_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    gives_received?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    normalized_pgive?: GraphQLTypes['order_by'] | undefined;
    opt_out_bonus?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    pgive?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate var_pop on columns */
  ['member_epoch_pgives_var_pop_fields']: {
    __typename: 'member_epoch_pgives_var_pop_fields';
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    gives_received?: number | undefined;
    id?: number | undefined;
    normalized_pgive?: number | undefined;
    opt_out_bonus?: number | undefined;
    organization_id?: number | undefined;
    pgive?: number | undefined;
    user_id?: number | undefined;
  };
  /** order by var_pop() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_var_pop_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    gives_received?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    normalized_pgive?: GraphQLTypes['order_by'] | undefined;
    opt_out_bonus?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    pgive?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate var_samp on columns */
  ['member_epoch_pgives_var_samp_fields']: {
    __typename: 'member_epoch_pgives_var_samp_fields';
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    gives_received?: number | undefined;
    id?: number | undefined;
    normalized_pgive?: number | undefined;
    opt_out_bonus?: number | undefined;
    organization_id?: number | undefined;
    pgive?: number | undefined;
    user_id?: number | undefined;
  };
  /** order by var_samp() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_var_samp_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    gives_received?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    normalized_pgive?: GraphQLTypes['order_by'] | undefined;
    opt_out_bonus?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    pgive?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate variance on columns */
  ['member_epoch_pgives_variance_fields']: {
    __typename: 'member_epoch_pgives_variance_fields';
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    gives_received?: number | undefined;
    id?: number | undefined;
    normalized_pgive?: number | undefined;
    opt_out_bonus?: number | undefined;
    organization_id?: number | undefined;
    pgive?: number | undefined;
    user_id?: number | undefined;
  };
  /** order by variance() on columns of table "member_epoch_pgives" */
  ['member_epoch_pgives_variance_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    gives_received?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    normalized_pgive?: GraphQLTypes['order_by'] | undefined;
    opt_out_bonus?: GraphQLTypes['order_by'] | undefined;
    organization_id?: GraphQLTypes['order_by'] | undefined;
    pgive?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** mutation root */
  ['mutation_root']: {
    __typename: 'mutation_root';
    /** Accept Terms of Service action */
    acceptTOS?: GraphQLTypes['AcceptTOSOutput'] | undefined;
    /** adds a new (unverified) email address to a users profile */
    addEmail?: GraphQLTypes['ConfirmationResponse'] | undefined;
    /** adds a farcaster account to a users profile */
    addFarcaster?: GraphQLTypes['ConfirmationWithErrorResponse'] | undefined;
    adminUpdateUser?: GraphQLTypes['UserResponse'] | undefined;
    allocationCsv?: GraphQLTypes['AllocationCsvResponse'] | undefined;
    createCircle?: GraphQLTypes['CreateCircleResponse'] | undefined;
    createCoLinksGive?: GraphQLTypes['CreateCoLinksGiveResponse'] | undefined;
    /** create epoch using new, more flexible api */
    createEpoch?: GraphQLTypes['EpochResponse'] | undefined;
    createNominee?: GraphQLTypes['CreateNomineeResponse'] | undefined;
    createOrgMembers?:
      | Array<GraphQLTypes['OrgMemberResponse'] | undefined>
      | undefined;
    createSampleCircle?: GraphQLTypes['CreateSampleCircleResponse'] | undefined;
    createUserWithToken?: GraphQLTypes['UserResponse'] | undefined;
    createUsers?: Array<GraphQLTypes['UserResponse'] | undefined> | undefined;
    createVault?: GraphQLTypes['VaultResponse'] | undefined;
    /** Log offchain information for vault transactions */
    createVaultTx?: GraphQLTypes['LogVaultTxResponse'] | undefined;
    deleteCircle?: GraphQLTypes['ConfirmationResponse'] | undefined;
    deleteCoLinksGive?: GraphQLTypes['SuccessResponse'] | undefined;
    deleteContribution?: GraphQLTypes['ConfirmationResponse'] | undefined;
    /** delete the specified email from the current users' profile */
    deleteEmail?: GraphQLTypes['ConfirmationResponse'] | undefined;
    deleteEpoch?: GraphQLTypes['DeleteEpochResponse'] | undefined;
    deleteOrgMember?: GraphQLTypes['ConfirmationResponse'] | undefined;
    deleteUser?: GraphQLTypes['ConfirmationResponse'] | undefined;
    deleteUsers?: GraphQLTypes['DeleteUsersResponse'] | undefined;
    /** delete data from the table: "circle_api_keys" */
    delete_circle_api_keys?:
      | GraphQLTypes['circle_api_keys_mutation_response']
      | undefined;
    /** delete single row from the table: "circle_api_keys" */
    delete_circle_api_keys_by_pk?: GraphQLTypes['circle_api_keys'] | undefined;
    /** delete data from the table: "circle_integrations" */
    delete_circle_integrations?:
      | GraphQLTypes['circle_integrations_mutation_response']
      | undefined;
    /** delete single row from the table: "circle_integrations" */
    delete_circle_integrations_by_pk?:
      | GraphQLTypes['circle_integrations']
      | undefined;
    /** delete data from the table: "circle_share_tokens" */
    delete_circle_share_tokens?:
      | GraphQLTypes['circle_share_tokens_mutation_response']
      | undefined;
    /** delete single row from the table: "circle_share_tokens" */
    delete_circle_share_tokens_by_pk?:
      | GraphQLTypes['circle_share_tokens']
      | undefined;
    /** delete data from the table: "farcaster_accounts" */
    delete_farcaster_accounts?:
      | GraphQLTypes['farcaster_accounts_mutation_response']
      | undefined;
    /** delete single row from the table: "farcaster_accounts" */
    delete_farcaster_accounts_by_pk?:
      | GraphQLTypes['farcaster_accounts']
      | undefined;
    /** delete data from the table: "github_accounts" */
    delete_github_accounts?:
      | GraphQLTypes['github_accounts_mutation_response']
      | undefined;
    /** delete single row from the table: "github_accounts" */
    delete_github_accounts_by_pk?: GraphQLTypes['github_accounts'] | undefined;
    /** delete data from the table: "linkedin_accounts" */
    delete_linkedin_accounts?:
      | GraphQLTypes['linkedin_accounts_mutation_response']
      | undefined;
    /** delete single row from the table: "linkedin_accounts" */
    delete_linkedin_accounts_by_pk?:
      | GraphQLTypes['linkedin_accounts']
      | undefined;
    /** delete data from the table: "mutes" */
    delete_mutes?: GraphQLTypes['mutes_mutation_response'] | undefined;
    /** delete single row from the table: "mutes" */
    delete_mutes_by_pk?: GraphQLTypes['mutes'] | undefined;
    /** delete data from the table: "org_share_tokens" */
    delete_org_share_tokens?:
      | GraphQLTypes['org_share_tokens_mutation_response']
      | undefined;
    /** delete single row from the table: "org_share_tokens" */
    delete_org_share_tokens_by_pk?:
      | GraphQLTypes['org_share_tokens']
      | undefined;
    /** delete data from the table: "pending_vault_transactions" */
    delete_pending_vault_transactions?:
      | GraphQLTypes['pending_vault_transactions_mutation_response']
      | undefined;
    /** delete single row from the table: "pending_vault_transactions" */
    delete_pending_vault_transactions_by_pk?:
      | GraphQLTypes['pending_vault_transactions']
      | undefined;
    /** delete data from the table: "profile_skills" */
    delete_profile_skills?:
      | GraphQLTypes['profile_skills_mutation_response']
      | undefined;
    /** delete single row from the table: "profile_skills" */
    delete_profile_skills_by_pk?: GraphQLTypes['profile_skills'] | undefined;
    /** delete data from the table: "reactions" */
    delete_reactions?: GraphQLTypes['reactions_mutation_response'] | undefined;
    /** delete single row from the table: "reactions" */
    delete_reactions_by_pk?: GraphQLTypes['reactions'] | undefined;
    /** delete data from the table: "replies_reactions" */
    delete_replies_reactions?:
      | GraphQLTypes['replies_reactions_mutation_response']
      | undefined;
    /** delete single row from the table: "replies_reactions" */
    delete_replies_reactions_by_pk?:
      | GraphQLTypes['replies_reactions']
      | undefined;
    /** delete data from the table: "twitter_accounts" */
    delete_twitter_accounts?:
      | GraphQLTypes['twitter_accounts_mutation_response']
      | undefined;
    /** delete single row from the table: "twitter_accounts" */
    delete_twitter_accounts_by_pk?:
      | GraphQLTypes['twitter_accounts']
      | undefined;
    endEpoch?: GraphQLTypes['EpochResponse'] | undefined;
    /** Generates an API key for a circle */
    generateApiKey?: GraphQLTypes['GenerateApiKeyResponse'] | undefined;
    generateOneTimeUpload?: GraphQLTypes['UploadUrlResponse'] | undefined;
    /** giveCsv */
    giveCsv?: GraphQLTypes['GiveCsvResponse'] | undefined;
    /** insert data into the table: "circle_integrations" */
    insert_circle_integrations?:
      | GraphQLTypes['circle_integrations_mutation_response']
      | undefined;
    /** insert a single row into the table: "circle_integrations" */
    insert_circle_integrations_one?:
      | GraphQLTypes['circle_integrations']
      | undefined;
    /** insert data into the table: "circle_share_tokens" */
    insert_circle_share_tokens?:
      | GraphQLTypes['circle_share_tokens_mutation_response']
      | undefined;
    /** insert a single row into the table: "circle_share_tokens" */
    insert_circle_share_tokens_one?:
      | GraphQLTypes['circle_share_tokens']
      | undefined;
    /** insert data into the table: "claims" */
    insert_claims?: GraphQLTypes['claims_mutation_response'] | undefined;
    /** insert a single row into the table: "claims" */
    insert_claims_one?: GraphQLTypes['claims'] | undefined;
    /** insert data into the table: "contributions" */
    insert_contributions?:
      | GraphQLTypes['contributions_mutation_response']
      | undefined;
    /** insert a single row into the table: "contributions" */
    insert_contributions_one?: GraphQLTypes['contributions'] | undefined;
    /** insert data into the table: "distributions" */
    insert_distributions?:
      | GraphQLTypes['distributions_mutation_response']
      | undefined;
    /** insert a single row into the table: "distributions" */
    insert_distributions_one?: GraphQLTypes['distributions'] | undefined;
    /** insert data into the table: "locked_token_distribution_gifts" */
    insert_locked_token_distribution_gifts?:
      | GraphQLTypes['locked_token_distribution_gifts_mutation_response']
      | undefined;
    /** insert a single row into the table: "locked_token_distribution_gifts" */
    insert_locked_token_distribution_gifts_one?:
      | GraphQLTypes['locked_token_distribution_gifts']
      | undefined;
    /** insert data into the table: "locked_token_distributions" */
    insert_locked_token_distributions?:
      | GraphQLTypes['locked_token_distributions_mutation_response']
      | undefined;
    /** insert a single row into the table: "locked_token_distributions" */
    insert_locked_token_distributions_one?:
      | GraphQLTypes['locked_token_distributions']
      | undefined;
    /** insert data into the table: "mutes" */
    insert_mutes?: GraphQLTypes['mutes_mutation_response'] | undefined;
    /** insert a single row into the table: "mutes" */
    insert_mutes_one?: GraphQLTypes['mutes'] | undefined;
    /** insert data into the table: "org_share_tokens" */
    insert_org_share_tokens?:
      | GraphQLTypes['org_share_tokens_mutation_response']
      | undefined;
    /** insert a single row into the table: "org_share_tokens" */
    insert_org_share_tokens_one?: GraphQLTypes['org_share_tokens'] | undefined;
    /** insert data into the table: "pending_vault_transactions" */
    insert_pending_vault_transactions?:
      | GraphQLTypes['pending_vault_transactions_mutation_response']
      | undefined;
    /** insert a single row into the table: "pending_vault_transactions" */
    insert_pending_vault_transactions_one?:
      | GraphQLTypes['pending_vault_transactions']
      | undefined;
    /** insert data into the table: "profile_skills" */
    insert_profile_skills?:
      | GraphQLTypes['profile_skills_mutation_response']
      | undefined;
    /** insert a single row into the table: "profile_skills" */
    insert_profile_skills_one?: GraphQLTypes['profile_skills'] | undefined;
    /** insert data into the table: "reactions" */
    insert_reactions?: GraphQLTypes['reactions_mutation_response'] | undefined;
    /** insert a single row into the table: "reactions" */
    insert_reactions_one?: GraphQLTypes['reactions'] | undefined;
    /** insert data into the table: "replies" */
    insert_replies?: GraphQLTypes['replies_mutation_response'] | undefined;
    /** insert a single row into the table: "replies" */
    insert_replies_one?: GraphQLTypes['replies'] | undefined;
    /** insert data into the table: "replies_reactions" */
    insert_replies_reactions?:
      | GraphQLTypes['replies_reactions_mutation_response']
      | undefined;
    /** insert a single row into the table: "replies_reactions" */
    insert_replies_reactions_one?:
      | GraphQLTypes['replies_reactions']
      | undefined;
    /** insert data into the table: "skills" */
    insert_skills?: GraphQLTypes['skills_mutation_response'] | undefined;
    /** insert a single row into the table: "skills" */
    insert_skills_one?: GraphQLTypes['skills'] | undefined;
    logoutUser?: GraphQLTypes['LogoutResponse'] | undefined;
    markClaimed?: GraphQLTypes['MarkClaimedOutput'] | undefined;
    redeemInviteCode: GraphQLTypes['ConfirmationWithErrorResponse'];
    requestInviteCode: GraphQLTypes['ConfirmationWithErrorResponse'];
    restoreCoordinape?: GraphQLTypes['ConfirmationResponse'] | undefined;
    /** sets a given email as the primary email for user */
    setPrimaryEmail?: GraphQLTypes['ConfirmationResponse'] | undefined;
    /** Generate share link for Colinks activity/post */
    share?: GraphQLTypes['ShareOutput'] | undefined;
    syncCoSoul?: GraphQLTypes['SyncCoSoulOutput'] | undefined;
    /** syncLinks */
    syncLinks?: GraphQLTypes['ConfirmationResponse'] | undefined;
    updateAllocations?: GraphQLTypes['AllocationsResponse'] | undefined;
    updateCircle?: GraphQLTypes['UpdateCircleOutput'] | undefined;
    /** Update starting GIVE for all circle members */
    updateCircleStartingGive?: GraphQLTypes['ConfirmationResponse'] | undefined;
    /** users can modify contributions and update their dates. */
    updateContribution?: GraphQLTypes['UpdateContributionResponse'] | undefined;
    updateEpoch?: GraphQLTypes['EpochResponse'] | undefined;
    updateProfile?: GraphQLTypes['UpdateProfileResponse'] | undefined;
    /** updateRepScore */
    updateRepScore?: GraphQLTypes['ConfirmationResponse'] | undefined;
    updateTeammates?: GraphQLTypes['UpdateTeammatesResponse'] | undefined;
    /** Update own user */
    updateUser?: GraphQLTypes['UserResponse'] | undefined;
    /** update data of the table: "circle_integrations" */
    update_circle_integrations?:
      | GraphQLTypes['circle_integrations_mutation_response']
      | undefined;
    /** update single row of the table: "circle_integrations" */
    update_circle_integrations_by_pk?:
      | GraphQLTypes['circle_integrations']
      | undefined;
    /** update multiples rows of table: "circle_integrations" */
    update_circle_integrations_many?:
      | Array<GraphQLTypes['circle_integrations_mutation_response'] | undefined>
      | undefined;
    /** update data of the table: "claims" */
    update_claims?: GraphQLTypes['claims_mutation_response'] | undefined;
    /** update single row of the table: "claims" */
    update_claims_by_pk?: GraphQLTypes['claims'] | undefined;
    /** update multiples rows of table: "claims" */
    update_claims_many?:
      | Array<GraphQLTypes['claims_mutation_response'] | undefined>
      | undefined;
    /** update data of the table: "colinks_gives" */
    update_colinks_gives?:
      | GraphQLTypes['colinks_gives_mutation_response']
      | undefined;
    /** update single row of the table: "colinks_gives" */
    update_colinks_gives_by_pk?: GraphQLTypes['colinks_gives'] | undefined;
    /** update multiples rows of table: "colinks_gives" */
    update_colinks_gives_many?:
      | Array<GraphQLTypes['colinks_gives_mutation_response'] | undefined>
      | undefined;
    /** update data of the table: "distributions" */
    update_distributions?:
      | GraphQLTypes['distributions_mutation_response']
      | undefined;
    /** update single row of the table: "distributions" */
    update_distributions_by_pk?: GraphQLTypes['distributions'] | undefined;
    /** update multiples rows of table: "distributions" */
    update_distributions_many?:
      | Array<GraphQLTypes['distributions_mutation_response'] | undefined>
      | undefined;
    /** update data of the table: "epoches" */
    update_epochs?: GraphQLTypes['epochs_mutation_response'] | undefined;
    /** update single row of the table: "epoches" */
    update_epochs_by_pk?: GraphQLTypes['epochs'] | undefined;
    /** update multiples rows of table: "epoches" */
    update_epochs_many?:
      | Array<GraphQLTypes['epochs_mutation_response'] | undefined>
      | undefined;
    /** update data of the table: "locked_token_distributions" */
    update_locked_token_distributions?:
      | GraphQLTypes['locked_token_distributions_mutation_response']
      | undefined;
    /** update single row of the table: "locked_token_distributions" */
    update_locked_token_distributions_by_pk?:
      | GraphQLTypes['locked_token_distributions']
      | undefined;
    /** update multiples rows of table: "locked_token_distributions" */
    update_locked_token_distributions_many?:
      | Array<
          | GraphQLTypes['locked_token_distributions_mutation_response']
          | undefined
        >
      | undefined;
    /** update data of the table: "org_members" */
    update_org_members?:
      | GraphQLTypes['org_members_mutation_response']
      | undefined;
    /** update single row of the table: "org_members" */
    update_org_members_by_pk?: GraphQLTypes['org_members'] | undefined;
    /** update multiples rows of table: "org_members" */
    update_org_members_many?:
      | Array<GraphQLTypes['org_members_mutation_response'] | undefined>
      | undefined;
    /** update data of the table: "organizations" */
    update_organizations?:
      | GraphQLTypes['organizations_mutation_response']
      | undefined;
    /** update single row of the table: "organizations" */
    update_organizations_by_pk?: GraphQLTypes['organizations'] | undefined;
    /** update multiples rows of table: "organizations" */
    update_organizations_many?:
      | Array<GraphQLTypes['organizations_mutation_response'] | undefined>
      | undefined;
    /** update data of the table: "profiles" */
    update_profiles?: GraphQLTypes['profiles_mutation_response'] | undefined;
    /** update single row of the table: "profiles" */
    update_profiles_by_pk?: GraphQLTypes['profiles'] | undefined;
    /** update multiples rows of table: "profiles" */
    update_profiles_many?:
      | Array<GraphQLTypes['profiles_mutation_response'] | undefined>
      | undefined;
    /** update data of the table: "profiles_private" */
    update_profiles_private?:
      | GraphQLTypes['profiles_private_mutation_response']
      | undefined;
    /** update multiples rows of table: "profiles_private" */
    update_profiles_private_many?:
      | Array<GraphQLTypes['profiles_private_mutation_response'] | undefined>
      | undefined;
    /** update data of the table: "replies" */
    update_replies?: GraphQLTypes['replies_mutation_response'] | undefined;
    /** update single row of the table: "replies" */
    update_replies_by_pk?: GraphQLTypes['replies'] | undefined;
    /** update multiples rows of table: "replies" */
    update_replies_many?:
      | Array<GraphQLTypes['replies_mutation_response'] | undefined>
      | undefined;
    uploadCircleLogo?: GraphQLTypes['UpdateCircleResponse'] | undefined;
    uploadOrgLogo?: GraphQLTypes['UpdateOrgResponse'] | undefined;
    uploadProfileAvatar?: GraphQLTypes['UpdateProfileResponse'] | undefined;
    uploadProfileBackground?: GraphQLTypes['UpdateProfileResponse'] | undefined;
    vouch?: GraphQLTypes['VouchOutput'] | undefined;
  };
  /** Table of one profile muting another profile */
  ['mutes']: {
    __typename: 'mutes';
    created_at: GraphQLTypes['timestamptz'];
    /** An object relationship */
    profile?: GraphQLTypes['profiles_public'] | undefined;
    profile_id: GraphQLTypes['bigint'];
    /** An object relationship */
    target_profile?: GraphQLTypes['profiles_public'] | undefined;
    target_profile_id: GraphQLTypes['bigint'];
  };
  /** order by aggregate values of table "mutes" */
  ['mutes_aggregate_order_by']: {
    avg?: GraphQLTypes['mutes_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['mutes_max_order_by'] | undefined;
    min?: GraphQLTypes['mutes_min_order_by'] | undefined;
    stddev?: GraphQLTypes['mutes_stddev_order_by'] | undefined;
    stddev_pop?: GraphQLTypes['mutes_stddev_pop_order_by'] | undefined;
    stddev_samp?: GraphQLTypes['mutes_stddev_samp_order_by'] | undefined;
    sum?: GraphQLTypes['mutes_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['mutes_var_pop_order_by'] | undefined;
    var_samp?: GraphQLTypes['mutes_var_samp_order_by'] | undefined;
    variance?: GraphQLTypes['mutes_variance_order_by'] | undefined;
  };
  /** order by avg() on columns of table "mutes" */
  ['mutes_avg_order_by']: {
    profile_id?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "mutes". All fields are combined with a logical 'AND'. */
  ['mutes_bool_exp']: {
    _and?: Array<GraphQLTypes['mutes_bool_exp']> | undefined;
    _not?: GraphQLTypes['mutes_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['mutes_bool_exp']> | undefined;
    created_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    profile?: GraphQLTypes['profiles_public_bool_exp'] | undefined;
    profile_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    target_profile?: GraphQLTypes['profiles_public_bool_exp'] | undefined;
    target_profile_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
  };
  /** unique or primary key constraints on table "mutes" */
  ['mutes_constraint']: mutes_constraint;
  /** input type for inserting data into table "mutes" */
  ['mutes_insert_input']: {
    profile_id?: GraphQLTypes['bigint'] | undefined;
    target_profile_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by max() on columns of table "mutes" */
  ['mutes_max_order_by']: {
    created_at?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by min() on columns of table "mutes" */
  ['mutes_min_order_by']: {
    created_at?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** response of any mutation on the table "mutes" */
  ['mutes_mutation_response']: {
    __typename: 'mutes_mutation_response';
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['mutes']>;
  };
  /** on_conflict condition type for table "mutes" */
  ['mutes_on_conflict']: {
    constraint: GraphQLTypes['mutes_constraint'];
    update_columns: Array<GraphQLTypes['mutes_update_column']>;
    where?: GraphQLTypes['mutes_bool_exp'] | undefined;
  };
  /** Ordering options when selecting data from "mutes". */
  ['mutes_order_by']: {
    created_at?: GraphQLTypes['order_by'] | undefined;
    profile?: GraphQLTypes['profiles_public_order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    target_profile?: GraphQLTypes['profiles_public_order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "mutes" */
  ['mutes_select_column']: mutes_select_column;
  /** order by stddev() on columns of table "mutes" */
  ['mutes_stddev_order_by']: {
    profile_id?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_pop() on columns of table "mutes" */
  ['mutes_stddev_pop_order_by']: {
    profile_id?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_samp() on columns of table "mutes" */
  ['mutes_stddev_samp_order_by']: {
    profile_id?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "mutes" */
  ['mutes_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['mutes_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['mutes_stream_cursor_value_input']: {
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    target_profile_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by sum() on columns of table "mutes" */
  ['mutes_sum_order_by']: {
    profile_id?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** placeholder for update columns of table "mutes" (current role has no relevant permissions) */
  ['mutes_update_column']: mutes_update_column;
  /** order by var_pop() on columns of table "mutes" */
  ['mutes_var_pop_order_by']: {
    profile_id?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by var_samp() on columns of table "mutes" */
  ['mutes_var_samp_order_by']: {
    profile_id?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by variance() on columns of table "mutes" */
  ['mutes_variance_order_by']: {
    profile_id?: GraphQLTypes['order_by'] | undefined;
    target_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** columns and relationships of "nft_collections" */
  ['nft_collections']: {
    __typename: 'nft_collections';
    address: GraphQLTypes['citext'];
    banner_image_url?: string | undefined;
    external_url?: string | undefined;
    name: string;
    slug?: string | undefined;
  };
  /** Boolean expression to filter rows from the table "nft_collections". All fields are combined with a logical 'AND'. */
  ['nft_collections_bool_exp']: {
    _and?: Array<GraphQLTypes['nft_collections_bool_exp']> | undefined;
    _not?: GraphQLTypes['nft_collections_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['nft_collections_bool_exp']> | undefined;
    address?: GraphQLTypes['citext_comparison_exp'] | undefined;
    banner_image_url?: GraphQLTypes['String_comparison_exp'] | undefined;
    external_url?: GraphQLTypes['String_comparison_exp'] | undefined;
    name?: GraphQLTypes['String_comparison_exp'] | undefined;
    slug?: GraphQLTypes['String_comparison_exp'] | undefined;
  };
  /** Ordering options when selecting data from "nft_collections". */
  ['nft_collections_order_by']: {
    address?: GraphQLTypes['order_by'] | undefined;
    banner_image_url?: GraphQLTypes['order_by'] | undefined;
    external_url?: GraphQLTypes['order_by'] | undefined;
    name?: GraphQLTypes['order_by'] | undefined;
    slug?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "nft_collections" */
  ['nft_collections_select_column']: nft_collections_select_column;
  /** Streaming cursor of the table "nft_collections" */
  ['nft_collections_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['nft_collections_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['nft_collections_stream_cursor_value_input']: {
    address?: GraphQLTypes['citext'] | undefined;
    banner_image_url?: string | undefined;
    external_url?: string | undefined;
    name?: string | undefined;
    slug?: string | undefined;
  };
  /** columns and relationships of "nft_holdings" */
  ['nft_holdings']: {
    __typename: 'nft_holdings';
    address: GraphQLTypes['citext'];
    /** An object relationship */
    collection: GraphQLTypes['nft_collections'];
    contract: GraphQLTypes['citext'];
    image_url?: string | undefined;
    name?: string | undefined;
    /** An object relationship */
    profile?: GraphQLTypes['profiles_public'] | undefined;
    token_id: string;
  };
  /** Boolean expression to filter rows from the table "nft_holdings". All fields are combined with a logical 'AND'. */
  ['nft_holdings_bool_exp']: {
    _and?: Array<GraphQLTypes['nft_holdings_bool_exp']> | undefined;
    _not?: GraphQLTypes['nft_holdings_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['nft_holdings_bool_exp']> | undefined;
    address?: GraphQLTypes['citext_comparison_exp'] | undefined;
    collection?: GraphQLTypes['nft_collections_bool_exp'] | undefined;
    contract?: GraphQLTypes['citext_comparison_exp'] | undefined;
    image_url?: GraphQLTypes['String_comparison_exp'] | undefined;
    name?: GraphQLTypes['String_comparison_exp'] | undefined;
    profile?: GraphQLTypes['profiles_public_bool_exp'] | undefined;
    token_id?: GraphQLTypes['String_comparison_exp'] | undefined;
  };
  /** Ordering options when selecting data from "nft_holdings". */
  ['nft_holdings_order_by']: {
    address?: GraphQLTypes['order_by'] | undefined;
    collection?: GraphQLTypes['nft_collections_order_by'] | undefined;
    contract?: GraphQLTypes['order_by'] | undefined;
    image_url?: GraphQLTypes['order_by'] | undefined;
    name?: GraphQLTypes['order_by'] | undefined;
    profile?: GraphQLTypes['profiles_public_order_by'] | undefined;
    token_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "nft_holdings" */
  ['nft_holdings_select_column']: nft_holdings_select_column;
  /** Streaming cursor of the table "nft_holdings" */
  ['nft_holdings_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['nft_holdings_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['nft_holdings_stream_cursor_value_input']: {
    address?: GraphQLTypes['citext'] | undefined;
    contract?: GraphQLTypes['citext'] | undefined;
    image_url?: string | undefined;
    name?: string | undefined;
    token_id?: string | undefined;
  };
  /** columns and relationships of "nominees" */
  ['nominees']: {
    __typename: 'nominees';
    address: string;
    /** An object relationship */
    circle?: GraphQLTypes['circles'] | undefined;
    circle_id: number;
    created_at: GraphQLTypes['timestamp'];
    description: string;
    ended: boolean;
    expiry_date: GraphQLTypes['timestamp'];
    id: GraphQLTypes['bigint'];
    nominated_by_user_id: number;
    nominated_date: GraphQLTypes['date'];
    /** An array relationship */
    nominations: Array<GraphQLTypes['vouches']>;
    /** An object relationship */
    nominator?: GraphQLTypes['users'] | undefined;
    /** An object relationship */
    profile?: GraphQLTypes['profiles'] | undefined;
    updated_at: GraphQLTypes['timestamp'];
    /** An object relationship */
    user?: GraphQLTypes['users'] | undefined;
    user_id?: number | undefined;
    vouches_required: number;
  };
  /** aggregated selection of "nominees" */
  ['nominees_aggregate']: {
    __typename: 'nominees_aggregate';
    aggregate?: GraphQLTypes['nominees_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['nominees']>;
  };
  ['nominees_aggregate_bool_exp']: {
    bool_and?: GraphQLTypes['nominees_aggregate_bool_exp_bool_and'] | undefined;
    bool_or?: GraphQLTypes['nominees_aggregate_bool_exp_bool_or'] | undefined;
    count?: GraphQLTypes['nominees_aggregate_bool_exp_count'] | undefined;
  };
  ['nominees_aggregate_bool_exp_bool_and']: {
    arguments: GraphQLTypes['nominees_select_column_nominees_aggregate_bool_exp_bool_and_arguments_columns'];
    distinct?: boolean | undefined;
    filter?: GraphQLTypes['nominees_bool_exp'] | undefined;
    predicate: GraphQLTypes['Boolean_comparison_exp'];
  };
  ['nominees_aggregate_bool_exp_bool_or']: {
    arguments: GraphQLTypes['nominees_select_column_nominees_aggregate_bool_exp_bool_or_arguments_columns'];
    distinct?: boolean | undefined;
    filter?: GraphQLTypes['nominees_bool_exp'] | undefined;
    predicate: GraphQLTypes['Boolean_comparison_exp'];
  };
  ['nominees_aggregate_bool_exp_count']: {
    arguments?: Array<GraphQLTypes['nominees_select_column']> | undefined;
    distinct?: boolean | undefined;
    filter?: GraphQLTypes['nominees_bool_exp'] | undefined;
    predicate: GraphQLTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "nominees" */
  ['nominees_aggregate_fields']: {
    __typename: 'nominees_aggregate_fields';
    avg?: GraphQLTypes['nominees_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['nominees_max_fields'] | undefined;
    min?: GraphQLTypes['nominees_min_fields'] | undefined;
    stddev?: GraphQLTypes['nominees_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['nominees_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['nominees_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['nominees_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['nominees_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['nominees_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['nominees_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "nominees" */
  ['nominees_aggregate_order_by']: {
    avg?: GraphQLTypes['nominees_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['nominees_max_order_by'] | undefined;
    min?: GraphQLTypes['nominees_min_order_by'] | undefined;
    stddev?: GraphQLTypes['nominees_stddev_order_by'] | undefined;
    stddev_pop?: GraphQLTypes['nominees_stddev_pop_order_by'] | undefined;
    stddev_samp?: GraphQLTypes['nominees_stddev_samp_order_by'] | undefined;
    sum?: GraphQLTypes['nominees_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['nominees_var_pop_order_by'] | undefined;
    var_samp?: GraphQLTypes['nominees_var_samp_order_by'] | undefined;
    variance?: GraphQLTypes['nominees_variance_order_by'] | undefined;
  };
  /** aggregate avg on columns */
  ['nominees_avg_fields']: {
    __typename: 'nominees_avg_fields';
    circle_id?: number | undefined;
    id?: number | undefined;
    nominated_by_user_id?: number | undefined;
    user_id?: number | undefined;
    vouches_required?: number | undefined;
  };
  /** order by avg() on columns of table "nominees" */
  ['nominees_avg_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    nominated_by_user_id?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
    vouches_required?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "nominees". All fields are combined with a logical 'AND'. */
  ['nominees_bool_exp']: {
    _and?: Array<GraphQLTypes['nominees_bool_exp']> | undefined;
    _not?: GraphQLTypes['nominees_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['nominees_bool_exp']> | undefined;
    address?: GraphQLTypes['String_comparison_exp'] | undefined;
    circle?: GraphQLTypes['circles_bool_exp'] | undefined;
    circle_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    created_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    description?: GraphQLTypes['String_comparison_exp'] | undefined;
    ended?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    expiry_date?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    nominated_by_user_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    nominated_date?: GraphQLTypes['date_comparison_exp'] | undefined;
    nominations?: GraphQLTypes['vouches_bool_exp'] | undefined;
    nominator?: GraphQLTypes['users_bool_exp'] | undefined;
    profile?: GraphQLTypes['profiles_bool_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    user?: GraphQLTypes['users_bool_exp'] | undefined;
    user_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    vouches_required?: GraphQLTypes['Int_comparison_exp'] | undefined;
  };
  /** aggregate max on columns */
  ['nominees_max_fields']: {
    __typename: 'nominees_max_fields';
    address?: string | undefined;
    circle_id?: number | undefined;
    created_at?: GraphQLTypes['timestamp'] | undefined;
    description?: string | undefined;
    expiry_date?: GraphQLTypes['timestamp'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    nominated_by_user_id?: number | undefined;
    nominated_date?: GraphQLTypes['date'] | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
    user_id?: number | undefined;
    vouches_required?: number | undefined;
  };
  /** order by max() on columns of table "nominees" */
  ['nominees_max_order_by']: {
    address?: GraphQLTypes['order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    description?: GraphQLTypes['order_by'] | undefined;
    expiry_date?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    nominated_by_user_id?: GraphQLTypes['order_by'] | undefined;
    nominated_date?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
    vouches_required?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate min on columns */
  ['nominees_min_fields']: {
    __typename: 'nominees_min_fields';
    address?: string | undefined;
    circle_id?: number | undefined;
    created_at?: GraphQLTypes['timestamp'] | undefined;
    description?: string | undefined;
    expiry_date?: GraphQLTypes['timestamp'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    nominated_by_user_id?: number | undefined;
    nominated_date?: GraphQLTypes['date'] | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
    user_id?: number | undefined;
    vouches_required?: number | undefined;
  };
  /** order by min() on columns of table "nominees" */
  ['nominees_min_order_by']: {
    address?: GraphQLTypes['order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    description?: GraphQLTypes['order_by'] | undefined;
    expiry_date?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    nominated_by_user_id?: GraphQLTypes['order_by'] | undefined;
    nominated_date?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
    vouches_required?: GraphQLTypes['order_by'] | undefined;
  };
  /** Ordering options when selecting data from "nominees". */
  ['nominees_order_by']: {
    address?: GraphQLTypes['order_by'] | undefined;
    circle?: GraphQLTypes['circles_order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    description?: GraphQLTypes['order_by'] | undefined;
    ended?: GraphQLTypes['order_by'] | undefined;
    expiry_date?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    nominated_by_user_id?: GraphQLTypes['order_by'] | undefined;
    nominated_date?: GraphQLTypes['order_by'] | undefined;
    nominations_aggregate?:
      | GraphQLTypes['vouches_aggregate_order_by']
      | undefined;
    nominator?: GraphQLTypes['users_order_by'] | undefined;
    profile?: GraphQLTypes['profiles_order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    user?: GraphQLTypes['users_order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
    vouches_required?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "nominees" */
  ['nominees_select_column']: nominees_select_column;
  /** select "nominees_aggregate_bool_exp_bool_and_arguments_columns" columns of table "nominees" */
  ['nominees_select_column_nominees_aggregate_bool_exp_bool_and_arguments_columns']: nominees_select_column_nominees_aggregate_bool_exp_bool_and_arguments_columns;
  /** select "nominees_aggregate_bool_exp_bool_or_arguments_columns" columns of table "nominees" */
  ['nominees_select_column_nominees_aggregate_bool_exp_bool_or_arguments_columns']: nominees_select_column_nominees_aggregate_bool_exp_bool_or_arguments_columns;
  /** aggregate stddev on columns */
  ['nominees_stddev_fields']: {
    __typename: 'nominees_stddev_fields';
    circle_id?: number | undefined;
    id?: number | undefined;
    nominated_by_user_id?: number | undefined;
    user_id?: number | undefined;
    vouches_required?: number | undefined;
  };
  /** order by stddev() on columns of table "nominees" */
  ['nominees_stddev_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    nominated_by_user_id?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
    vouches_required?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_pop on columns */
  ['nominees_stddev_pop_fields']: {
    __typename: 'nominees_stddev_pop_fields';
    circle_id?: number | undefined;
    id?: number | undefined;
    nominated_by_user_id?: number | undefined;
    user_id?: number | undefined;
    vouches_required?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "nominees" */
  ['nominees_stddev_pop_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    nominated_by_user_id?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
    vouches_required?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_samp on columns */
  ['nominees_stddev_samp_fields']: {
    __typename: 'nominees_stddev_samp_fields';
    circle_id?: number | undefined;
    id?: number | undefined;
    nominated_by_user_id?: number | undefined;
    user_id?: number | undefined;
    vouches_required?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "nominees" */
  ['nominees_stddev_samp_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    nominated_by_user_id?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
    vouches_required?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "nominees" */
  ['nominees_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['nominees_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['nominees_stream_cursor_value_input']: {
    address?: string | undefined;
    circle_id?: number | undefined;
    created_at?: GraphQLTypes['timestamp'] | undefined;
    description?: string | undefined;
    ended?: boolean | undefined;
    expiry_date?: GraphQLTypes['timestamp'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    nominated_by_user_id?: number | undefined;
    nominated_date?: GraphQLTypes['date'] | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
    user_id?: number | undefined;
    vouches_required?: number | undefined;
  };
  /** aggregate sum on columns */
  ['nominees_sum_fields']: {
    __typename: 'nominees_sum_fields';
    circle_id?: number | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    nominated_by_user_id?: number | undefined;
    user_id?: number | undefined;
    vouches_required?: number | undefined;
  };
  /** order by sum() on columns of table "nominees" */
  ['nominees_sum_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    nominated_by_user_id?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
    vouches_required?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate var_pop on columns */
  ['nominees_var_pop_fields']: {
    __typename: 'nominees_var_pop_fields';
    circle_id?: number | undefined;
    id?: number | undefined;
    nominated_by_user_id?: number | undefined;
    user_id?: number | undefined;
    vouches_required?: number | undefined;
  };
  /** order by var_pop() on columns of table "nominees" */
  ['nominees_var_pop_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    nominated_by_user_id?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
    vouches_required?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate var_samp on columns */
  ['nominees_var_samp_fields']: {
    __typename: 'nominees_var_samp_fields';
    circle_id?: number | undefined;
    id?: number | undefined;
    nominated_by_user_id?: number | undefined;
    user_id?: number | undefined;
    vouches_required?: number | undefined;
  };
  /** order by var_samp() on columns of table "nominees" */
  ['nominees_var_samp_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    nominated_by_user_id?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
    vouches_required?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate variance on columns */
  ['nominees_variance_fields']: {
    __typename: 'nominees_variance_fields';
    circle_id?: number | undefined;
    id?: number | undefined;
    nominated_by_user_id?: number | undefined;
    user_id?: number | undefined;
    vouches_required?: number | undefined;
  };
  /** order by variance() on columns of table "nominees" */
  ['nominees_variance_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    nominated_by_user_id?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
    vouches_required?: GraphQLTypes['order_by'] | undefined;
  };
  /** columns and relationships of "note_count" */
  ['note_count']: {
    __typename: 'note_count';
    notes?: GraphQLTypes['bigint'] | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** Boolean expression to filter rows from the table "note_count". All fields are combined with a logical 'AND'. */
  ['note_count_bool_exp']: {
    _and?: Array<GraphQLTypes['note_count_bool_exp']> | undefined;
    _not?: GraphQLTypes['note_count_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['note_count_bool_exp']> | undefined;
    notes?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    profile_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
  };
  /** Ordering options when selecting data from "note_count". */
  ['note_count_order_by']: {
    notes?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "note_count" */
  ['note_count_select_column']: note_count_select_column;
  /** Streaming cursor of the table "note_count" */
  ['note_count_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['note_count_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['note_count_stream_cursor_value_input']: {
    notes?: GraphQLTypes['bigint'] | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** columns and relationships of "notifications" */
  ['notifications']: {
    __typename: 'notifications';
    /** An object relationship */
    actor_profile_public?: GraphQLTypes['profiles_public'] | undefined;
    created_at: GraphQLTypes['timestamptz'];
    /** An object relationship */
    give?: GraphQLTypes['colinks_gives'] | undefined;
    id: number;
    invite_joined_id?: GraphQLTypes['bigint'] | undefined;
    /** An object relationship */
    invited_profile_public?: GraphQLTypes['profiles_public'] | undefined;
    /** An object relationship */
    link_tx?: GraphQLTypes['link_tx'] | undefined;
    link_tx_hash?: GraphQLTypes['citext'] | undefined;
    /** An object relationship */
    mention_post?: GraphQLTypes['contributions'] | undefined;
    mention_post_id?: number | undefined;
    /** An object relationship */
    mention_reply?: GraphQLTypes['replies'] | undefined;
    mention_reply_id?: number | undefined;
    /** An object relationship */
    profile: GraphQLTypes['profiles'];
    profile_id: GraphQLTypes['bigint'];
    /** An object relationship */
    reaction?: GraphQLTypes['reactions'] | undefined;
    reaction_id?: GraphQLTypes['bigint'] | undefined;
    /** An object relationship */
    reply?: GraphQLTypes['replies'] | undefined;
    reply_id?: number | undefined;
    /** An object relationship */
    reply_reaction?: GraphQLTypes['replies_reactions'] | undefined;
    reply_reaction_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** aggregated selection of "notifications" */
  ['notifications_aggregate']: {
    __typename: 'notifications_aggregate';
    aggregate?: GraphQLTypes['notifications_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['notifications']>;
  };
  /** aggregate fields of "notifications" */
  ['notifications_aggregate_fields']: {
    __typename: 'notifications_aggregate_fields';
    avg?: GraphQLTypes['notifications_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['notifications_max_fields'] | undefined;
    min?: GraphQLTypes['notifications_min_fields'] | undefined;
    stddev?: GraphQLTypes['notifications_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['notifications_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['notifications_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['notifications_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['notifications_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['notifications_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['notifications_variance_fields'] | undefined;
  };
  /** aggregate avg on columns */
  ['notifications_avg_fields']: {
    __typename: 'notifications_avg_fields';
    id?: number | undefined;
    invite_joined_id?: number | undefined;
    mention_post_id?: number | undefined;
    mention_reply_id?: number | undefined;
    profile_id?: number | undefined;
    reaction_id?: number | undefined;
    reply_id?: number | undefined;
    reply_reaction_id?: number | undefined;
  };
  /** Boolean expression to filter rows from the table "notifications". All fields are combined with a logical 'AND'. */
  ['notifications_bool_exp']: {
    _and?: Array<GraphQLTypes['notifications_bool_exp']> | undefined;
    _not?: GraphQLTypes['notifications_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['notifications_bool_exp']> | undefined;
    actor_profile_public?: GraphQLTypes['profiles_public_bool_exp'] | undefined;
    created_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    give?: GraphQLTypes['colinks_gives_bool_exp'] | undefined;
    id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    invite_joined_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    invited_profile_public?:
      | GraphQLTypes['profiles_public_bool_exp']
      | undefined;
    link_tx?: GraphQLTypes['link_tx_bool_exp'] | undefined;
    link_tx_hash?: GraphQLTypes['citext_comparison_exp'] | undefined;
    mention_post?: GraphQLTypes['contributions_bool_exp'] | undefined;
    mention_post_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    mention_reply?: GraphQLTypes['replies_bool_exp'] | undefined;
    mention_reply_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    profile?: GraphQLTypes['profiles_bool_exp'] | undefined;
    profile_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    reaction?: GraphQLTypes['reactions_bool_exp'] | undefined;
    reaction_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    reply?: GraphQLTypes['replies_bool_exp'] | undefined;
    reply_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    reply_reaction?: GraphQLTypes['replies_reactions_bool_exp'] | undefined;
    reply_reaction_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
  };
  /** aggregate max on columns */
  ['notifications_max_fields']: {
    __typename: 'notifications_max_fields';
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    id?: number | undefined;
    invite_joined_id?: GraphQLTypes['bigint'] | undefined;
    link_tx_hash?: GraphQLTypes['citext'] | undefined;
    mention_post_id?: number | undefined;
    mention_reply_id?: number | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    reaction_id?: GraphQLTypes['bigint'] | undefined;
    reply_id?: number | undefined;
    reply_reaction_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** aggregate min on columns */
  ['notifications_min_fields']: {
    __typename: 'notifications_min_fields';
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    id?: number | undefined;
    invite_joined_id?: GraphQLTypes['bigint'] | undefined;
    link_tx_hash?: GraphQLTypes['citext'] | undefined;
    mention_post_id?: number | undefined;
    mention_reply_id?: number | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    reaction_id?: GraphQLTypes['bigint'] | undefined;
    reply_id?: number | undefined;
    reply_reaction_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** Ordering options when selecting data from "notifications". */
  ['notifications_order_by']: {
    actor_profile_public?: GraphQLTypes['profiles_public_order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    give?: GraphQLTypes['colinks_gives_order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    invite_joined_id?: GraphQLTypes['order_by'] | undefined;
    invited_profile_public?:
      | GraphQLTypes['profiles_public_order_by']
      | undefined;
    link_tx?: GraphQLTypes['link_tx_order_by'] | undefined;
    link_tx_hash?: GraphQLTypes['order_by'] | undefined;
    mention_post?: GraphQLTypes['contributions_order_by'] | undefined;
    mention_post_id?: GraphQLTypes['order_by'] | undefined;
    mention_reply?: GraphQLTypes['replies_order_by'] | undefined;
    mention_reply_id?: GraphQLTypes['order_by'] | undefined;
    profile?: GraphQLTypes['profiles_order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    reaction?: GraphQLTypes['reactions_order_by'] | undefined;
    reaction_id?: GraphQLTypes['order_by'] | undefined;
    reply?: GraphQLTypes['replies_order_by'] | undefined;
    reply_id?: GraphQLTypes['order_by'] | undefined;
    reply_reaction?: GraphQLTypes['replies_reactions_order_by'] | undefined;
    reply_reaction_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "notifications" */
  ['notifications_select_column']: notifications_select_column;
  /** aggregate stddev on columns */
  ['notifications_stddev_fields']: {
    __typename: 'notifications_stddev_fields';
    id?: number | undefined;
    invite_joined_id?: number | undefined;
    mention_post_id?: number | undefined;
    mention_reply_id?: number | undefined;
    profile_id?: number | undefined;
    reaction_id?: number | undefined;
    reply_id?: number | undefined;
    reply_reaction_id?: number | undefined;
  };
  /** aggregate stddev_pop on columns */
  ['notifications_stddev_pop_fields']: {
    __typename: 'notifications_stddev_pop_fields';
    id?: number | undefined;
    invite_joined_id?: number | undefined;
    mention_post_id?: number | undefined;
    mention_reply_id?: number | undefined;
    profile_id?: number | undefined;
    reaction_id?: number | undefined;
    reply_id?: number | undefined;
    reply_reaction_id?: number | undefined;
  };
  /** aggregate stddev_samp on columns */
  ['notifications_stddev_samp_fields']: {
    __typename: 'notifications_stddev_samp_fields';
    id?: number | undefined;
    invite_joined_id?: number | undefined;
    mention_post_id?: number | undefined;
    mention_reply_id?: number | undefined;
    profile_id?: number | undefined;
    reaction_id?: number | undefined;
    reply_id?: number | undefined;
    reply_reaction_id?: number | undefined;
  };
  /** Streaming cursor of the table "notifications" */
  ['notifications_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['notifications_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['notifications_stream_cursor_value_input']: {
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    id?: number | undefined;
    invite_joined_id?: GraphQLTypes['bigint'] | undefined;
    link_tx_hash?: GraphQLTypes['citext'] | undefined;
    mention_post_id?: number | undefined;
    mention_reply_id?: number | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    reaction_id?: GraphQLTypes['bigint'] | undefined;
    reply_id?: number | undefined;
    reply_reaction_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** aggregate sum on columns */
  ['notifications_sum_fields']: {
    __typename: 'notifications_sum_fields';
    id?: number | undefined;
    invite_joined_id?: GraphQLTypes['bigint'] | undefined;
    mention_post_id?: number | undefined;
    mention_reply_id?: number | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    reaction_id?: GraphQLTypes['bigint'] | undefined;
    reply_id?: number | undefined;
    reply_reaction_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** aggregate var_pop on columns */
  ['notifications_var_pop_fields']: {
    __typename: 'notifications_var_pop_fields';
    id?: number | undefined;
    invite_joined_id?: number | undefined;
    mention_post_id?: number | undefined;
    mention_reply_id?: number | undefined;
    profile_id?: number | undefined;
    reaction_id?: number | undefined;
    reply_id?: number | undefined;
    reply_reaction_id?: number | undefined;
  };
  /** aggregate var_samp on columns */
  ['notifications_var_samp_fields']: {
    __typename: 'notifications_var_samp_fields';
    id?: number | undefined;
    invite_joined_id?: number | undefined;
    mention_post_id?: number | undefined;
    mention_reply_id?: number | undefined;
    profile_id?: number | undefined;
    reaction_id?: number | undefined;
    reply_id?: number | undefined;
    reply_reaction_id?: number | undefined;
  };
  /** aggregate variance on columns */
  ['notifications_variance_fields']: {
    __typename: 'notifications_variance_fields';
    id?: number | undefined;
    invite_joined_id?: number | undefined;
    mention_post_id?: number | undefined;
    mention_reply_id?: number | undefined;
    profile_id?: number | undefined;
    reaction_id?: number | undefined;
    reply_id?: number | undefined;
    reply_reaction_id?: number | undefined;
  };
  ['numeric']: any;
  /** Boolean expression to compare columns of type "numeric". All fields are combined with logical 'AND'. */
  ['numeric_comparison_exp']: {
    _eq?: GraphQLTypes['numeric'] | undefined;
    _gt?: GraphQLTypes['numeric'] | undefined;
    _gte?: GraphQLTypes['numeric'] | undefined;
    _in?: Array<GraphQLTypes['numeric']> | undefined;
    _is_null?: boolean | undefined;
    _lt?: GraphQLTypes['numeric'] | undefined;
    _lte?: GraphQLTypes['numeric'] | undefined;
    _neq?: GraphQLTypes['numeric'] | undefined;
    _nin?: Array<GraphQLTypes['numeric']> | undefined;
  };
  /** column ordering options */
  ['order_by']: order_by;
  /** columns and relationships of "org_members" */
  ['org_members']: {
    __typename: 'org_members';
    created_at: GraphQLTypes['timestamp'];
    deleted_at?: GraphQLTypes['timestamp'] | undefined;
    hidden: boolean;
    id: GraphQLTypes['bigint'];
    org_id: GraphQLTypes['bigint'];
    /** An object relationship */
    organization: GraphQLTypes['organizations'];
    /** An object relationship */
    profile: GraphQLTypes['profiles'];
    profile_id: GraphQLTypes['bigint'];
    role: number;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
  };
  /** order by aggregate values of table "org_members" */
  ['org_members_aggregate_order_by']: {
    avg?: GraphQLTypes['org_members_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['org_members_max_order_by'] | undefined;
    min?: GraphQLTypes['org_members_min_order_by'] | undefined;
    stddev?: GraphQLTypes['org_members_stddev_order_by'] | undefined;
    stddev_pop?: GraphQLTypes['org_members_stddev_pop_order_by'] | undefined;
    stddev_samp?: GraphQLTypes['org_members_stddev_samp_order_by'] | undefined;
    sum?: GraphQLTypes['org_members_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['org_members_var_pop_order_by'] | undefined;
    var_samp?: GraphQLTypes['org_members_var_samp_order_by'] | undefined;
    variance?: GraphQLTypes['org_members_variance_order_by'] | undefined;
  };
  /** order by avg() on columns of table "org_members" */
  ['org_members_avg_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
    org_id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    role?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "org_members". All fields are combined with a logical 'AND'. */
  ['org_members_bool_exp']: {
    _and?: Array<GraphQLTypes['org_members_bool_exp']> | undefined;
    _not?: GraphQLTypes['org_members_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['org_members_bool_exp']> | undefined;
    created_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    deleted_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    hidden?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    org_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    organization?: GraphQLTypes['organizations_bool_exp'] | undefined;
    profile?: GraphQLTypes['profiles_bool_exp'] | undefined;
    profile_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    role?: GraphQLTypes['Int_comparison_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
  };
  /** order by max() on columns of table "org_members" */
  ['org_members_max_order_by']: {
    created_at?: GraphQLTypes['order_by'] | undefined;
    deleted_at?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    org_id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    role?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by min() on columns of table "org_members" */
  ['org_members_min_order_by']: {
    created_at?: GraphQLTypes['order_by'] | undefined;
    deleted_at?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    org_id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    role?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** response of any mutation on the table "org_members" */
  ['org_members_mutation_response']: {
    __typename: 'org_members_mutation_response';
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['org_members']>;
  };
  /** Ordering options when selecting data from "org_members". */
  ['org_members_order_by']: {
    created_at?: GraphQLTypes['order_by'] | undefined;
    deleted_at?: GraphQLTypes['order_by'] | undefined;
    hidden?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    org_id?: GraphQLTypes['order_by'] | undefined;
    organization?: GraphQLTypes['organizations_order_by'] | undefined;
    profile?: GraphQLTypes['profiles_order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    role?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** primary key columns input for table: org_members */
  ['org_members_pk_columns_input']: {
    id: GraphQLTypes['bigint'];
  };
  /** select columns of table "org_members" */
  ['org_members_select_column']: org_members_select_column;
  /** input type for updating data in table "org_members" */
  ['org_members_set_input']: {
    hidden?: boolean | undefined;
  };
  /** order by stddev() on columns of table "org_members" */
  ['org_members_stddev_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
    org_id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    role?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_pop() on columns of table "org_members" */
  ['org_members_stddev_pop_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
    org_id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    role?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_samp() on columns of table "org_members" */
  ['org_members_stddev_samp_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
    org_id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    role?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "org_members" */
  ['org_members_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['org_members_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['org_members_stream_cursor_value_input']: {
    created_at?: GraphQLTypes['timestamp'] | undefined;
    deleted_at?: GraphQLTypes['timestamp'] | undefined;
    hidden?: boolean | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    org_id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    role?: number | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
  };
  /** order by sum() on columns of table "org_members" */
  ['org_members_sum_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
    org_id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    role?: GraphQLTypes['order_by'] | undefined;
  };
  ['org_members_updates']: {
    /** sets the columns of the filtered rows to the given values */
    _set?: GraphQLTypes['org_members_set_input'] | undefined;
    /** filter the rows which have to be updated */
    where: GraphQLTypes['org_members_bool_exp'];
  };
  /** order by var_pop() on columns of table "org_members" */
  ['org_members_var_pop_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
    org_id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    role?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by var_samp() on columns of table "org_members" */
  ['org_members_var_samp_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
    org_id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    role?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by variance() on columns of table "org_members" */
  ['org_members_variance_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
    org_id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    role?: GraphQLTypes['order_by'] | undefined;
  };
  /** columns and relationships of "org_share_tokens" */
  ['org_share_tokens']: {
    __typename: 'org_share_tokens';
    created_at: GraphQLTypes['timestamptz'];
    org_id: GraphQLTypes['bigint'];
    /** An object relationship */
    organization: GraphQLTypes['organizations'];
    type: number;
    updated_at: GraphQLTypes['timestamptz'];
    uuid: GraphQLTypes['uuid'];
  };
  /** Boolean expression to filter rows from the table "org_share_tokens". All fields are combined with a logical 'AND'. */
  ['org_share_tokens_bool_exp']: {
    _and?: Array<GraphQLTypes['org_share_tokens_bool_exp']> | undefined;
    _not?: GraphQLTypes['org_share_tokens_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['org_share_tokens_bool_exp']> | undefined;
    created_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    org_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    organization?: GraphQLTypes['organizations_bool_exp'] | undefined;
    type?: GraphQLTypes['Int_comparison_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    uuid?: GraphQLTypes['uuid_comparison_exp'] | undefined;
  };
  /** unique or primary key constraints on table "org_share_tokens" */
  ['org_share_tokens_constraint']: org_share_tokens_constraint;
  /** input type for inserting data into table "org_share_tokens" */
  ['org_share_tokens_insert_input']: {
    org_id?: GraphQLTypes['bigint'] | undefined;
    type?: number | undefined;
  };
  /** response of any mutation on the table "org_share_tokens" */
  ['org_share_tokens_mutation_response']: {
    __typename: 'org_share_tokens_mutation_response';
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['org_share_tokens']>;
  };
  /** on_conflict condition type for table "org_share_tokens" */
  ['org_share_tokens_on_conflict']: {
    constraint: GraphQLTypes['org_share_tokens_constraint'];
    update_columns: Array<GraphQLTypes['org_share_tokens_update_column']>;
    where?: GraphQLTypes['org_share_tokens_bool_exp'] | undefined;
  };
  /** Ordering options when selecting data from "org_share_tokens". */
  ['org_share_tokens_order_by']: {
    created_at?: GraphQLTypes['order_by'] | undefined;
    org_id?: GraphQLTypes['order_by'] | undefined;
    organization?: GraphQLTypes['organizations_order_by'] | undefined;
    type?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    uuid?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "org_share_tokens" */
  ['org_share_tokens_select_column']: org_share_tokens_select_column;
  /** Streaming cursor of the table "org_share_tokens" */
  ['org_share_tokens_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['org_share_tokens_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['org_share_tokens_stream_cursor_value_input']: {
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    org_id?: GraphQLTypes['bigint'] | undefined;
    type?: number | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
    uuid?: GraphQLTypes['uuid'] | undefined;
  };
  /** placeholder for update columns of table "org_share_tokens" (current role has no relevant permissions) */
  ['org_share_tokens_update_column']: org_share_tokens_update_column;
  /** columns and relationships of "organizations" */
  ['organizations']: {
    __typename: 'organizations';
    /** An array relationship */
    circles: Array<GraphQLTypes['circles']>;
    created_at: GraphQLTypes['timestamp'];
    created_by?: number | undefined;
    guild_id?: number | undefined;
    guild_role_id?: number | undefined;
    id: GraphQLTypes['bigint'];
    logo?: string | undefined;
    /** An array relationship */
    members: Array<GraphQLTypes['org_members']>;
    name: string;
    /** An object relationship */
    profile?: GraphQLTypes['profiles'] | undefined;
    /** Indicates a test/sample/sandbox org */
    sample: boolean;
    telegram_id?: string | undefined;
    updated_at: GraphQLTypes['timestamp'];
    /** An array relationship */
    vaults: Array<GraphQLTypes['vaults']>;
  };
  /** Boolean expression to filter rows from the table "organizations". All fields are combined with a logical 'AND'. */
  ['organizations_bool_exp']: {
    _and?: Array<GraphQLTypes['organizations_bool_exp']> | undefined;
    _not?: GraphQLTypes['organizations_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['organizations_bool_exp']> | undefined;
    circles?: GraphQLTypes['circles_bool_exp'] | undefined;
    created_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    created_by?: GraphQLTypes['Int_comparison_exp'] | undefined;
    guild_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    guild_role_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    logo?: GraphQLTypes['String_comparison_exp'] | undefined;
    members?: GraphQLTypes['org_members_bool_exp'] | undefined;
    name?: GraphQLTypes['String_comparison_exp'] | undefined;
    profile?: GraphQLTypes['profiles_bool_exp'] | undefined;
    sample?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    telegram_id?: GraphQLTypes['String_comparison_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    vaults?: GraphQLTypes['vaults_bool_exp'] | undefined;
  };
  /** input type for incrementing numeric columns in table "organizations" */
  ['organizations_inc_input']: {
    guild_id?: number | undefined;
    guild_role_id?: number | undefined;
  };
  /** response of any mutation on the table "organizations" */
  ['organizations_mutation_response']: {
    __typename: 'organizations_mutation_response';
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['organizations']>;
  };
  /** Ordering options when selecting data from "organizations". */
  ['organizations_order_by']: {
    circles_aggregate?: GraphQLTypes['circles_aggregate_order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    guild_id?: GraphQLTypes['order_by'] | undefined;
    guild_role_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    logo?: GraphQLTypes['order_by'] | undefined;
    members_aggregate?:
      | GraphQLTypes['org_members_aggregate_order_by']
      | undefined;
    name?: GraphQLTypes['order_by'] | undefined;
    profile?: GraphQLTypes['profiles_order_by'] | undefined;
    sample?: GraphQLTypes['order_by'] | undefined;
    telegram_id?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    vaults_aggregate?: GraphQLTypes['vaults_aggregate_order_by'] | undefined;
  };
  /** primary key columns input for table: organizations */
  ['organizations_pk_columns_input']: {
    id: GraphQLTypes['bigint'];
  };
  /** select columns of table "organizations" */
  ['organizations_select_column']: organizations_select_column;
  /** input type for updating data in table "organizations" */
  ['organizations_set_input']: {
    guild_id?: number | undefined;
    guild_role_id?: number | undefined;
    name?: string | undefined;
    telegram_id?: string | undefined;
  };
  /** Streaming cursor of the table "organizations" */
  ['organizations_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['organizations_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['organizations_stream_cursor_value_input']: {
    created_at?: GraphQLTypes['timestamp'] | undefined;
    created_by?: number | undefined;
    guild_id?: number | undefined;
    guild_role_id?: number | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    logo?: string | undefined;
    name?: string | undefined;
    /** Indicates a test/sample/sandbox org */
    sample?: boolean | undefined;
    telegram_id?: string | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
  };
  ['organizations_updates']: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: GraphQLTypes['organizations_inc_input'] | undefined;
    /** sets the columns of the filtered rows to the given values */
    _set?: GraphQLTypes['organizations_set_input'] | undefined;
    /** filter the rows which have to be updated */
    where: GraphQLTypes['organizations_bool_exp'];
  };
  /** columns and relationships of "pending_gift_private" */
  ['pending_gift_private']: {
    __typename: 'pending_gift_private';
    gift_id?: GraphQLTypes['bigint'] | undefined;
    note?: string | undefined;
    /** An object relationship */
    recipient?: GraphQLTypes['users'] | undefined;
    recipient_id?: GraphQLTypes['bigint'] | undefined;
    /** An object relationship */
    sender?: GraphQLTypes['users'] | undefined;
    sender_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** Boolean expression to filter rows from the table "pending_gift_private". All fields are combined with a logical 'AND'. */
  ['pending_gift_private_bool_exp']: {
    _and?: Array<GraphQLTypes['pending_gift_private_bool_exp']> | undefined;
    _not?: GraphQLTypes['pending_gift_private_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['pending_gift_private_bool_exp']> | undefined;
    gift_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    note?: GraphQLTypes['String_comparison_exp'] | undefined;
    recipient?: GraphQLTypes['users_bool_exp'] | undefined;
    recipient_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    sender?: GraphQLTypes['users_bool_exp'] | undefined;
    sender_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
  };
  /** Ordering options when selecting data from "pending_gift_private". */
  ['pending_gift_private_order_by']: {
    gift_id?: GraphQLTypes['order_by'] | undefined;
    note?: GraphQLTypes['order_by'] | undefined;
    recipient?: GraphQLTypes['users_order_by'] | undefined;
    recipient_id?: GraphQLTypes['order_by'] | undefined;
    sender?: GraphQLTypes['users_order_by'] | undefined;
    sender_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "pending_gift_private" */
  ['pending_gift_private_select_column']: pending_gift_private_select_column;
  /** Streaming cursor of the table "pending_gift_private" */
  ['pending_gift_private_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['pending_gift_private_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['pending_gift_private_stream_cursor_value_input']: {
    gift_id?: GraphQLTypes['bigint'] | undefined;
    note?: string | undefined;
    recipient_id?: GraphQLTypes['bigint'] | undefined;
    sender_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** GIVE allocations made by circle members for the currently running epoch */
  ['pending_token_gifts']: {
    __typename: 'pending_token_gifts';
    /** An object relationship */
    circle: GraphQLTypes['circles'];
    circle_id: GraphQLTypes['bigint'];
    created_at: GraphQLTypes['timestamp'];
    dts_created: GraphQLTypes['timestamp'];
    /** An object relationship */
    epoch?: GraphQLTypes['epochs'] | undefined;
    epoch_id: number;
    /** An object relationship */
    gift_private?: GraphQLTypes['pending_gift_private'] | undefined;
    id: GraphQLTypes['bigint'];
    /** An object relationship */
    recipient: GraphQLTypes['users'];
    recipient_address: string;
    recipient_id: GraphQLTypes['bigint'];
    /** An object relationship */
    sender: GraphQLTypes['users'];
    sender_address: string;
    sender_id: GraphQLTypes['bigint'];
    tokens: number;
    updated_at: GraphQLTypes['timestamp'];
  };
  /** order by aggregate values of table "pending_token_gifts" */
  ['pending_token_gifts_aggregate_order_by']: {
    avg?: GraphQLTypes['pending_token_gifts_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['pending_token_gifts_max_order_by'] | undefined;
    min?: GraphQLTypes['pending_token_gifts_min_order_by'] | undefined;
    stddev?: GraphQLTypes['pending_token_gifts_stddev_order_by'] | undefined;
    stddev_pop?:
      | GraphQLTypes['pending_token_gifts_stddev_pop_order_by']
      | undefined;
    stddev_samp?:
      | GraphQLTypes['pending_token_gifts_stddev_samp_order_by']
      | undefined;
    sum?: GraphQLTypes['pending_token_gifts_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['pending_token_gifts_var_pop_order_by'] | undefined;
    var_samp?:
      | GraphQLTypes['pending_token_gifts_var_samp_order_by']
      | undefined;
    variance?:
      | GraphQLTypes['pending_token_gifts_variance_order_by']
      | undefined;
  };
  /** order by avg() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_avg_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    recipient_id?: GraphQLTypes['order_by'] | undefined;
    sender_id?: GraphQLTypes['order_by'] | undefined;
    tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "pending_token_gifts". All fields are combined with a logical 'AND'. */
  ['pending_token_gifts_bool_exp']: {
    _and?: Array<GraphQLTypes['pending_token_gifts_bool_exp']> | undefined;
    _not?: GraphQLTypes['pending_token_gifts_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['pending_token_gifts_bool_exp']> | undefined;
    circle?: GraphQLTypes['circles_bool_exp'] | undefined;
    circle_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    created_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    dts_created?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    epoch?: GraphQLTypes['epochs_bool_exp'] | undefined;
    epoch_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    gift_private?: GraphQLTypes['pending_gift_private_bool_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    recipient?: GraphQLTypes['users_bool_exp'] | undefined;
    recipient_address?: GraphQLTypes['String_comparison_exp'] | undefined;
    recipient_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    sender?: GraphQLTypes['users_bool_exp'] | undefined;
    sender_address?: GraphQLTypes['String_comparison_exp'] | undefined;
    sender_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    tokens?: GraphQLTypes['Int_comparison_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
  };
  /** order by max() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_max_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    dts_created?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    recipient_address?: GraphQLTypes['order_by'] | undefined;
    recipient_id?: GraphQLTypes['order_by'] | undefined;
    sender_address?: GraphQLTypes['order_by'] | undefined;
    sender_id?: GraphQLTypes['order_by'] | undefined;
    tokens?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by min() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_min_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    dts_created?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    recipient_address?: GraphQLTypes['order_by'] | undefined;
    recipient_id?: GraphQLTypes['order_by'] | undefined;
    sender_address?: GraphQLTypes['order_by'] | undefined;
    sender_id?: GraphQLTypes['order_by'] | undefined;
    tokens?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** Ordering options when selecting data from "pending_token_gifts". */
  ['pending_token_gifts_order_by']: {
    circle?: GraphQLTypes['circles_order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    dts_created?: GraphQLTypes['order_by'] | undefined;
    epoch?: GraphQLTypes['epochs_order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    gift_private?: GraphQLTypes['pending_gift_private_order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    recipient?: GraphQLTypes['users_order_by'] | undefined;
    recipient_address?: GraphQLTypes['order_by'] | undefined;
    recipient_id?: GraphQLTypes['order_by'] | undefined;
    sender?: GraphQLTypes['users_order_by'] | undefined;
    sender_address?: GraphQLTypes['order_by'] | undefined;
    sender_id?: GraphQLTypes['order_by'] | undefined;
    tokens?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "pending_token_gifts" */
  ['pending_token_gifts_select_column']: pending_token_gifts_select_column;
  /** order by stddev() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_stddev_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    recipient_id?: GraphQLTypes['order_by'] | undefined;
    sender_id?: GraphQLTypes['order_by'] | undefined;
    tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_pop() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_stddev_pop_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    recipient_id?: GraphQLTypes['order_by'] | undefined;
    sender_id?: GraphQLTypes['order_by'] | undefined;
    tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_samp() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_stddev_samp_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    recipient_id?: GraphQLTypes['order_by'] | undefined;
    sender_id?: GraphQLTypes['order_by'] | undefined;
    tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "pending_token_gifts" */
  ['pending_token_gifts_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['pending_token_gifts_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['pending_token_gifts_stream_cursor_value_input']: {
    circle_id?: GraphQLTypes['bigint'] | undefined;
    created_at?: GraphQLTypes['timestamp'] | undefined;
    dts_created?: GraphQLTypes['timestamp'] | undefined;
    epoch_id?: number | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    recipient_address?: string | undefined;
    recipient_id?: GraphQLTypes['bigint'] | undefined;
    sender_address?: string | undefined;
    sender_id?: GraphQLTypes['bigint'] | undefined;
    tokens?: number | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
  };
  /** order by sum() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_sum_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    recipient_id?: GraphQLTypes['order_by'] | undefined;
    sender_id?: GraphQLTypes['order_by'] | undefined;
    tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by var_pop() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_var_pop_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    recipient_id?: GraphQLTypes['order_by'] | undefined;
    sender_id?: GraphQLTypes['order_by'] | undefined;
    tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by var_samp() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_var_samp_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    recipient_id?: GraphQLTypes['order_by'] | undefined;
    sender_id?: GraphQLTypes['order_by'] | undefined;
    tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by variance() on columns of table "pending_token_gifts" */
  ['pending_token_gifts_variance_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    recipient_id?: GraphQLTypes['order_by'] | undefined;
    sender_id?: GraphQLTypes['order_by'] | undefined;
    tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** stores app-specific context to aid in the recovery of incomplete transactions */
  ['pending_vault_transactions']: {
    __typename: 'pending_vault_transactions';
    chain_id: number;
    claim_id?: GraphQLTypes['bigint'] | undefined;
    created_by: GraphQLTypes['bigint'];
    /** An object relationship */
    distribution?: GraphQLTypes['distributions'] | undefined;
    distribution_id?: GraphQLTypes['bigint'] | undefined;
    org_id?: GraphQLTypes['bigint'] | undefined;
    /** An object relationship */
    organization?: GraphQLTypes['organizations'] | undefined;
    /** An object relationship */
    profile: GraphQLTypes['profiles'];
    tx_hash: string;
    tx_type: GraphQLTypes['vault_tx_types_enum'];
    /** An object relationship */
    vault_tx_type: GraphQLTypes['vault_tx_types'];
  };
  /** Boolean expression to filter rows from the table "pending_vault_transactions". All fields are combined with a logical 'AND'. */
  ['pending_vault_transactions_bool_exp']: {
    _and?:
      | Array<GraphQLTypes['pending_vault_transactions_bool_exp']>
      | undefined;
    _not?: GraphQLTypes['pending_vault_transactions_bool_exp'] | undefined;
    _or?:
      | Array<GraphQLTypes['pending_vault_transactions_bool_exp']>
      | undefined;
    chain_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    claim_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    created_by?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    distribution?: GraphQLTypes['distributions_bool_exp'] | undefined;
    distribution_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    org_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    organization?: GraphQLTypes['organizations_bool_exp'] | undefined;
    profile?: GraphQLTypes['profiles_bool_exp'] | undefined;
    tx_hash?: GraphQLTypes['String_comparison_exp'] | undefined;
    tx_type?: GraphQLTypes['vault_tx_types_enum_comparison_exp'] | undefined;
    vault_tx_type?: GraphQLTypes['vault_tx_types_bool_exp'] | undefined;
  };
  /** unique or primary key constraints on table "pending_vault_transactions" */
  ['pending_vault_transactions_constraint']: pending_vault_transactions_constraint;
  /** input type for inserting data into table "pending_vault_transactions" */
  ['pending_vault_transactions_insert_input']: {
    chain_id?: number | undefined;
    claim_id?: GraphQLTypes['bigint'] | undefined;
    distribution?:
      | GraphQLTypes['distributions_obj_rel_insert_input']
      | undefined;
    distribution_id?: GraphQLTypes['bigint'] | undefined;
    org_id?: GraphQLTypes['bigint'] | undefined;
    tx_hash?: string | undefined;
    tx_type?: GraphQLTypes['vault_tx_types_enum'] | undefined;
  };
  /** response of any mutation on the table "pending_vault_transactions" */
  ['pending_vault_transactions_mutation_response']: {
    __typename: 'pending_vault_transactions_mutation_response';
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['pending_vault_transactions']>;
  };
  /** on_conflict condition type for table "pending_vault_transactions" */
  ['pending_vault_transactions_on_conflict']: {
    constraint: GraphQLTypes['pending_vault_transactions_constraint'];
    update_columns: Array<
      GraphQLTypes['pending_vault_transactions_update_column']
    >;
    where?: GraphQLTypes['pending_vault_transactions_bool_exp'] | undefined;
  };
  /** Ordering options when selecting data from "pending_vault_transactions". */
  ['pending_vault_transactions_order_by']: {
    chain_id?: GraphQLTypes['order_by'] | undefined;
    claim_id?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    distribution?: GraphQLTypes['distributions_order_by'] | undefined;
    distribution_id?: GraphQLTypes['order_by'] | undefined;
    org_id?: GraphQLTypes['order_by'] | undefined;
    organization?: GraphQLTypes['organizations_order_by'] | undefined;
    profile?: GraphQLTypes['profiles_order_by'] | undefined;
    tx_hash?: GraphQLTypes['order_by'] | undefined;
    tx_type?: GraphQLTypes['order_by'] | undefined;
    vault_tx_type?: GraphQLTypes['vault_tx_types_order_by'] | undefined;
  };
  /** select columns of table "pending_vault_transactions" */
  ['pending_vault_transactions_select_column']: pending_vault_transactions_select_column;
  /** Streaming cursor of the table "pending_vault_transactions" */
  ['pending_vault_transactions_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['pending_vault_transactions_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['pending_vault_transactions_stream_cursor_value_input']: {
    chain_id?: number | undefined;
    claim_id?: GraphQLTypes['bigint'] | undefined;
    created_by?: GraphQLTypes['bigint'] | undefined;
    distribution_id?: GraphQLTypes['bigint'] | undefined;
    org_id?: GraphQLTypes['bigint'] | undefined;
    tx_hash?: string | undefined;
    tx_type?: GraphQLTypes['vault_tx_types_enum'] | undefined;
  };
  /** placeholder for update columns of table "pending_vault_transactions" (current role has no relevant permissions) */
  ['pending_vault_transactions_update_column']: pending_vault_transactions_update_column;
  /** Poap event info */
  ['poap_events']: {
    __typename: 'poap_events';
    city: string;
    country: string;
    created_at: GraphQLTypes['timestamptz'];
    description: string;
    embedding?: GraphQLTypes['vector'] | undefined;
    end_date: GraphQLTypes['date'];
    event_url: string;
    expiry_date: GraphQLTypes['date'];
    fancy_id: string;
    id: GraphQLTypes['bigint'];
    image_url: string;
    name: string;
    poap_id: number;
    similarity?: GraphQLTypes['float8'] | undefined;
    start_date: GraphQLTypes['date'];
    supply: number;
    updated_at: GraphQLTypes['timestamptz'];
    year: number;
  };
  /** aggregated selection of "poap_events" */
  ['poap_events_aggregate']: {
    __typename: 'poap_events_aggregate';
    aggregate?: GraphQLTypes['poap_events_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['poap_events']>;
  };
  /** aggregate fields of "poap_events" */
  ['poap_events_aggregate_fields']: {
    __typename: 'poap_events_aggregate_fields';
    avg?: GraphQLTypes['poap_events_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['poap_events_max_fields'] | undefined;
    min?: GraphQLTypes['poap_events_min_fields'] | undefined;
    stddev?: GraphQLTypes['poap_events_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['poap_events_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['poap_events_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['poap_events_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['poap_events_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['poap_events_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['poap_events_variance_fields'] | undefined;
  };
  /** aggregate avg on columns */
  ['poap_events_avg_fields']: {
    __typename: 'poap_events_avg_fields';
    id?: number | undefined;
    poap_id?: number | undefined;
    similarity?: number | undefined;
    supply?: number | undefined;
    year?: number | undefined;
  };
  /** Boolean expression to filter rows from the table "poap_events". All fields are combined with a logical 'AND'. */
  ['poap_events_bool_exp']: {
    _and?: Array<GraphQLTypes['poap_events_bool_exp']> | undefined;
    _not?: GraphQLTypes['poap_events_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['poap_events_bool_exp']> | undefined;
    city?: GraphQLTypes['String_comparison_exp'] | undefined;
    country?: GraphQLTypes['String_comparison_exp'] | undefined;
    created_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    description?: GraphQLTypes['String_comparison_exp'] | undefined;
    embedding?: GraphQLTypes['vector_comparison_exp'] | undefined;
    end_date?: GraphQLTypes['date_comparison_exp'] | undefined;
    event_url?: GraphQLTypes['String_comparison_exp'] | undefined;
    expiry_date?: GraphQLTypes['date_comparison_exp'] | undefined;
    fancy_id?: GraphQLTypes['String_comparison_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    image_url?: GraphQLTypes['String_comparison_exp'] | undefined;
    name?: GraphQLTypes['String_comparison_exp'] | undefined;
    poap_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    similarity?: GraphQLTypes['float8_comparison_exp'] | undefined;
    start_date?: GraphQLTypes['date_comparison_exp'] | undefined;
    supply?: GraphQLTypes['Int_comparison_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    year?: GraphQLTypes['Int_comparison_exp'] | undefined;
  };
  /** aggregate max on columns */
  ['poap_events_max_fields']: {
    __typename: 'poap_events_max_fields';
    city?: string | undefined;
    country?: string | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    description?: string | undefined;
    end_date?: GraphQLTypes['date'] | undefined;
    event_url?: string | undefined;
    expiry_date?: GraphQLTypes['date'] | undefined;
    fancy_id?: string | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    image_url?: string | undefined;
    name?: string | undefined;
    poap_id?: number | undefined;
    similarity?: GraphQLTypes['float8'] | undefined;
    start_date?: GraphQLTypes['date'] | undefined;
    supply?: number | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
    year?: number | undefined;
  };
  /** aggregate min on columns */
  ['poap_events_min_fields']: {
    __typename: 'poap_events_min_fields';
    city?: string | undefined;
    country?: string | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    description?: string | undefined;
    end_date?: GraphQLTypes['date'] | undefined;
    event_url?: string | undefined;
    expiry_date?: GraphQLTypes['date'] | undefined;
    fancy_id?: string | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    image_url?: string | undefined;
    name?: string | undefined;
    poap_id?: number | undefined;
    similarity?: GraphQLTypes['float8'] | undefined;
    start_date?: GraphQLTypes['date'] | undefined;
    supply?: number | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
    year?: number | undefined;
  };
  /** Ordering options when selecting data from "poap_events". */
  ['poap_events_order_by']: {
    city?: GraphQLTypes['order_by'] | undefined;
    country?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    description?: GraphQLTypes['order_by'] | undefined;
    embedding?: GraphQLTypes['order_by'] | undefined;
    end_date?: GraphQLTypes['order_by'] | undefined;
    event_url?: GraphQLTypes['order_by'] | undefined;
    expiry_date?: GraphQLTypes['order_by'] | undefined;
    fancy_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    image_url?: GraphQLTypes['order_by'] | undefined;
    name?: GraphQLTypes['order_by'] | undefined;
    poap_id?: GraphQLTypes['order_by'] | undefined;
    similarity?: GraphQLTypes['order_by'] | undefined;
    start_date?: GraphQLTypes['order_by'] | undefined;
    supply?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    year?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "poap_events" */
  ['poap_events_select_column']: poap_events_select_column;
  /** aggregate stddev on columns */
  ['poap_events_stddev_fields']: {
    __typename: 'poap_events_stddev_fields';
    id?: number | undefined;
    poap_id?: number | undefined;
    similarity?: number | undefined;
    supply?: number | undefined;
    year?: number | undefined;
  };
  /** aggregate stddev_pop on columns */
  ['poap_events_stddev_pop_fields']: {
    __typename: 'poap_events_stddev_pop_fields';
    id?: number | undefined;
    poap_id?: number | undefined;
    similarity?: number | undefined;
    supply?: number | undefined;
    year?: number | undefined;
  };
  /** aggregate stddev_samp on columns */
  ['poap_events_stddev_samp_fields']: {
    __typename: 'poap_events_stddev_samp_fields';
    id?: number | undefined;
    poap_id?: number | undefined;
    similarity?: number | undefined;
    supply?: number | undefined;
    year?: number | undefined;
  };
  /** Streaming cursor of the table "poap_events" */
  ['poap_events_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['poap_events_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['poap_events_stream_cursor_value_input']: {
    city?: string | undefined;
    country?: string | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    description?: string | undefined;
    embedding?: GraphQLTypes['vector'] | undefined;
    end_date?: GraphQLTypes['date'] | undefined;
    event_url?: string | undefined;
    expiry_date?: GraphQLTypes['date'] | undefined;
    fancy_id?: string | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    image_url?: string | undefined;
    name?: string | undefined;
    poap_id?: number | undefined;
    similarity?: GraphQLTypes['float8'] | undefined;
    start_date?: GraphQLTypes['date'] | undefined;
    supply?: number | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
    year?: number | undefined;
  };
  /** aggregate sum on columns */
  ['poap_events_sum_fields']: {
    __typename: 'poap_events_sum_fields';
    id?: GraphQLTypes['bigint'] | undefined;
    poap_id?: number | undefined;
    similarity?: GraphQLTypes['float8'] | undefined;
    supply?: number | undefined;
    year?: number | undefined;
  };
  /** aggregate var_pop on columns */
  ['poap_events_var_pop_fields']: {
    __typename: 'poap_events_var_pop_fields';
    id?: number | undefined;
    poap_id?: number | undefined;
    similarity?: number | undefined;
    supply?: number | undefined;
    year?: number | undefined;
  };
  /** aggregate var_samp on columns */
  ['poap_events_var_samp_fields']: {
    __typename: 'poap_events_var_samp_fields';
    id?: number | undefined;
    poap_id?: number | undefined;
    similarity?: number | undefined;
    supply?: number | undefined;
    year?: number | undefined;
  };
  /** aggregate variance on columns */
  ['poap_events_variance_fields']: {
    __typename: 'poap_events_variance_fields';
    id?: number | undefined;
    poap_id?: number | undefined;
    similarity?: number | undefined;
    supply?: number | undefined;
    year?: number | undefined;
  };
  /** columns and relationships of "poap_holders" */
  ['poap_holders']: {
    __typename: 'poap_holders';
    address: GraphQLTypes['citext'];
    chain: string;
    /** An object relationship */
    cosoul?: GraphQLTypes['cosouls'] | undefined;
    created_at: GraphQLTypes['timestamptz'];
    /** An object relationship */
    event: GraphQLTypes['poap_events'];
    event_id: GraphQLTypes['bigint'];
    id: GraphQLTypes['bigint'];
    poap_created: GraphQLTypes['timestamptz'];
    token_id: GraphQLTypes['bigint'];
    updated_at: GraphQLTypes['timestamptz'];
  };
  /** aggregated selection of "poap_holders" */
  ['poap_holders_aggregate']: {
    __typename: 'poap_holders_aggregate';
    aggregate?: GraphQLTypes['poap_holders_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['poap_holders']>;
  };
  ['poap_holders_aggregate_bool_exp']: {
    count?: GraphQLTypes['poap_holders_aggregate_bool_exp_count'] | undefined;
  };
  ['poap_holders_aggregate_bool_exp_count']: {
    arguments?: Array<GraphQLTypes['poap_holders_select_column']> | undefined;
    distinct?: boolean | undefined;
    filter?: GraphQLTypes['poap_holders_bool_exp'] | undefined;
    predicate: GraphQLTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "poap_holders" */
  ['poap_holders_aggregate_fields']: {
    __typename: 'poap_holders_aggregate_fields';
    avg?: GraphQLTypes['poap_holders_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['poap_holders_max_fields'] | undefined;
    min?: GraphQLTypes['poap_holders_min_fields'] | undefined;
    stddev?: GraphQLTypes['poap_holders_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['poap_holders_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['poap_holders_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['poap_holders_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['poap_holders_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['poap_holders_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['poap_holders_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "poap_holders" */
  ['poap_holders_aggregate_order_by']: {
    avg?: GraphQLTypes['poap_holders_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['poap_holders_max_order_by'] | undefined;
    min?: GraphQLTypes['poap_holders_min_order_by'] | undefined;
    stddev?: GraphQLTypes['poap_holders_stddev_order_by'] | undefined;
    stddev_pop?: GraphQLTypes['poap_holders_stddev_pop_order_by'] | undefined;
    stddev_samp?: GraphQLTypes['poap_holders_stddev_samp_order_by'] | undefined;
    sum?: GraphQLTypes['poap_holders_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['poap_holders_var_pop_order_by'] | undefined;
    var_samp?: GraphQLTypes['poap_holders_var_samp_order_by'] | undefined;
    variance?: GraphQLTypes['poap_holders_variance_order_by'] | undefined;
  };
  /** aggregate avg on columns */
  ['poap_holders_avg_fields']: {
    __typename: 'poap_holders_avg_fields';
    event_id?: number | undefined;
    id?: number | undefined;
    token_id?: number | undefined;
  };
  /** order by avg() on columns of table "poap_holders" */
  ['poap_holders_avg_order_by']: {
    event_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    token_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "poap_holders". All fields are combined with a logical 'AND'. */
  ['poap_holders_bool_exp']: {
    _and?: Array<GraphQLTypes['poap_holders_bool_exp']> | undefined;
    _not?: GraphQLTypes['poap_holders_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['poap_holders_bool_exp']> | undefined;
    address?: GraphQLTypes['citext_comparison_exp'] | undefined;
    chain?: GraphQLTypes['String_comparison_exp'] | undefined;
    cosoul?: GraphQLTypes['cosouls_bool_exp'] | undefined;
    created_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    event?: GraphQLTypes['poap_events_bool_exp'] | undefined;
    event_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    poap_created?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    token_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
  };
  /** aggregate max on columns */
  ['poap_holders_max_fields']: {
    __typename: 'poap_holders_max_fields';
    address?: GraphQLTypes['citext'] | undefined;
    chain?: string | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    event_id?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    poap_created?: GraphQLTypes['timestamptz'] | undefined;
    token_id?: GraphQLTypes['bigint'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by max() on columns of table "poap_holders" */
  ['poap_holders_max_order_by']: {
    address?: GraphQLTypes['order_by'] | undefined;
    chain?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    event_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    poap_created?: GraphQLTypes['order_by'] | undefined;
    token_id?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate min on columns */
  ['poap_holders_min_fields']: {
    __typename: 'poap_holders_min_fields';
    address?: GraphQLTypes['citext'] | undefined;
    chain?: string | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    event_id?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    poap_created?: GraphQLTypes['timestamptz'] | undefined;
    token_id?: GraphQLTypes['bigint'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by min() on columns of table "poap_holders" */
  ['poap_holders_min_order_by']: {
    address?: GraphQLTypes['order_by'] | undefined;
    chain?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    event_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    poap_created?: GraphQLTypes['order_by'] | undefined;
    token_id?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** Ordering options when selecting data from "poap_holders". */
  ['poap_holders_order_by']: {
    address?: GraphQLTypes['order_by'] | undefined;
    chain?: GraphQLTypes['order_by'] | undefined;
    cosoul?: GraphQLTypes['cosouls_order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    event?: GraphQLTypes['poap_events_order_by'] | undefined;
    event_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    poap_created?: GraphQLTypes['order_by'] | undefined;
    token_id?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "poap_holders" */
  ['poap_holders_select_column']: poap_holders_select_column;
  /** aggregate stddev on columns */
  ['poap_holders_stddev_fields']: {
    __typename: 'poap_holders_stddev_fields';
    event_id?: number | undefined;
    id?: number | undefined;
    token_id?: number | undefined;
  };
  /** order by stddev() on columns of table "poap_holders" */
  ['poap_holders_stddev_order_by']: {
    event_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    token_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_pop on columns */
  ['poap_holders_stddev_pop_fields']: {
    __typename: 'poap_holders_stddev_pop_fields';
    event_id?: number | undefined;
    id?: number | undefined;
    token_id?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "poap_holders" */
  ['poap_holders_stddev_pop_order_by']: {
    event_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    token_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_samp on columns */
  ['poap_holders_stddev_samp_fields']: {
    __typename: 'poap_holders_stddev_samp_fields';
    event_id?: number | undefined;
    id?: number | undefined;
    token_id?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "poap_holders" */
  ['poap_holders_stddev_samp_order_by']: {
    event_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    token_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "poap_holders" */
  ['poap_holders_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['poap_holders_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['poap_holders_stream_cursor_value_input']: {
    address?: GraphQLTypes['citext'] | undefined;
    chain?: string | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    event_id?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    poap_created?: GraphQLTypes['timestamptz'] | undefined;
    token_id?: GraphQLTypes['bigint'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** aggregate sum on columns */
  ['poap_holders_sum_fields']: {
    __typename: 'poap_holders_sum_fields';
    event_id?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    token_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by sum() on columns of table "poap_holders" */
  ['poap_holders_sum_order_by']: {
    event_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    token_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate var_pop on columns */
  ['poap_holders_var_pop_fields']: {
    __typename: 'poap_holders_var_pop_fields';
    event_id?: number | undefined;
    id?: number | undefined;
    token_id?: number | undefined;
  };
  /** order by var_pop() on columns of table "poap_holders" */
  ['poap_holders_var_pop_order_by']: {
    event_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    token_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate var_samp on columns */
  ['poap_holders_var_samp_fields']: {
    __typename: 'poap_holders_var_samp_fields';
    event_id?: number | undefined;
    id?: number | undefined;
    token_id?: number | undefined;
  };
  /** order by var_samp() on columns of table "poap_holders" */
  ['poap_holders_var_samp_order_by']: {
    event_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    token_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate variance on columns */
  ['poap_holders_variance_fields']: {
    __typename: 'poap_holders_variance_fields';
    event_id?: number | undefined;
    id?: number | undefined;
    token_id?: number | undefined;
  };
  /** order by variance() on columns of table "poap_holders" */
  ['poap_holders_variance_order_by']: {
    event_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    token_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** columns and relationships of "private_stream_visibility" */
  ['private_stream_visibility']: {
    __typename: 'private_stream_visibility';
    created_at: GraphQLTypes['timestamptz'];
    profile_id: GraphQLTypes['bigint'];
    view_profile_id: GraphQLTypes['bigint'];
  };
  /** order by aggregate values of table "private_stream_visibility" */
  ['private_stream_visibility_aggregate_order_by']: {
    avg?: GraphQLTypes['private_stream_visibility_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['private_stream_visibility_max_order_by'] | undefined;
    min?: GraphQLTypes['private_stream_visibility_min_order_by'] | undefined;
    stddev?:
      | GraphQLTypes['private_stream_visibility_stddev_order_by']
      | undefined;
    stddev_pop?:
      | GraphQLTypes['private_stream_visibility_stddev_pop_order_by']
      | undefined;
    stddev_samp?:
      | GraphQLTypes['private_stream_visibility_stddev_samp_order_by']
      | undefined;
    sum?: GraphQLTypes['private_stream_visibility_sum_order_by'] | undefined;
    var_pop?:
      | GraphQLTypes['private_stream_visibility_var_pop_order_by']
      | undefined;
    var_samp?:
      | GraphQLTypes['private_stream_visibility_var_samp_order_by']
      | undefined;
    variance?:
      | GraphQLTypes['private_stream_visibility_variance_order_by']
      | undefined;
  };
  /** order by avg() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_avg_order_by']: {
    profile_id?: GraphQLTypes['order_by'] | undefined;
    view_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "private_stream_visibility". All fields are combined with a logical 'AND'. */
  ['private_stream_visibility_bool_exp']: {
    _and?:
      | Array<GraphQLTypes['private_stream_visibility_bool_exp']>
      | undefined;
    _not?: GraphQLTypes['private_stream_visibility_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['private_stream_visibility_bool_exp']> | undefined;
    created_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    profile_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    view_profile_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
  };
  /** order by max() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_max_order_by']: {
    created_at?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    view_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by min() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_min_order_by']: {
    created_at?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    view_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Ordering options when selecting data from "private_stream_visibility". */
  ['private_stream_visibility_order_by']: {
    created_at?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    view_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "private_stream_visibility" */
  ['private_stream_visibility_select_column']: private_stream_visibility_select_column;
  /** order by stddev() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_stddev_order_by']: {
    profile_id?: GraphQLTypes['order_by'] | undefined;
    view_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_pop() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_stddev_pop_order_by']: {
    profile_id?: GraphQLTypes['order_by'] | undefined;
    view_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_samp() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_stddev_samp_order_by']: {
    profile_id?: GraphQLTypes['order_by'] | undefined;
    view_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "private_stream_visibility" */
  ['private_stream_visibility_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['private_stream_visibility_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['private_stream_visibility_stream_cursor_value_input']: {
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    view_profile_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by sum() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_sum_order_by']: {
    profile_id?: GraphQLTypes['order_by'] | undefined;
    view_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by var_pop() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_var_pop_order_by']: {
    profile_id?: GraphQLTypes['order_by'] | undefined;
    view_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by var_samp() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_var_samp_order_by']: {
    profile_id?: GraphQLTypes['order_by'] | undefined;
    view_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by variance() on columns of table "private_stream_visibility" */
  ['private_stream_visibility_variance_order_by']: {
    profile_id?: GraphQLTypes['order_by'] | undefined;
    view_profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** columns and relationships of "profile_skills" */
  ['profile_skills']: {
    __typename: 'profile_skills';
    created_at: GraphQLTypes['timestamptz'];
    /** An object relationship */
    profile?: GraphQLTypes['profiles'] | undefined;
    profile_id: number;
    /** An object relationship */
    profile_public?: GraphQLTypes['profiles_public'] | undefined;
    /** An object relationship */
    skill?: GraphQLTypes['skills'] | undefined;
    skill_name: GraphQLTypes['citext'];
  };
  /** order by aggregate values of table "profile_skills" */
  ['profile_skills_aggregate_order_by']: {
    avg?: GraphQLTypes['profile_skills_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['profile_skills_max_order_by'] | undefined;
    min?: GraphQLTypes['profile_skills_min_order_by'] | undefined;
    stddev?: GraphQLTypes['profile_skills_stddev_order_by'] | undefined;
    stddev_pop?: GraphQLTypes['profile_skills_stddev_pop_order_by'] | undefined;
    stddev_samp?:
      | GraphQLTypes['profile_skills_stddev_samp_order_by']
      | undefined;
    sum?: GraphQLTypes['profile_skills_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['profile_skills_var_pop_order_by'] | undefined;
    var_samp?: GraphQLTypes['profile_skills_var_samp_order_by'] | undefined;
    variance?: GraphQLTypes['profile_skills_variance_order_by'] | undefined;
  };
  /** order by avg() on columns of table "profile_skills" */
  ['profile_skills_avg_order_by']: {
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "profile_skills". All fields are combined with a logical 'AND'. */
  ['profile_skills_bool_exp']: {
    _and?: Array<GraphQLTypes['profile_skills_bool_exp']> | undefined;
    _not?: GraphQLTypes['profile_skills_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['profile_skills_bool_exp']> | undefined;
    created_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    profile?: GraphQLTypes['profiles_bool_exp'] | undefined;
    profile_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    profile_public?: GraphQLTypes['profiles_public_bool_exp'] | undefined;
    skill?: GraphQLTypes['skills_bool_exp'] | undefined;
    skill_name?: GraphQLTypes['citext_comparison_exp'] | undefined;
  };
  /** unique or primary key constraints on table "profile_skills" */
  ['profile_skills_constraint']: profile_skills_constraint;
  /** input type for inserting data into table "profile_skills" */
  ['profile_skills_insert_input']: {
    profile_id?: number | undefined;
    skill?: GraphQLTypes['skills_obj_rel_insert_input'] | undefined;
    skill_name?: GraphQLTypes['citext'] | undefined;
  };
  /** order by max() on columns of table "profile_skills" */
  ['profile_skills_max_order_by']: {
    created_at?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    skill_name?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by min() on columns of table "profile_skills" */
  ['profile_skills_min_order_by']: {
    created_at?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    skill_name?: GraphQLTypes['order_by'] | undefined;
  };
  /** response of any mutation on the table "profile_skills" */
  ['profile_skills_mutation_response']: {
    __typename: 'profile_skills_mutation_response';
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['profile_skills']>;
  };
  /** input type for inserting object relation for remote table "profile_skills" */
  ['profile_skills_obj_rel_insert_input']: {
    data: GraphQLTypes['profile_skills_insert_input'];
    /** upsert condition */
    on_conflict?: GraphQLTypes['profile_skills_on_conflict'] | undefined;
  };
  /** on_conflict condition type for table "profile_skills" */
  ['profile_skills_on_conflict']: {
    constraint: GraphQLTypes['profile_skills_constraint'];
    update_columns: Array<GraphQLTypes['profile_skills_update_column']>;
    where?: GraphQLTypes['profile_skills_bool_exp'] | undefined;
  };
  /** Ordering options when selecting data from "profile_skills". */
  ['profile_skills_order_by']: {
    created_at?: GraphQLTypes['order_by'] | undefined;
    profile?: GraphQLTypes['profiles_order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    profile_public?: GraphQLTypes['profiles_public_order_by'] | undefined;
    skill?: GraphQLTypes['skills_order_by'] | undefined;
    skill_name?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "profile_skills" */
  ['profile_skills_select_column']: profile_skills_select_column;
  /** order by stddev() on columns of table "profile_skills" */
  ['profile_skills_stddev_order_by']: {
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_pop() on columns of table "profile_skills" */
  ['profile_skills_stddev_pop_order_by']: {
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_samp() on columns of table "profile_skills" */
  ['profile_skills_stddev_samp_order_by']: {
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "profile_skills" */
  ['profile_skills_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['profile_skills_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['profile_skills_stream_cursor_value_input']: {
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    profile_id?: number | undefined;
    skill_name?: GraphQLTypes['citext'] | undefined;
  };
  /** order by sum() on columns of table "profile_skills" */
  ['profile_skills_sum_order_by']: {
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** placeholder for update columns of table "profile_skills" (current role has no relevant permissions) */
  ['profile_skills_update_column']: profile_skills_update_column;
  /** order by var_pop() on columns of table "profile_skills" */
  ['profile_skills_var_pop_order_by']: {
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by var_samp() on columns of table "profile_skills" */
  ['profile_skills_var_samp_order_by']: {
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by variance() on columns of table "profile_skills" */
  ['profile_skills_variance_order_by']: {
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Coordinape user accounts that can belong to one or many circles via the relationship to the users table */
  ['profiles']: {
    __typename: 'profiles';
    address: string;
    app_emails: boolean;
    avatar?: string | undefined;
    background?: string | undefined;
    bio?: string | undefined;
    /** An array relationship */
    claims: Array<GraphQLTypes['claims']>;
    /** An aggregate relationship */
    claims_aggregate: GraphQLTypes['claims_aggregate'];
    /** An array relationship */
    colinks_gives_received: Array<GraphQLTypes['colinks_gives']>;
    /** An aggregate relationship */
    colinks_gives_received_aggregate: GraphQLTypes['colinks_gives_aggregate'];
    /** An array relationship */
    colinks_gives_sent: Array<GraphQLTypes['colinks_gives']>;
    /** An aggregate relationship */
    colinks_gives_sent_aggregate: GraphQLTypes['colinks_gives_aggregate'];
    colinks_notification_emails: boolean;
    colinks_product_emails: boolean;
    /** An object relationship */
    cosoul?: GraphQLTypes['cosouls'] | undefined;
    created_at: GraphQLTypes['timestamp'];
    description?: string | undefined;
    discord_username?: string | undefined;
    /** An array relationship */
    distributions: Array<GraphQLTypes['distributions']>;
    /** An aggregate relationship */
    distributions_aggregate: GraphQLTypes['distributions_aggregate'];
    /** An array relationship */
    emails: Array<GraphQLTypes['emails']>;
    /** An object relationship */
    farcaster_account?: GraphQLTypes['farcaster_accounts'] | undefined;
    github_username?: string | undefined;
    id: GraphQLTypes['bigint'];
    invite_code: GraphQLTypes['uuid'];
    invite_code_redeemed_at?: GraphQLTypes['timestamptz'] | undefined;
    invite_code_requested_at?: GraphQLTypes['timestamptz'] | undefined;
    invite_code_sent_at?: GraphQLTypes['timestamptz'] | undefined;
    /** An array relationship */
    invite_codes: Array<GraphQLTypes['invite_codes']>;
    /** An aggregate relationship */
    invite_codes_aggregate: GraphQLTypes['invite_codes_aggregate'];
    invited_by?: GraphQLTypes['bigint'] | undefined;
    last_read_notification_id?: number | undefined;
    links: number;
    links_held: number;
    medium_username?: string | undefined;
    name: GraphQLTypes['citext'];
    /** An array relationship */
    nominees: Array<GraphQLTypes['nominees']>;
    /** An aggregate relationship */
    nominees_aggregate: GraphQLTypes['nominees_aggregate'];
    /** An array relationship */
    org_members: Array<GraphQLTypes['org_members']>;
    product_emails: boolean;
    /** An object relationship */
    profile_skills?: GraphQLTypes['profile_skills'] | undefined;
    /** An object relationship */
    reputation_score?: GraphQLTypes['reputation_scores'] | undefined;
    skills?: string | undefined;
    telegram_username?: string | undefined;
    tos_agreed_at?: GraphQLTypes['timestamp'] | undefined;
    twitter_username?: string | undefined;
    updated_at: GraphQLTypes['timestamp'];
    /** An array relationship */
    users: Array<GraphQLTypes['users']>;
    /** An array relationship */
    vault_transactions: Array<GraphQLTypes['vault_transactions']>;
    /** An array relationship */
    vaults: Array<GraphQLTypes['vaults']>;
    website?: string | undefined;
  };
  /** Boolean expression to filter rows from the table "profiles". All fields are combined with a logical 'AND'. */
  ['profiles_bool_exp']: {
    _and?: Array<GraphQLTypes['profiles_bool_exp']> | undefined;
    _not?: GraphQLTypes['profiles_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['profiles_bool_exp']> | undefined;
    address?: GraphQLTypes['String_comparison_exp'] | undefined;
    app_emails?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    avatar?: GraphQLTypes['String_comparison_exp'] | undefined;
    background?: GraphQLTypes['String_comparison_exp'] | undefined;
    bio?: GraphQLTypes['String_comparison_exp'] | undefined;
    claims?: GraphQLTypes['claims_bool_exp'] | undefined;
    claims_aggregate?: GraphQLTypes['claims_aggregate_bool_exp'] | undefined;
    colinks_gives_received?: GraphQLTypes['colinks_gives_bool_exp'] | undefined;
    colinks_gives_received_aggregate?:
      | GraphQLTypes['colinks_gives_aggregate_bool_exp']
      | undefined;
    colinks_gives_sent?: GraphQLTypes['colinks_gives_bool_exp'] | undefined;
    colinks_gives_sent_aggregate?:
      | GraphQLTypes['colinks_gives_aggregate_bool_exp']
      | undefined;
    colinks_notification_emails?:
      | GraphQLTypes['Boolean_comparison_exp']
      | undefined;
    colinks_product_emails?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    cosoul?: GraphQLTypes['cosouls_bool_exp'] | undefined;
    created_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    description?: GraphQLTypes['String_comparison_exp'] | undefined;
    discord_username?: GraphQLTypes['String_comparison_exp'] | undefined;
    distributions?: GraphQLTypes['distributions_bool_exp'] | undefined;
    distributions_aggregate?:
      | GraphQLTypes['distributions_aggregate_bool_exp']
      | undefined;
    emails?: GraphQLTypes['emails_bool_exp'] | undefined;
    farcaster_account?: GraphQLTypes['farcaster_accounts_bool_exp'] | undefined;
    github_username?: GraphQLTypes['String_comparison_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    invite_code?: GraphQLTypes['uuid_comparison_exp'] | undefined;
    invite_code_redeemed_at?:
      | GraphQLTypes['timestamptz_comparison_exp']
      | undefined;
    invite_code_requested_at?:
      | GraphQLTypes['timestamptz_comparison_exp']
      | undefined;
    invite_code_sent_at?:
      | GraphQLTypes['timestamptz_comparison_exp']
      | undefined;
    invite_codes?: GraphQLTypes['invite_codes_bool_exp'] | undefined;
    invite_codes_aggregate?:
      | GraphQLTypes['invite_codes_aggregate_bool_exp']
      | undefined;
    invited_by?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    last_read_notification_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    links?: GraphQLTypes['Int_comparison_exp'] | undefined;
    links_held?: GraphQLTypes['Int_comparison_exp'] | undefined;
    medium_username?: GraphQLTypes['String_comparison_exp'] | undefined;
    name?: GraphQLTypes['citext_comparison_exp'] | undefined;
    nominees?: GraphQLTypes['nominees_bool_exp'] | undefined;
    nominees_aggregate?:
      | GraphQLTypes['nominees_aggregate_bool_exp']
      | undefined;
    org_members?: GraphQLTypes['org_members_bool_exp'] | undefined;
    product_emails?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    profile_skills?: GraphQLTypes['profile_skills_bool_exp'] | undefined;
    reputation_score?: GraphQLTypes['reputation_scores_bool_exp'] | undefined;
    skills?: GraphQLTypes['String_comparison_exp'] | undefined;
    telegram_username?: GraphQLTypes['String_comparison_exp'] | undefined;
    tos_agreed_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    twitter_username?: GraphQLTypes['String_comparison_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    users?: GraphQLTypes['users_bool_exp'] | undefined;
    vault_transactions?:
      | GraphQLTypes['vault_transactions_bool_exp']
      | undefined;
    vaults?: GraphQLTypes['vaults_bool_exp'] | undefined;
    website?: GraphQLTypes['String_comparison_exp'] | undefined;
  };
  /** input type for incrementing numeric columns in table "profiles" */
  ['profiles_inc_input']: {
    last_read_notification_id?: number | undefined;
  };
  /** response of any mutation on the table "profiles" */
  ['profiles_mutation_response']: {
    __typename: 'profiles_mutation_response';
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['profiles']>;
  };
  /** Ordering options when selecting data from "profiles". */
  ['profiles_order_by']: {
    address?: GraphQLTypes['order_by'] | undefined;
    app_emails?: GraphQLTypes['order_by'] | undefined;
    avatar?: GraphQLTypes['order_by'] | undefined;
    background?: GraphQLTypes['order_by'] | undefined;
    bio?: GraphQLTypes['order_by'] | undefined;
    claims_aggregate?: GraphQLTypes['claims_aggregate_order_by'] | undefined;
    colinks_gives_received_aggregate?:
      | GraphQLTypes['colinks_gives_aggregate_order_by']
      | undefined;
    colinks_gives_sent_aggregate?:
      | GraphQLTypes['colinks_gives_aggregate_order_by']
      | undefined;
    colinks_notification_emails?: GraphQLTypes['order_by'] | undefined;
    colinks_product_emails?: GraphQLTypes['order_by'] | undefined;
    cosoul?: GraphQLTypes['cosouls_order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    description?: GraphQLTypes['order_by'] | undefined;
    discord_username?: GraphQLTypes['order_by'] | undefined;
    distributions_aggregate?:
      | GraphQLTypes['distributions_aggregate_order_by']
      | undefined;
    emails_aggregate?: GraphQLTypes['emails_aggregate_order_by'] | undefined;
    farcaster_account?: GraphQLTypes['farcaster_accounts_order_by'] | undefined;
    github_username?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    invite_code?: GraphQLTypes['order_by'] | undefined;
    invite_code_redeemed_at?: GraphQLTypes['order_by'] | undefined;
    invite_code_requested_at?: GraphQLTypes['order_by'] | undefined;
    invite_code_sent_at?: GraphQLTypes['order_by'] | undefined;
    invite_codes_aggregate?:
      | GraphQLTypes['invite_codes_aggregate_order_by']
      | undefined;
    invited_by?: GraphQLTypes['order_by'] | undefined;
    last_read_notification_id?: GraphQLTypes['order_by'] | undefined;
    links?: GraphQLTypes['order_by'] | undefined;
    links_held?: GraphQLTypes['order_by'] | undefined;
    medium_username?: GraphQLTypes['order_by'] | undefined;
    name?: GraphQLTypes['order_by'] | undefined;
    nominees_aggregate?:
      | GraphQLTypes['nominees_aggregate_order_by']
      | undefined;
    org_members_aggregate?:
      | GraphQLTypes['org_members_aggregate_order_by']
      | undefined;
    product_emails?: GraphQLTypes['order_by'] | undefined;
    profile_skills?: GraphQLTypes['profile_skills_order_by'] | undefined;
    reputation_score?: GraphQLTypes['reputation_scores_order_by'] | undefined;
    skills?: GraphQLTypes['order_by'] | undefined;
    telegram_username?: GraphQLTypes['order_by'] | undefined;
    tos_agreed_at?: GraphQLTypes['order_by'] | undefined;
    twitter_username?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    users_aggregate?: GraphQLTypes['users_aggregate_order_by'] | undefined;
    vault_transactions_aggregate?:
      | GraphQLTypes['vault_transactions_aggregate_order_by']
      | undefined;
    vaults_aggregate?: GraphQLTypes['vaults_aggregate_order_by'] | undefined;
    website?: GraphQLTypes['order_by'] | undefined;
  };
  /** primary key columns input for table: profiles */
  ['profiles_pk_columns_input']: {
    id: GraphQLTypes['bigint'];
  };
  /** columns and relationships of "profiles_private" */
  ['profiles_private']: {
    __typename: 'profiles_private';
    address?: string | undefined;
    device_login_token?: GraphQLTypes['uuid'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    points_balance?: GraphQLTypes['float8'] | undefined;
    points_checkpointed_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** Boolean expression to filter rows from the table "profiles_private". All fields are combined with a logical 'AND'. */
  ['profiles_private_bool_exp']: {
    _and?: Array<GraphQLTypes['profiles_private_bool_exp']> | undefined;
    _not?: GraphQLTypes['profiles_private_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['profiles_private_bool_exp']> | undefined;
    address?: GraphQLTypes['String_comparison_exp'] | undefined;
    device_login_token?: GraphQLTypes['uuid_comparison_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    points_balance?: GraphQLTypes['float8_comparison_exp'] | undefined;
    points_checkpointed_at?:
      | GraphQLTypes['timestamptz_comparison_exp']
      | undefined;
  };
  /** response of any mutation on the table "profiles_private" */
  ['profiles_private_mutation_response']: {
    __typename: 'profiles_private_mutation_response';
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['profiles_private']>;
  };
  /** Ordering options when selecting data from "profiles_private". */
  ['profiles_private_order_by']: {
    address?: GraphQLTypes['order_by'] | undefined;
    device_login_token?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    points_balance?: GraphQLTypes['order_by'] | undefined;
    points_checkpointed_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "profiles_private" */
  ['profiles_private_select_column']: profiles_private_select_column;
  /** input type for updating data in table "profiles_private" */
  ['profiles_private_set_input']: {
    device_login_token?: GraphQLTypes['uuid'] | undefined;
  };
  /** Streaming cursor of the table "profiles_private" */
  ['profiles_private_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['profiles_private_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['profiles_private_stream_cursor_value_input']: {
    address?: string | undefined;
    device_login_token?: GraphQLTypes['uuid'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    points_balance?: GraphQLTypes['float8'] | undefined;
    points_checkpointed_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  ['profiles_private_updates']: {
    /** sets the columns of the filtered rows to the given values */
    _set?: GraphQLTypes['profiles_private_set_input'] | undefined;
    /** filter the rows which have to be updated */
    where: GraphQLTypes['profiles_private_bool_exp'];
  };
  /** columns and relationships of "profiles_public" */
  ['profiles_public']: {
    __typename: 'profiles_public';
    address?: string | undefined;
    avatar?: string | undefined;
    /** An array relationship */
    colinks_given: Array<GraphQLTypes['colinks_gives']>;
    /** An aggregate relationship */
    colinks_given_aggregate: GraphQLTypes['colinks_gives_aggregate'];
    /** An array relationship */
    colinks_gives: Array<GraphQLTypes['colinks_gives']>;
    /** An aggregate relationship */
    colinks_gives_aggregate: GraphQLTypes['colinks_gives_aggregate'];
    /** An object relationship */
    cosoul?: GraphQLTypes['cosouls'] | undefined;
    created_at?: GraphQLTypes['timestamp'] | undefined;
    description?: string | undefined;
    /** An object relationship */
    farcaster_account?: GraphQLTypes['farcaster_accounts'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    joined_colinks_at?: GraphQLTypes['timestamptz'] | undefined;
    /** An array relationship */
    link_holder: Array<GraphQLTypes['link_holders']>;
    /** An aggregate relationship */
    link_holder_aggregate: GraphQLTypes['link_holders_aggregate'];
    /** An array relationship */
    link_target: Array<GraphQLTypes['link_holders']>;
    /** An aggregate relationship */
    link_target_aggregate: GraphQLTypes['link_holders_aggregate'];
    links?: number | undefined;
    links_held?: number | undefined;
    /** An array relationship */
    mutes: Array<GraphQLTypes['mutes']>;
    name?: GraphQLTypes['citext'] | undefined;
    post_count?: GraphQLTypes['bigint'] | undefined;
    post_count_last_30_days?: GraphQLTypes['bigint'] | undefined;
    /** An array relationship */
    profile_skills: Array<GraphQLTypes['profile_skills']>;
    /** An object relationship */
    reputation_score?: GraphQLTypes['reputation_scores'] | undefined;
    website?: string | undefined;
  };
  /** Boolean expression to filter rows from the table "profiles_public". All fields are combined with a logical 'AND'. */
  ['profiles_public_bool_exp']: {
    _and?: Array<GraphQLTypes['profiles_public_bool_exp']> | undefined;
    _not?: GraphQLTypes['profiles_public_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['profiles_public_bool_exp']> | undefined;
    address?: GraphQLTypes['String_comparison_exp'] | undefined;
    avatar?: GraphQLTypes['String_comparison_exp'] | undefined;
    colinks_given?: GraphQLTypes['colinks_gives_bool_exp'] | undefined;
    colinks_given_aggregate?:
      | GraphQLTypes['colinks_gives_aggregate_bool_exp']
      | undefined;
    colinks_gives?: GraphQLTypes['colinks_gives_bool_exp'] | undefined;
    colinks_gives_aggregate?:
      | GraphQLTypes['colinks_gives_aggregate_bool_exp']
      | undefined;
    cosoul?: GraphQLTypes['cosouls_bool_exp'] | undefined;
    created_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    description?: GraphQLTypes['String_comparison_exp'] | undefined;
    farcaster_account?: GraphQLTypes['farcaster_accounts_bool_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    joined_colinks_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    link_holder?: GraphQLTypes['link_holders_bool_exp'] | undefined;
    link_holder_aggregate?:
      | GraphQLTypes['link_holders_aggregate_bool_exp']
      | undefined;
    link_target?: GraphQLTypes['link_holders_bool_exp'] | undefined;
    link_target_aggregate?:
      | GraphQLTypes['link_holders_aggregate_bool_exp']
      | undefined;
    links?: GraphQLTypes['Int_comparison_exp'] | undefined;
    links_held?: GraphQLTypes['Int_comparison_exp'] | undefined;
    mutes?: GraphQLTypes['mutes_bool_exp'] | undefined;
    name?: GraphQLTypes['citext_comparison_exp'] | undefined;
    post_count?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    post_count_last_30_days?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    profile_skills?: GraphQLTypes['profile_skills_bool_exp'] | undefined;
    reputation_score?: GraphQLTypes['reputation_scores_bool_exp'] | undefined;
    website?: GraphQLTypes['String_comparison_exp'] | undefined;
  };
  /** Ordering options when selecting data from "profiles_public". */
  ['profiles_public_order_by']: {
    address?: GraphQLTypes['order_by'] | undefined;
    avatar?: GraphQLTypes['order_by'] | undefined;
    colinks_given_aggregate?:
      | GraphQLTypes['colinks_gives_aggregate_order_by']
      | undefined;
    colinks_gives_aggregate?:
      | GraphQLTypes['colinks_gives_aggregate_order_by']
      | undefined;
    cosoul?: GraphQLTypes['cosouls_order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    description?: GraphQLTypes['order_by'] | undefined;
    farcaster_account?: GraphQLTypes['farcaster_accounts_order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    joined_colinks_at?: GraphQLTypes['order_by'] | undefined;
    link_holder_aggregate?:
      | GraphQLTypes['link_holders_aggregate_order_by']
      | undefined;
    link_target_aggregate?:
      | GraphQLTypes['link_holders_aggregate_order_by']
      | undefined;
    links?: GraphQLTypes['order_by'] | undefined;
    links_held?: GraphQLTypes['order_by'] | undefined;
    mutes_aggregate?: GraphQLTypes['mutes_aggregate_order_by'] | undefined;
    name?: GraphQLTypes['order_by'] | undefined;
    post_count?: GraphQLTypes['order_by'] | undefined;
    post_count_last_30_days?: GraphQLTypes['order_by'] | undefined;
    profile_skills_aggregate?:
      | GraphQLTypes['profile_skills_aggregate_order_by']
      | undefined;
    reputation_score?: GraphQLTypes['reputation_scores_order_by'] | undefined;
    website?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "profiles_public" */
  ['profiles_public_select_column']: profiles_public_select_column;
  /** Streaming cursor of the table "profiles_public" */
  ['profiles_public_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['profiles_public_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['profiles_public_stream_cursor_value_input']: {
    address?: string | undefined;
    avatar?: string | undefined;
    created_at?: GraphQLTypes['timestamp'] | undefined;
    description?: string | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    joined_colinks_at?: GraphQLTypes['timestamptz'] | undefined;
    links?: number | undefined;
    links_held?: number | undefined;
    name?: GraphQLTypes['citext'] | undefined;
    post_count?: GraphQLTypes['bigint'] | undefined;
    post_count_last_30_days?: GraphQLTypes['bigint'] | undefined;
    website?: string | undefined;
  };
  /** select columns of table "profiles" */
  ['profiles_select_column']: profiles_select_column;
  /** input type for updating data in table "profiles" */
  ['profiles_set_input']: {
    app_emails?: boolean | undefined;
    avatar?: string | undefined;
    background?: string | undefined;
    bio?: string | undefined;
    colinks_notification_emails?: boolean | undefined;
    colinks_product_emails?: boolean | undefined;
    description?: string | undefined;
    discord_username?: string | undefined;
    github_username?: string | undefined;
    invite_code_redeemed_at?: GraphQLTypes['timestamptz'] | undefined;
    last_read_notification_id?: number | undefined;
    medium_username?: string | undefined;
    product_emails?: boolean | undefined;
    skills?: string | undefined;
    telegram_username?: string | undefined;
    twitter_username?: string | undefined;
    website?: string | undefined;
  };
  /** Streaming cursor of the table "profiles" */
  ['profiles_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['profiles_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['profiles_stream_cursor_value_input']: {
    address?: string | undefined;
    app_emails?: boolean | undefined;
    avatar?: string | undefined;
    background?: string | undefined;
    bio?: string | undefined;
    colinks_notification_emails?: boolean | undefined;
    colinks_product_emails?: boolean | undefined;
    created_at?: GraphQLTypes['timestamp'] | undefined;
    description?: string | undefined;
    discord_username?: string | undefined;
    github_username?: string | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    invite_code?: GraphQLTypes['uuid'] | undefined;
    invite_code_redeemed_at?: GraphQLTypes['timestamptz'] | undefined;
    invite_code_requested_at?: GraphQLTypes['timestamptz'] | undefined;
    invite_code_sent_at?: GraphQLTypes['timestamptz'] | undefined;
    invited_by?: GraphQLTypes['bigint'] | undefined;
    last_read_notification_id?: number | undefined;
    links?: number | undefined;
    links_held?: number | undefined;
    medium_username?: string | undefined;
    name?: GraphQLTypes['citext'] | undefined;
    product_emails?: boolean | undefined;
    skills?: string | undefined;
    telegram_username?: string | undefined;
    tos_agreed_at?: GraphQLTypes['timestamp'] | undefined;
    twitter_username?: string | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
    website?: string | undefined;
  };
  ['profiles_updates']: {
    /** increments the numeric columns with given value of the filtered values */
    _inc?: GraphQLTypes['profiles_inc_input'] | undefined;
    /** sets the columns of the filtered rows to the given values */
    _set?: GraphQLTypes['profiles_set_input'] | undefined;
    /** filter the rows which have to be updated */
    where: GraphQLTypes['profiles_bool_exp'];
  };
  ['query_root']: {
    __typename: 'query_root';
    /** An array relationship */
    activities: Array<GraphQLTypes['activities']>;
    /** An aggregate relationship */
    activities_aggregate: GraphQLTypes['activities_aggregate'];
    /** fetch data from the table: "activities" using primary key columns */
    activities_by_pk?: GraphQLTypes['activities'] | undefined;
    /** fetch data from the table: "big_questions" */
    big_questions: Array<GraphQLTypes['big_questions']>;
    /** fetch data from the table: "big_questions" using primary key columns */
    big_questions_by_pk?: GraphQLTypes['big_questions'] | undefined;
    /** An array relationship */
    burns: Array<GraphQLTypes['burns']>;
    /** fetch data from the table: "burns" using primary key columns */
    burns_by_pk?: GraphQLTypes['burns'] | undefined;
    /** checkEthDenverInvitee */
    checkEthDenverInvitee?:
      | GraphQLTypes['CheckEthDenverInviteeOutput']
      | undefined;
    /** An array relationship */
    circle_api_keys: Array<GraphQLTypes['circle_api_keys']>;
    /** fetch data from the table: "circle_api_keys" using primary key columns */
    circle_api_keys_by_pk?: GraphQLTypes['circle_api_keys'] | undefined;
    /** fetch data from the table: "circle_integrations" */
    circle_integrations: Array<GraphQLTypes['circle_integrations']>;
    /** fetch data from the table: "circle_integrations" using primary key columns */
    circle_integrations_by_pk?: GraphQLTypes['circle_integrations'] | undefined;
    /** fetch data from the table: "circle_private" */
    circle_private: Array<GraphQLTypes['circle_private']>;
    /** fetch data from the table: "circle_share_tokens" */
    circle_share_tokens: Array<GraphQLTypes['circle_share_tokens']>;
    /** fetch data from the table: "circle_share_tokens" using primary key columns */
    circle_share_tokens_by_pk?: GraphQLTypes['circle_share_tokens'] | undefined;
    /** An array relationship */
    circles: Array<GraphQLTypes['circles']>;
    /** fetch data from the table: "circles" using primary key columns */
    circles_by_pk?: GraphQLTypes['circles'] | undefined;
    /** An array relationship */
    claims: Array<GraphQLTypes['claims']>;
    /** An aggregate relationship */
    claims_aggregate: GraphQLTypes['claims_aggregate'];
    /** fetch data from the table: "claims" using primary key columns */
    claims_by_pk?: GraphQLTypes['claims'] | undefined;
    /** An array relationship */
    colinks_gives: Array<GraphQLTypes['colinks_gives']>;
    /** An aggregate relationship */
    colinks_gives_aggregate: GraphQLTypes['colinks_gives_aggregate'];
    /** fetch data from the table: "colinks_gives" using primary key columns */
    colinks_gives_by_pk?: GraphQLTypes['colinks_gives'] | undefined;
    /** fetch data from the table: "contribution_count" */
    contribution_count: Array<GraphQLTypes['contribution_count']>;
    /** An array relationship */
    contributions: Array<GraphQLTypes['contributions']>;
    /** An aggregate relationship */
    contributions_aggregate: GraphQLTypes['contributions_aggregate'];
    /** fetch data from the table: "contributions" using primary key columns */
    contributions_by_pk?: GraphQLTypes['contributions'] | undefined;
    /** fetch data from the table: "cosouls" */
    cosouls: Array<GraphQLTypes['cosouls']>;
    /** fetch data from the table: "cosouls" using primary key columns */
    cosouls_by_pk?: GraphQLTypes['cosouls'] | undefined;
    /** An array relationship */
    distributions: Array<GraphQLTypes['distributions']>;
    /** An aggregate relationship */
    distributions_aggregate: GraphQLTypes['distributions_aggregate'];
    /** fetch data from the table: "distributions" using primary key columns */
    distributions_by_pk?: GraphQLTypes['distributions'] | undefined;
    /** An array relationship */
    emails: Array<GraphQLTypes['emails']>;
    /** fetch data from the table: "enriched_casts" */
    enriched_casts: Array<GraphQLTypes['enriched_casts']>;
    /** fetch data from the table: "enriched_casts" using primary key columns */
    enriched_casts_by_pk?: GraphQLTypes['enriched_casts'] | undefined;
    /** fetch data from the table: "epoch_pgive_data" */
    epoch_pgive_data: Array<GraphQLTypes['epoch_pgive_data']>;
    /** fetch data from the table: "epoch_pgive_data" using primary key columns */
    epoch_pgive_data_by_pk?: GraphQLTypes['epoch_pgive_data'] | undefined;
    /** An array relationship */
    epochs: Array<GraphQLTypes['epochs']>;
    /** fetch data from the table: "epoches" using primary key columns */
    epochs_by_pk?: GraphQLTypes['epochs'] | undefined;
    /** fetch data from the table: "farcaster_accounts" */
    farcaster_accounts: Array<GraphQLTypes['farcaster_accounts']>;
    /** fetch data from the table: "farcaster_accounts" using primary key columns */
    farcaster_accounts_by_pk?: GraphQLTypes['farcaster_accounts'] | undefined;
    /** fetch data from the table: "farcaster.casts" */
    farcaster_casts: Array<GraphQLTypes['farcaster_casts']>;
    /** fetch aggregated fields from the table: "farcaster.casts" */
    farcaster_casts_aggregate: GraphQLTypes['farcaster_casts_aggregate'];
    /** fetch data from the table: "farcaster.casts" using primary key columns */
    farcaster_casts_by_pk?: GraphQLTypes['farcaster_casts'] | undefined;
    /** fetch data from the table: "farcaster.reactions" */
    farcaster_reactions: Array<GraphQLTypes['farcaster_reactions']>;
    /** fetch aggregated fields from the table: "farcaster.reactions" */
    farcaster_reactions_aggregate: GraphQLTypes['farcaster_reactions_aggregate'];
    /** fetch data from the table: "farcaster.reactions" using primary key columns */
    farcaster_reactions_by_pk?: GraphQLTypes['farcaster_reactions'] | undefined;
    /** getCasts */
    getCasts: GraphQLTypes['GetCastsOutput'];
    getGuildInfo?: GraphQLTypes['GuildInfoOutput'] | undefined;
    getHeadlines: Array<GraphQLTypes['HeadlinesOutput']>;
    getSimilarProfiles: Array<GraphQLTypes['SimilarProfileOutput']>;
    /** fetch data from the table: "gift_private" */
    gift_private: Array<GraphQLTypes['gift_private']>;
    /** fetch data from the table: "github_accounts" */
    github_accounts: Array<GraphQLTypes['github_accounts']>;
    /** fetch data from the table: "github_accounts" using primary key columns */
    github_accounts_by_pk?: GraphQLTypes['github_accounts'] | undefined;
    /** An array relationship */
    histories: Array<GraphQLTypes['histories']>;
    /** fetch data from the table: "histories" using primary key columns */
    histories_by_pk?: GraphQLTypes['histories'] | undefined;
    /** An array relationship */
    invite_codes: Array<GraphQLTypes['invite_codes']>;
    /** An aggregate relationship */
    invite_codes_aggregate: GraphQLTypes['invite_codes_aggregate'];
    /** fetch data from the table: "invite_codes" using primary key columns */
    invite_codes_by_pk?: GraphQLTypes['invite_codes'] | undefined;
    /** An array relationship */
    link_holders: Array<GraphQLTypes['link_holders']>;
    /** An aggregate relationship */
    link_holders_aggregate: GraphQLTypes['link_holders_aggregate'];
    /** fetch data from the table: "link_holders" using primary key columns */
    link_holders_by_pk?: GraphQLTypes['link_holders'] | undefined;
    /** fetch data from the table: "link_tx" */
    link_tx: Array<GraphQLTypes['link_tx']>;
    /** fetch data from the table: "link_tx" using primary key columns */
    link_tx_by_pk?: GraphQLTypes['link_tx'] | undefined;
    /** fetch data from the table: "linkedin_accounts" */
    linkedin_accounts: Array<GraphQLTypes['linkedin_accounts']>;
    /** fetch data from the table: "linkedin_accounts" using primary key columns */
    linkedin_accounts_by_pk?: GraphQLTypes['linkedin_accounts'] | undefined;
    /** An array relationship */
    locked_token_distribution_gifts: Array<
      GraphQLTypes['locked_token_distribution_gifts']
    >;
    /** fetch data from the table: "locked_token_distribution_gifts" using primary key columns */
    locked_token_distribution_gifts_by_pk?:
      | GraphQLTypes['locked_token_distribution_gifts']
      | undefined;
    /** fetch data from the table: "locked_token_distributions" */
    locked_token_distributions: Array<
      GraphQLTypes['locked_token_distributions']
    >;
    /** fetch data from the table: "locked_token_distributions" using primary key columns */
    locked_token_distributions_by_pk?:
      | GraphQLTypes['locked_token_distributions']
      | undefined;
    /** fetch data from the table: "member_circle_pgives" */
    member_circle_pgives: Array<GraphQLTypes['member_circle_pgives']>;
    /** An array relationship */
    member_epoch_pgives: Array<GraphQLTypes['member_epoch_pgives']>;
    /** An aggregate relationship */
    member_epoch_pgives_aggregate: GraphQLTypes['member_epoch_pgives_aggregate'];
    /** fetch data from the table: "member_epoch_pgives" using primary key columns */
    member_epoch_pgives_by_pk?: GraphQLTypes['member_epoch_pgives'] | undefined;
    /** An array relationship */
    mutes: Array<GraphQLTypes['mutes']>;
    /** fetch data from the table: "mutes" using primary key columns */
    mutes_by_pk?: GraphQLTypes['mutes'] | undefined;
    /** fetch data from the table: "nft_collections" */
    nft_collections: Array<GraphQLTypes['nft_collections']>;
    /** fetch data from the table: "nft_holdings" */
    nft_holdings: Array<GraphQLTypes['nft_holdings']>;
    /** An array relationship */
    nominees: Array<GraphQLTypes['nominees']>;
    /** An aggregate relationship */
    nominees_aggregate: GraphQLTypes['nominees_aggregate'];
    /** fetch data from the table: "nominees" using primary key columns */
    nominees_by_pk?: GraphQLTypes['nominees'] | undefined;
    /** fetch data from the table: "note_count" */
    note_count: Array<GraphQLTypes['note_count']>;
    /** fetch data from the table: "notifications" */
    notifications: Array<GraphQLTypes['notifications']>;
    /** fetch aggregated fields from the table: "notifications" */
    notifications_aggregate: GraphQLTypes['notifications_aggregate'];
    /** fetch data from the table: "notifications" using primary key columns */
    notifications_by_pk?: GraphQLTypes['notifications'] | undefined;
    /** An array relationship */
    org_members: Array<GraphQLTypes['org_members']>;
    /** fetch data from the table: "org_members" using primary key columns */
    org_members_by_pk?: GraphQLTypes['org_members'] | undefined;
    /** fetch data from the table: "org_share_tokens" */
    org_share_tokens: Array<GraphQLTypes['org_share_tokens']>;
    /** fetch data from the table: "org_share_tokens" using primary key columns */
    org_share_tokens_by_pk?: GraphQLTypes['org_share_tokens'] | undefined;
    /** fetch data from the table: "organizations" */
    organizations: Array<GraphQLTypes['organizations']>;
    /** fetch data from the table: "organizations" using primary key columns */
    organizations_by_pk?: GraphQLTypes['organizations'] | undefined;
    /** fetch data from the table: "pending_gift_private" */
    pending_gift_private: Array<GraphQLTypes['pending_gift_private']>;
    /** An array relationship */
    pending_token_gifts: Array<GraphQLTypes['pending_token_gifts']>;
    /** fetch data from the table: "pending_token_gifts" using primary key columns */
    pending_token_gifts_by_pk?: GraphQLTypes['pending_token_gifts'] | undefined;
    /** fetch data from the table: "pending_vault_transactions" */
    pending_vault_transactions: Array<
      GraphQLTypes['pending_vault_transactions']
    >;
    /** fetch data from the table: "pending_vault_transactions" using primary key columns */
    pending_vault_transactions_by_pk?:
      | GraphQLTypes['pending_vault_transactions']
      | undefined;
    /** fetch data from the table: "poap_events" */
    poap_events: Array<GraphQLTypes['poap_events']>;
    /** fetch aggregated fields from the table: "poap_events" */
    poap_events_aggregate: GraphQLTypes['poap_events_aggregate'];
    /** fetch data from the table: "poap_events" using primary key columns */
    poap_events_by_pk?: GraphQLTypes['poap_events'] | undefined;
    /** fetch data from the table: "poap_holders" */
    poap_holders: Array<GraphQLTypes['poap_holders']>;
    /** fetch aggregated fields from the table: "poap_holders" */
    poap_holders_aggregate: GraphQLTypes['poap_holders_aggregate'];
    /** fetch data from the table: "poap_holders" using primary key columns */
    poap_holders_by_pk?: GraphQLTypes['poap_holders'] | undefined;
    /** An array relationship */
    private_stream_visibility: Array<GraphQLTypes['private_stream_visibility']>;
    /** fetch data from the table: "private_stream_visibility" using primary key columns */
    private_stream_visibility_by_pk?:
      | GraphQLTypes['private_stream_visibility']
      | undefined;
    /** An array relationship */
    profile_skills: Array<GraphQLTypes['profile_skills']>;
    /** fetch data from the table: "profile_skills" using primary key columns */
    profile_skills_by_pk?: GraphQLTypes['profile_skills'] | undefined;
    /** fetch data from the table: "profiles" */
    profiles: Array<GraphQLTypes['profiles']>;
    /** fetch data from the table: "profiles" using primary key columns */
    profiles_by_pk?: GraphQLTypes['profiles'] | undefined;
    /** fetch data from the table: "profiles_private" */
    profiles_private: Array<GraphQLTypes['profiles_private']>;
    /** fetch data from the table: "profiles_public" */
    profiles_public: Array<GraphQLTypes['profiles_public']>;
    /** An array relationship */
    reactions: Array<GraphQLTypes['reactions']>;
    /** An aggregate relationship */
    reactions_aggregate: GraphQLTypes['reactions_aggregate'];
    /** fetch data from the table: "reactions" using primary key columns */
    reactions_by_pk?: GraphQLTypes['reactions'] | undefined;
    /** An array relationship */
    replies: Array<GraphQLTypes['replies']>;
    /** An aggregate relationship */
    replies_aggregate: GraphQLTypes['replies_aggregate'];
    /** fetch data from the table: "replies" using primary key columns */
    replies_by_pk?: GraphQLTypes['replies'] | undefined;
    /** fetch data from the table: "replies_reactions" */
    replies_reactions: Array<GraphQLTypes['replies_reactions']>;
    /** fetch aggregated fields from the table: "replies_reactions" */
    replies_reactions_aggregate: GraphQLTypes['replies_reactions_aggregate'];
    /** fetch data from the table: "replies_reactions" using primary key columns */
    replies_reactions_by_pk?: GraphQLTypes['replies_reactions'] | undefined;
    /** fetch data from the table: "reputation_scores" */
    reputation_scores: Array<GraphQLTypes['reputation_scores']>;
    /** fetch data from the table: "reputation_scores" using primary key columns */
    reputation_scores_by_pk?: GraphQLTypes['reputation_scores'] | undefined;
    /** searchCosouls */
    searchCosouls?: GraphQLTypes['SearchCosoulsOutput'] | undefined;
    /** searchProfiles */
    searchProfiles: Array<GraphQLTypes['SearchProfilesOutput']>;
    /** execute function "search_contributions" which returns "contributions" */
    search_contributions: Array<GraphQLTypes['contributions']>;
    /** execute function "search_contributions" and query aggregates on result of table type "contributions" */
    search_contributions_aggregate: GraphQLTypes['contributions_aggregate'];
    /** execute function "search_replies" which returns "replies" */
    search_replies: Array<GraphQLTypes['replies']>;
    /** execute function "search_replies" and query aggregates on result of table type "replies" */
    search_replies_aggregate: GraphQLTypes['replies_aggregate'];
    /** fetch data from the table: "skills" */
    skills: Array<GraphQLTypes['skills']>;
    /** fetch data from the table: "skills" using primary key columns */
    skills_by_pk?: GraphQLTypes['skills'] | undefined;
    /** An array relationship */
    teammates: Array<GraphQLTypes['teammates']>;
    /** fetch data from the table: "teammates" using primary key columns */
    teammates_by_pk?: GraphQLTypes['teammates'] | undefined;
    /** An array relationship */
    token_gifts: Array<GraphQLTypes['token_gifts']>;
    /** An aggregate relationship */
    token_gifts_aggregate: GraphQLTypes['token_gifts_aggregate'];
    /** fetch data from the table: "token_gifts" using primary key columns */
    token_gifts_by_pk?: GraphQLTypes['token_gifts'] | undefined;
    /** fetch data from the table: "twitter_accounts" */
    twitter_accounts: Array<GraphQLTypes['twitter_accounts']>;
    /** fetch data from the table: "twitter_accounts" using primary key columns */
    twitter_accounts_by_pk?: GraphQLTypes['twitter_accounts'] | undefined;
    /** fetch data from the table: "user_private" */
    user_private: Array<GraphQLTypes['user_private']>;
    /** fetch aggregated fields from the table: "user_private" */
    user_private_aggregate: GraphQLTypes['user_private_aggregate'];
    /** An array relationship */
    users: Array<GraphQLTypes['users']>;
    /** fetch data from the table: "users" using primary key columns */
    users_by_pk?: GraphQLTypes['users'] | undefined;
    /** An array relationship */
    vault_transactions: Array<GraphQLTypes['vault_transactions']>;
    /** fetch data from the table: "vault_transactions" using primary key columns */
    vault_transactions_by_pk?: GraphQLTypes['vault_transactions'] | undefined;
    /** fetch data from the table: "vault_tx_types" */
    vault_tx_types: Array<GraphQLTypes['vault_tx_types']>;
    /** fetch data from the table: "vault_tx_types" using primary key columns */
    vault_tx_types_by_pk?: GraphQLTypes['vault_tx_types'] | undefined;
    /** An array relationship */
    vaults: Array<GraphQLTypes['vaults']>;
    /** fetch data from the table: "vaults" using primary key columns */
    vaults_by_pk?: GraphQLTypes['vaults'] | undefined;
    /** execute function "vector_search_poap_events" which returns "poap_events" */
    vector_search_poap_events: Array<GraphQLTypes['poap_events']>;
    /** execute function "vector_search_poap_events" and query aggregates on result of table type "poap_events" */
    vector_search_poap_events_aggregate: GraphQLTypes['poap_events_aggregate'];
    /** execute function "vector_search_poap_holders" which returns "poap_holders" */
    vector_search_poap_holders: Array<GraphQLTypes['poap_holders']>;
    /** execute function "vector_search_poap_holders" and query aggregates on result of table type "poap_holders" */
    vector_search_poap_holders_aggregate: GraphQLTypes['poap_holders_aggregate'];
    /** An array relationship */
    vouches: Array<GraphQLTypes['vouches']>;
    /** fetch data from the table: "vouches" using primary key columns */
    vouches_by_pk?: GraphQLTypes['vouches'] | undefined;
  };
  /** columns and relationships of "reactions" */
  ['reactions']: {
    __typename: 'reactions';
    /** An object relationship */
    activity?: GraphQLTypes['activities'] | undefined;
    activity_id: number;
    created_at: GraphQLTypes['timestamptz'];
    id: GraphQLTypes['bigint'];
    /** An object relationship */
    profile?: GraphQLTypes['profiles'] | undefined;
    profile_id: number;
    /** An object relationship */
    profile_public?: GraphQLTypes['profiles_public'] | undefined;
    reaction: string;
    updated_at: GraphQLTypes['timestamptz'];
  };
  /** aggregated selection of "reactions" */
  ['reactions_aggregate']: {
    __typename: 'reactions_aggregate';
    aggregate?: GraphQLTypes['reactions_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['reactions']>;
  };
  ['reactions_aggregate_bool_exp']: {
    count?: GraphQLTypes['reactions_aggregate_bool_exp_count'] | undefined;
  };
  ['reactions_aggregate_bool_exp_count']: {
    arguments?: Array<GraphQLTypes['reactions_select_column']> | undefined;
    distinct?: boolean | undefined;
    filter?: GraphQLTypes['reactions_bool_exp'] | undefined;
    predicate: GraphQLTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "reactions" */
  ['reactions_aggregate_fields']: {
    __typename: 'reactions_aggregate_fields';
    avg?: GraphQLTypes['reactions_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['reactions_max_fields'] | undefined;
    min?: GraphQLTypes['reactions_min_fields'] | undefined;
    stddev?: GraphQLTypes['reactions_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['reactions_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['reactions_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['reactions_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['reactions_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['reactions_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['reactions_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "reactions" */
  ['reactions_aggregate_order_by']: {
    avg?: GraphQLTypes['reactions_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['reactions_max_order_by'] | undefined;
    min?: GraphQLTypes['reactions_min_order_by'] | undefined;
    stddev?: GraphQLTypes['reactions_stddev_order_by'] | undefined;
    stddev_pop?: GraphQLTypes['reactions_stddev_pop_order_by'] | undefined;
    stddev_samp?: GraphQLTypes['reactions_stddev_samp_order_by'] | undefined;
    sum?: GraphQLTypes['reactions_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['reactions_var_pop_order_by'] | undefined;
    var_samp?: GraphQLTypes['reactions_var_samp_order_by'] | undefined;
    variance?: GraphQLTypes['reactions_variance_order_by'] | undefined;
  };
  /** aggregate avg on columns */
  ['reactions_avg_fields']: {
    __typename: 'reactions_avg_fields';
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by avg() on columns of table "reactions" */
  ['reactions_avg_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "reactions". All fields are combined with a logical 'AND'. */
  ['reactions_bool_exp']: {
    _and?: Array<GraphQLTypes['reactions_bool_exp']> | undefined;
    _not?: GraphQLTypes['reactions_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['reactions_bool_exp']> | undefined;
    activity?: GraphQLTypes['activities_bool_exp'] | undefined;
    activity_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    created_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    profile?: GraphQLTypes['profiles_bool_exp'] | undefined;
    profile_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    profile_public?: GraphQLTypes['profiles_public_bool_exp'] | undefined;
    reaction?: GraphQLTypes['String_comparison_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
  };
  /** unique or primary key constraints on table "reactions" */
  ['reactions_constraint']: reactions_constraint;
  /** input type for inserting data into table "reactions" */
  ['reactions_insert_input']: {
    activity_id?: number | undefined;
    reaction?: string | undefined;
  };
  /** aggregate max on columns */
  ['reactions_max_fields']: {
    __typename: 'reactions_max_fields';
    activity_id?: number | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: number | undefined;
    reaction?: string | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by max() on columns of table "reactions" */
  ['reactions_max_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    reaction?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate min on columns */
  ['reactions_min_fields']: {
    __typename: 'reactions_min_fields';
    activity_id?: number | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: number | undefined;
    reaction?: string | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by min() on columns of table "reactions" */
  ['reactions_min_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    reaction?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** response of any mutation on the table "reactions" */
  ['reactions_mutation_response']: {
    __typename: 'reactions_mutation_response';
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['reactions']>;
  };
  /** on_conflict condition type for table "reactions" */
  ['reactions_on_conflict']: {
    constraint: GraphQLTypes['reactions_constraint'];
    update_columns: Array<GraphQLTypes['reactions_update_column']>;
    where?: GraphQLTypes['reactions_bool_exp'] | undefined;
  };
  /** Ordering options when selecting data from "reactions". */
  ['reactions_order_by']: {
    activity?: GraphQLTypes['activities_order_by'] | undefined;
    activity_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile?: GraphQLTypes['profiles_order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    profile_public?: GraphQLTypes['profiles_public_order_by'] | undefined;
    reaction?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "reactions" */
  ['reactions_select_column']: reactions_select_column;
  /** aggregate stddev on columns */
  ['reactions_stddev_fields']: {
    __typename: 'reactions_stddev_fields';
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by stddev() on columns of table "reactions" */
  ['reactions_stddev_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_pop on columns */
  ['reactions_stddev_pop_fields']: {
    __typename: 'reactions_stddev_pop_fields';
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "reactions" */
  ['reactions_stddev_pop_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_samp on columns */
  ['reactions_stddev_samp_fields']: {
    __typename: 'reactions_stddev_samp_fields';
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "reactions" */
  ['reactions_stddev_samp_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "reactions" */
  ['reactions_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['reactions_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['reactions_stream_cursor_value_input']: {
    activity_id?: number | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: number | undefined;
    reaction?: string | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** aggregate sum on columns */
  ['reactions_sum_fields']: {
    __typename: 'reactions_sum_fields';
    activity_id?: number | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: number | undefined;
  };
  /** order by sum() on columns of table "reactions" */
  ['reactions_sum_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** placeholder for update columns of table "reactions" (current role has no relevant permissions) */
  ['reactions_update_column']: reactions_update_column;
  /** aggregate var_pop on columns */
  ['reactions_var_pop_fields']: {
    __typename: 'reactions_var_pop_fields';
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by var_pop() on columns of table "reactions" */
  ['reactions_var_pop_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate var_samp on columns */
  ['reactions_var_samp_fields']: {
    __typename: 'reactions_var_samp_fields';
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by var_samp() on columns of table "reactions" */
  ['reactions_var_samp_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate variance on columns */
  ['reactions_variance_fields']: {
    __typename: 'reactions_variance_fields';
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by variance() on columns of table "reactions" */
  ['reactions_variance_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Replies to activity items */
  ['replies']: {
    __typename: 'replies';
    /** An object relationship */
    activity: GraphQLTypes['activities'];
    activity_actor_id: number;
    activity_id: number;
    created_at: GraphQLTypes['timestamptz'];
    deleted_at?: GraphQLTypes['timestamptz'] | undefined;
    id: GraphQLTypes['bigint'];
    /** An object relationship */
    private_stream_visibility?:
      | GraphQLTypes['private_stream_visibility']
      | undefined;
    /** An object relationship */
    profile: GraphQLTypes['profiles'];
    profile_id: number;
    /** An object relationship */
    profile_public?: GraphQLTypes['profiles_public'] | undefined;
    /** An array relationship */
    reactions: Array<GraphQLTypes['replies_reactions']>;
    /** An aggregate relationship */
    reactions_aggregate: GraphQLTypes['replies_reactions_aggregate'];
    reply: string;
    updated_at: GraphQLTypes['timestamptz'];
  };
  /** aggregated selection of "replies" */
  ['replies_aggregate']: {
    __typename: 'replies_aggregate';
    aggregate?: GraphQLTypes['replies_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['replies']>;
  };
  ['replies_aggregate_bool_exp']: {
    count?: GraphQLTypes['replies_aggregate_bool_exp_count'] | undefined;
  };
  ['replies_aggregate_bool_exp_count']: {
    arguments?: Array<GraphQLTypes['replies_select_column']> | undefined;
    distinct?: boolean | undefined;
    filter?: GraphQLTypes['replies_bool_exp'] | undefined;
    predicate: GraphQLTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "replies" */
  ['replies_aggregate_fields']: {
    __typename: 'replies_aggregate_fields';
    avg?: GraphQLTypes['replies_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['replies_max_fields'] | undefined;
    min?: GraphQLTypes['replies_min_fields'] | undefined;
    stddev?: GraphQLTypes['replies_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['replies_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['replies_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['replies_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['replies_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['replies_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['replies_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "replies" */
  ['replies_aggregate_order_by']: {
    avg?: GraphQLTypes['replies_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['replies_max_order_by'] | undefined;
    min?: GraphQLTypes['replies_min_order_by'] | undefined;
    stddev?: GraphQLTypes['replies_stddev_order_by'] | undefined;
    stddev_pop?: GraphQLTypes['replies_stddev_pop_order_by'] | undefined;
    stddev_samp?: GraphQLTypes['replies_stddev_samp_order_by'] | undefined;
    sum?: GraphQLTypes['replies_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['replies_var_pop_order_by'] | undefined;
    var_samp?: GraphQLTypes['replies_var_samp_order_by'] | undefined;
    variance?: GraphQLTypes['replies_variance_order_by'] | undefined;
  };
  /** aggregate avg on columns */
  ['replies_avg_fields']: {
    __typename: 'replies_avg_fields';
    activity_actor_id?: number | undefined;
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by avg() on columns of table "replies" */
  ['replies_avg_order_by']: {
    activity_actor_id?: GraphQLTypes['order_by'] | undefined;
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "replies". All fields are combined with a logical 'AND'. */
  ['replies_bool_exp']: {
    _and?: Array<GraphQLTypes['replies_bool_exp']> | undefined;
    _not?: GraphQLTypes['replies_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['replies_bool_exp']> | undefined;
    activity?: GraphQLTypes['activities_bool_exp'] | undefined;
    activity_actor_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    activity_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    created_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    deleted_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    private_stream_visibility?:
      | GraphQLTypes['private_stream_visibility_bool_exp']
      | undefined;
    profile?: GraphQLTypes['profiles_bool_exp'] | undefined;
    profile_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    profile_public?: GraphQLTypes['profiles_public_bool_exp'] | undefined;
    reactions?: GraphQLTypes['replies_reactions_bool_exp'] | undefined;
    reactions_aggregate?:
      | GraphQLTypes['replies_reactions_aggregate_bool_exp']
      | undefined;
    reply?: GraphQLTypes['String_comparison_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
  };
  /** unique or primary key constraints on table "replies" */
  ['replies_constraint']: replies_constraint;
  /** input type for inserting data into table "replies" */
  ['replies_insert_input']: {
    activity_actor_id?: number | undefined;
    activity_id?: number | undefined;
    reactions?:
      | GraphQLTypes['replies_reactions_arr_rel_insert_input']
      | undefined;
    reply?: string | undefined;
  };
  /** aggregate max on columns */
  ['replies_max_fields']: {
    __typename: 'replies_max_fields';
    activity_actor_id?: number | undefined;
    activity_id?: number | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    deleted_at?: GraphQLTypes['timestamptz'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: number | undefined;
    reply?: string | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by max() on columns of table "replies" */
  ['replies_max_order_by']: {
    activity_actor_id?: GraphQLTypes['order_by'] | undefined;
    activity_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    deleted_at?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    reply?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate min on columns */
  ['replies_min_fields']: {
    __typename: 'replies_min_fields';
    activity_actor_id?: number | undefined;
    activity_id?: number | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    deleted_at?: GraphQLTypes['timestamptz'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: number | undefined;
    reply?: string | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by min() on columns of table "replies" */
  ['replies_min_order_by']: {
    activity_actor_id?: GraphQLTypes['order_by'] | undefined;
    activity_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    deleted_at?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    reply?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** response of any mutation on the table "replies" */
  ['replies_mutation_response']: {
    __typename: 'replies_mutation_response';
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['replies']>;
  };
  /** input type for inserting object relation for remote table "replies" */
  ['replies_obj_rel_insert_input']: {
    data: GraphQLTypes['replies_insert_input'];
    /** upsert condition */
    on_conflict?: GraphQLTypes['replies_on_conflict'] | undefined;
  };
  /** on_conflict condition type for table "replies" */
  ['replies_on_conflict']: {
    constraint: GraphQLTypes['replies_constraint'];
    update_columns: Array<GraphQLTypes['replies_update_column']>;
    where?: GraphQLTypes['replies_bool_exp'] | undefined;
  };
  /** Ordering options when selecting data from "replies". */
  ['replies_order_by']: {
    activity?: GraphQLTypes['activities_order_by'] | undefined;
    activity_actor_id?: GraphQLTypes['order_by'] | undefined;
    activity_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    deleted_at?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    private_stream_visibility?:
      | GraphQLTypes['private_stream_visibility_order_by']
      | undefined;
    profile?: GraphQLTypes['profiles_order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    profile_public?: GraphQLTypes['profiles_public_order_by'] | undefined;
    reactions_aggregate?:
      | GraphQLTypes['replies_reactions_aggregate_order_by']
      | undefined;
    reply?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** primary key columns input for table: replies */
  ['replies_pk_columns_input']: {
    id: GraphQLTypes['bigint'];
  };
  /** columns and relationships of "replies_reactions" */
  ['replies_reactions']: {
    __typename: 'replies_reactions';
    /** An object relationship */
    activity?: GraphQLTypes['activities'] | undefined;
    activity_id: number;
    created_at: GraphQLTypes['timestamptz'];
    id: GraphQLTypes['bigint'];
    /** An object relationship */
    profile?: GraphQLTypes['profiles'] | undefined;
    profile_id: number;
    /** An object relationship */
    profile_public?: GraphQLTypes['profiles_public'] | undefined;
    reaction: string;
    /** An object relationship */
    reply?: GraphQLTypes['replies'] | undefined;
    reply_id: number;
    updated_at: GraphQLTypes['timestamptz'];
  };
  /** aggregated selection of "replies_reactions" */
  ['replies_reactions_aggregate']: {
    __typename: 'replies_reactions_aggregate';
    aggregate?: GraphQLTypes['replies_reactions_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['replies_reactions']>;
  };
  ['replies_reactions_aggregate_bool_exp']: {
    count?:
      | GraphQLTypes['replies_reactions_aggregate_bool_exp_count']
      | undefined;
  };
  ['replies_reactions_aggregate_bool_exp_count']: {
    arguments?:
      | Array<GraphQLTypes['replies_reactions_select_column']>
      | undefined;
    distinct?: boolean | undefined;
    filter?: GraphQLTypes['replies_reactions_bool_exp'] | undefined;
    predicate: GraphQLTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "replies_reactions" */
  ['replies_reactions_aggregate_fields']: {
    __typename: 'replies_reactions_aggregate_fields';
    avg?: GraphQLTypes['replies_reactions_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['replies_reactions_max_fields'] | undefined;
    min?: GraphQLTypes['replies_reactions_min_fields'] | undefined;
    stddev?: GraphQLTypes['replies_reactions_stddev_fields'] | undefined;
    stddev_pop?:
      | GraphQLTypes['replies_reactions_stddev_pop_fields']
      | undefined;
    stddev_samp?:
      | GraphQLTypes['replies_reactions_stddev_samp_fields']
      | undefined;
    sum?: GraphQLTypes['replies_reactions_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['replies_reactions_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['replies_reactions_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['replies_reactions_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "replies_reactions" */
  ['replies_reactions_aggregate_order_by']: {
    avg?: GraphQLTypes['replies_reactions_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['replies_reactions_max_order_by'] | undefined;
    min?: GraphQLTypes['replies_reactions_min_order_by'] | undefined;
    stddev?: GraphQLTypes['replies_reactions_stddev_order_by'] | undefined;
    stddev_pop?:
      | GraphQLTypes['replies_reactions_stddev_pop_order_by']
      | undefined;
    stddev_samp?:
      | GraphQLTypes['replies_reactions_stddev_samp_order_by']
      | undefined;
    sum?: GraphQLTypes['replies_reactions_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['replies_reactions_var_pop_order_by'] | undefined;
    var_samp?: GraphQLTypes['replies_reactions_var_samp_order_by'] | undefined;
    variance?: GraphQLTypes['replies_reactions_variance_order_by'] | undefined;
  };
  /** input type for inserting array relation for remote table "replies_reactions" */
  ['replies_reactions_arr_rel_insert_input']: {
    data: Array<GraphQLTypes['replies_reactions_insert_input']>;
    /** upsert condition */
    on_conflict?: GraphQLTypes['replies_reactions_on_conflict'] | undefined;
  };
  /** aggregate avg on columns */
  ['replies_reactions_avg_fields']: {
    __typename: 'replies_reactions_avg_fields';
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    reply_id?: number | undefined;
  };
  /** order by avg() on columns of table "replies_reactions" */
  ['replies_reactions_avg_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    reply_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "replies_reactions". All fields are combined with a logical 'AND'. */
  ['replies_reactions_bool_exp']: {
    _and?: Array<GraphQLTypes['replies_reactions_bool_exp']> | undefined;
    _not?: GraphQLTypes['replies_reactions_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['replies_reactions_bool_exp']> | undefined;
    activity?: GraphQLTypes['activities_bool_exp'] | undefined;
    activity_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    created_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    profile?: GraphQLTypes['profiles_bool_exp'] | undefined;
    profile_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    profile_public?: GraphQLTypes['profiles_public_bool_exp'] | undefined;
    reaction?: GraphQLTypes['String_comparison_exp'] | undefined;
    reply?: GraphQLTypes['replies_bool_exp'] | undefined;
    reply_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
  };
  /** unique or primary key constraints on table "replies_reactions" */
  ['replies_reactions_constraint']: replies_reactions_constraint;
  /** input type for inserting data into table "replies_reactions" */
  ['replies_reactions_insert_input']: {
    activity_id?: number | undefined;
    reaction?: string | undefined;
    reply?: GraphQLTypes['replies_obj_rel_insert_input'] | undefined;
    reply_id?: number | undefined;
  };
  /** aggregate max on columns */
  ['replies_reactions_max_fields']: {
    __typename: 'replies_reactions_max_fields';
    activity_id?: number | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: number | undefined;
    reaction?: string | undefined;
    reply_id?: number | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by max() on columns of table "replies_reactions" */
  ['replies_reactions_max_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    reaction?: GraphQLTypes['order_by'] | undefined;
    reply_id?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate min on columns */
  ['replies_reactions_min_fields']: {
    __typename: 'replies_reactions_min_fields';
    activity_id?: number | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: number | undefined;
    reaction?: string | undefined;
    reply_id?: number | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** order by min() on columns of table "replies_reactions" */
  ['replies_reactions_min_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    reaction?: GraphQLTypes['order_by'] | undefined;
    reply_id?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** response of any mutation on the table "replies_reactions" */
  ['replies_reactions_mutation_response']: {
    __typename: 'replies_reactions_mutation_response';
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['replies_reactions']>;
  };
  /** on_conflict condition type for table "replies_reactions" */
  ['replies_reactions_on_conflict']: {
    constraint: GraphQLTypes['replies_reactions_constraint'];
    update_columns: Array<GraphQLTypes['replies_reactions_update_column']>;
    where?: GraphQLTypes['replies_reactions_bool_exp'] | undefined;
  };
  /** Ordering options when selecting data from "replies_reactions". */
  ['replies_reactions_order_by']: {
    activity?: GraphQLTypes['activities_order_by'] | undefined;
    activity_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile?: GraphQLTypes['profiles_order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    profile_public?: GraphQLTypes['profiles_public_order_by'] | undefined;
    reaction?: GraphQLTypes['order_by'] | undefined;
    reply?: GraphQLTypes['replies_order_by'] | undefined;
    reply_id?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "replies_reactions" */
  ['replies_reactions_select_column']: replies_reactions_select_column;
  /** aggregate stddev on columns */
  ['replies_reactions_stddev_fields']: {
    __typename: 'replies_reactions_stddev_fields';
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    reply_id?: number | undefined;
  };
  /** order by stddev() on columns of table "replies_reactions" */
  ['replies_reactions_stddev_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    reply_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_pop on columns */
  ['replies_reactions_stddev_pop_fields']: {
    __typename: 'replies_reactions_stddev_pop_fields';
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    reply_id?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "replies_reactions" */
  ['replies_reactions_stddev_pop_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    reply_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_samp on columns */
  ['replies_reactions_stddev_samp_fields']: {
    __typename: 'replies_reactions_stddev_samp_fields';
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    reply_id?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "replies_reactions" */
  ['replies_reactions_stddev_samp_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    reply_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "replies_reactions" */
  ['replies_reactions_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['replies_reactions_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['replies_reactions_stream_cursor_value_input']: {
    activity_id?: number | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: number | undefined;
    reaction?: string | undefined;
    reply_id?: number | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** aggregate sum on columns */
  ['replies_reactions_sum_fields']: {
    __typename: 'replies_reactions_sum_fields';
    activity_id?: number | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: number | undefined;
    reply_id?: number | undefined;
  };
  /** order by sum() on columns of table "replies_reactions" */
  ['replies_reactions_sum_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    reply_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** placeholder for update columns of table "replies_reactions" (current role has no relevant permissions) */
  ['replies_reactions_update_column']: replies_reactions_update_column;
  /** aggregate var_pop on columns */
  ['replies_reactions_var_pop_fields']: {
    __typename: 'replies_reactions_var_pop_fields';
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    reply_id?: number | undefined;
  };
  /** order by var_pop() on columns of table "replies_reactions" */
  ['replies_reactions_var_pop_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    reply_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate var_samp on columns */
  ['replies_reactions_var_samp_fields']: {
    __typename: 'replies_reactions_var_samp_fields';
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    reply_id?: number | undefined;
  };
  /** order by var_samp() on columns of table "replies_reactions" */
  ['replies_reactions_var_samp_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    reply_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate variance on columns */
  ['replies_reactions_variance_fields']: {
    __typename: 'replies_reactions_variance_fields';
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
    reply_id?: number | undefined;
  };
  /** order by variance() on columns of table "replies_reactions" */
  ['replies_reactions_variance_order_by']: {
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    reply_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "replies" */
  ['replies_select_column']: replies_select_column;
  /** input type for updating data in table "replies" */
  ['replies_set_input']: {
    deleted_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** aggregate stddev on columns */
  ['replies_stddev_fields']: {
    __typename: 'replies_stddev_fields';
    activity_actor_id?: number | undefined;
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by stddev() on columns of table "replies" */
  ['replies_stddev_order_by']: {
    activity_actor_id?: GraphQLTypes['order_by'] | undefined;
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_pop on columns */
  ['replies_stddev_pop_fields']: {
    __typename: 'replies_stddev_pop_fields';
    activity_actor_id?: number | undefined;
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "replies" */
  ['replies_stddev_pop_order_by']: {
    activity_actor_id?: GraphQLTypes['order_by'] | undefined;
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_samp on columns */
  ['replies_stddev_samp_fields']: {
    __typename: 'replies_stddev_samp_fields';
    activity_actor_id?: number | undefined;
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "replies" */
  ['replies_stddev_samp_order_by']: {
    activity_actor_id?: GraphQLTypes['order_by'] | undefined;
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "replies" */
  ['replies_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['replies_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['replies_stream_cursor_value_input']: {
    activity_actor_id?: number | undefined;
    activity_id?: number | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    deleted_at?: GraphQLTypes['timestamptz'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: number | undefined;
    reply?: string | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** aggregate sum on columns */
  ['replies_sum_fields']: {
    __typename: 'replies_sum_fields';
    activity_actor_id?: number | undefined;
    activity_id?: number | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    profile_id?: number | undefined;
  };
  /** order by sum() on columns of table "replies" */
  ['replies_sum_order_by']: {
    activity_actor_id?: GraphQLTypes['order_by'] | undefined;
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** update columns of table "replies" */
  ['replies_update_column']: replies_update_column;
  ['replies_updates']: {
    /** sets the columns of the filtered rows to the given values */
    _set?: GraphQLTypes['replies_set_input'] | undefined;
    /** filter the rows which have to be updated */
    where: GraphQLTypes['replies_bool_exp'];
  };
  /** aggregate var_pop on columns */
  ['replies_var_pop_fields']: {
    __typename: 'replies_var_pop_fields';
    activity_actor_id?: number | undefined;
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by var_pop() on columns of table "replies" */
  ['replies_var_pop_order_by']: {
    activity_actor_id?: GraphQLTypes['order_by'] | undefined;
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate var_samp on columns */
  ['replies_var_samp_fields']: {
    __typename: 'replies_var_samp_fields';
    activity_actor_id?: number | undefined;
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by var_samp() on columns of table "replies" */
  ['replies_var_samp_order_by']: {
    activity_actor_id?: GraphQLTypes['order_by'] | undefined;
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate variance on columns */
  ['replies_variance_fields']: {
    __typename: 'replies_variance_fields';
    activity_actor_id?: number | undefined;
    activity_id?: number | undefined;
    id?: number | undefined;
    profile_id?: number | undefined;
  };
  /** order by variance() on columns of table "replies" */
  ['replies_variance_order_by']: {
    activity_actor_id?: GraphQLTypes['order_by'] | undefined;
    activity_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** columns and relationships of "reputation_scores" */
  ['reputation_scores']: {
    __typename: 'reputation_scores';
    colinks_engagement_score?: number | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    email_score: number;
    farcaster_score: number;
    github_score: number;
    invite_score: number;
    linkedin_score: number;
    links_score: number;
    pgive_score: number;
    poap_score: number;
    profile_id: GraphQLTypes['bigint'];
    social_give_score: number;
    total_score: number;
    twitter_score: number;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** Boolean expression to filter rows from the table "reputation_scores". All fields are combined with a logical 'AND'. */
  ['reputation_scores_bool_exp']: {
    _and?: Array<GraphQLTypes['reputation_scores_bool_exp']> | undefined;
    _not?: GraphQLTypes['reputation_scores_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['reputation_scores_bool_exp']> | undefined;
    colinks_engagement_score?: GraphQLTypes['Int_comparison_exp'] | undefined;
    created_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    email_score?: GraphQLTypes['Int_comparison_exp'] | undefined;
    farcaster_score?: GraphQLTypes['Int_comparison_exp'] | undefined;
    github_score?: GraphQLTypes['Int_comparison_exp'] | undefined;
    invite_score?: GraphQLTypes['Int_comparison_exp'] | undefined;
    linkedin_score?: GraphQLTypes['Int_comparison_exp'] | undefined;
    links_score?: GraphQLTypes['Int_comparison_exp'] | undefined;
    pgive_score?: GraphQLTypes['Int_comparison_exp'] | undefined;
    poap_score?: GraphQLTypes['Int_comparison_exp'] | undefined;
    profile_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    social_give_score?: GraphQLTypes['Int_comparison_exp'] | undefined;
    total_score?: GraphQLTypes['Int_comparison_exp'] | undefined;
    twitter_score?: GraphQLTypes['Int_comparison_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
  };
  /** Ordering options when selecting data from "reputation_scores". */
  ['reputation_scores_order_by']: {
    colinks_engagement_score?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    email_score?: GraphQLTypes['order_by'] | undefined;
    farcaster_score?: GraphQLTypes['order_by'] | undefined;
    github_score?: GraphQLTypes['order_by'] | undefined;
    invite_score?: GraphQLTypes['order_by'] | undefined;
    linkedin_score?: GraphQLTypes['order_by'] | undefined;
    links_score?: GraphQLTypes['order_by'] | undefined;
    pgive_score?: GraphQLTypes['order_by'] | undefined;
    poap_score?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    social_give_score?: GraphQLTypes['order_by'] | undefined;
    total_score?: GraphQLTypes['order_by'] | undefined;
    twitter_score?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "reputation_scores" */
  ['reputation_scores_select_column']: reputation_scores_select_column;
  /** Streaming cursor of the table "reputation_scores" */
  ['reputation_scores_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['reputation_scores_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['reputation_scores_stream_cursor_value_input']: {
    colinks_engagement_score?: number | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    email_score?: number | undefined;
    farcaster_score?: number | undefined;
    github_score?: number | undefined;
    invite_score?: number | undefined;
    linkedin_score?: number | undefined;
    links_score?: number | undefined;
    pgive_score?: number | undefined;
    poap_score?: number | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    social_give_score?: number | undefined;
    total_score?: number | undefined;
    twitter_score?: number | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  ['search_contributions_args']: {
    result_limit?: number | undefined;
    search?: string | undefined;
  };
  ['search_replies_args']: {
    search?: string | undefined;
  };
  /** columns and relationships of "skills" */
  ['skills']: {
    __typename: 'skills';
    count: number;
    created_at: GraphQLTypes['timestamptz'];
    hidden: boolean;
    name: GraphQLTypes['citext'];
    /** An object relationship */
    profile_skills?: GraphQLTypes['profile_skills'] | undefined;
    updated_at: GraphQLTypes['timestamptz'];
  };
  /** Boolean expression to filter rows from the table "skills". All fields are combined with a logical 'AND'. */
  ['skills_bool_exp']: {
    _and?: Array<GraphQLTypes['skills_bool_exp']> | undefined;
    _not?: GraphQLTypes['skills_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['skills_bool_exp']> | undefined;
    count?: GraphQLTypes['Int_comparison_exp'] | undefined;
    created_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    hidden?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    name?: GraphQLTypes['citext_comparison_exp'] | undefined;
    profile_skills?: GraphQLTypes['profile_skills_bool_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
  };
  /** unique or primary key constraints on table "skills" */
  ['skills_constraint']: skills_constraint;
  /** input type for inserting data into table "skills" */
  ['skills_insert_input']: {
    name?: GraphQLTypes['citext'] | undefined;
    profile_skills?:
      | GraphQLTypes['profile_skills_obj_rel_insert_input']
      | undefined;
  };
  /** response of any mutation on the table "skills" */
  ['skills_mutation_response']: {
    __typename: 'skills_mutation_response';
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['skills']>;
  };
  /** input type for inserting object relation for remote table "skills" */
  ['skills_obj_rel_insert_input']: {
    data: GraphQLTypes['skills_insert_input'];
    /** upsert condition */
    on_conflict?: GraphQLTypes['skills_on_conflict'] | undefined;
  };
  /** on_conflict condition type for table "skills" */
  ['skills_on_conflict']: {
    constraint: GraphQLTypes['skills_constraint'];
    update_columns: Array<GraphQLTypes['skills_update_column']>;
    where?: GraphQLTypes['skills_bool_exp'] | undefined;
  };
  /** Ordering options when selecting data from "skills". */
  ['skills_order_by']: {
    count?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    hidden?: GraphQLTypes['order_by'] | undefined;
    name?: GraphQLTypes['order_by'] | undefined;
    profile_skills?: GraphQLTypes['profile_skills_order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "skills" */
  ['skills_select_column']: skills_select_column;
  /** Streaming cursor of the table "skills" */
  ['skills_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['skills_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['skills_stream_cursor_value_input']: {
    count?: number | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    hidden?: boolean | undefined;
    name?: GraphQLTypes['citext'] | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
  };
  /** placeholder for update columns of table "skills" (current role has no relevant permissions) */
  ['skills_update_column']: skills_update_column;
  ['smallint']: any;
  /** Boolean expression to compare columns of type "smallint". All fields are combined with logical 'AND'. */
  ['smallint_array_comparison_exp']: {
    /** is the array contained in the given array value */
    _contained_in?: Array<GraphQLTypes['smallint']> | undefined;
    /** does the array contain the given value */
    _contains?: Array<GraphQLTypes['smallint']> | undefined;
    _eq?: Array<GraphQLTypes['smallint']> | undefined;
    _gt?: Array<GraphQLTypes['smallint']> | undefined;
    _gte?: Array<GraphQLTypes['smallint']> | undefined;
    _in?: Array<Array<GraphQLTypes['smallint']> | undefined>;
    _is_null?: boolean | undefined;
    _lt?: Array<GraphQLTypes['smallint']> | undefined;
    _lte?: Array<GraphQLTypes['smallint']> | undefined;
    _neq?: Array<GraphQLTypes['smallint']> | undefined;
    _nin?: Array<Array<GraphQLTypes['smallint']> | undefined>;
  };
  /** Boolean expression to compare columns of type "smallint". All fields are combined with logical 'AND'. */
  ['smallint_comparison_exp']: {
    _eq?: GraphQLTypes['smallint'] | undefined;
    _gt?: GraphQLTypes['smallint'] | undefined;
    _gte?: GraphQLTypes['smallint'] | undefined;
    _in?: Array<GraphQLTypes['smallint']> | undefined;
    _is_null?: boolean | undefined;
    _lt?: GraphQLTypes['smallint'] | undefined;
    _lte?: GraphQLTypes['smallint'] | undefined;
    _neq?: GraphQLTypes['smallint'] | undefined;
    _nin?: Array<GraphQLTypes['smallint']> | undefined;
  };
  ['subscription_root']: {
    __typename: 'subscription_root';
    /** An array relationship */
    activities: Array<GraphQLTypes['activities']>;
    /** An aggregate relationship */
    activities_aggregate: GraphQLTypes['activities_aggregate'];
    /** fetch data from the table: "activities" using primary key columns */
    activities_by_pk?: GraphQLTypes['activities'] | undefined;
    /** fetch data from the table in a streaming manner: "activities" */
    activities_stream: Array<GraphQLTypes['activities']>;
    /** fetch data from the table: "big_questions" */
    big_questions: Array<GraphQLTypes['big_questions']>;
    /** fetch data from the table: "big_questions" using primary key columns */
    big_questions_by_pk?: GraphQLTypes['big_questions'] | undefined;
    /** fetch data from the table in a streaming manner: "big_questions" */
    big_questions_stream: Array<GraphQLTypes['big_questions']>;
    /** An array relationship */
    burns: Array<GraphQLTypes['burns']>;
    /** fetch data from the table: "burns" using primary key columns */
    burns_by_pk?: GraphQLTypes['burns'] | undefined;
    /** fetch data from the table in a streaming manner: "burns" */
    burns_stream: Array<GraphQLTypes['burns']>;
    /** An array relationship */
    circle_api_keys: Array<GraphQLTypes['circle_api_keys']>;
    /** fetch data from the table: "circle_api_keys" using primary key columns */
    circle_api_keys_by_pk?: GraphQLTypes['circle_api_keys'] | undefined;
    /** fetch data from the table in a streaming manner: "circle_api_keys" */
    circle_api_keys_stream: Array<GraphQLTypes['circle_api_keys']>;
    /** fetch data from the table: "circle_integrations" */
    circle_integrations: Array<GraphQLTypes['circle_integrations']>;
    /** fetch data from the table: "circle_integrations" using primary key columns */
    circle_integrations_by_pk?: GraphQLTypes['circle_integrations'] | undefined;
    /** fetch data from the table in a streaming manner: "circle_integrations" */
    circle_integrations_stream: Array<GraphQLTypes['circle_integrations']>;
    /** fetch data from the table: "circle_private" */
    circle_private: Array<GraphQLTypes['circle_private']>;
    /** fetch data from the table in a streaming manner: "circle_private" */
    circle_private_stream: Array<GraphQLTypes['circle_private']>;
    /** fetch data from the table: "circle_share_tokens" */
    circle_share_tokens: Array<GraphQLTypes['circle_share_tokens']>;
    /** fetch data from the table: "circle_share_tokens" using primary key columns */
    circle_share_tokens_by_pk?: GraphQLTypes['circle_share_tokens'] | undefined;
    /** fetch data from the table in a streaming manner: "circle_share_tokens" */
    circle_share_tokens_stream: Array<GraphQLTypes['circle_share_tokens']>;
    /** An array relationship */
    circles: Array<GraphQLTypes['circles']>;
    /** fetch data from the table: "circles" using primary key columns */
    circles_by_pk?: GraphQLTypes['circles'] | undefined;
    /** fetch data from the table in a streaming manner: "circles" */
    circles_stream: Array<GraphQLTypes['circles']>;
    /** An array relationship */
    claims: Array<GraphQLTypes['claims']>;
    /** An aggregate relationship */
    claims_aggregate: GraphQLTypes['claims_aggregate'];
    /** fetch data from the table: "claims" using primary key columns */
    claims_by_pk?: GraphQLTypes['claims'] | undefined;
    /** fetch data from the table in a streaming manner: "claims" */
    claims_stream: Array<GraphQLTypes['claims']>;
    /** An array relationship */
    colinks_gives: Array<GraphQLTypes['colinks_gives']>;
    /** An aggregate relationship */
    colinks_gives_aggregate: GraphQLTypes['colinks_gives_aggregate'];
    /** fetch data from the table: "colinks_gives" using primary key columns */
    colinks_gives_by_pk?: GraphQLTypes['colinks_gives'] | undefined;
    /** fetch data from the table in a streaming manner: "colinks_gives" */
    colinks_gives_stream: Array<GraphQLTypes['colinks_gives']>;
    /** fetch data from the table: "contribution_count" */
    contribution_count: Array<GraphQLTypes['contribution_count']>;
    /** fetch data from the table in a streaming manner: "contribution_count" */
    contribution_count_stream: Array<GraphQLTypes['contribution_count']>;
    /** An array relationship */
    contributions: Array<GraphQLTypes['contributions']>;
    /** An aggregate relationship */
    contributions_aggregate: GraphQLTypes['contributions_aggregate'];
    /** fetch data from the table: "contributions" using primary key columns */
    contributions_by_pk?: GraphQLTypes['contributions'] | undefined;
    /** fetch data from the table in a streaming manner: "contributions" */
    contributions_stream: Array<GraphQLTypes['contributions']>;
    /** fetch data from the table: "cosouls" */
    cosouls: Array<GraphQLTypes['cosouls']>;
    /** fetch data from the table: "cosouls" using primary key columns */
    cosouls_by_pk?: GraphQLTypes['cosouls'] | undefined;
    /** fetch data from the table in a streaming manner: "cosouls" */
    cosouls_stream: Array<GraphQLTypes['cosouls']>;
    /** An array relationship */
    distributions: Array<GraphQLTypes['distributions']>;
    /** An aggregate relationship */
    distributions_aggregate: GraphQLTypes['distributions_aggregate'];
    /** fetch data from the table: "distributions" using primary key columns */
    distributions_by_pk?: GraphQLTypes['distributions'] | undefined;
    /** fetch data from the table in a streaming manner: "distributions" */
    distributions_stream: Array<GraphQLTypes['distributions']>;
    /** An array relationship */
    emails: Array<GraphQLTypes['emails']>;
    /** fetch data from the table in a streaming manner: "emails" */
    emails_stream: Array<GraphQLTypes['emails']>;
    /** fetch data from the table: "enriched_casts" */
    enriched_casts: Array<GraphQLTypes['enriched_casts']>;
    /** fetch data from the table: "enriched_casts" using primary key columns */
    enriched_casts_by_pk?: GraphQLTypes['enriched_casts'] | undefined;
    /** fetch data from the table in a streaming manner: "enriched_casts" */
    enriched_casts_stream: Array<GraphQLTypes['enriched_casts']>;
    /** fetch data from the table: "epoch_pgive_data" */
    epoch_pgive_data: Array<GraphQLTypes['epoch_pgive_data']>;
    /** fetch data from the table: "epoch_pgive_data" using primary key columns */
    epoch_pgive_data_by_pk?: GraphQLTypes['epoch_pgive_data'] | undefined;
    /** fetch data from the table in a streaming manner: "epoch_pgive_data" */
    epoch_pgive_data_stream: Array<GraphQLTypes['epoch_pgive_data']>;
    /** An array relationship */
    epochs: Array<GraphQLTypes['epochs']>;
    /** fetch data from the table: "epoches" using primary key columns */
    epochs_by_pk?: GraphQLTypes['epochs'] | undefined;
    /** fetch data from the table in a streaming manner: "epoches" */
    epochs_stream: Array<GraphQLTypes['epochs']>;
    /** fetch data from the table: "farcaster_accounts" */
    farcaster_accounts: Array<GraphQLTypes['farcaster_accounts']>;
    /** fetch data from the table: "farcaster_accounts" using primary key columns */
    farcaster_accounts_by_pk?: GraphQLTypes['farcaster_accounts'] | undefined;
    /** fetch data from the table in a streaming manner: "farcaster_accounts" */
    farcaster_accounts_stream: Array<GraphQLTypes['farcaster_accounts']>;
    /** fetch data from the table: "farcaster.casts" */
    farcaster_casts: Array<GraphQLTypes['farcaster_casts']>;
    /** fetch aggregated fields from the table: "farcaster.casts" */
    farcaster_casts_aggregate: GraphQLTypes['farcaster_casts_aggregate'];
    /** fetch data from the table: "farcaster.casts" using primary key columns */
    farcaster_casts_by_pk?: GraphQLTypes['farcaster_casts'] | undefined;
    /** fetch data from the table in a streaming manner: "farcaster.casts" */
    farcaster_casts_stream: Array<GraphQLTypes['farcaster_casts']>;
    /** fetch data from the table: "farcaster.reactions" */
    farcaster_reactions: Array<GraphQLTypes['farcaster_reactions']>;
    /** fetch aggregated fields from the table: "farcaster.reactions" */
    farcaster_reactions_aggregate: GraphQLTypes['farcaster_reactions_aggregate'];
    /** fetch data from the table: "farcaster.reactions" using primary key columns */
    farcaster_reactions_by_pk?: GraphQLTypes['farcaster_reactions'] | undefined;
    /** fetch data from the table in a streaming manner: "farcaster.reactions" */
    farcaster_reactions_stream: Array<GraphQLTypes['farcaster_reactions']>;
    /** fetch data from the table: "gift_private" */
    gift_private: Array<GraphQLTypes['gift_private']>;
    /** fetch data from the table in a streaming manner: "gift_private" */
    gift_private_stream: Array<GraphQLTypes['gift_private']>;
    /** fetch data from the table: "github_accounts" */
    github_accounts: Array<GraphQLTypes['github_accounts']>;
    /** fetch data from the table: "github_accounts" using primary key columns */
    github_accounts_by_pk?: GraphQLTypes['github_accounts'] | undefined;
    /** fetch data from the table in a streaming manner: "github_accounts" */
    github_accounts_stream: Array<GraphQLTypes['github_accounts']>;
    /** An array relationship */
    histories: Array<GraphQLTypes['histories']>;
    /** fetch data from the table: "histories" using primary key columns */
    histories_by_pk?: GraphQLTypes['histories'] | undefined;
    /** fetch data from the table in a streaming manner: "histories" */
    histories_stream: Array<GraphQLTypes['histories']>;
    /** An array relationship */
    invite_codes: Array<GraphQLTypes['invite_codes']>;
    /** An aggregate relationship */
    invite_codes_aggregate: GraphQLTypes['invite_codes_aggregate'];
    /** fetch data from the table: "invite_codes" using primary key columns */
    invite_codes_by_pk?: GraphQLTypes['invite_codes'] | undefined;
    /** fetch data from the table in a streaming manner: "invite_codes" */
    invite_codes_stream: Array<GraphQLTypes['invite_codes']>;
    /** An array relationship */
    link_holders: Array<GraphQLTypes['link_holders']>;
    /** An aggregate relationship */
    link_holders_aggregate: GraphQLTypes['link_holders_aggregate'];
    /** fetch data from the table: "link_holders" using primary key columns */
    link_holders_by_pk?: GraphQLTypes['link_holders'] | undefined;
    /** fetch data from the table in a streaming manner: "link_holders" */
    link_holders_stream: Array<GraphQLTypes['link_holders']>;
    /** fetch data from the table: "link_tx" */
    link_tx: Array<GraphQLTypes['link_tx']>;
    /** fetch data from the table: "link_tx" using primary key columns */
    link_tx_by_pk?: GraphQLTypes['link_tx'] | undefined;
    /** fetch data from the table in a streaming manner: "link_tx" */
    link_tx_stream: Array<GraphQLTypes['link_tx']>;
    /** fetch data from the table: "linkedin_accounts" */
    linkedin_accounts: Array<GraphQLTypes['linkedin_accounts']>;
    /** fetch data from the table: "linkedin_accounts" using primary key columns */
    linkedin_accounts_by_pk?: GraphQLTypes['linkedin_accounts'] | undefined;
    /** fetch data from the table in a streaming manner: "linkedin_accounts" */
    linkedin_accounts_stream: Array<GraphQLTypes['linkedin_accounts']>;
    /** An array relationship */
    locked_token_distribution_gifts: Array<
      GraphQLTypes['locked_token_distribution_gifts']
    >;
    /** fetch data from the table: "locked_token_distribution_gifts" using primary key columns */
    locked_token_distribution_gifts_by_pk?:
      | GraphQLTypes['locked_token_distribution_gifts']
      | undefined;
    /** fetch data from the table in a streaming manner: "locked_token_distribution_gifts" */
    locked_token_distribution_gifts_stream: Array<
      GraphQLTypes['locked_token_distribution_gifts']
    >;
    /** fetch data from the table: "locked_token_distributions" */
    locked_token_distributions: Array<
      GraphQLTypes['locked_token_distributions']
    >;
    /** fetch data from the table: "locked_token_distributions" using primary key columns */
    locked_token_distributions_by_pk?:
      | GraphQLTypes['locked_token_distributions']
      | undefined;
    /** fetch data from the table in a streaming manner: "locked_token_distributions" */
    locked_token_distributions_stream: Array<
      GraphQLTypes['locked_token_distributions']
    >;
    /** fetch data from the table: "member_circle_pgives" */
    member_circle_pgives: Array<GraphQLTypes['member_circle_pgives']>;
    /** fetch data from the table in a streaming manner: "member_circle_pgives" */
    member_circle_pgives_stream: Array<GraphQLTypes['member_circle_pgives']>;
    /** An array relationship */
    member_epoch_pgives: Array<GraphQLTypes['member_epoch_pgives']>;
    /** An aggregate relationship */
    member_epoch_pgives_aggregate: GraphQLTypes['member_epoch_pgives_aggregate'];
    /** fetch data from the table: "member_epoch_pgives" using primary key columns */
    member_epoch_pgives_by_pk?: GraphQLTypes['member_epoch_pgives'] | undefined;
    /** fetch data from the table in a streaming manner: "member_epoch_pgives" */
    member_epoch_pgives_stream: Array<GraphQLTypes['member_epoch_pgives']>;
    /** An array relationship */
    mutes: Array<GraphQLTypes['mutes']>;
    /** fetch data from the table: "mutes" using primary key columns */
    mutes_by_pk?: GraphQLTypes['mutes'] | undefined;
    /** fetch data from the table in a streaming manner: "mutes" */
    mutes_stream: Array<GraphQLTypes['mutes']>;
    /** fetch data from the table: "nft_collections" */
    nft_collections: Array<GraphQLTypes['nft_collections']>;
    /** fetch data from the table in a streaming manner: "nft_collections" */
    nft_collections_stream: Array<GraphQLTypes['nft_collections']>;
    /** fetch data from the table: "nft_holdings" */
    nft_holdings: Array<GraphQLTypes['nft_holdings']>;
    /** fetch data from the table in a streaming manner: "nft_holdings" */
    nft_holdings_stream: Array<GraphQLTypes['nft_holdings']>;
    /** An array relationship */
    nominees: Array<GraphQLTypes['nominees']>;
    /** An aggregate relationship */
    nominees_aggregate: GraphQLTypes['nominees_aggregate'];
    /** fetch data from the table: "nominees" using primary key columns */
    nominees_by_pk?: GraphQLTypes['nominees'] | undefined;
    /** fetch data from the table in a streaming manner: "nominees" */
    nominees_stream: Array<GraphQLTypes['nominees']>;
    /** fetch data from the table: "note_count" */
    note_count: Array<GraphQLTypes['note_count']>;
    /** fetch data from the table in a streaming manner: "note_count" */
    note_count_stream: Array<GraphQLTypes['note_count']>;
    /** fetch data from the table: "notifications" */
    notifications: Array<GraphQLTypes['notifications']>;
    /** fetch aggregated fields from the table: "notifications" */
    notifications_aggregate: GraphQLTypes['notifications_aggregate'];
    /** fetch data from the table: "notifications" using primary key columns */
    notifications_by_pk?: GraphQLTypes['notifications'] | undefined;
    /** fetch data from the table in a streaming manner: "notifications" */
    notifications_stream: Array<GraphQLTypes['notifications']>;
    /** An array relationship */
    org_members: Array<GraphQLTypes['org_members']>;
    /** fetch data from the table: "org_members" using primary key columns */
    org_members_by_pk?: GraphQLTypes['org_members'] | undefined;
    /** fetch data from the table in a streaming manner: "org_members" */
    org_members_stream: Array<GraphQLTypes['org_members']>;
    /** fetch data from the table: "org_share_tokens" */
    org_share_tokens: Array<GraphQLTypes['org_share_tokens']>;
    /** fetch data from the table: "org_share_tokens" using primary key columns */
    org_share_tokens_by_pk?: GraphQLTypes['org_share_tokens'] | undefined;
    /** fetch data from the table in a streaming manner: "org_share_tokens" */
    org_share_tokens_stream: Array<GraphQLTypes['org_share_tokens']>;
    /** fetch data from the table: "organizations" */
    organizations: Array<GraphQLTypes['organizations']>;
    /** fetch data from the table: "organizations" using primary key columns */
    organizations_by_pk?: GraphQLTypes['organizations'] | undefined;
    /** fetch data from the table in a streaming manner: "organizations" */
    organizations_stream: Array<GraphQLTypes['organizations']>;
    /** fetch data from the table: "pending_gift_private" */
    pending_gift_private: Array<GraphQLTypes['pending_gift_private']>;
    /** fetch data from the table in a streaming manner: "pending_gift_private" */
    pending_gift_private_stream: Array<GraphQLTypes['pending_gift_private']>;
    /** An array relationship */
    pending_token_gifts: Array<GraphQLTypes['pending_token_gifts']>;
    /** fetch data from the table: "pending_token_gifts" using primary key columns */
    pending_token_gifts_by_pk?: GraphQLTypes['pending_token_gifts'] | undefined;
    /** fetch data from the table in a streaming manner: "pending_token_gifts" */
    pending_token_gifts_stream: Array<GraphQLTypes['pending_token_gifts']>;
    /** fetch data from the table: "pending_vault_transactions" */
    pending_vault_transactions: Array<
      GraphQLTypes['pending_vault_transactions']
    >;
    /** fetch data from the table: "pending_vault_transactions" using primary key columns */
    pending_vault_transactions_by_pk?:
      | GraphQLTypes['pending_vault_transactions']
      | undefined;
    /** fetch data from the table in a streaming manner: "pending_vault_transactions" */
    pending_vault_transactions_stream: Array<
      GraphQLTypes['pending_vault_transactions']
    >;
    /** fetch data from the table: "poap_events" */
    poap_events: Array<GraphQLTypes['poap_events']>;
    /** fetch aggregated fields from the table: "poap_events" */
    poap_events_aggregate: GraphQLTypes['poap_events_aggregate'];
    /** fetch data from the table: "poap_events" using primary key columns */
    poap_events_by_pk?: GraphQLTypes['poap_events'] | undefined;
    /** fetch data from the table in a streaming manner: "poap_events" */
    poap_events_stream: Array<GraphQLTypes['poap_events']>;
    /** fetch data from the table: "poap_holders" */
    poap_holders: Array<GraphQLTypes['poap_holders']>;
    /** fetch aggregated fields from the table: "poap_holders" */
    poap_holders_aggregate: GraphQLTypes['poap_holders_aggregate'];
    /** fetch data from the table: "poap_holders" using primary key columns */
    poap_holders_by_pk?: GraphQLTypes['poap_holders'] | undefined;
    /** fetch data from the table in a streaming manner: "poap_holders" */
    poap_holders_stream: Array<GraphQLTypes['poap_holders']>;
    /** An array relationship */
    private_stream_visibility: Array<GraphQLTypes['private_stream_visibility']>;
    /** fetch data from the table: "private_stream_visibility" using primary key columns */
    private_stream_visibility_by_pk?:
      | GraphQLTypes['private_stream_visibility']
      | undefined;
    /** fetch data from the table in a streaming manner: "private_stream_visibility" */
    private_stream_visibility_stream: Array<
      GraphQLTypes['private_stream_visibility']
    >;
    /** An array relationship */
    profile_skills: Array<GraphQLTypes['profile_skills']>;
    /** fetch data from the table: "profile_skills" using primary key columns */
    profile_skills_by_pk?: GraphQLTypes['profile_skills'] | undefined;
    /** fetch data from the table in a streaming manner: "profile_skills" */
    profile_skills_stream: Array<GraphQLTypes['profile_skills']>;
    /** fetch data from the table: "profiles" */
    profiles: Array<GraphQLTypes['profiles']>;
    /** fetch data from the table: "profiles" using primary key columns */
    profiles_by_pk?: GraphQLTypes['profiles'] | undefined;
    /** fetch data from the table: "profiles_private" */
    profiles_private: Array<GraphQLTypes['profiles_private']>;
    /** fetch data from the table in a streaming manner: "profiles_private" */
    profiles_private_stream: Array<GraphQLTypes['profiles_private']>;
    /** fetch data from the table: "profiles_public" */
    profiles_public: Array<GraphQLTypes['profiles_public']>;
    /** fetch data from the table in a streaming manner: "profiles_public" */
    profiles_public_stream: Array<GraphQLTypes['profiles_public']>;
    /** fetch data from the table in a streaming manner: "profiles" */
    profiles_stream: Array<GraphQLTypes['profiles']>;
    /** An array relationship */
    reactions: Array<GraphQLTypes['reactions']>;
    /** An aggregate relationship */
    reactions_aggregate: GraphQLTypes['reactions_aggregate'];
    /** fetch data from the table: "reactions" using primary key columns */
    reactions_by_pk?: GraphQLTypes['reactions'] | undefined;
    /** fetch data from the table in a streaming manner: "reactions" */
    reactions_stream: Array<GraphQLTypes['reactions']>;
    /** An array relationship */
    replies: Array<GraphQLTypes['replies']>;
    /** An aggregate relationship */
    replies_aggregate: GraphQLTypes['replies_aggregate'];
    /** fetch data from the table: "replies" using primary key columns */
    replies_by_pk?: GraphQLTypes['replies'] | undefined;
    /** fetch data from the table: "replies_reactions" */
    replies_reactions: Array<GraphQLTypes['replies_reactions']>;
    /** fetch aggregated fields from the table: "replies_reactions" */
    replies_reactions_aggregate: GraphQLTypes['replies_reactions_aggregate'];
    /** fetch data from the table: "replies_reactions" using primary key columns */
    replies_reactions_by_pk?: GraphQLTypes['replies_reactions'] | undefined;
    /** fetch data from the table in a streaming manner: "replies_reactions" */
    replies_reactions_stream: Array<GraphQLTypes['replies_reactions']>;
    /** fetch data from the table in a streaming manner: "replies" */
    replies_stream: Array<GraphQLTypes['replies']>;
    /** fetch data from the table: "reputation_scores" */
    reputation_scores: Array<GraphQLTypes['reputation_scores']>;
    /** fetch data from the table: "reputation_scores" using primary key columns */
    reputation_scores_by_pk?: GraphQLTypes['reputation_scores'] | undefined;
    /** fetch data from the table in a streaming manner: "reputation_scores" */
    reputation_scores_stream: Array<GraphQLTypes['reputation_scores']>;
    /** execute function "search_contributions" which returns "contributions" */
    search_contributions: Array<GraphQLTypes['contributions']>;
    /** execute function "search_contributions" and query aggregates on result of table type "contributions" */
    search_contributions_aggregate: GraphQLTypes['contributions_aggregate'];
    /** execute function "search_replies" which returns "replies" */
    search_replies: Array<GraphQLTypes['replies']>;
    /** execute function "search_replies" and query aggregates on result of table type "replies" */
    search_replies_aggregate: GraphQLTypes['replies_aggregate'];
    /** fetch data from the table: "skills" */
    skills: Array<GraphQLTypes['skills']>;
    /** fetch data from the table: "skills" using primary key columns */
    skills_by_pk?: GraphQLTypes['skills'] | undefined;
    /** fetch data from the table in a streaming manner: "skills" */
    skills_stream: Array<GraphQLTypes['skills']>;
    /** An array relationship */
    teammates: Array<GraphQLTypes['teammates']>;
    /** fetch data from the table: "teammates" using primary key columns */
    teammates_by_pk?: GraphQLTypes['teammates'] | undefined;
    /** fetch data from the table in a streaming manner: "teammates" */
    teammates_stream: Array<GraphQLTypes['teammates']>;
    /** An array relationship */
    token_gifts: Array<GraphQLTypes['token_gifts']>;
    /** An aggregate relationship */
    token_gifts_aggregate: GraphQLTypes['token_gifts_aggregate'];
    /** fetch data from the table: "token_gifts" using primary key columns */
    token_gifts_by_pk?: GraphQLTypes['token_gifts'] | undefined;
    /** fetch data from the table in a streaming manner: "token_gifts" */
    token_gifts_stream: Array<GraphQLTypes['token_gifts']>;
    /** fetch data from the table: "twitter_accounts" */
    twitter_accounts: Array<GraphQLTypes['twitter_accounts']>;
    /** fetch data from the table: "twitter_accounts" using primary key columns */
    twitter_accounts_by_pk?: GraphQLTypes['twitter_accounts'] | undefined;
    /** fetch data from the table in a streaming manner: "twitter_accounts" */
    twitter_accounts_stream: Array<GraphQLTypes['twitter_accounts']>;
    /** fetch data from the table: "user_private" */
    user_private: Array<GraphQLTypes['user_private']>;
    /** fetch aggregated fields from the table: "user_private" */
    user_private_aggregate: GraphQLTypes['user_private_aggregate'];
    /** fetch data from the table in a streaming manner: "user_private" */
    user_private_stream: Array<GraphQLTypes['user_private']>;
    /** An array relationship */
    users: Array<GraphQLTypes['users']>;
    /** fetch data from the table: "users" using primary key columns */
    users_by_pk?: GraphQLTypes['users'] | undefined;
    /** fetch data from the table in a streaming manner: "users" */
    users_stream: Array<GraphQLTypes['users']>;
    /** An array relationship */
    vault_transactions: Array<GraphQLTypes['vault_transactions']>;
    /** fetch data from the table: "vault_transactions" using primary key columns */
    vault_transactions_by_pk?: GraphQLTypes['vault_transactions'] | undefined;
    /** fetch data from the table in a streaming manner: "vault_transactions" */
    vault_transactions_stream: Array<GraphQLTypes['vault_transactions']>;
    /** fetch data from the table: "vault_tx_types" */
    vault_tx_types: Array<GraphQLTypes['vault_tx_types']>;
    /** fetch data from the table: "vault_tx_types" using primary key columns */
    vault_tx_types_by_pk?: GraphQLTypes['vault_tx_types'] | undefined;
    /** fetch data from the table in a streaming manner: "vault_tx_types" */
    vault_tx_types_stream: Array<GraphQLTypes['vault_tx_types']>;
    /** An array relationship */
    vaults: Array<GraphQLTypes['vaults']>;
    /** fetch data from the table: "vaults" using primary key columns */
    vaults_by_pk?: GraphQLTypes['vaults'] | undefined;
    /** fetch data from the table in a streaming manner: "vaults" */
    vaults_stream: Array<GraphQLTypes['vaults']>;
    /** execute function "vector_search_poap_events" which returns "poap_events" */
    vector_search_poap_events: Array<GraphQLTypes['poap_events']>;
    /** execute function "vector_search_poap_events" and query aggregates on result of table type "poap_events" */
    vector_search_poap_events_aggregate: GraphQLTypes['poap_events_aggregate'];
    /** execute function "vector_search_poap_holders" which returns "poap_holders" */
    vector_search_poap_holders: Array<GraphQLTypes['poap_holders']>;
    /** execute function "vector_search_poap_holders" and query aggregates on result of table type "poap_holders" */
    vector_search_poap_holders_aggregate: GraphQLTypes['poap_holders_aggregate'];
    /** An array relationship */
    vouches: Array<GraphQLTypes['vouches']>;
    /** fetch data from the table: "vouches" using primary key columns */
    vouches_by_pk?: GraphQLTypes['vouches'] | undefined;
    /** fetch data from the table in a streaming manner: "vouches" */
    vouches_stream: Array<GraphQLTypes['vouches']>;
  };
  /** columns and relationships of "teammates" */
  ['teammates']: {
    __typename: 'teammates';
    created_at: GraphQLTypes['timestamp'];
    id: GraphQLTypes['bigint'];
    team_mate_id: number;
    /** An object relationship */
    teammate?: GraphQLTypes['users'] | undefined;
    updated_at: GraphQLTypes['timestamp'];
    /** An object relationship */
    user?: GraphQLTypes['users'] | undefined;
    user_id: number;
  };
  /** order by aggregate values of table "teammates" */
  ['teammates_aggregate_order_by']: {
    avg?: GraphQLTypes['teammates_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['teammates_max_order_by'] | undefined;
    min?: GraphQLTypes['teammates_min_order_by'] | undefined;
    stddev?: GraphQLTypes['teammates_stddev_order_by'] | undefined;
    stddev_pop?: GraphQLTypes['teammates_stddev_pop_order_by'] | undefined;
    stddev_samp?: GraphQLTypes['teammates_stddev_samp_order_by'] | undefined;
    sum?: GraphQLTypes['teammates_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['teammates_var_pop_order_by'] | undefined;
    var_samp?: GraphQLTypes['teammates_var_samp_order_by'] | undefined;
    variance?: GraphQLTypes['teammates_variance_order_by'] | undefined;
  };
  /** order by avg() on columns of table "teammates" */
  ['teammates_avg_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
    team_mate_id?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "teammates". All fields are combined with a logical 'AND'. */
  ['teammates_bool_exp']: {
    _and?: Array<GraphQLTypes['teammates_bool_exp']> | undefined;
    _not?: GraphQLTypes['teammates_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['teammates_bool_exp']> | undefined;
    created_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    team_mate_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    teammate?: GraphQLTypes['users_bool_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    user?: GraphQLTypes['users_bool_exp'] | undefined;
    user_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
  };
  /** order by max() on columns of table "teammates" */
  ['teammates_max_order_by']: {
    created_at?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    team_mate_id?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by min() on columns of table "teammates" */
  ['teammates_min_order_by']: {
    created_at?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    team_mate_id?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Ordering options when selecting data from "teammates". */
  ['teammates_order_by']: {
    created_at?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    team_mate_id?: GraphQLTypes['order_by'] | undefined;
    teammate?: GraphQLTypes['users_order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    user?: GraphQLTypes['users_order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "teammates" */
  ['teammates_select_column']: teammates_select_column;
  /** order by stddev() on columns of table "teammates" */
  ['teammates_stddev_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
    team_mate_id?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_pop() on columns of table "teammates" */
  ['teammates_stddev_pop_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
    team_mate_id?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_samp() on columns of table "teammates" */
  ['teammates_stddev_samp_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
    team_mate_id?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "teammates" */
  ['teammates_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['teammates_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['teammates_stream_cursor_value_input']: {
    created_at?: GraphQLTypes['timestamp'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    team_mate_id?: number | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
    user_id?: number | undefined;
  };
  /** order by sum() on columns of table "teammates" */
  ['teammates_sum_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
    team_mate_id?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by var_pop() on columns of table "teammates" */
  ['teammates_var_pop_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
    team_mate_id?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by var_samp() on columns of table "teammates" */
  ['teammates_var_samp_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
    team_mate_id?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by variance() on columns of table "teammates" */
  ['teammates_variance_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
    team_mate_id?: GraphQLTypes['order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  ['timestamp']: any;
  /** Boolean expression to compare columns of type "timestamp". All fields are combined with logical 'AND'. */
  ['timestamp_comparison_exp']: {
    _eq?: GraphQLTypes['timestamp'] | undefined;
    _gt?: GraphQLTypes['timestamp'] | undefined;
    _gte?: GraphQLTypes['timestamp'] | undefined;
    _in?: Array<GraphQLTypes['timestamp']> | undefined;
    _is_null?: boolean | undefined;
    _lt?: GraphQLTypes['timestamp'] | undefined;
    _lte?: GraphQLTypes['timestamp'] | undefined;
    _neq?: GraphQLTypes['timestamp'] | undefined;
    _nin?: Array<GraphQLTypes['timestamp']> | undefined;
  };
  ['timestamptz']: any;
  /** Boolean expression to compare columns of type "timestamptz". All fields are combined with logical 'AND'. */
  ['timestamptz_comparison_exp']: {
    _eq?: GraphQLTypes['timestamptz'] | undefined;
    _gt?: GraphQLTypes['timestamptz'] | undefined;
    _gte?: GraphQLTypes['timestamptz'] | undefined;
    _in?: Array<GraphQLTypes['timestamptz']> | undefined;
    _is_null?: boolean | undefined;
    _lt?: GraphQLTypes['timestamptz'] | undefined;
    _lte?: GraphQLTypes['timestamptz'] | undefined;
    _neq?: GraphQLTypes['timestamptz'] | undefined;
    _nin?: Array<GraphQLTypes['timestamptz']> | undefined;
  };
  /** GIVE allocations made by circle members for completed epochs */
  ['token_gifts']: {
    __typename: 'token_gifts';
    /** An object relationship */
    circle: GraphQLTypes['circles'];
    circle_id: GraphQLTypes['bigint'];
    created_at: GraphQLTypes['timestamp'];
    dts_created: GraphQLTypes['timestamp'];
    /** An object relationship */
    epoch: GraphQLTypes['epochs'];
    epoch_id: number;
    /** An object relationship */
    gift_private?: GraphQLTypes['gift_private'] | undefined;
    id: GraphQLTypes['bigint'];
    /** An object relationship */
    recipient: GraphQLTypes['users'];
    recipient_address: string;
    recipient_id: GraphQLTypes['bigint'];
    /** An object relationship */
    sender: GraphQLTypes['users'];
    sender_address: string;
    sender_id: GraphQLTypes['bigint'];
    tokens: number;
    updated_at: GraphQLTypes['timestamp'];
  };
  /** aggregated selection of "token_gifts" */
  ['token_gifts_aggregate']: {
    __typename: 'token_gifts_aggregate';
    aggregate?: GraphQLTypes['token_gifts_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['token_gifts']>;
  };
  ['token_gifts_aggregate_bool_exp']: {
    count?: GraphQLTypes['token_gifts_aggregate_bool_exp_count'] | undefined;
  };
  ['token_gifts_aggregate_bool_exp_count']: {
    arguments?: Array<GraphQLTypes['token_gifts_select_column']> | undefined;
    distinct?: boolean | undefined;
    filter?: GraphQLTypes['token_gifts_bool_exp'] | undefined;
    predicate: GraphQLTypes['Int_comparison_exp'];
  };
  /** aggregate fields of "token_gifts" */
  ['token_gifts_aggregate_fields']: {
    __typename: 'token_gifts_aggregate_fields';
    avg?: GraphQLTypes['token_gifts_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['token_gifts_max_fields'] | undefined;
    min?: GraphQLTypes['token_gifts_min_fields'] | undefined;
    stddev?: GraphQLTypes['token_gifts_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['token_gifts_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['token_gifts_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['token_gifts_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['token_gifts_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['token_gifts_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['token_gifts_variance_fields'] | undefined;
  };
  /** order by aggregate values of table "token_gifts" */
  ['token_gifts_aggregate_order_by']: {
    avg?: GraphQLTypes['token_gifts_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['token_gifts_max_order_by'] | undefined;
    min?: GraphQLTypes['token_gifts_min_order_by'] | undefined;
    stddev?: GraphQLTypes['token_gifts_stddev_order_by'] | undefined;
    stddev_pop?: GraphQLTypes['token_gifts_stddev_pop_order_by'] | undefined;
    stddev_samp?: GraphQLTypes['token_gifts_stddev_samp_order_by'] | undefined;
    sum?: GraphQLTypes['token_gifts_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['token_gifts_var_pop_order_by'] | undefined;
    var_samp?: GraphQLTypes['token_gifts_var_samp_order_by'] | undefined;
    variance?: GraphQLTypes['token_gifts_variance_order_by'] | undefined;
  };
  /** aggregate avg on columns */
  ['token_gifts_avg_fields']: {
    __typename: 'token_gifts_avg_fields';
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    id?: number | undefined;
    recipient_id?: number | undefined;
    sender_id?: number | undefined;
    tokens?: number | undefined;
  };
  /** order by avg() on columns of table "token_gifts" */
  ['token_gifts_avg_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    recipient_id?: GraphQLTypes['order_by'] | undefined;
    sender_id?: GraphQLTypes['order_by'] | undefined;
    tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "token_gifts". All fields are combined with a logical 'AND'. */
  ['token_gifts_bool_exp']: {
    _and?: Array<GraphQLTypes['token_gifts_bool_exp']> | undefined;
    _not?: GraphQLTypes['token_gifts_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['token_gifts_bool_exp']> | undefined;
    circle?: GraphQLTypes['circles_bool_exp'] | undefined;
    circle_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    created_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    dts_created?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    epoch?: GraphQLTypes['epochs_bool_exp'] | undefined;
    epoch_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    gift_private?: GraphQLTypes['gift_private_bool_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    recipient?: GraphQLTypes['users_bool_exp'] | undefined;
    recipient_address?: GraphQLTypes['String_comparison_exp'] | undefined;
    recipient_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    sender?: GraphQLTypes['users_bool_exp'] | undefined;
    sender_address?: GraphQLTypes['String_comparison_exp'] | undefined;
    sender_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    tokens?: GraphQLTypes['Int_comparison_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
  };
  /** aggregate max on columns */
  ['token_gifts_max_fields']: {
    __typename: 'token_gifts_max_fields';
    circle_id?: GraphQLTypes['bigint'] | undefined;
    created_at?: GraphQLTypes['timestamp'] | undefined;
    dts_created?: GraphQLTypes['timestamp'] | undefined;
    epoch_id?: number | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    recipient_address?: string | undefined;
    recipient_id?: GraphQLTypes['bigint'] | undefined;
    sender_address?: string | undefined;
    sender_id?: GraphQLTypes['bigint'] | undefined;
    tokens?: number | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
  };
  /** order by max() on columns of table "token_gifts" */
  ['token_gifts_max_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    dts_created?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    recipient_address?: GraphQLTypes['order_by'] | undefined;
    recipient_id?: GraphQLTypes['order_by'] | undefined;
    sender_address?: GraphQLTypes['order_by'] | undefined;
    sender_id?: GraphQLTypes['order_by'] | undefined;
    tokens?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate min on columns */
  ['token_gifts_min_fields']: {
    __typename: 'token_gifts_min_fields';
    circle_id?: GraphQLTypes['bigint'] | undefined;
    created_at?: GraphQLTypes['timestamp'] | undefined;
    dts_created?: GraphQLTypes['timestamp'] | undefined;
    epoch_id?: number | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    recipient_address?: string | undefined;
    recipient_id?: GraphQLTypes['bigint'] | undefined;
    sender_address?: string | undefined;
    sender_id?: GraphQLTypes['bigint'] | undefined;
    tokens?: number | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
  };
  /** order by min() on columns of table "token_gifts" */
  ['token_gifts_min_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    dts_created?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    recipient_address?: GraphQLTypes['order_by'] | undefined;
    recipient_id?: GraphQLTypes['order_by'] | undefined;
    sender_address?: GraphQLTypes['order_by'] | undefined;
    sender_id?: GraphQLTypes['order_by'] | undefined;
    tokens?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** Ordering options when selecting data from "token_gifts". */
  ['token_gifts_order_by']: {
    circle?: GraphQLTypes['circles_order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    dts_created?: GraphQLTypes['order_by'] | undefined;
    epoch?: GraphQLTypes['epochs_order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    gift_private?: GraphQLTypes['gift_private_order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    recipient?: GraphQLTypes['users_order_by'] | undefined;
    recipient_address?: GraphQLTypes['order_by'] | undefined;
    recipient_id?: GraphQLTypes['order_by'] | undefined;
    sender?: GraphQLTypes['users_order_by'] | undefined;
    sender_address?: GraphQLTypes['order_by'] | undefined;
    sender_id?: GraphQLTypes['order_by'] | undefined;
    tokens?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "token_gifts" */
  ['token_gifts_select_column']: token_gifts_select_column;
  /** aggregate stddev on columns */
  ['token_gifts_stddev_fields']: {
    __typename: 'token_gifts_stddev_fields';
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    id?: number | undefined;
    recipient_id?: number | undefined;
    sender_id?: number | undefined;
    tokens?: number | undefined;
  };
  /** order by stddev() on columns of table "token_gifts" */
  ['token_gifts_stddev_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    recipient_id?: GraphQLTypes['order_by'] | undefined;
    sender_id?: GraphQLTypes['order_by'] | undefined;
    tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_pop on columns */
  ['token_gifts_stddev_pop_fields']: {
    __typename: 'token_gifts_stddev_pop_fields';
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    id?: number | undefined;
    recipient_id?: number | undefined;
    sender_id?: number | undefined;
    tokens?: number | undefined;
  };
  /** order by stddev_pop() on columns of table "token_gifts" */
  ['token_gifts_stddev_pop_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    recipient_id?: GraphQLTypes['order_by'] | undefined;
    sender_id?: GraphQLTypes['order_by'] | undefined;
    tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate stddev_samp on columns */
  ['token_gifts_stddev_samp_fields']: {
    __typename: 'token_gifts_stddev_samp_fields';
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    id?: number | undefined;
    recipient_id?: number | undefined;
    sender_id?: number | undefined;
    tokens?: number | undefined;
  };
  /** order by stddev_samp() on columns of table "token_gifts" */
  ['token_gifts_stddev_samp_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    recipient_id?: GraphQLTypes['order_by'] | undefined;
    sender_id?: GraphQLTypes['order_by'] | undefined;
    tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "token_gifts" */
  ['token_gifts_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['token_gifts_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['token_gifts_stream_cursor_value_input']: {
    circle_id?: GraphQLTypes['bigint'] | undefined;
    created_at?: GraphQLTypes['timestamp'] | undefined;
    dts_created?: GraphQLTypes['timestamp'] | undefined;
    epoch_id?: number | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    recipient_address?: string | undefined;
    recipient_id?: GraphQLTypes['bigint'] | undefined;
    sender_address?: string | undefined;
    sender_id?: GraphQLTypes['bigint'] | undefined;
    tokens?: number | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
  };
  /** aggregate sum on columns */
  ['token_gifts_sum_fields']: {
    __typename: 'token_gifts_sum_fields';
    circle_id?: GraphQLTypes['bigint'] | undefined;
    epoch_id?: number | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    recipient_id?: GraphQLTypes['bigint'] | undefined;
    sender_id?: GraphQLTypes['bigint'] | undefined;
    tokens?: number | undefined;
  };
  /** order by sum() on columns of table "token_gifts" */
  ['token_gifts_sum_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    recipient_id?: GraphQLTypes['order_by'] | undefined;
    sender_id?: GraphQLTypes['order_by'] | undefined;
    tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate var_pop on columns */
  ['token_gifts_var_pop_fields']: {
    __typename: 'token_gifts_var_pop_fields';
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    id?: number | undefined;
    recipient_id?: number | undefined;
    sender_id?: number | undefined;
    tokens?: number | undefined;
  };
  /** order by var_pop() on columns of table "token_gifts" */
  ['token_gifts_var_pop_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    recipient_id?: GraphQLTypes['order_by'] | undefined;
    sender_id?: GraphQLTypes['order_by'] | undefined;
    tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate var_samp on columns */
  ['token_gifts_var_samp_fields']: {
    __typename: 'token_gifts_var_samp_fields';
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    id?: number | undefined;
    recipient_id?: number | undefined;
    sender_id?: number | undefined;
    tokens?: number | undefined;
  };
  /** order by var_samp() on columns of table "token_gifts" */
  ['token_gifts_var_samp_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    recipient_id?: GraphQLTypes['order_by'] | undefined;
    sender_id?: GraphQLTypes['order_by'] | undefined;
    tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** aggregate variance on columns */
  ['token_gifts_variance_fields']: {
    __typename: 'token_gifts_variance_fields';
    circle_id?: number | undefined;
    epoch_id?: number | undefined;
    id?: number | undefined;
    recipient_id?: number | undefined;
    sender_id?: number | undefined;
    tokens?: number | undefined;
  };
  /** order by variance() on columns of table "token_gifts" */
  ['token_gifts_variance_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    epoch_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    recipient_id?: GraphQLTypes['order_by'] | undefined;
    sender_id?: GraphQLTypes['order_by'] | undefined;
    tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** twitter accounts connected to profiles */
  ['twitter_accounts']: {
    __typename: 'twitter_accounts';
    description?: string | undefined;
    id: string;
    name: string;
    /** An object relationship */
    profile: GraphQLTypes['profiles'];
    profile_id: number;
    profile_image_url?: string | undefined;
    username: string;
  };
  /** Boolean expression to filter rows from the table "twitter_accounts". All fields are combined with a logical 'AND'. */
  ['twitter_accounts_bool_exp']: {
    _and?: Array<GraphQLTypes['twitter_accounts_bool_exp']> | undefined;
    _not?: GraphQLTypes['twitter_accounts_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['twitter_accounts_bool_exp']> | undefined;
    description?: GraphQLTypes['String_comparison_exp'] | undefined;
    id?: GraphQLTypes['String_comparison_exp'] | undefined;
    name?: GraphQLTypes['String_comparison_exp'] | undefined;
    profile?: GraphQLTypes['profiles_bool_exp'] | undefined;
    profile_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    profile_image_url?: GraphQLTypes['String_comparison_exp'] | undefined;
    username?: GraphQLTypes['String_comparison_exp'] | undefined;
  };
  /** response of any mutation on the table "twitter_accounts" */
  ['twitter_accounts_mutation_response']: {
    __typename: 'twitter_accounts_mutation_response';
    /** number of rows affected by the mutation */
    affected_rows: number;
    /** data from the rows affected by the mutation */
    returning: Array<GraphQLTypes['twitter_accounts']>;
  };
  /** Ordering options when selecting data from "twitter_accounts". */
  ['twitter_accounts_order_by']: {
    description?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    name?: GraphQLTypes['order_by'] | undefined;
    profile?: GraphQLTypes['profiles_order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    profile_image_url?: GraphQLTypes['order_by'] | undefined;
    username?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "twitter_accounts" */
  ['twitter_accounts_select_column']: twitter_accounts_select_column;
  /** Streaming cursor of the table "twitter_accounts" */
  ['twitter_accounts_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['twitter_accounts_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['twitter_accounts_stream_cursor_value_input']: {
    description?: string | undefined;
    id?: string | undefined;
    name?: string | undefined;
    profile_id?: number | undefined;
    profile_image_url?: string | undefined;
    username?: string | undefined;
  };
  /** columns and relationships of "user_private" */
  ['user_private']: {
    __typename: 'user_private';
    /** An object relationship */
    circle?: GraphQLTypes['circles'] | undefined;
    fixed_payment_amount?: GraphQLTypes['numeric'] | undefined;
    fixed_payment_token_type?: string | undefined;
    /** An object relationship */
    user?: GraphQLTypes['users'] | undefined;
    user_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** aggregated selection of "user_private" */
  ['user_private_aggregate']: {
    __typename: 'user_private_aggregate';
    aggregate?: GraphQLTypes['user_private_aggregate_fields'] | undefined;
    nodes: Array<GraphQLTypes['user_private']>;
  };
  /** aggregate fields of "user_private" */
  ['user_private_aggregate_fields']: {
    __typename: 'user_private_aggregate_fields';
    avg?: GraphQLTypes['user_private_avg_fields'] | undefined;
    count: number;
    max?: GraphQLTypes['user_private_max_fields'] | undefined;
    min?: GraphQLTypes['user_private_min_fields'] | undefined;
    stddev?: GraphQLTypes['user_private_stddev_fields'] | undefined;
    stddev_pop?: GraphQLTypes['user_private_stddev_pop_fields'] | undefined;
    stddev_samp?: GraphQLTypes['user_private_stddev_samp_fields'] | undefined;
    sum?: GraphQLTypes['user_private_sum_fields'] | undefined;
    var_pop?: GraphQLTypes['user_private_var_pop_fields'] | undefined;
    var_samp?: GraphQLTypes['user_private_var_samp_fields'] | undefined;
    variance?: GraphQLTypes['user_private_variance_fields'] | undefined;
  };
  /** aggregate avg on columns */
  ['user_private_avg_fields']: {
    __typename: 'user_private_avg_fields';
    fixed_payment_amount?: number | undefined;
    user_id?: number | undefined;
  };
  /** Boolean expression to filter rows from the table "user_private". All fields are combined with a logical 'AND'. */
  ['user_private_bool_exp']: {
    _and?: Array<GraphQLTypes['user_private_bool_exp']> | undefined;
    _not?: GraphQLTypes['user_private_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['user_private_bool_exp']> | undefined;
    circle?: GraphQLTypes['circles_bool_exp'] | undefined;
    fixed_payment_amount?: GraphQLTypes['numeric_comparison_exp'] | undefined;
    fixed_payment_token_type?:
      | GraphQLTypes['String_comparison_exp']
      | undefined;
    user?: GraphQLTypes['users_bool_exp'] | undefined;
    user_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
  };
  /** aggregate max on columns */
  ['user_private_max_fields']: {
    __typename: 'user_private_max_fields';
    fixed_payment_amount?: GraphQLTypes['numeric'] | undefined;
    fixed_payment_token_type?: string | undefined;
    user_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** aggregate min on columns */
  ['user_private_min_fields']: {
    __typename: 'user_private_min_fields';
    fixed_payment_amount?: GraphQLTypes['numeric'] | undefined;
    fixed_payment_token_type?: string | undefined;
    user_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** Ordering options when selecting data from "user_private". */
  ['user_private_order_by']: {
    circle?: GraphQLTypes['circles_order_by'] | undefined;
    fixed_payment_amount?: GraphQLTypes['order_by'] | undefined;
    fixed_payment_token_type?: GraphQLTypes['order_by'] | undefined;
    user?: GraphQLTypes['users_order_by'] | undefined;
    user_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "user_private" */
  ['user_private_select_column']: user_private_select_column;
  /** aggregate stddev on columns */
  ['user_private_stddev_fields']: {
    __typename: 'user_private_stddev_fields';
    fixed_payment_amount?: number | undefined;
    user_id?: number | undefined;
  };
  /** aggregate stddev_pop on columns */
  ['user_private_stddev_pop_fields']: {
    __typename: 'user_private_stddev_pop_fields';
    fixed_payment_amount?: number | undefined;
    user_id?: number | undefined;
  };
  /** aggregate stddev_samp on columns */
  ['user_private_stddev_samp_fields']: {
    __typename: 'user_private_stddev_samp_fields';
    fixed_payment_amount?: number | undefined;
    user_id?: number | undefined;
  };
  /** Streaming cursor of the table "user_private" */
  ['user_private_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['user_private_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['user_private_stream_cursor_value_input']: {
    fixed_payment_amount?: GraphQLTypes['numeric'] | undefined;
    fixed_payment_token_type?: string | undefined;
    user_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** aggregate sum on columns */
  ['user_private_sum_fields']: {
    __typename: 'user_private_sum_fields';
    fixed_payment_amount?: GraphQLTypes['numeric'] | undefined;
    user_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** aggregate var_pop on columns */
  ['user_private_var_pop_fields']: {
    __typename: 'user_private_var_pop_fields';
    fixed_payment_amount?: number | undefined;
    user_id?: number | undefined;
  };
  /** aggregate var_samp on columns */
  ['user_private_var_samp_fields']: {
    __typename: 'user_private_var_samp_fields';
    fixed_payment_amount?: number | undefined;
    user_id?: number | undefined;
  };
  /** aggregate variance on columns */
  ['user_private_variance_fields']: {
    __typename: 'user_private_variance_fields';
    fixed_payment_amount?: number | undefined;
    user_id?: number | undefined;
  };
  /** Members of a circle */
  ['users']: {
    __typename: 'users';
    bio?: string | undefined;
    /** An array relationship */
    burns: Array<GraphQLTypes['burns']>;
    /** An object relationship */
    circle: GraphQLTypes['circles'];
    /** An array relationship */
    circle_api_keys: Array<GraphQLTypes['circle_api_keys']>;
    circle_id: GraphQLTypes['bigint'];
    /** An array relationship */
    contributions: Array<GraphQLTypes['contributions']>;
    /** An aggregate relationship */
    contributions_aggregate: GraphQLTypes['contributions_aggregate'];
    created_at: GraphQLTypes['timestamp'];
    deleted_at?: GraphQLTypes['timestamp'] | undefined;
    epoch_first_visit: boolean;
    fixed_non_receiver: boolean;
    give_token_received: number;
    give_token_remaining: number;
    id: GraphQLTypes['bigint'];
    /** An array relationship */
    member_epoch_pgivess: Array<GraphQLTypes['member_epoch_pgives']>;
    /** An aggregate relationship */
    member_epoch_pgivess_aggregate: GraphQLTypes['member_epoch_pgives_aggregate'];
    non_giver: boolean;
    non_receiver: boolean;
    /** An array relationship */
    pending_received_gifts: Array<GraphQLTypes['pending_token_gifts']>;
    /** An array relationship */
    pending_sent_gifts: Array<GraphQLTypes['pending_token_gifts']>;
    /** An object relationship */
    profile: GraphQLTypes['profiles'];
    profile_id: GraphQLTypes['bigint'];
    /** An array relationship */
    received_gifts: Array<GraphQLTypes['token_gifts']>;
    /** An aggregate relationship */
    received_gifts_aggregate: GraphQLTypes['token_gifts_aggregate'];
    role: number;
    /** An array relationship */
    sent_gifts: Array<GraphQLTypes['token_gifts']>;
    /** An aggregate relationship */
    sent_gifts_aggregate: GraphQLTypes['token_gifts_aggregate'];
    starting_tokens: number;
    /** An array relationship */
    teammates: Array<GraphQLTypes['teammates']>;
    updated_at: GraphQLTypes['timestamp'];
    /** An object relationship */
    user_private?: GraphQLTypes['user_private'] | undefined;
    /** An array relationship */
    vouches: Array<GraphQLTypes['vouches']>;
  };
  /** order by aggregate values of table "users" */
  ['users_aggregate_order_by']: {
    avg?: GraphQLTypes['users_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['users_max_order_by'] | undefined;
    min?: GraphQLTypes['users_min_order_by'] | undefined;
    stddev?: GraphQLTypes['users_stddev_order_by'] | undefined;
    stddev_pop?: GraphQLTypes['users_stddev_pop_order_by'] | undefined;
    stddev_samp?: GraphQLTypes['users_stddev_samp_order_by'] | undefined;
    sum?: GraphQLTypes['users_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['users_var_pop_order_by'] | undefined;
    var_samp?: GraphQLTypes['users_var_samp_order_by'] | undefined;
    variance?: GraphQLTypes['users_variance_order_by'] | undefined;
  };
  /** order by avg() on columns of table "users" */
  ['users_avg_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    give_token_received?: GraphQLTypes['order_by'] | undefined;
    give_token_remaining?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    role?: GraphQLTypes['order_by'] | undefined;
    starting_tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "users". All fields are combined with a logical 'AND'. */
  ['users_bool_exp']: {
    _and?: Array<GraphQLTypes['users_bool_exp']> | undefined;
    _not?: GraphQLTypes['users_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['users_bool_exp']> | undefined;
    bio?: GraphQLTypes['String_comparison_exp'] | undefined;
    burns?: GraphQLTypes['burns_bool_exp'] | undefined;
    circle?: GraphQLTypes['circles_bool_exp'] | undefined;
    circle_api_keys?: GraphQLTypes['circle_api_keys_bool_exp'] | undefined;
    circle_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    contributions?: GraphQLTypes['contributions_bool_exp'] | undefined;
    contributions_aggregate?:
      | GraphQLTypes['contributions_aggregate_bool_exp']
      | undefined;
    created_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    deleted_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    epoch_first_visit?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    fixed_non_receiver?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    give_token_received?: GraphQLTypes['Int_comparison_exp'] | undefined;
    give_token_remaining?: GraphQLTypes['Int_comparison_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    member_epoch_pgivess?:
      | GraphQLTypes['member_epoch_pgives_bool_exp']
      | undefined;
    member_epoch_pgivess_aggregate?:
      | GraphQLTypes['member_epoch_pgives_aggregate_bool_exp']
      | undefined;
    non_giver?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    non_receiver?: GraphQLTypes['Boolean_comparison_exp'] | undefined;
    pending_received_gifts?:
      | GraphQLTypes['pending_token_gifts_bool_exp']
      | undefined;
    pending_sent_gifts?:
      | GraphQLTypes['pending_token_gifts_bool_exp']
      | undefined;
    profile?: GraphQLTypes['profiles_bool_exp'] | undefined;
    profile_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    received_gifts?: GraphQLTypes['token_gifts_bool_exp'] | undefined;
    received_gifts_aggregate?:
      | GraphQLTypes['token_gifts_aggregate_bool_exp']
      | undefined;
    role?: GraphQLTypes['Int_comparison_exp'] | undefined;
    sent_gifts?: GraphQLTypes['token_gifts_bool_exp'] | undefined;
    sent_gifts_aggregate?:
      | GraphQLTypes['token_gifts_aggregate_bool_exp']
      | undefined;
    starting_tokens?: GraphQLTypes['Int_comparison_exp'] | undefined;
    teammates?: GraphQLTypes['teammates_bool_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    user_private?: GraphQLTypes['user_private_bool_exp'] | undefined;
    vouches?: GraphQLTypes['vouches_bool_exp'] | undefined;
  };
  /** order by max() on columns of table "users" */
  ['users_max_order_by']: {
    bio?: GraphQLTypes['order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    deleted_at?: GraphQLTypes['order_by'] | undefined;
    give_token_received?: GraphQLTypes['order_by'] | undefined;
    give_token_remaining?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    role?: GraphQLTypes['order_by'] | undefined;
    starting_tokens?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by min() on columns of table "users" */
  ['users_min_order_by']: {
    bio?: GraphQLTypes['order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    deleted_at?: GraphQLTypes['order_by'] | undefined;
    give_token_received?: GraphQLTypes['order_by'] | undefined;
    give_token_remaining?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    role?: GraphQLTypes['order_by'] | undefined;
    starting_tokens?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
  };
  /** Ordering options when selecting data from "users". */
  ['users_order_by']: {
    bio?: GraphQLTypes['order_by'] | undefined;
    burns_aggregate?: GraphQLTypes['burns_aggregate_order_by'] | undefined;
    circle?: GraphQLTypes['circles_order_by'] | undefined;
    circle_api_keys_aggregate?:
      | GraphQLTypes['circle_api_keys_aggregate_order_by']
      | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    contributions_aggregate?:
      | GraphQLTypes['contributions_aggregate_order_by']
      | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    deleted_at?: GraphQLTypes['order_by'] | undefined;
    epoch_first_visit?: GraphQLTypes['order_by'] | undefined;
    fixed_non_receiver?: GraphQLTypes['order_by'] | undefined;
    give_token_received?: GraphQLTypes['order_by'] | undefined;
    give_token_remaining?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    member_epoch_pgivess_aggregate?:
      | GraphQLTypes['member_epoch_pgives_aggregate_order_by']
      | undefined;
    non_giver?: GraphQLTypes['order_by'] | undefined;
    non_receiver?: GraphQLTypes['order_by'] | undefined;
    pending_received_gifts_aggregate?:
      | GraphQLTypes['pending_token_gifts_aggregate_order_by']
      | undefined;
    pending_sent_gifts_aggregate?:
      | GraphQLTypes['pending_token_gifts_aggregate_order_by']
      | undefined;
    profile?: GraphQLTypes['profiles_order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    received_gifts_aggregate?:
      | GraphQLTypes['token_gifts_aggregate_order_by']
      | undefined;
    role?: GraphQLTypes['order_by'] | undefined;
    sent_gifts_aggregate?:
      | GraphQLTypes['token_gifts_aggregate_order_by']
      | undefined;
    starting_tokens?: GraphQLTypes['order_by'] | undefined;
    teammates_aggregate?:
      | GraphQLTypes['teammates_aggregate_order_by']
      | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    user_private?: GraphQLTypes['user_private_order_by'] | undefined;
    vouches_aggregate?: GraphQLTypes['vouches_aggregate_order_by'] | undefined;
  };
  /** select columns of table "users" */
  ['users_select_column']: users_select_column;
  /** order by stddev() on columns of table "users" */
  ['users_stddev_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    give_token_received?: GraphQLTypes['order_by'] | undefined;
    give_token_remaining?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    role?: GraphQLTypes['order_by'] | undefined;
    starting_tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_pop() on columns of table "users" */
  ['users_stddev_pop_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    give_token_received?: GraphQLTypes['order_by'] | undefined;
    give_token_remaining?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    role?: GraphQLTypes['order_by'] | undefined;
    starting_tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_samp() on columns of table "users" */
  ['users_stddev_samp_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    give_token_received?: GraphQLTypes['order_by'] | undefined;
    give_token_remaining?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    role?: GraphQLTypes['order_by'] | undefined;
    starting_tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "users" */
  ['users_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['users_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['users_stream_cursor_value_input']: {
    bio?: string | undefined;
    circle_id?: GraphQLTypes['bigint'] | undefined;
    created_at?: GraphQLTypes['timestamp'] | undefined;
    deleted_at?: GraphQLTypes['timestamp'] | undefined;
    epoch_first_visit?: boolean | undefined;
    fixed_non_receiver?: boolean | undefined;
    give_token_received?: number | undefined;
    give_token_remaining?: number | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    non_giver?: boolean | undefined;
    non_receiver?: boolean | undefined;
    profile_id?: GraphQLTypes['bigint'] | undefined;
    role?: number | undefined;
    starting_tokens?: number | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
  };
  /** order by sum() on columns of table "users" */
  ['users_sum_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    give_token_received?: GraphQLTypes['order_by'] | undefined;
    give_token_remaining?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    role?: GraphQLTypes['order_by'] | undefined;
    starting_tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by var_pop() on columns of table "users" */
  ['users_var_pop_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    give_token_received?: GraphQLTypes['order_by'] | undefined;
    give_token_remaining?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    role?: GraphQLTypes['order_by'] | undefined;
    starting_tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by var_samp() on columns of table "users" */
  ['users_var_samp_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    give_token_received?: GraphQLTypes['order_by'] | undefined;
    give_token_remaining?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    role?: GraphQLTypes['order_by'] | undefined;
    starting_tokens?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by variance() on columns of table "users" */
  ['users_variance_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    give_token_received?: GraphQLTypes['order_by'] | undefined;
    give_token_remaining?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile_id?: GraphQLTypes['order_by'] | undefined;
    role?: GraphQLTypes['order_by'] | undefined;
    starting_tokens?: GraphQLTypes['order_by'] | undefined;
  };
  ['uuid']: any;
  /** Boolean expression to compare columns of type "uuid". All fields are combined with logical 'AND'. */
  ['uuid_comparison_exp']: {
    _eq?: GraphQLTypes['uuid'] | undefined;
    _gt?: GraphQLTypes['uuid'] | undefined;
    _gte?: GraphQLTypes['uuid'] | undefined;
    _in?: Array<GraphQLTypes['uuid']> | undefined;
    _is_null?: boolean | undefined;
    _lt?: GraphQLTypes['uuid'] | undefined;
    _lte?: GraphQLTypes['uuid'] | undefined;
    _neq?: GraphQLTypes['uuid'] | undefined;
    _nin?: Array<GraphQLTypes['uuid']> | undefined;
  };
  /** columns and relationships of "vault_transactions" */
  ['vault_transactions']: {
    __typename: 'vault_transactions';
    /** An object relationship */
    circle?: GraphQLTypes['circles'] | undefined;
    circle_id?: GraphQLTypes['bigint'] | undefined;
    created_at: GraphQLTypes['timestamp'];
    created_by?: GraphQLTypes['bigint'] | undefined;
    /** An object relationship */
    distribution?: GraphQLTypes['distributions'] | undefined;
    distribution_id?: GraphQLTypes['bigint'] | undefined;
    id: GraphQLTypes['bigint'];
    /** An object relationship */
    profile?: GraphQLTypes['profiles'] | undefined;
    tx_hash: string;
    tx_type: GraphQLTypes['vault_tx_types_enum'];
    updated_at: GraphQLTypes['timestamp'];
    /** An object relationship */
    vault: GraphQLTypes['vaults'];
    vault_id: GraphQLTypes['bigint'];
    /** An object relationship */
    vault_tx_type: GraphQLTypes['vault_tx_types'];
  };
  /** order by aggregate values of table "vault_transactions" */
  ['vault_transactions_aggregate_order_by']: {
    avg?: GraphQLTypes['vault_transactions_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['vault_transactions_max_order_by'] | undefined;
    min?: GraphQLTypes['vault_transactions_min_order_by'] | undefined;
    stddev?: GraphQLTypes['vault_transactions_stddev_order_by'] | undefined;
    stddev_pop?:
      | GraphQLTypes['vault_transactions_stddev_pop_order_by']
      | undefined;
    stddev_samp?:
      | GraphQLTypes['vault_transactions_stddev_samp_order_by']
      | undefined;
    sum?: GraphQLTypes['vault_transactions_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['vault_transactions_var_pop_order_by'] | undefined;
    var_samp?: GraphQLTypes['vault_transactions_var_samp_order_by'] | undefined;
    variance?: GraphQLTypes['vault_transactions_variance_order_by'] | undefined;
  };
  /** order by avg() on columns of table "vault_transactions" */
  ['vault_transactions_avg_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    distribution_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    vault_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "vault_transactions". All fields are combined with a logical 'AND'. */
  ['vault_transactions_bool_exp']: {
    _and?: Array<GraphQLTypes['vault_transactions_bool_exp']> | undefined;
    _not?: GraphQLTypes['vault_transactions_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['vault_transactions_bool_exp']> | undefined;
    circle?: GraphQLTypes['circles_bool_exp'] | undefined;
    circle_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    created_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    created_by?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    distribution?: GraphQLTypes['distributions_bool_exp'] | undefined;
    distribution_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    profile?: GraphQLTypes['profiles_bool_exp'] | undefined;
    tx_hash?: GraphQLTypes['String_comparison_exp'] | undefined;
    tx_type?: GraphQLTypes['vault_tx_types_enum_comparison_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    vault?: GraphQLTypes['vaults_bool_exp'] | undefined;
    vault_id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    vault_tx_type?: GraphQLTypes['vault_tx_types_bool_exp'] | undefined;
  };
  /** order by max() on columns of table "vault_transactions" */
  ['vault_transactions_max_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    distribution_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    tx_hash?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    vault_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by min() on columns of table "vault_transactions" */
  ['vault_transactions_min_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    distribution_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    tx_hash?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    vault_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Ordering options when selecting data from "vault_transactions". */
  ['vault_transactions_order_by']: {
    circle?: GraphQLTypes['circles_order_by'] | undefined;
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    distribution?: GraphQLTypes['distributions_order_by'] | undefined;
    distribution_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    profile?: GraphQLTypes['profiles_order_by'] | undefined;
    tx_hash?: GraphQLTypes['order_by'] | undefined;
    tx_type?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    vault?: GraphQLTypes['vaults_order_by'] | undefined;
    vault_id?: GraphQLTypes['order_by'] | undefined;
    vault_tx_type?: GraphQLTypes['vault_tx_types_order_by'] | undefined;
  };
  /** select columns of table "vault_transactions" */
  ['vault_transactions_select_column']: vault_transactions_select_column;
  /** order by stddev() on columns of table "vault_transactions" */
  ['vault_transactions_stddev_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    distribution_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    vault_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_pop() on columns of table "vault_transactions" */
  ['vault_transactions_stddev_pop_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    distribution_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    vault_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_samp() on columns of table "vault_transactions" */
  ['vault_transactions_stddev_samp_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    distribution_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    vault_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "vault_transactions" */
  ['vault_transactions_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['vault_transactions_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['vault_transactions_stream_cursor_value_input']: {
    circle_id?: GraphQLTypes['bigint'] | undefined;
    created_at?: GraphQLTypes['timestamp'] | undefined;
    created_by?: GraphQLTypes['bigint'] | undefined;
    distribution_id?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    tx_hash?: string | undefined;
    tx_type?: GraphQLTypes['vault_tx_types_enum'] | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
    vault_id?: GraphQLTypes['bigint'] | undefined;
  };
  /** order by sum() on columns of table "vault_transactions" */
  ['vault_transactions_sum_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    distribution_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    vault_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by var_pop() on columns of table "vault_transactions" */
  ['vault_transactions_var_pop_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    distribution_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    vault_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by var_samp() on columns of table "vault_transactions" */
  ['vault_transactions_var_samp_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    distribution_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    vault_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by variance() on columns of table "vault_transactions" */
  ['vault_transactions_variance_order_by']: {
    circle_id?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    distribution_id?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    vault_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** columns and relationships of "vault_tx_types" */
  ['vault_tx_types']: {
    __typename: 'vault_tx_types';
    comment?: string | undefined;
    value: string;
    /** An array relationship */
    vault_transactions: Array<GraphQLTypes['vault_transactions']>;
  };
  /** Boolean expression to filter rows from the table "vault_tx_types". All fields are combined with a logical 'AND'. */
  ['vault_tx_types_bool_exp']: {
    _and?: Array<GraphQLTypes['vault_tx_types_bool_exp']> | undefined;
    _not?: GraphQLTypes['vault_tx_types_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['vault_tx_types_bool_exp']> | undefined;
    comment?: GraphQLTypes['String_comparison_exp'] | undefined;
    value?: GraphQLTypes['String_comparison_exp'] | undefined;
    vault_transactions?:
      | GraphQLTypes['vault_transactions_bool_exp']
      | undefined;
  };
  ['vault_tx_types_enum']: vault_tx_types_enum;
  /** Boolean expression to compare columns of type "vault_tx_types_enum". All fields are combined with logical 'AND'. */
  ['vault_tx_types_enum_comparison_exp']: {
    _eq?: GraphQLTypes['vault_tx_types_enum'] | undefined;
    _in?: Array<GraphQLTypes['vault_tx_types_enum']> | undefined;
    _is_null?: boolean | undefined;
    _neq?: GraphQLTypes['vault_tx_types_enum'] | undefined;
    _nin?: Array<GraphQLTypes['vault_tx_types_enum']> | undefined;
  };
  /** Ordering options when selecting data from "vault_tx_types". */
  ['vault_tx_types_order_by']: {
    comment?: GraphQLTypes['order_by'] | undefined;
    value?: GraphQLTypes['order_by'] | undefined;
    vault_transactions_aggregate?:
      | GraphQLTypes['vault_transactions_aggregate_order_by']
      | undefined;
  };
  /** select columns of table "vault_tx_types" */
  ['vault_tx_types_select_column']: vault_tx_types_select_column;
  /** Streaming cursor of the table "vault_tx_types" */
  ['vault_tx_types_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['vault_tx_types_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['vault_tx_types_stream_cursor_value_input']: {
    comment?: string | undefined;
    value?: string | undefined;
  };
  /** columns and relationships of "vaults" */
  ['vaults']: {
    __typename: 'vaults';
    chain_id: number;
    created_at: GraphQLTypes['timestamptz'];
    created_by: GraphQLTypes['bigint'];
    decimals: number;
    deployment_block: GraphQLTypes['bigint'];
    /** An array relationship */
    distributions: Array<GraphQLTypes['distributions']>;
    /** An aggregate relationship */
    distributions_aggregate: GraphQLTypes['distributions_aggregate'];
    id: GraphQLTypes['bigint'];
    /** An object relationship */
    organization: GraphQLTypes['organizations'];
    /** An object relationship */
    profile: GraphQLTypes['profiles'];
    simple_token_address: string;
    symbol: string;
    token_address: string;
    updated_at: GraphQLTypes['timestamptz'];
    vault_address: string;
    /** An array relationship */
    vault_transactions: Array<GraphQLTypes['vault_transactions']>;
  };
  /** order by aggregate values of table "vaults" */
  ['vaults_aggregate_order_by']: {
    avg?: GraphQLTypes['vaults_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['vaults_max_order_by'] | undefined;
    min?: GraphQLTypes['vaults_min_order_by'] | undefined;
    stddev?: GraphQLTypes['vaults_stddev_order_by'] | undefined;
    stddev_pop?: GraphQLTypes['vaults_stddev_pop_order_by'] | undefined;
    stddev_samp?: GraphQLTypes['vaults_stddev_samp_order_by'] | undefined;
    sum?: GraphQLTypes['vaults_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['vaults_var_pop_order_by'] | undefined;
    var_samp?: GraphQLTypes['vaults_var_samp_order_by'] | undefined;
    variance?: GraphQLTypes['vaults_variance_order_by'] | undefined;
  };
  /** order by avg() on columns of table "vaults" */
  ['vaults_avg_order_by']: {
    chain_id?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    decimals?: GraphQLTypes['order_by'] | undefined;
    deployment_block?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "vaults". All fields are combined with a logical 'AND'. */
  ['vaults_bool_exp']: {
    _and?: Array<GraphQLTypes['vaults_bool_exp']> | undefined;
    _not?: GraphQLTypes['vaults_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['vaults_bool_exp']> | undefined;
    chain_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    created_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    created_by?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    decimals?: GraphQLTypes['Int_comparison_exp'] | undefined;
    deployment_block?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    distributions?: GraphQLTypes['distributions_bool_exp'] | undefined;
    distributions_aggregate?:
      | GraphQLTypes['distributions_aggregate_bool_exp']
      | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    organization?: GraphQLTypes['organizations_bool_exp'] | undefined;
    profile?: GraphQLTypes['profiles_bool_exp'] | undefined;
    simple_token_address?: GraphQLTypes['String_comparison_exp'] | undefined;
    symbol?: GraphQLTypes['String_comparison_exp'] | undefined;
    token_address?: GraphQLTypes['String_comparison_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamptz_comparison_exp'] | undefined;
    vault_address?: GraphQLTypes['String_comparison_exp'] | undefined;
    vault_transactions?:
      | GraphQLTypes['vault_transactions_bool_exp']
      | undefined;
  };
  /** order by max() on columns of table "vaults" */
  ['vaults_max_order_by']: {
    chain_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    decimals?: GraphQLTypes['order_by'] | undefined;
    deployment_block?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    simple_token_address?: GraphQLTypes['order_by'] | undefined;
    symbol?: GraphQLTypes['order_by'] | undefined;
    token_address?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    vault_address?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by min() on columns of table "vaults" */
  ['vaults_min_order_by']: {
    chain_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    decimals?: GraphQLTypes['order_by'] | undefined;
    deployment_block?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    simple_token_address?: GraphQLTypes['order_by'] | undefined;
    symbol?: GraphQLTypes['order_by'] | undefined;
    token_address?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    vault_address?: GraphQLTypes['order_by'] | undefined;
  };
  /** Ordering options when selecting data from "vaults". */
  ['vaults_order_by']: {
    chain_id?: GraphQLTypes['order_by'] | undefined;
    created_at?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    decimals?: GraphQLTypes['order_by'] | undefined;
    deployment_block?: GraphQLTypes['order_by'] | undefined;
    distributions_aggregate?:
      | GraphQLTypes['distributions_aggregate_order_by']
      | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    organization?: GraphQLTypes['organizations_order_by'] | undefined;
    profile?: GraphQLTypes['profiles_order_by'] | undefined;
    simple_token_address?: GraphQLTypes['order_by'] | undefined;
    symbol?: GraphQLTypes['order_by'] | undefined;
    token_address?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    vault_address?: GraphQLTypes['order_by'] | undefined;
    vault_transactions_aggregate?:
      | GraphQLTypes['vault_transactions_aggregate_order_by']
      | undefined;
  };
  /** select columns of table "vaults" */
  ['vaults_select_column']: vaults_select_column;
  /** order by stddev() on columns of table "vaults" */
  ['vaults_stddev_order_by']: {
    chain_id?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    decimals?: GraphQLTypes['order_by'] | undefined;
    deployment_block?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_pop() on columns of table "vaults" */
  ['vaults_stddev_pop_order_by']: {
    chain_id?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    decimals?: GraphQLTypes['order_by'] | undefined;
    deployment_block?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_samp() on columns of table "vaults" */
  ['vaults_stddev_samp_order_by']: {
    chain_id?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    decimals?: GraphQLTypes['order_by'] | undefined;
    deployment_block?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "vaults" */
  ['vaults_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['vaults_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['vaults_stream_cursor_value_input']: {
    chain_id?: number | undefined;
    created_at?: GraphQLTypes['timestamptz'] | undefined;
    created_by?: GraphQLTypes['bigint'] | undefined;
    decimals?: number | undefined;
    deployment_block?: GraphQLTypes['bigint'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    simple_token_address?: string | undefined;
    symbol?: string | undefined;
    token_address?: string | undefined;
    updated_at?: GraphQLTypes['timestamptz'] | undefined;
    vault_address?: string | undefined;
  };
  /** order by sum() on columns of table "vaults" */
  ['vaults_sum_order_by']: {
    chain_id?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    decimals?: GraphQLTypes['order_by'] | undefined;
    deployment_block?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by var_pop() on columns of table "vaults" */
  ['vaults_var_pop_order_by']: {
    chain_id?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    decimals?: GraphQLTypes['order_by'] | undefined;
    deployment_block?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by var_samp() on columns of table "vaults" */
  ['vaults_var_samp_order_by']: {
    chain_id?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    decimals?: GraphQLTypes['order_by'] | undefined;
    deployment_block?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by variance() on columns of table "vaults" */
  ['vaults_variance_order_by']: {
    chain_id?: GraphQLTypes['order_by'] | undefined;
    created_by?: GraphQLTypes['order_by'] | undefined;
    decimals?: GraphQLTypes['order_by'] | undefined;
    deployment_block?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
  };
  ['vector']: any;
  /** Boolean expression to compare columns of type "vector". All fields are combined with logical 'AND'. */
  ['vector_comparison_exp']: {
    _eq?: GraphQLTypes['vector'] | undefined;
    _gt?: GraphQLTypes['vector'] | undefined;
    _gte?: GraphQLTypes['vector'] | undefined;
    _in?: Array<GraphQLTypes['vector']> | undefined;
    _is_null?: boolean | undefined;
    _lt?: GraphQLTypes['vector'] | undefined;
    _lte?: GraphQLTypes['vector'] | undefined;
    _neq?: GraphQLTypes['vector'] | undefined;
    _nin?: Array<GraphQLTypes['vector']> | undefined;
  };
  ['vector_search_poap_events_args']: {
    limit_count?: number | undefined;
    match_threshold?: GraphQLTypes['float8'] | undefined;
    target_vector?: GraphQLTypes['vector'] | undefined;
  };
  ['vector_search_poap_holders_args']: {
    limit_count?: number | undefined;
    match_threshold?: GraphQLTypes['float8'] | undefined;
    target_vector?: GraphQLTypes['vector'] | undefined;
  };
  /** columns and relationships of "vouches" */
  ['vouches']: {
    __typename: 'vouches';
    created_at: GraphQLTypes['timestamp'];
    id: GraphQLTypes['bigint'];
    /** An object relationship */
    nominee?: GraphQLTypes['nominees'] | undefined;
    nominee_id: number;
    updated_at: GraphQLTypes['timestamp'];
    /** An object relationship */
    voucher?: GraphQLTypes['users'] | undefined;
    voucher_id: number;
  };
  /** order by aggregate values of table "vouches" */
  ['vouches_aggregate_order_by']: {
    avg?: GraphQLTypes['vouches_avg_order_by'] | undefined;
    count?: GraphQLTypes['order_by'] | undefined;
    max?: GraphQLTypes['vouches_max_order_by'] | undefined;
    min?: GraphQLTypes['vouches_min_order_by'] | undefined;
    stddev?: GraphQLTypes['vouches_stddev_order_by'] | undefined;
    stddev_pop?: GraphQLTypes['vouches_stddev_pop_order_by'] | undefined;
    stddev_samp?: GraphQLTypes['vouches_stddev_samp_order_by'] | undefined;
    sum?: GraphQLTypes['vouches_sum_order_by'] | undefined;
    var_pop?: GraphQLTypes['vouches_var_pop_order_by'] | undefined;
    var_samp?: GraphQLTypes['vouches_var_samp_order_by'] | undefined;
    variance?: GraphQLTypes['vouches_variance_order_by'] | undefined;
  };
  /** order by avg() on columns of table "vouches" */
  ['vouches_avg_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
    nominee_id?: GraphQLTypes['order_by'] | undefined;
    voucher_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Boolean expression to filter rows from the table "vouches". All fields are combined with a logical 'AND'. */
  ['vouches_bool_exp']: {
    _and?: Array<GraphQLTypes['vouches_bool_exp']> | undefined;
    _not?: GraphQLTypes['vouches_bool_exp'] | undefined;
    _or?: Array<GraphQLTypes['vouches_bool_exp']> | undefined;
    created_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    id?: GraphQLTypes['bigint_comparison_exp'] | undefined;
    nominee?: GraphQLTypes['nominees_bool_exp'] | undefined;
    nominee_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
    updated_at?: GraphQLTypes['timestamp_comparison_exp'] | undefined;
    voucher?: GraphQLTypes['users_bool_exp'] | undefined;
    voucher_id?: GraphQLTypes['Int_comparison_exp'] | undefined;
  };
  /** order by max() on columns of table "vouches" */
  ['vouches_max_order_by']: {
    created_at?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    nominee_id?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    voucher_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by min() on columns of table "vouches" */
  ['vouches_min_order_by']: {
    created_at?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    nominee_id?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    voucher_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Ordering options when selecting data from "vouches". */
  ['vouches_order_by']: {
    created_at?: GraphQLTypes['order_by'] | undefined;
    id?: GraphQLTypes['order_by'] | undefined;
    nominee?: GraphQLTypes['nominees_order_by'] | undefined;
    nominee_id?: GraphQLTypes['order_by'] | undefined;
    updated_at?: GraphQLTypes['order_by'] | undefined;
    voucher?: GraphQLTypes['users_order_by'] | undefined;
    voucher_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** select columns of table "vouches" */
  ['vouches_select_column']: vouches_select_column;
  /** order by stddev() on columns of table "vouches" */
  ['vouches_stddev_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
    nominee_id?: GraphQLTypes['order_by'] | undefined;
    voucher_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_pop() on columns of table "vouches" */
  ['vouches_stddev_pop_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
    nominee_id?: GraphQLTypes['order_by'] | undefined;
    voucher_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by stddev_samp() on columns of table "vouches" */
  ['vouches_stddev_samp_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
    nominee_id?: GraphQLTypes['order_by'] | undefined;
    voucher_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** Streaming cursor of the table "vouches" */
  ['vouches_stream_cursor_input']: {
    /** Stream column input with initial value */
    initial_value: GraphQLTypes['vouches_stream_cursor_value_input'];
    /** cursor ordering */
    ordering?: GraphQLTypes['cursor_ordering'] | undefined;
  };
  /** Initial value of the column from where the streaming should start */
  ['vouches_stream_cursor_value_input']: {
    created_at?: GraphQLTypes['timestamp'] | undefined;
    id?: GraphQLTypes['bigint'] | undefined;
    nominee_id?: number | undefined;
    updated_at?: GraphQLTypes['timestamp'] | undefined;
    voucher_id?: number | undefined;
  };
  /** order by sum() on columns of table "vouches" */
  ['vouches_sum_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
    nominee_id?: GraphQLTypes['order_by'] | undefined;
    voucher_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by var_pop() on columns of table "vouches" */
  ['vouches_var_pop_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
    nominee_id?: GraphQLTypes['order_by'] | undefined;
    voucher_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by var_samp() on columns of table "vouches" */
  ['vouches_var_samp_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
    nominee_id?: GraphQLTypes['order_by'] | undefined;
    voucher_id?: GraphQLTypes['order_by'] | undefined;
  };
  /** order by variance() on columns of table "vouches" */
  ['vouches_variance_order_by']: {
    id?: GraphQLTypes['order_by'] | undefined;
    nominee_id?: GraphQLTypes['order_by'] | undefined;
    voucher_id?: GraphQLTypes['order_by'] | undefined;
  };
};
/** select columns of table "activities" */
export const enum activities_select_column {
  action = 'action',
  actor_profile_id = 'actor_profile_id',
  big_question_id = 'big_question_id',
  cast_id = 'cast_id',
  circle_id = 'circle_id',
  contribution_id = 'contribution_id',
  created_at = 'created_at',
  epoch_id = 'epoch_id',
  id = 'id',
  organization_id = 'organization_id',
  private_stream = 'private_stream',
  reaction_count = 'reaction_count',
  reply_count = 'reply_count',
  target_profile_id = 'target_profile_id',
  updated_at = 'updated_at',
}
/** select "activities_aggregate_bool_exp_bool_and_arguments_columns" columns of table "activities" */
export const enum activities_select_column_activities_aggregate_bool_exp_bool_and_arguments_columns {
  private_stream = 'private_stream',
}
/** select "activities_aggregate_bool_exp_bool_or_arguments_columns" columns of table "activities" */
export const enum activities_select_column_activities_aggregate_bool_exp_bool_or_arguments_columns {
  private_stream = 'private_stream',
}
/** select columns of table "big_questions" */
export const enum big_questions_select_column {
  cover_image_url = 'cover_image_url',
  created_at = 'created_at',
  css_background_position = 'css_background_position',
  description = 'description',
  expire_at = 'expire_at',
  id = 'id',
  prompt = 'prompt',
  publish_at = 'publish_at',
  updated_at = 'updated_at',
}
/** select columns of table "burns" */
export const enum burns_select_column {
  circle_id = 'circle_id',
  created_at = 'created_at',
  epoch_id = 'epoch_id',
  id = 'id',
  original_amount = 'original_amount',
  regift_percent = 'regift_percent',
  tokens_burnt = 'tokens_burnt',
  updated_at = 'updated_at',
  user_id = 'user_id',
}
/** select columns of table "circle_api_keys" */
export const enum circle_api_keys_select_column {
  circle_id = 'circle_id',
  create_contributions = 'create_contributions',
  create_vouches = 'create_vouches',
  created_at = 'created_at',
  created_by = 'created_by',
  hash = 'hash',
  manage_users = 'manage_users',
  name = 'name',
  read_circle = 'read_circle',
  read_contributions = 'read_contributions',
  read_epochs = 'read_epochs',
  read_member_profiles = 'read_member_profiles',
  read_nominees = 'read_nominees',
  read_pending_token_gifts = 'read_pending_token_gifts',
  update_circle = 'update_circle',
  update_pending_token_gifts = 'update_pending_token_gifts',
}
/** unique or primary key constraints on table "circle_integrations" */
export const enum circle_integrations_constraint {
  circle_integrations_pkey = 'circle_integrations_pkey',
}
/** select columns of table "circle_integrations" */
export const enum circle_integrations_select_column {
  circle_id = 'circle_id',
  data = 'data',
  id = 'id',
  name = 'name',
  type = 'type',
}
/** update columns of table "circle_integrations" */
export const enum circle_integrations_update_column {
  data = 'data',
}
/** select columns of table "circle_private" */
export const enum circle_private_select_column {
  circle_id = 'circle_id',
  discord_webhook = 'discord_webhook',
}
/** unique or primary key constraints on table "circle_share_tokens" */
export const enum circle_share_tokens_constraint {
  circle_share_token_pkey = 'circle_share_token_pkey',
  circle_share_token_uuid_key = 'circle_share_token_uuid_key',
}
/** select columns of table "circle_share_tokens" */
export const enum circle_share_tokens_select_column {
  circle_id = 'circle_id',
  created_at = 'created_at',
  type = 'type',
  updated_at = 'updated_at',
  uuid = 'uuid',
}
/** placeholder for update columns of table "circle_share_tokens" (current role has no relevant permissions) */
export const enum circle_share_tokens_update_column {
  _PLACEHOLDER = '_PLACEHOLDER',
}
/** select columns of table "circles" */
export const enum circles_select_column {
  alloc_text = 'alloc_text',
  allow_distribute_evenly = 'allow_distribute_evenly',
  auto_opt_out = 'auto_opt_out',
  cont_help_text = 'cont_help_text',
  created_at = 'created_at',
  default_opt_in = 'default_opt_in',
  deleted_at = 'deleted_at',
  fixed_payment_token_type = 'fixed_payment_token_type',
  fixed_payment_vault_id = 'fixed_payment_vault_id',
  guild_id = 'guild_id',
  guild_role_id = 'guild_role_id',
  id = 'id',
  is_verified = 'is_verified',
  logo = 'logo',
  min_vouches = 'min_vouches',
  name = 'name',
  nomination_days_limit = 'nomination_days_limit',
  only_giver_vouch = 'only_giver_vouch',
  organization_id = 'organization_id',
  show_pending_gives = 'show_pending_gives',
  starting_tokens = 'starting_tokens',
  team_selection = 'team_selection',
  token_name = 'token_name',
  updated_at = 'updated_at',
  vouching = 'vouching',
  vouching_text = 'vouching_text',
}
/** unique or primary key constraints on table "claims" */
export const enum claims_constraint {
  claims_pkey = 'claims_pkey',
}
/** select columns of table "claims" */
export const enum claims_select_column {
  address = 'address',
  amount = 'amount',
  created_at = 'created_at',
  distribution_id = 'distribution_id',
  id = 'id',
  index = 'index',
  new_amount = 'new_amount',
  profile_id = 'profile_id',
  proof = 'proof',
  txHash = 'txHash',
  updated_at = 'updated_at',
}
/** update columns of table "claims" */
export const enum claims_update_column {
  txHash = 'txHash',
}
/** select columns of table "colinks_gives" */
export const enum colinks_gives_select_column {
  activity_id = 'activity_id',
  attestation_uid = 'attestation_uid',
  cast_hash = 'cast_hash',
  created_at = 'created_at',
  id = 'id',
  profile_id = 'profile_id',
  skill = 'skill',
  target_profile_id = 'target_profile_id',
  updated_at = 'updated_at',
  warpcast_url = 'warpcast_url',
}
/** select columns of table "contribution_count" */
export const enum contribution_count_select_column {
  contributions = 'contributions',
  profile_id = 'profile_id',
}
/** unique or primary key constraints on table "contributions" */
export const enum contributions_constraint {
  contributions_pkey = 'contributions_pkey',
}
/** select columns of table "contributions" */
export const enum contributions_select_column {
  big_question_id = 'big_question_id',
  circle_id = 'circle_id',
  created_at = 'created_at',
  created_with_api_key_hash = 'created_with_api_key_hash',
  description = 'description',
  id = 'id',
  private_stream = 'private_stream',
  profile_id = 'profile_id',
  updated_at = 'updated_at',
  user_id = 'user_id',
}
/** select "contributions_aggregate_bool_exp_bool_and_arguments_columns" columns of table "contributions" */
export const enum contributions_select_column_contributions_aggregate_bool_exp_bool_and_arguments_columns {
  private_stream = 'private_stream',
}
/** select "contributions_aggregate_bool_exp_bool_or_arguments_columns" columns of table "contributions" */
export const enum contributions_select_column_contributions_aggregate_bool_exp_bool_or_arguments_columns {
  private_stream = 'private_stream',
}
/** placeholder for update columns of table "contributions" (current role has no relevant permissions) */
export const enum contributions_update_column {
  _PLACEHOLDER = '_PLACEHOLDER',
}
/** select columns of table "cosouls" */
export const enum cosouls_select_column {
  address = 'address',
  created_at = 'created_at',
  created_tx_hash = 'created_tx_hash',
  id = 'id',
  pgive = 'pgive',
  synced_at = 'synced_at',
  token_id = 'token_id',
  updated_at = 'updated_at',
}
/** ordering argument of a cursor */
export const enum cursor_ordering {
  ASC = 'ASC',
  DESC = 'DESC',
}
/** unique or primary key constraints on table "distributions" */
export const enum distributions_constraint {
  distributions_pkey = 'distributions_pkey',
}
/** select columns of table "distributions" */
export const enum distributions_select_column {
  created_at = 'created_at',
  created_by = 'created_by',
  distribution_epoch_id = 'distribution_epoch_id',
  distribution_json = 'distribution_json',
  distribution_type = 'distribution_type',
  epoch_id = 'epoch_id',
  fixed_amount = 'fixed_amount',
  gift_amount = 'gift_amount',
  id = 'id',
  merkle_root = 'merkle_root',
  total_amount = 'total_amount',
  tx_hash = 'tx_hash',
  vault_id = 'vault_id',
}
/** update columns of table "distributions" */
export const enum distributions_update_column {
  distribution_epoch_id = 'distribution_epoch_id',
  tx_hash = 'tx_hash',
}
/** select columns of table "emails" */
export const enum emails_select_column {
  email = 'email',
  primary = 'primary',
  verified_at = 'verified_at',
}
/** select columns of table "enriched_casts" */
export const enum enriched_casts_select_column {
  created_at = 'created_at',
  deleted_at = 'deleted_at',
  embeds = 'embeds',
  fid = 'fid',
  hash = 'hash',
  id = 'id',
  mentions = 'mentions',
  mentions_positions = 'mentions_positions',
  parent_fid = 'parent_fid',
  parent_hash = 'parent_hash',
  parent_url = 'parent_url',
  profile_id = 'profile_id',
  root_parent_hash = 'root_parent_hash',
  root_parent_url = 'root_parent_url',
  text = 'text',
  timestamp = 'timestamp',
  updated_at = 'updated_at',
}
/** select columns of table "epoch_pgive_data" */
export const enum epoch_pgive_data_select_column {
  active_months = 'active_months',
  active_months_bonus = 'active_months_bonus',
  created_at = 'created_at',
  epoch_id = 'epoch_id',
  gives_receiver_base = 'gives_receiver_base',
  id = 'id',
  notes_bonus = 'notes_bonus',
  pgive = 'pgive',
}
/** select columns of table "epoches" */
export const enum epochs_select_column {
  circle_id = 'circle_id',
  created_at = 'created_at',
  days = 'days',
  description = 'description',
  end_date = 'end_date',
  ended = 'ended',
  grant = 'grant',
  id = 'id',
  notified_before_end = 'notified_before_end',
  notified_end = 'notified_end',
  notified_start = 'notified_start',
  number = 'number',
  repeat = 'repeat',
  repeat_data = 'repeat_data',
  repeat_day_of_month = 'repeat_day_of_month',
  start_date = 'start_date',
  updated_at = 'updated_at',
}
/** select columns of table "farcaster_accounts" */
export const enum farcaster_accounts_select_column {
  bio_text = 'bio_text',
  created_at = 'created_at',
  custody_address = 'custody_address',
  fid = 'fid',
  followers_count = 'followers_count',
  following_count = 'following_count',
  name = 'name',
  pfp_url = 'pfp_url',
  profile_id = 'profile_id',
  updated_at = 'updated_at',
  username = 'username',
}
/** select columns of table "farcaster.casts" */
export const enum farcaster_casts_select_column {
  created_at = 'created_at',
  deleted_at = 'deleted_at',
  embeds = 'embeds',
  fid = 'fid',
  hash = 'hash',
  id = 'id',
  mentions = 'mentions',
  mentions_positions = 'mentions_positions',
  parent_fid = 'parent_fid',
  parent_hash = 'parent_hash',
  parent_url = 'parent_url',
  root_parent_hash = 'root_parent_hash',
  root_parent_url = 'root_parent_url',
  text = 'text',
  timestamp = 'timestamp',
  updated_at = 'updated_at',
}
/** select columns of table "farcaster.reactions" */
export const enum farcaster_reactions_select_column {
  created_at = 'created_at',
  deleted_at = 'deleted_at',
  fid = 'fid',
  hash = 'hash',
  id = 'id',
  reaction_type = 'reaction_type',
  target_fid = 'target_fid',
  target_hash = 'target_hash',
  target_url = 'target_url',
  timestamp = 'timestamp',
  updated_at = 'updated_at',
}
/** select columns of table "gift_private" */
export const enum gift_private_select_column {
  gift_id = 'gift_id',
  note = 'note',
  recipient_id = 'recipient_id',
  sender_id = 'sender_id',
}
/** select columns of table "github_accounts" */
export const enum github_accounts_select_column {
  avatar_url = 'avatar_url',
  github_id = 'github_id',
  profile_id = 'profile_id',
  username = 'username',
}
/** select columns of table "histories" */
export const enum histories_select_column {
  bio = 'bio',
  id = 'id',
}
/** select columns of table "invite_codes" */
export const enum invite_codes_select_column {
  code = 'code',
  created_at = 'created_at',
  invited_id = 'invited_id',
  inviter_id = 'inviter_id',
  updated_at = 'updated_at',
}
/** select columns of table "link_holders" */
export const enum link_holders_select_column {
  amount = 'amount',
  holder = 'holder',
  target = 'target',
  updated_at = 'updated_at',
}
/** select columns of table "link_tx" */
export const enum link_tx_select_column {
  buy = 'buy',
  created_at = 'created_at',
  eth_amount = 'eth_amount',
  holder = 'holder',
  link_amount = 'link_amount',
  protocol_fee_amount = 'protocol_fee_amount',
  supply = 'supply',
  target = 'target',
  target_fee_amount = 'target_fee_amount',
  tx_hash = 'tx_hash',
}
/** select columns of table "linkedin_accounts" */
export const enum linkedin_accounts_select_column {
  name = 'name',
  picture = 'picture',
  profile_id = 'profile_id',
}
/** unique or primary key constraints on table "locked_token_distribution_gifts" */
export const enum locked_token_distribution_gifts_constraint {
  locked_token_distribution_gifts_pkey = 'locked_token_distribution_gifts_pkey',
}
/** select columns of table "locked_token_distribution_gifts" */
export const enum locked_token_distribution_gifts_select_column {
  earnings = 'earnings',
  id = 'id',
  locked_token_distribution_id = 'locked_token_distribution_id',
  profile_id = 'profile_id',
}
/** placeholder for update columns of table "locked_token_distribution_gifts" (current role has no relevant permissions) */
export const enum locked_token_distribution_gifts_update_column {
  _PLACEHOLDER = '_PLACEHOLDER',
}
/** unique or primary key constraints on table "locked_token_distributions" */
export const enum locked_token_distributions_constraint {
  locked_token_distributions_pkey = 'locked_token_distributions_pkey',
}
/** select columns of table "locked_token_distributions" */
export const enum locked_token_distributions_select_column {
  chain_id = 'chain_id',
  distributed_by = 'distributed_by',
  epoch_id = 'epoch_id',
  gift_amount = 'gift_amount',
  id = 'id',
  token_contract_address = 'token_contract_address',
  token_decimals = 'token_decimals',
  token_symbol = 'token_symbol',
  tx_hash = 'tx_hash',
}
/** update columns of table "locked_token_distributions" */
export const enum locked_token_distributions_update_column {
  tx_hash = 'tx_hash',
}
/** select columns of table "member_circle_pgives" */
export const enum member_circle_pgives_select_column {
  circle_id = 'circle_id',
  epochs = 'epochs',
  pgive = 'pgive',
  user_id = 'user_id',
}
/** select columns of table "member_epoch_pgives" */
export const enum member_epoch_pgives_select_column {
  circle_id = 'circle_id',
  created_at = 'created_at',
  epoch_id = 'epoch_id',
  gives_received = 'gives_received',
  id = 'id',
  normalized_pgive = 'normalized_pgive',
  opt_out_bonus = 'opt_out_bonus',
  organization_id = 'organization_id',
  pgive = 'pgive',
  user_id = 'user_id',
}
/** unique or primary key constraints on table "mutes" */
export const enum mutes_constraint {
  mutes_pkey = 'mutes_pkey',
}
/** select columns of table "mutes" */
export const enum mutes_select_column {
  created_at = 'created_at',
  profile_id = 'profile_id',
  target_profile_id = 'target_profile_id',
}
/** placeholder for update columns of table "mutes" (current role has no relevant permissions) */
export const enum mutes_update_column {
  _PLACEHOLDER = '_PLACEHOLDER',
}
/** select columns of table "nft_collections" */
export const enum nft_collections_select_column {
  address = 'address',
  banner_image_url = 'banner_image_url',
  external_url = 'external_url',
  name = 'name',
  slug = 'slug',
}
/** select columns of table "nft_holdings" */
export const enum nft_holdings_select_column {
  address = 'address',
  contract = 'contract',
  image_url = 'image_url',
  name = 'name',
  token_id = 'token_id',
}
/** select columns of table "nominees" */
export const enum nominees_select_column {
  address = 'address',
  circle_id = 'circle_id',
  created_at = 'created_at',
  description = 'description',
  ended = 'ended',
  expiry_date = 'expiry_date',
  id = 'id',
  nominated_by_user_id = 'nominated_by_user_id',
  nominated_date = 'nominated_date',
  updated_at = 'updated_at',
  user_id = 'user_id',
  vouches_required = 'vouches_required',
}
/** select "nominees_aggregate_bool_exp_bool_and_arguments_columns" columns of table "nominees" */
export const enum nominees_select_column_nominees_aggregate_bool_exp_bool_and_arguments_columns {
  ended = 'ended',
}
/** select "nominees_aggregate_bool_exp_bool_or_arguments_columns" columns of table "nominees" */
export const enum nominees_select_column_nominees_aggregate_bool_exp_bool_or_arguments_columns {
  ended = 'ended',
}
/** select columns of table "note_count" */
export const enum note_count_select_column {
  notes = 'notes',
  profile_id = 'profile_id',
}
/** select columns of table "notifications" */
export const enum notifications_select_column {
  created_at = 'created_at',
  id = 'id',
  invite_joined_id = 'invite_joined_id',
  link_tx_hash = 'link_tx_hash',
  mention_post_id = 'mention_post_id',
  mention_reply_id = 'mention_reply_id',
  profile_id = 'profile_id',
  reaction_id = 'reaction_id',
  reply_id = 'reply_id',
  reply_reaction_id = 'reply_reaction_id',
}
/** column ordering options */
export const enum order_by {
  asc = 'asc',
  asc_nulls_first = 'asc_nulls_first',
  asc_nulls_last = 'asc_nulls_last',
  desc = 'desc',
  desc_nulls_first = 'desc_nulls_first',
  desc_nulls_last = 'desc_nulls_last',
}
/** select columns of table "org_members" */
export const enum org_members_select_column {
  created_at = 'created_at',
  deleted_at = 'deleted_at',
  hidden = 'hidden',
  id = 'id',
  org_id = 'org_id',
  profile_id = 'profile_id',
  role = 'role',
  updated_at = 'updated_at',
}
/** unique or primary key constraints on table "org_share_tokens" */
export const enum org_share_tokens_constraint {
  org_share_tokens_pkey = 'org_share_tokens_pkey',
  org_share_tokens_uuid_key = 'org_share_tokens_uuid_key',
}
/** select columns of table "org_share_tokens" */
export const enum org_share_tokens_select_column {
  created_at = 'created_at',
  org_id = 'org_id',
  type = 'type',
  updated_at = 'updated_at',
  uuid = 'uuid',
}
/** placeholder for update columns of table "org_share_tokens" (current role has no relevant permissions) */
export const enum org_share_tokens_update_column {
  _PLACEHOLDER = '_PLACEHOLDER',
}
/** select columns of table "organizations" */
export const enum organizations_select_column {
  created_at = 'created_at',
  created_by = 'created_by',
  guild_id = 'guild_id',
  guild_role_id = 'guild_role_id',
  id = 'id',
  logo = 'logo',
  name = 'name',
  sample = 'sample',
  telegram_id = 'telegram_id',
  updated_at = 'updated_at',
}
/** select columns of table "pending_gift_private" */
export const enum pending_gift_private_select_column {
  gift_id = 'gift_id',
  note = 'note',
  recipient_id = 'recipient_id',
  sender_id = 'sender_id',
}
/** select columns of table "pending_token_gifts" */
export const enum pending_token_gifts_select_column {
  circle_id = 'circle_id',
  created_at = 'created_at',
  dts_created = 'dts_created',
  epoch_id = 'epoch_id',
  id = 'id',
  recipient_address = 'recipient_address',
  recipient_id = 'recipient_id',
  sender_address = 'sender_address',
  sender_id = 'sender_id',
  tokens = 'tokens',
  updated_at = 'updated_at',
}
/** unique or primary key constraints on table "pending_vault_transactions" */
export const enum pending_vault_transactions_constraint {
  pending_vault_transactions_pkey = 'pending_vault_transactions_pkey',
}
/** select columns of table "pending_vault_transactions" */
export const enum pending_vault_transactions_select_column {
  chain_id = 'chain_id',
  claim_id = 'claim_id',
  created_by = 'created_by',
  distribution_id = 'distribution_id',
  org_id = 'org_id',
  tx_hash = 'tx_hash',
  tx_type = 'tx_type',
}
/** placeholder for update columns of table "pending_vault_transactions" (current role has no relevant permissions) */
export const enum pending_vault_transactions_update_column {
  _PLACEHOLDER = '_PLACEHOLDER',
}
/** select columns of table "poap_events" */
export const enum poap_events_select_column {
  city = 'city',
  country = 'country',
  created_at = 'created_at',
  description = 'description',
  embedding = 'embedding',
  end_date = 'end_date',
  event_url = 'event_url',
  expiry_date = 'expiry_date',
  fancy_id = 'fancy_id',
  id = 'id',
  image_url = 'image_url',
  name = 'name',
  poap_id = 'poap_id',
  similarity = 'similarity',
  start_date = 'start_date',
  supply = 'supply',
  updated_at = 'updated_at',
  year = 'year',
}
/** select columns of table "poap_holders" */
export const enum poap_holders_select_column {
  address = 'address',
  chain = 'chain',
  created_at = 'created_at',
  event_id = 'event_id',
  id = 'id',
  poap_created = 'poap_created',
  token_id = 'token_id',
  updated_at = 'updated_at',
}
/** select columns of table "private_stream_visibility" */
export const enum private_stream_visibility_select_column {
  created_at = 'created_at',
  profile_id = 'profile_id',
  view_profile_id = 'view_profile_id',
}
/** unique or primary key constraints on table "profile_skills" */
export const enum profile_skills_constraint {
  profile_skills_pkey = 'profile_skills_pkey',
}
/** select columns of table "profile_skills" */
export const enum profile_skills_select_column {
  created_at = 'created_at',
  profile_id = 'profile_id',
  skill_name = 'skill_name',
}
/** placeholder for update columns of table "profile_skills" (current role has no relevant permissions) */
export const enum profile_skills_update_column {
  _PLACEHOLDER = '_PLACEHOLDER',
}
/** select columns of table "profiles_private" */
export const enum profiles_private_select_column {
  address = 'address',
  device_login_token = 'device_login_token',
  id = 'id',
  points_balance = 'points_balance',
  points_checkpointed_at = 'points_checkpointed_at',
}
/** select columns of table "profiles_public" */
export const enum profiles_public_select_column {
  address = 'address',
  avatar = 'avatar',
  created_at = 'created_at',
  description = 'description',
  id = 'id',
  joined_colinks_at = 'joined_colinks_at',
  links = 'links',
  links_held = 'links_held',
  name = 'name',
  post_count = 'post_count',
  post_count_last_30_days = 'post_count_last_30_days',
  website = 'website',
}
/** select columns of table "profiles" */
export const enum profiles_select_column {
  address = 'address',
  app_emails = 'app_emails',
  avatar = 'avatar',
  background = 'background',
  bio = 'bio',
  colinks_notification_emails = 'colinks_notification_emails',
  colinks_product_emails = 'colinks_product_emails',
  created_at = 'created_at',
  description = 'description',
  discord_username = 'discord_username',
  github_username = 'github_username',
  id = 'id',
  invite_code = 'invite_code',
  invite_code_redeemed_at = 'invite_code_redeemed_at',
  invite_code_requested_at = 'invite_code_requested_at',
  invite_code_sent_at = 'invite_code_sent_at',
  invited_by = 'invited_by',
  last_read_notification_id = 'last_read_notification_id',
  links = 'links',
  links_held = 'links_held',
  medium_username = 'medium_username',
  name = 'name',
  product_emails = 'product_emails',
  skills = 'skills',
  telegram_username = 'telegram_username',
  tos_agreed_at = 'tos_agreed_at',
  twitter_username = 'twitter_username',
  updated_at = 'updated_at',
  website = 'website',
}
/** unique or primary key constraints on table "reactions" */
export const enum reactions_constraint {
  reactions_pkey = 'reactions_pkey',
  reactions_profile_id_activity_id_reaction_key = 'reactions_profile_id_activity_id_reaction_key',
}
/** select columns of table "reactions" */
export const enum reactions_select_column {
  activity_id = 'activity_id',
  created_at = 'created_at',
  id = 'id',
  profile_id = 'profile_id',
  reaction = 'reaction',
  updated_at = 'updated_at',
}
/** placeholder for update columns of table "reactions" (current role has no relevant permissions) */
export const enum reactions_update_column {
  _PLACEHOLDER = '_PLACEHOLDER',
}
/** unique or primary key constraints on table "replies" */
export const enum replies_constraint {
  replies_pkey = 'replies_pkey',
}
/** unique or primary key constraints on table "replies_reactions" */
export const enum replies_reactions_constraint {
  replies_reactions_pkey = 'replies_reactions_pkey',
  replies_reactions_profile_id_reply_id_reaction_key = 'replies_reactions_profile_id_reply_id_reaction_key',
}
/** select columns of table "replies_reactions" */
export const enum replies_reactions_select_column {
  activity_id = 'activity_id',
  created_at = 'created_at',
  id = 'id',
  profile_id = 'profile_id',
  reaction = 'reaction',
  reply_id = 'reply_id',
  updated_at = 'updated_at',
}
/** placeholder for update columns of table "replies_reactions" (current role has no relevant permissions) */
export const enum replies_reactions_update_column {
  _PLACEHOLDER = '_PLACEHOLDER',
}
/** select columns of table "replies" */
export const enum replies_select_column {
  activity_actor_id = 'activity_actor_id',
  activity_id = 'activity_id',
  created_at = 'created_at',
  deleted_at = 'deleted_at',
  id = 'id',
  profile_id = 'profile_id',
  reply = 'reply',
  updated_at = 'updated_at',
}
/** update columns of table "replies" */
export const enum replies_update_column {
  deleted_at = 'deleted_at',
}
/** select columns of table "reputation_scores" */
export const enum reputation_scores_select_column {
  colinks_engagement_score = 'colinks_engagement_score',
  created_at = 'created_at',
  email_score = 'email_score',
  farcaster_score = 'farcaster_score',
  github_score = 'github_score',
  invite_score = 'invite_score',
  linkedin_score = 'linkedin_score',
  links_score = 'links_score',
  pgive_score = 'pgive_score',
  poap_score = 'poap_score',
  profile_id = 'profile_id',
  social_give_score = 'social_give_score',
  total_score = 'total_score',
  twitter_score = 'twitter_score',
  updated_at = 'updated_at',
}
/** unique or primary key constraints on table "skills" */
export const enum skills_constraint {
  skills_pkey = 'skills_pkey',
}
/** select columns of table "skills" */
export const enum skills_select_column {
  count = 'count',
  created_at = 'created_at',
  hidden = 'hidden',
  name = 'name',
  updated_at = 'updated_at',
}
/** placeholder for update columns of table "skills" (current role has no relevant permissions) */
export const enum skills_update_column {
  _PLACEHOLDER = '_PLACEHOLDER',
}
/** select columns of table "teammates" */
export const enum teammates_select_column {
  created_at = 'created_at',
  id = 'id',
  team_mate_id = 'team_mate_id',
  updated_at = 'updated_at',
  user_id = 'user_id',
}
/** select columns of table "token_gifts" */
export const enum token_gifts_select_column {
  circle_id = 'circle_id',
  created_at = 'created_at',
  dts_created = 'dts_created',
  epoch_id = 'epoch_id',
  id = 'id',
  recipient_address = 'recipient_address',
  recipient_id = 'recipient_id',
  sender_address = 'sender_address',
  sender_id = 'sender_id',
  tokens = 'tokens',
  updated_at = 'updated_at',
}
/** select columns of table "twitter_accounts" */
export const enum twitter_accounts_select_column {
  description = 'description',
  id = 'id',
  name = 'name',
  profile_id = 'profile_id',
  profile_image_url = 'profile_image_url',
  username = 'username',
}
/** select columns of table "user_private" */
export const enum user_private_select_column {
  fixed_payment_amount = 'fixed_payment_amount',
  fixed_payment_token_type = 'fixed_payment_token_type',
  user_id = 'user_id',
}
/** select columns of table "users" */
export const enum users_select_column {
  bio = 'bio',
  circle_id = 'circle_id',
  created_at = 'created_at',
  deleted_at = 'deleted_at',
  epoch_first_visit = 'epoch_first_visit',
  fixed_non_receiver = 'fixed_non_receiver',
  give_token_received = 'give_token_received',
  give_token_remaining = 'give_token_remaining',
  id = 'id',
  non_giver = 'non_giver',
  non_receiver = 'non_receiver',
  profile_id = 'profile_id',
  role = 'role',
  starting_tokens = 'starting_tokens',
  updated_at = 'updated_at',
}
/** select columns of table "vault_transactions" */
export const enum vault_transactions_select_column {
  circle_id = 'circle_id',
  created_at = 'created_at',
  created_by = 'created_by',
  distribution_id = 'distribution_id',
  id = 'id',
  tx_hash = 'tx_hash',
  tx_type = 'tx_type',
  updated_at = 'updated_at',
  vault_id = 'vault_id',
}
export const enum vault_tx_types_enum {
  Claim = 'Claim',
  Deposit = 'Deposit',
  Distribution = 'Distribution',
  Vault_Deploy = 'Vault_Deploy',
  Withdraw = 'Withdraw',
}
/** select columns of table "vault_tx_types" */
export const enum vault_tx_types_select_column {
  comment = 'comment',
  value = 'value',
}
/** select columns of table "vaults" */
export const enum vaults_select_column {
  chain_id = 'chain_id',
  created_at = 'created_at',
  created_by = 'created_by',
  decimals = 'decimals',
  deployment_block = 'deployment_block',
  id = 'id',
  simple_token_address = 'simple_token_address',
  symbol = 'symbol',
  token_address = 'token_address',
  updated_at = 'updated_at',
  vault_address = 'vault_address',
}
/** select columns of table "vouches" */
export const enum vouches_select_column {
  created_at = 'created_at',
  id = 'id',
  nominee_id = 'nominee_id',
  updated_at = 'updated_at',
  voucher_id = 'voucher_id',
}
