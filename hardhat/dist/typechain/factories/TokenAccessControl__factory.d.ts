import { Signer, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TokenAccessControl, TokenAccessControlInterface } from "../TokenAccessControl";
export declare class TokenAccessControl__factory extends ContractFactory {
    constructor(signer?: Signer);
    deploy(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): Promise<TokenAccessControl>;
    getDeployTransaction(overrides?: Overrides & {
        from?: string | Promise<string>;
    }): TransactionRequest;
    attach(address: string): TokenAccessControl;
    connect(signer: Signer): TokenAccessControl__factory;
    static readonly bytecode = "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610b7c8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100db5760003560e01c806306ca0bad146100e0578063103ee2f5146100ea57806321afb5ee146101225780633424b8ce146101355780635c975abb146101485780635fc1964f14610155578063715018a61461016857806371e2a6571461017057806372be7ec3146101835780637a131ebe1461018b5780638da5cb5b1461019d5780639b198950146101bd578063c4722a4d146101d1578063cf8e629a146101e4578063f2fde38b146101ec578063f356c912146101ff578063f46eccc414610212575b600080fd5b6100e8610235565b005b61010d6100f8366004610930565b60026020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b60035461010d9062010000900460ff1681565b6100e86101433660046109bf565b6102d9565b60035461010d9060ff1681565b6100e8610163366004610951565b610350565b6100e861043f565b6100e861017e366004610951565b610453565b6100e8610535565b60035461010d90610100900460ff1681565b6101a56105a5565b6040516001600160a01b039091168152602001610119565b60035461010d906301000000900460ff1681565b6100e86101df366004610951565b6105b4565b6100e8610698565b6100e86101fa366004610930565b610708565b6100e861020d366004610951565b610781565b61010d610220366004610930565b60016020526000908152604090205460ff1681565b61023d610865565b60035462010000900460ff161561029d5760405162461bcd60e51b815260206004820152602b6024820152600080516020610b2783398151915260448201526a696e7420616e796d6f726560a81b60648201526084015b60405180910390fd5b6003805462ff00001916620100001790556040517fd498043d7ad0aae95bcd163cc21a9f809917f820b6eb2114164f7eb62af7627a90600090a1565b6102e1610865565b600354610100900460ff16156103095760405162461bcd60e51b815260040161029490610a2b565b6003805460ff19168215159081179091556040519081527fef37df9624f797913e7585c7f7b5d004ba6704be3c64b0561c157728ccc869859060200160405180910390a150565b610358610865565b60035462010000900460ff16156103815760405162461bcd60e51b815260040161029490610a76565b60005b81811015610401576000600160008585858181106103b257634e487b7160e01b600052603260045260246000fd5b90506020020160208101906103c79190610930565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055806103f981610aff565b915050610384565b507fa4bd966469c62332cc5041d465060dbc3e847c7b125422e59ddb3e61a2005ae782826040516104339291906109df565b60405180910390a15050565b610447610865565b61045160006108c4565b565b61045b610865565b60035462010000900460ff16156104845760405162461bcd60e51b815260040161029490610a76565b60005b818110156105035760018060008585858181106104b457634e487b7160e01b600052603260045260246000fd5b90506020020160208101906104c99190610930565b6001600160a01b031681526020810191909152604001600020805460ff1916911515919091179055806104fb81610aff565b915050610487565b507f6050e1d24499bf62f6297dc608356dc088c4e4b4fd753a8606207fdf078578e382826040516104339291906109df565b61053d610865565b600354610100900460ff16156105655760405162461bcd60e51b815260040161029490610a2b565b6003805460ff1961ff0019909116610100171690556040517f3f497821ce68d0936d5908ecb1360ef3c825e415f122cd465b3bab23d6a5bf7490600090a1565b6000546001600160a01b031690565b6105bc610865565b6003546301000000900460ff16156105e65760405162461bcd60e51b815260040161029490610ab6565b60005b818110156106665760016002600085858581811061061757634e487b7160e01b600052603260045260246000fd5b905060200201602081019061062c9190610930565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790558061065e81610aff565b9150506105e9565b507ff875362c4f1cfd50ea9685a61df0a1c19304428e6c289bf17208b0baa8b575d982826040516104339291906109df565b6106a0610865565b6003546301000000900460ff16156106ca5760405162461bcd60e51b815260040161029490610ab6565b6003805463ff000000191663010000001790556040517f2d35c8d348a345fd7b3b03b7cfcf7ad0b60c2d46742d5ca536342e4185becb0790600090a1565b610710610865565b6001600160a01b0381166107755760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610294565b61077e816108c4565b50565b610789610865565b6003546301000000900460ff16156107b35760405162461bcd60e51b815260040161029490610ab6565b60005b81811015610833576000600260008585858181106107e457634e487b7160e01b600052603260045260246000fd5b90506020020160208101906107f99190610930565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790558061082b81610aff565b9150506107b6565b507f8e57ccca240b595c47024ae5107fe735c445b00720b01a618479f91709ee980382826040516104339291906109df565b3361086e6105a5565b6001600160a01b0316146104515760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610294565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b038116811461092b57600080fd5b919050565b600060208284031215610941578081fd5b61094a82610914565b9392505050565b60008060208385031215610963578081fd5b82356001600160401b0380821115610979578283fd5b818501915085601f83011261098c578283fd5b81358181111561099a578384fd5b86602080830285010111156109ad578384fd5b60209290920196919550909350505050565b6000602082840312156109d0578081fd5b8135801515811461094a578182fd5b60208082528181018390526000908460408401835b86811015610a20576001600160a01b03610a0d84610914565b16825291830191908301906001016109f4565b509695505050505050565b6020808252602b908201527f416363657373436f6e74726f6c3a20436f6e747261637420697320756e70617560408201526a39b2b2103337b932bb32b960a91b606082015260800190565b6020808252603290820152600080516020610b27833981519152604082015271696e7420746f6b656e7320616e796d6f726560701b606082015260800190565b60208082526029908201527f416363657373436f6e74726f6c3a20416c6c6f776c69737420616c726561647960408201526808191a5cd8589b195960ba1b606082015260800190565b6000600019821415610b1f57634e487b7160e01b81526011600452602481fd5b506001019056fe416363657373436f6e74726f6c3a20436f6e74726163742063616e6e6f74206da2646970667358221220ecb7bf9079280754ce606db08c2aa02837de6922aad064473093a937c8bc205b64736f6c63430008020033";
    static readonly abi: ({
        anonymous: boolean;
        inputs: {
            indexed: boolean;
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        type: string;
        outputs?: undefined;
        stateMutability?: undefined;
    } | {
        inputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        name: string;
        outputs: {
            internalType: string;
            name: string;
            type: string;
        }[];
        stateMutability: string;
        type: string;
        anonymous?: undefined;
    })[];
    static createInterface(): TokenAccessControlInterface;
    static connect(address: string, signerOrProvider: Signer | Provider): TokenAccessControl;
}
