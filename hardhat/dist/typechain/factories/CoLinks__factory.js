"use strict";
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CoLinks__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: false,
                internalType: 'address',
                name: 'holder',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'address',
                name: 'target',
                type: 'address',
            },
            {
                indexed: false,
                internalType: 'bool',
                name: 'isBuy',
                type: 'bool',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'linkAmount',
                type: 'uint256',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'ethAmount',
                type: 'uint256',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'protocolEthAmount',
                type: 'uint256',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'targetEthAmount',
                type: 'uint256',
            },
            {
                indexed: false,
                internalType: 'uint256',
                name: 'supply',
                type: 'uint256',
            },
        ],
        name: 'LinkTx',
        type: 'event',
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: 'address',
                name: 'previousOwner',
                type: 'address',
            },
            {
                indexed: true,
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'OwnershipTransferred',
        type: 'event',
    },
    {
        inputs: [],
        name: 'baseFeeMax',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'linkTarget',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
        ],
        name: 'buyLinks',
        outputs: [],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'linkTarget',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
        ],
        name: 'getBuyPrice',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'linkTarget',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
        ],
        name: 'getBuyPriceAfterFee',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: 'supply',
                type: 'uint256',
            },
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
        ],
        name: 'getPrice',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'pure',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'linkTarget',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
        ],
        name: 'getSellPrice',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'linkTarget',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
        ],
        name: 'getSellPriceAfterFee',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        name: 'linkBalance',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        name: 'linkSupply',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'owner',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'protocolFeeDestination',
        outputs: [
            {
                internalType: 'address',
                name: '',
                type: 'address',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'protocolFeePercent',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [],
        name: 'renounceOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'linkTarget',
                type: 'address',
            },
            {
                internalType: 'uint256',
                name: 'amount',
                type: 'uint256',
            },
        ],
        name: 'sellLinks',
        outputs: [],
        stateMutability: 'payable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: '_fee',
                type: 'uint256',
            },
        ],
        name: 'setBaseFeeMax',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: '_feeDestination',
                type: 'address',
            },
        ],
        name: 'setFeeDestination',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: '_feePercent',
                type: 'uint256',
            },
        ],
        name: 'setProtocolFeePercent',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'uint256',
                name: '_feePercent',
                type: 'uint256',
            },
        ],
        name: 'setTargetFeePercent',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
    {
        inputs: [],
        name: 'targetFeePercent',
        outputs: [
            {
                internalType: 'uint256',
                name: '',
                type: 'uint256',
            },
        ],
        stateMutability: 'view',
        type: 'function',
    },
    {
        inputs: [
            {
                internalType: 'address',
                name: 'newOwner',
                type: 'address',
            },
        ],
        name: 'transferOwnership',
        outputs: [],
        stateMutability: 'nonpayable',
        type: 'function',
    },
];
const _bytecode = '0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6111348061007e6000396000f3fe6080604052600436106100ef5760003560e01c806306ae39e9146100f45780630f026f6d1461013f5780632267a89c1461015f5780633a910e2c1461017f5780633fb7d3d1146101955780633fc68b81146101aa5780634635256e146101c05780634c5dc5a1146101e05780634ce7957c1461020d5780635cf4ee9114610245578063715018a6146102655780638da5cb5b1461027a5780639ae717811461028f578063a4983421146102af578063a8d1b822146102cf578063bae70112146102ef578063d6e6eb9f1461030f578063f2fde38b14610325578063fbe5323414610345578063fce4dcdf14610365575b600080fd5b34801561010057600080fd5b5061012c61010f366004610f2e565b600560209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561014b57600080fd5b5061012c61015a366004610f60565b610378565b34801561016b57600080fd5b5061012c61017a366004610f60565b610421565b34801561018b57600080fd5b5061012c60045481565b6101a86101a3366004610f60565b6104ac565b005b3480156101b657600080fd5b5061012c60035481565b3480156101cc57600080fd5b5061012c6101db366004610f60565b6107c2565b3480156101ec57600080fd5b5061012c6101fb366004610f14565b60066020526000908152604090205481565b34801561021957600080fd5b5060015461022d906001600160a01b031681565b6040516001600160a01b039091168152602001610136565b34801561025157600080fd5b5061012c610260366004610fa1565b6107ec565b34801561027157600080fd5b506101a8610924565b34801561028657600080fd5b5061022d610938565b34801561029b57600080fd5b5061012c6102aa366004610f60565b610947565b3480156102bb57600080fd5b506101a86102ca366004610f89565b610975565b3480156102db57600080fd5b506101a86102ea366004610f89565b6109aa565b3480156102fb57600080fd5b506101a861030a366004610f89565b6109df565b34801561031b57600080fd5b5061012c60025481565b34801561033157600080fd5b506101a8610340366004610f14565b610a13565b34801561035157600080fd5b506101a8610360366004610f14565b610a8c565b6101a8610373366004610f60565b610ab6565b60008061038584846107c2565b90506000670de0b6b3a7640000600254836103a09190611092565b6103aa9190611072565b90506000670de0b6b3a7640000600354846103c59190611092565b6103cf9190611072565b6001600160a01b03871660009081526006602052604081205491925090156103f657506004545b8082610402858761105a565b61040c919061105a565b610416919061105a565b979650505050505050565b60008061042e8484610947565b90506000670de0b6b3a7640000600254836104499190611092565b6104539190611072565b90506000670de0b6b3a76400006003548461046e9190611092565b6104789190611072565b905061048383610e23565b8161048e84866110b1565b61049891906110b1565b6104a291906110b1565b9695505050505050565b6001600160a01b038216600090815260066020526040902054801515806104db57506001600160a01b03831633145b6105425760405162461bcd60e51b815260206004820152602d60248201527f4f6e6c7920746865206c696e6b7327207461726765742063616e20627579207460448201526c6865206669727374206c696e6b60981b60648201526084015b60405180910390fd5b600061054e82846107ec565b90506000670de0b6b3a7640000600254836105699190611092565b6105739190611072565b90506000670de0b6b3a76400006003548461058e9190611092565b6105989190611072565b905083156105d75760026004546105af9190611072565b6105b9908361105a565b915060026004546105ca9190611072565b6105d4908261105a565b90505b806105e2838561105a565b6105ec919061105a565b34146106335760405162461bcd60e51b8152602060048201526016602482015275125b995e1858dd081c185e5b595b9d08185b5bdd5b9d60521b6044820152606401610539565b6001600160a01b038616600090815260056020908152604080832033845290915290205461066290869061105a565b6001600160a01b0387166000908152600560209081526040808320338452909152902055610690858561105a565b6001600160a01b0387166000908152600660205260409020556000805160206110df83398151915233876001888787876106ca848d61105a565b6040516106de989796959493929190610fc2565b60405180910390a16001546040516000916001600160a01b03169084908381818185875af1925050503d8060008114610733576040519150601f19603f3d011682016040523d82523d6000602084013e610738565b606091505b505090506000876001600160a01b03168360405160006040518083038185875af1925050503d8060008114610789576040519150601f19603f3d011682016040523d82523d6000602084013e61078e565b606091505b5050905081801561079c5750805b6107b85760405162461bcd60e51b81526004016105399061102c565b5050505050505050565b6001600160a01b0382166000908152600660205260408120546107e590836107ec565b9392505050565b60006064818415610854576018826108056001886110b1565b610810906002611092565b61081b90600161105a565b876108276001826110b1565b6108319190611092565b61083b9190611092565b6108459190611092565b61084f9190611072565b610857565b60005b90506000851580156108695750846001145b6108e9576018838661087c60018a6110b1565b610886919061105a565b610891906002611092565b61089c90600161105a565b6108a6888a61105a565b886108b260018c6110b1565b6108bc919061105a565b6108c69190611092565b6108d09190611092565b6108da9190611092565b6108e49190611072565b6108ec565b60005b905060006108fa83836110b1565b905061090884613e80611092565b61091a82670de0b6b3a7640000611092565b6104169190611072565b61092c610e4e565b6109366000610ead565b565b6000546001600160a01b031690565b6001600160a01b0382166000908152600660205260408120546107e59061096f9084906110b1565b836107ec565b61097d610e4e565b67016345785d8a00008111156109a55760405162461bcd60e51b815260040161053990611006565b600255565b6109b2610e4e565b67016345785d8a00008111156109da5760405162461bcd60e51b815260040161053990611006565b600355565b6109e7610e4e565b66038d7ea4c68000811115610a0e5760405162461bcd60e51b815260040161053990611006565b600455565b610a1b610e4e565b6001600160a01b038116610a805760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610539565b610a8981610ead565b50565b610a94610e4e565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038216600090815260066020526040902054818111610b1a5760405162461bcd60e51b815260206004820152601960248201527843616e6e6f742073656c6c20746865206c617374206c696e6b60381b6044820152606401610539565b6000610b2f610b2984846110b1565b846107ec565b90506000670de0b6b3a764000060025483610b4a9190611092565b610b549190611072565b90506000670de0b6b3a764000060035484610b6f9190611092565b610b799190611072565b90508315610bbe576000610b8c84610e23565b9050610b99600282611072565b610ba3908461105a565b9250610bb0600282611072565b610bba908361105a565b9150505b6001600160a01b0386166000908152600560209081526040808320338452909152902054851115610c265760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e74206c696e6b7360701b6044820152606401610539565b6001600160a01b0386166000908152600560209081526040808320338452909152902054610c559086906110b1565b6001600160a01b0387166000908152600560209081526040808320338452909152902055610c8385856110b1565b6001600160a01b0387166000908152600660205260408120919091556000805160206110df833981519152903390889088878787610cc1848d6110b1565b604051610cd5989796959493929190610fc2565b60405180910390a160003382610ceb85876110b1565b610cf591906110b1565b604051600081818185875af1925050503d8060008114610d31576040519150601f19603f3d011682016040523d82523d6000602084013e610d36565b606091505b50506001546040519192506000916001600160a01b039091169085908381818185875af1925050503d8060008114610d8a576040519150601f19603f3d011682016040523d82523d6000602084013e610d8f565b606091505b505090506000886001600160a01b03168460405160006040518083038185875af1925050503d8060008114610de0576040519150601f19603f3d011682016040523d82523d6000602084013e610de5565b606091505b50509050828015610df35750815b8015610dfc5750805b610e185760405162461bcd60e51b81526004016105399061102c565b505050505050505050565b600080610e31600a84611072565b90506004548110610e46575050600454610e49565b90505b919050565b33610e57610938565b6001600160a01b0316146109365760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610539565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610e4957600080fd5b600060208284031215610f25578081fd5b6107e582610efd565b60008060408385031215610f40578081fd5b610f4983610efd565b9150610f5760208401610efd565b90509250929050565b60008060408385031215610f72578182fd5b610f7b83610efd565b946020939093013593505050565b600060208284031215610f9a578081fd5b5035919050565b60008060408385031215610fb3578182fd5b50508035926020909101359150565b6001600160a01b03988916815296909716602087015293151560408601526060850192909252608084015260a083015260c082015260e08101919091526101000190565b6020808252600c908201526b08ccaca40e8dede40d0d2ced60a31b604082015260600190565b602080825260149082015273556e61626c6520746f2073656e642066756e647360601b604082015260600190565b6000821982111561106d5761106d6110c8565b500190565b60008261108d57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156110ac576110ac6110c8565b500290565b6000828210156110c3576110c36110c8565b500390565b634e487b7160e01b600052601160045260246000fdfead9f55a41a915706e0b499306a3aabd261f9a4ba53f5a1d36981d40083063a52a2646970667358221220ba488b5b2e3f4116e5bfc227b74753f4805590ae67e573faa35792201c0aa1fb64736f6c63430008020033';
class CoLinks__factory extends ethers_1.ContractFactory {
    constructor(signer) {
        super(_abi, _bytecode, signer);
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.CoLinks__factory = CoLinks__factory;
CoLinks__factory.bytecode = _bytecode;
CoLinks__factory.abi = _abi;
