{
  "address": "0xB04dEa2f33730833435f2Cb170A340Cee369b03C",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isBuy",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "linkAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "protocolEthAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "targetEthAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        }
      ],
      "name": "LinkTx",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "linkTarget",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "buyLinks",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "linkTarget",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getBuyPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "linkTarget",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getBuyPriceAfterFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "linkTarget",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getSellPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "linkTarget",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getSellPriceAfterFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "linkBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "linkSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFeeDestination",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "linkTarget",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "sellLinks",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeDestination",
          "type": "address"
        }
      ],
      "name": "setFeeDestination",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feePercent",
          "type": "uint256"
        }
      ],
      "name": "setProtocolFeePercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feePercent",
          "type": "uint256"
        }
      ],
      "name": "setTargetFeePercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xf7a500b322a096cba316b26c850b448140e8f1fc1a25dde3fbcf255d081cf878",
  "receipt": {
    "to": null,
    "from": "0x63A256Aa04A0eEEc85c32df9765bc83C68999E9f",
    "contractAddress": "0xB04dEa2f33730833435f2Cb170A340Cee369b03C",
    "transactionIndex": 2,
    "gasUsed": "916425",
    "logsBloom": "0x
    "blockHash": "0x36220eeb068f6fc555cc44b4152259860fa18c03dfb6cde328d181a5a76d6c88",
    "transactionHash": "0xf7a500b322a096cba316b26c850b448140e8f1fc1a25dde3fbcf255d081cf878",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 16978069,
        "transactionHash": "0xf7a500b322a096cba316b26c850b448140e8f1fc1a25dde3fbcf255d081cf878",
        "address": "0xB04dEa2f33730833435f2Cb170A340Cee369b03C",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000063a256aa04a0eeec85c32df9765bc83c68999e9f"
        ],
        "data": "0x",
        "logIndex": 3,
        "blockHash": "0x36220eeb068f6fc555cc44b4152259860fa18c03dfb6cde328d181a5a76d6c88"
      }
    ],
    "blockNumber": 16978069,
    "cumulativeGasUsed": "1089580",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "4697ee2c9590e4c88d7554ae97d180e0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isBuy\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"linkAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolEthAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"targetEthAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"name\":\"LinkTx\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"linkTarget\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyLinks\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"linkTarget\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getBuyPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"linkTarget\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getBuyPriceAfterFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"linkTarget\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getSellPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"linkTarget\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getSellPriceAfterFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"linkBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"linkSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"linkTarget\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sellLinks\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeDestination\",\"type\":\"address\"}],\"name\":\"setFeeDestination\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setProtocolFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setTargetFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/coordinape-protocol/contracts/colinks/CoLinks.sol\":\"CoLinks\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/coordinape-protocol/contracts/colinks/CoLinks.sol\":{\"content\":\"// SPDX-License-Identifier: None\\npragma solidity ^0.8.2;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract CoLinks is Ownable {\\n    address public protocolFeeDestination;\\n    uint256 public protocolFeePercent;\\n    uint256 public targetFeePercent;\\n\\n    event LinkTx(address holder, address target, bool isBuy, uint256 linkAmount, uint256 ethAmount, uint256 protocolEthAmount, uint256 targetEthAmount, uint256 supply);\\n\\n    // LinkTarget => (Holder => Balance)\\n    mapping(address => mapping(address => uint256)) public linkBalance;\\n\\n    // LinkTarget => Supply\\n    mapping(address => uint256) public linkSupply;\\n\\n    function setFeeDestination(address _feeDestination) public onlyOwner {\\n        protocolFeeDestination = _feeDestination;\\n    }\\n\\n    function setProtocolFeePercent(uint256 _feePercent) public onlyOwner {\\n        protocolFeePercent = _feePercent;\\n    }\\n\\n    function setTargetFeePercent(uint256 _feePercent) public onlyOwner {\\n        targetFeePercent = _feePercent;\\n    }\\n\\n    function getPrice(uint256 supply, uint256 amount) public pure returns (uint256) {\\n        uint256 sum1 = supply == 0 ? 0 : (supply - 1 )* (supply) * (2 * (supply - 1) + 1) / 6;\\n        uint256 sum2 = supply == 0 && amount == 1 ? 0 : (supply - 1 + amount) * (supply + amount) * (2 * (supply - 1 + amount) + 1) / 6;\\n        uint256 summation = sum2 - sum1;\\n        return summation * 1 ether / 16000;\\n    }\\n\\n    function getBuyPrice(address linkTarget, uint256 amount) public view returns (uint256) {\\n        return getPrice(linkSupply[linkTarget], amount);\\n    }\\n\\n    function getSellPrice(address linkTarget, uint256 amount) public view returns (uint256) {\\n        return getPrice(linkSupply[linkTarget] - amount, amount);\\n    }\\n\\n    function getBuyPriceAfterFee(address linkTarget, uint256 amount) public view returns (uint256) {\\n        uint256 price = getBuyPrice(linkTarget, amount);\\n        uint256 protocolFee = price * protocolFeePercent / 1 ether;\\n        uint256 targetFee = price * targetFeePercent / 1 ether;\\n        return price + protocolFee + targetFee;\\n    }\\n\\n    function getSellPriceAfterFee(address linkTarget, uint256 amount) public view returns (uint256) {\\n        uint256 price = getSellPrice(linkTarget, amount);\\n        uint256 protocolFee = price * protocolFeePercent / 1 ether;\\n        uint256 targetFee = price * targetFeePercent / 1 ether;\\n        return price - protocolFee - targetFee;\\n    }\\n\\n    function buyLinks(address linkTarget, uint256 amount) public payable {\\n        uint256 supply = linkSupply[linkTarget];\\n        require(supply > 0 || linkTarget == msg.sender, \\\"Only the links' target can buy the first link\\\");\\n        uint256 price = getPrice(supply, amount);\\n        uint256 protocolFee = price * protocolFeePercent / 1 ether;\\n        uint256 targetFee = price * targetFeePercent / 1 ether;\\n        require(msg.value >= price + protocolFee + targetFee, \\\"Insufficient payment\\\");\\n        linkBalance[linkTarget][msg.sender] = linkBalance[linkTarget][msg.sender] + amount;\\n        linkSupply[linkTarget] = supply + amount;\\n        emit LinkTx(msg.sender, linkTarget, true, amount, price, protocolFee, targetFee, supply + amount);\\n        (bool success1, ) = protocolFeeDestination.call{value: protocolFee}(\\\"\\\");\\n        (bool success2, ) = linkTarget.call{value: targetFee}(\\\"\\\");\\n        require(success1 && success2, \\\"Unable to send funds\\\");\\n    }\\n\\n    function sellLinks(address linkTarget, uint256 amount) public payable {\\n        uint256 supply = linkSupply[linkTarget];\\n        require(supply > amount, \\\"Cannot sell the last link\\\");\\n        uint256 price = getPrice(supply - amount, amount);\\n        uint256 protocolFee = price * protocolFeePercent / 1 ether;\\n        uint256 targetFee = price * targetFeePercent / 1 ether;\\n        require(linkBalance[linkTarget][msg.sender] >= amount, \\\"Insufficient links\\\");\\n        linkBalance[linkTarget][msg.sender] = linkBalance[linkTarget][msg.sender] - amount;\\n        linkSupply[linkTarget] = supply - amount;\\n        emit LinkTx(msg.sender, linkTarget, false, amount, price, protocolFee, targetFee, supply - amount);\\n        (bool success1, ) = msg.sender.call{value: price - protocolFee - targetFee}(\\\"\\\");\\n        (bool success2, ) = protocolFeeDestination.call{value: protocolFee}(\\\"\\\");\\n        (bool success3, ) = linkTarget.call{value: targetFee}(\\\"\\\");\\n        require(success1 && success2 && success3, \\\"Unable to send funds\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x1840044c1793ad5ca47733f59774df42bc26c6d1eaf04e54bc79f2bf93cfdd9c\",\"license\":\"None\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100d95760003560e01c806306ae39e9146100de5780630f026f6d146101295780632267a89c146101495780633fb7d3d1146101695780633fc68b811461017e5780634635256e146101945780634c5dc5a1146101b45780634ce7957c146101e15780635cf4ee9114610219578063715018a6146102395780638da5cb5b1461024e5780639ae7178114610263578063a498342114610283578063a8d1b822146102a3578063d6e6eb9f146102c3578063f2fde38b146102d9578063fbe53234146102f9578063fce4dcdf14610319575b600080fd5b3480156100ea57600080fd5b506101166100f9366004610d49565b600460209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561013557600080fd5b50610116610144366004610d7b565b61032c565b34801561015557600080fd5b50610116610164366004610d7b565b6103a4565b61017c610177366004610d7b565b610412565b005b34801561018a57600080fd5b5061011660035481565b3480156101a057600080fd5b506101166101af366004610d7b565b6106ea565b3480156101c057600080fd5b506101166101cf366004610d2f565b60056020526000908152604090205481565b3480156101ed57600080fd5b50600154610201906001600160a01b031681565b6040516001600160a01b039091168152602001610120565b34801561022557600080fd5b50610116610234366004610dbc565b610714565b34801561024557600080fd5b5061017c61082b565b34801561025a57600080fd5b5061020161083f565b34801561026f57600080fd5b5061011661027e366004610d7b565b61084e565b34801561028f57600080fd5b5061017c61029e366004610da4565b61087c565b3480156102af57600080fd5b5061017c6102be366004610da4565b610889565b3480156102cf57600080fd5b5061011660025481565b3480156102e557600080fd5b5061017c6102f4366004610d2f565b610896565b34801561030557600080fd5b5061017c610314366004610d2f565b61090f565b61017c610327366004610d7b565b610939565b60008061033984846106ea565b90506000670de0b6b3a7640000600254836103549190610e87565b61035e9190610e67565b90506000670de0b6b3a7640000600354846103799190610e87565b6103839190610e67565b9050806103908385610e4f565b61039a9190610e4f565b9695505050505050565b6000806103b1848461084e565b90506000670de0b6b3a7640000600254836103cc9190610e87565b6103d69190610e67565b90506000670de0b6b3a7640000600354846103f19190610e87565b6103fb9190610e67565b9050806104088385610ea6565b61039a9190610ea6565b6001600160a01b0382166000908152600560205260409020548015158061044157506001600160a01b03831633145b6104a85760405162461bcd60e51b815260206004820152602d60248201527f4f6e6c7920746865206c696e6b7327207461726765742063616e20627579207460448201526c6865206669727374206c696e6b60981b60648201526084015b60405180910390fd5b60006104b48284610714565b90506000670de0b6b3a7640000600254836104cf9190610e87565b6104d99190610e67565b90506000670de0b6b3a7640000600354846104f49190610e87565b6104fe9190610e67565b90508061050b8385610e4f565b6105159190610e4f565b34101561055b5760405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b604482015260640161049f565b6001600160a01b038616600090815260046020908152604080832033845290915290205461058a908690610e4f565b6001600160a01b03871660009081526004602090815260408083203384529091529020556105b88585610e4f565b6001600160a01b038716600090815260056020526040902055600080516020610ed483398151915233876001888787876105f2848d610e4f565b604051610606989796959493929190610ddd565b60405180910390a16001546040516000916001600160a01b03169084908381818185875af1925050503d806000811461065b576040519150601f19603f3d011682016040523d82523d6000602084013e610660565b606091505b505090506000876001600160a01b03168360405160006040518083038185875af1925050503d80600081146106b1576040519150601f19603f3d011682016040523d82523d6000602084013e6106b6565b606091505b505090508180156106c45750805b6106e05760405162461bcd60e51b815260040161049f90610e21565b5050505050505050565b6001600160a01b03821660009081526005602052604081205461070d9083610714565b9392505050565b600080831561076f57600661072a600186610ea6565b610735906002610e87565b610740906001610e4f565b8561074c600182610ea6565b6107569190610e87565b6107609190610e87565b61076a9190610e67565b610772565b60005b90506000841580156107845750836001145b6107f957600684610796600188610ea6565b6107a09190610e4f565b6107ab906002610e87565b6107b6906001610e4f565b6107c08688610e4f565b866107cc60018a610ea6565b6107d69190610e4f565b6107e09190610e87565b6107ea9190610e87565b6107f49190610e67565b6107fc565b60005b9050600061080a8383610ea6565b9050613e8061082182670de0b6b3a7640000610e87565b61039a9190610e67565b610833610c64565b61083d6000610cc3565b565b6000546001600160a01b031690565b6001600160a01b03821660009081526005602052604081205461070d90610876908490610ea6565b83610714565b610884610c64565b600255565b610891610c64565b600355565b61089e610c64565b6001600160a01b0381166109035760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161049f565b61090c81610cc3565b50565b610917610c64565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03821660009081526005602052604090205481811161099d5760405162461bcd60e51b815260206004820152601960248201527843616e6e6f742073656c6c20746865206c617374206c696e6b60381b604482015260640161049f565b60006109b26109ac8484610ea6565b84610714565b90506000670de0b6b3a7640000600254836109cd9190610e87565b6109d79190610e67565b90506000670de0b6b3a7640000600354846109f29190610e87565b6109fc9190610e67565b6001600160a01b0387166000908152600460209081526040808320338452909152902054909150851115610a675760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e74206c696e6b7360701b604482015260640161049f565b6001600160a01b0386166000908152600460209081526040808320338452909152902054610a96908690610ea6565b6001600160a01b0387166000908152600460209081526040808320338452909152902055610ac48585610ea6565b6001600160a01b038716600090815260056020526040812091909155600080516020610ed4833981519152903390889088878787610b02848d610ea6565b604051610b16989796959493929190610ddd565b60405180910390a160003382610b2c8587610ea6565b610b369190610ea6565b604051600081818185875af1925050503d8060008114610b72576040519150601f19603f3d011682016040523d82523d6000602084013e610b77565b606091505b50506001546040519192506000916001600160a01b039091169085908381818185875af1925050503d8060008114610bcb576040519150601f19603f3d011682016040523d82523d6000602084013e610bd0565b606091505b505090506000886001600160a01b03168460405160006040518083038185875af1925050503d8060008114610c21576040519150601f19603f3d011682016040523d82523d6000602084013e610c26565b606091505b50509050828015610c345750815b8015610c3d5750805b610c595760405162461bcd60e51b815260040161049f90610e21565b505050505050505050565b33610c6d61083f565b6001600160a01b03161461083d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161049f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610d2a57600080fd5b919050565b600060208284031215610d40578081fd5b61070d82610d13565b60008060408385031215610d5b578081fd5b610d6483610d13565b9150610d7260208401610d13565b90509250929050565b60008060408385031215610d8d578182fd5b610d9683610d13565b946020939093013593505050565b600060208284031215610db5578081fd5b5035919050565b60008060408385031215610dce578182fd5b50508035926020909101359150565b6001600160a01b03988916815296909716602087015293151560408601526060850192909252608084015260a083015260c082015260e08101919091526101000190565b602080825260149082015273556e61626c6520746f2073656e642066756e647360601b604082015260600190565b60008219821115610e6257610e62610ebd565b500190565b600082610e8257634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610ea157610ea1610ebd565b500290565b600082821015610eb857610eb8610ebd565b500390565b634e487b7160e01b600052601160045260246000fdfead9f55a41a915706e0b499306a3aabd261f9a4ba53f5a1d36981d40083063a52a2646970667358221220626f607e336d821f1fbdefe123e188dce90221805891440df7a7259b09fca36d64736f6c63430008020033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3820,
        "contract": "contracts/coordinape-protocol/contracts/colinks/CoLinks.sol:CoLinks",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 14604,
        "contract": "contracts/coordinape-protocol/contracts/colinks/CoLinks.sol:CoLinks",
        "label": "protocolFeeDestination",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 14606,
        "contract": "contracts/coordinape-protocol/contracts/colinks/CoLinks.sol:CoLinks",
        "label": "protocolFeePercent",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 14608,
        "contract": "contracts/coordinape-protocol/contracts/colinks/CoLinks.sol:CoLinks",
        "label": "targetFeePercent",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 14632,
        "contract": "contracts/coordinape-protocol/contracts/colinks/CoLinks.sol:CoLinks",
        "label": "linkBalance",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 14636,
        "contract": "contracts/coordinape-protocol/contracts/colinks/CoLinks.sol:CoLinks",
        "label": "linkSupply",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}