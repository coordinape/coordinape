{
  "address": "0xbB57FE325e769DEDB1236525a91cDEd842143fA7",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "trader",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "subject",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isBuy",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shareAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "protocolEthAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "subjectEthAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        }
      ],
      "name": "Trade",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sharesSubject",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "buyShares",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sharesSubject",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getBuyPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sharesSubject",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getBuyPriceAfterFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sharesSubject",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getSellPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sharesSubject",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getSellPriceAfterFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFeeDestination",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sharesSubject",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "sellShares",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeDestination",
          "type": "address"
        }
      ],
      "name": "setFeeDestination",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feePercent",
          "type": "uint256"
        }
      ],
      "name": "setProtocolFeePercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feePercent",
          "type": "uint256"
        }
      ],
      "name": "setSubjectFeePercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "sharesBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "sharesSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "subjectFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x796b87651464faec8823b0e1168964e96eae8b2e9f4393e81abf53aa01dc8c09",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xbB57FE325e769DEDB1236525a91cDEd842143fA7",
    "transactionIndex": 1,
    "gasUsed": "917517",
    "logsBloom": "0x
    "blockHash": "0x000dcc873df6bded44eaa75dad3ea452d8d282f804c993a88e24b60165ec02aa",
    "transactionHash": "0x796b87651464faec8823b0e1168964e96eae8b2e9f4393e81abf53aa01dc8c09",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 16050715,
        "transactionHash": "0x796b87651464faec8823b0e1168964e96eae8b2e9f4393e81abf53aa01dc8c09",
        "address": "0xbB57FE325e769DEDB1236525a91cDEd842143fA7",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x000dcc873df6bded44eaa75dad3ea452d8d282f804c993a88e24b60165ec02aa"
      }
    ],
    "blockNumber": 16050715,
    "cumulativeGasUsed": "967970",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "d6ff2e285dc0ff6058d88ff63dcb38fb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"trader\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"subject\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isBuy\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shareAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolEthAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"subjectEthAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"name\":\"Trade\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sharesSubject\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyShares\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sharesSubject\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getBuyPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sharesSubject\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getBuyPriceAfterFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sharesSubject\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getSellPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sharesSubject\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getSellPriceAfterFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sharesSubject\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sellShares\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeDestination\",\"type\":\"address\"}],\"name\":\"setFeeDestination\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setProtocolFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setSubjectFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sharesBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"sharesSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"subjectFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/coordinape-protocol/contracts/soulkeys/SoulKeys.sol\":\"SoulKeys\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/coordinape-protocol/contracts/soulkeys/SoulKeys.sol\":{\"content\":\"// SPDX-License-Identifier: None\\npragma solidity ^0.8.2;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract SoulKeys is Ownable {\\n    address public protocolFeeDestination;\\n    uint256 public protocolFeePercent;\\n    uint256 public subjectFeePercent;\\n\\n    event Trade(address trader, address subject, bool isBuy, uint256 shareAmount, uint256 ethAmount, uint256 protocolEthAmount, uint256 subjectEthAmount, uint256 supply);\\n\\n    // SharesSubject => (Holder => Balance)\\n    mapping(address => mapping(address => uint256)) public sharesBalance;\\n\\n    // SharesSubject => Supply\\n    mapping(address => uint256) public sharesSupply;\\n\\n    function setFeeDestination(address _feeDestination) public onlyOwner {\\n        protocolFeeDestination = _feeDestination;\\n    }\\n\\n    function setProtocolFeePercent(uint256 _feePercent) public onlyOwner {\\n        protocolFeePercent = _feePercent;\\n    }\\n\\n    function setSubjectFeePercent(uint256 _feePercent) public onlyOwner {\\n        subjectFeePercent = _feePercent;\\n    }\\n\\n    function getPrice(uint256 supply, uint256 amount) public pure returns (uint256) {\\n        uint256 sum1 = supply == 0 ? 0 : (supply - 1 )* (supply) * (2 * (supply - 1) + 1) / 6;\\n        uint256 sum2 = supply == 0 && amount == 1 ? 0 : (supply - 1 + amount) * (supply + amount) * (2 * (supply - 1 + amount) + 1) / 6;\\n        uint256 summation = sum2 - sum1;\\n        return summation * 1 ether / 16000;\\n    }\\n\\n    function getBuyPrice(address sharesSubject, uint256 amount) public view returns (uint256) {\\n        return getPrice(sharesSupply[sharesSubject], amount);\\n    }\\n\\n    function getSellPrice(address sharesSubject, uint256 amount) public view returns (uint256) {\\n        return getPrice(sharesSupply[sharesSubject] - amount, amount);\\n    }\\n\\n    function getBuyPriceAfterFee(address sharesSubject, uint256 amount) public view returns (uint256) {\\n        uint256 price = getBuyPrice(sharesSubject, amount);\\n        uint256 protocolFee = price * protocolFeePercent / 1 ether;\\n        uint256 subjectFee = price * subjectFeePercent / 1 ether;\\n        return price + protocolFee + subjectFee;\\n    }\\n\\n    function getSellPriceAfterFee(address sharesSubject, uint256 amount) public view returns (uint256) {\\n        uint256 price = getSellPrice(sharesSubject, amount);\\n        uint256 protocolFee = price * protocolFeePercent / 1 ether;\\n        uint256 subjectFee = price * subjectFeePercent / 1 ether;\\n        return price - protocolFee - subjectFee;\\n    }\\n\\n    function buyShares(address sharesSubject, uint256 amount) public payable {\\n        uint256 supply = sharesSupply[sharesSubject];\\n        require(supply > 0 || sharesSubject == msg.sender, \\\"Only the shares' subject can buy the first share\\\");\\n        uint256 price = getPrice(supply, amount);\\n        uint256 protocolFee = price * protocolFeePercent / 1 ether;\\n        uint256 subjectFee = price * subjectFeePercent / 1 ether;\\n        require(msg.value >= price + protocolFee + subjectFee, \\\"Insufficient payment\\\");\\n        sharesBalance[sharesSubject][msg.sender] = sharesBalance[sharesSubject][msg.sender] + amount;\\n        sharesSupply[sharesSubject] = supply + amount;\\n        emit Trade(msg.sender, sharesSubject, true, amount, price, protocolFee, subjectFee, supply + amount);\\n        (bool success1, ) = protocolFeeDestination.call{value: protocolFee}(\\\"\\\");\\n        (bool success2, ) = sharesSubject.call{value: subjectFee}(\\\"\\\");\\n        require(success1 && success2, \\\"Unable to send funds\\\");\\n    }\\n\\n    function sellShares(address sharesSubject, uint256 amount) public payable {\\n        uint256 supply = sharesSupply[sharesSubject];\\n        require(supply > amount, \\\"Cannot sell the last share\\\");\\n        uint256 price = getPrice(supply - amount, amount);\\n        uint256 protocolFee = price * protocolFeePercent / 1 ether;\\n        uint256 subjectFee = price * subjectFeePercent / 1 ether;\\n        require(sharesBalance[sharesSubject][msg.sender] >= amount, \\\"Insufficient shares\\\");\\n        sharesBalance[sharesSubject][msg.sender] = sharesBalance[sharesSubject][msg.sender] - amount;\\n        sharesSupply[sharesSubject] = supply - amount;\\n        emit Trade(msg.sender, sharesSubject, false, amount, price, protocolFee, subjectFee, supply - amount);\\n        (bool success1, ) = msg.sender.call{value: price - protocolFee - subjectFee}(\\\"\\\");\\n        (bool success2, ) = protocolFeeDestination.call{value: protocolFee}(\\\"\\\");\\n        (bool success3, ) = sharesSubject.call{value: subjectFee}(\\\"\\\");\\n        require(success1 && success2 && success3, \\\"Unable to send funds\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x92ede2b6ddd48e9bd649ddea993148614d67c14f0034c5b4c21467d83c841348\",\"license\":\"None\"}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x6080604052600436106100d95760003560e01c8063020235ff146100de5780630f026f6d146101295780632267a89c1461014957806324dc441d146101695780634635256e1461017f5780634ce7957c1461019f5780635a8a764e146101d75780635cf4ee91146101f95780636945b12314610219578063715018a61461022c5780638da5cb5b146102415780639ae7178114610256578063a498342114610276578063b51d053414610296578063d6e6eb9f146102a9578063f2fde38b146102bf578063f9931be0146102df578063fbe532341461030c575b600080fd5b3480156100ea57600080fd5b506101166100f9366004610d4e565b600460209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561013557600080fd5b50610116610144366004610d80565b61032c565b34801561015557600080fd5b50610116610164366004610d80565b6103a4565b34801561017557600080fd5b5061011660035481565b34801561018b57600080fd5b5061011661019a366004610d80565b610412565b3480156101ab57600080fd5b506001546101bf906001600160a01b031681565b6040516001600160a01b039091168152602001610120565b3480156101e357600080fd5b506101f76101f2366004610da9565b61043c565b005b34801561020557600080fd5b50610116610214366004610dc1565b610449565b6101f7610227366004610d80565b610560565b34801561023857600080fd5b506101f761083b565b34801561024d57600080fd5b506101bf61084f565b34801561026257600080fd5b50610116610271366004610d80565b61085e565b34801561028257600080fd5b506101f7610291366004610da9565b61088c565b6101f76102a4366004610d80565b610899565b3480156102b557600080fd5b5061011660025481565b3480156102cb57600080fd5b506101f76102da366004610d34565b610bc6565b3480156102eb57600080fd5b506101166102fa366004610d34565b60056020526000908152604090205481565b34801561031857600080fd5b506101f7610327366004610d34565b610c3f565b6000806103398484610412565b90506000670de0b6b3a7640000600254836103549190610e8c565b61035e9190610e6c565b90506000670de0b6b3a7640000600354846103799190610e8c565b6103839190610e6c565b9050806103908385610e54565b61039a9190610e54565b9695505050505050565b6000806103b1848461085e565b90506000670de0b6b3a7640000600254836103cc9190610e8c565b6103d69190610e6c565b90506000670de0b6b3a7640000600354846103f19190610e8c565b6103fb9190610e6c565b9050806104088385610eab565b61039a9190610eab565b6001600160a01b0382166000908152600560205260408120546104359083610449565b9392505050565b610444610c69565b600355565b60008083156104a457600661045f600186610eab565b61046a906002610e8c565b610475906001610e54565b85610481600182610eab565b61048b9190610e8c565b6104959190610e8c565b61049f9190610e6c565b6104a7565b60005b90506000841580156104b95750836001145b61052e576006846104cb600188610eab565b6104d59190610e54565b6104e0906002610e8c565b6104eb906001610e54565b6104f58688610e54565b8661050160018a610eab565b61050b9190610e54565b6105159190610e8c565b61051f9190610e8c565b6105299190610e6c565b610531565b60005b9050600061053f8383610eab565b9050613e8061055682670de0b6b3a7640000610e8c565b61039a9190610e6c565b6001600160a01b0382166000908152600560205260409020548015158061058f57506001600160a01b03831633145b6105f95760405162461bcd60e51b815260206004820152603060248201527f4f6e6c79207468652073686172657327207375626a6563742063616e2062757960448201526f2074686520666972737420736861726560801b60648201526084015b60405180910390fd5b60006106058284610449565b90506000670de0b6b3a7640000600254836106209190610e8c565b61062a9190610e6c565b90506000670de0b6b3a7640000600354846106459190610e8c565b61064f9190610e6c565b90508061065c8385610e54565b6106669190610e54565b3410156106ac5760405162461bcd60e51b8152602060048201526014602482015273125b9cdd59999a58da595b9d081c185e5b595b9d60621b60448201526064016105f0565b6001600160a01b03861660009081526004602090815260408083203384529091529020546106db908690610e54565b6001600160a01b03871660009081526004602090815260408083203384529091529020556107098585610e54565b6001600160a01b038716600090815260056020526040902055600080516020610ed98339815191523387600188878787610743848d610e54565b604051610757989796959493929190610de2565b60405180910390a16001546040516000916001600160a01b03169084908381818185875af1925050503d80600081146107ac576040519150601f19603f3d011682016040523d82523d6000602084013e6107b1565b606091505b505090506000876001600160a01b03168360405160006040518083038185875af1925050503d8060008114610802576040519150601f19603f3d011682016040523d82523d6000602084013e610807565b606091505b505090508180156108155750805b6108315760405162461bcd60e51b81526004016105f090610e26565b5050505050505050565b610843610c69565b61084d6000610cc8565b565b6000546001600160a01b031690565b6001600160a01b03821660009081526005602052604081205461043590610886908490610eab565b83610449565b610894610c69565b600255565b6001600160a01b0382166000908152600560205260409020548181116108fe5760405162461bcd60e51b815260206004820152601a60248201527943616e6e6f742073656c6c20746865206c61737420736861726560301b60448201526064016105f0565b600061091361090d8484610eab565b84610449565b90506000670de0b6b3a76400006002548361092e9190610e8c565b6109389190610e6c565b90506000670de0b6b3a7640000600354846109539190610e8c565b61095d9190610e6c565b6001600160a01b03871660009081526004602090815260408083203384529091529020549091508511156109c95760405162461bcd60e51b8152602060048201526013602482015272496e73756666696369656e742073686172657360681b60448201526064016105f0565b6001600160a01b03861660009081526004602090815260408083203384529091529020546109f8908690610eab565b6001600160a01b0387166000908152600460209081526040808320338452909152902055610a268585610eab565b6001600160a01b038716600090815260056020526040812091909155600080516020610ed9833981519152903390889088878787610a64848d610eab565b604051610a78989796959493929190610de2565b60405180910390a160003382610a8e8587610eab565b610a989190610eab565b604051600081818185875af1925050503d8060008114610ad4576040519150601f19603f3d011682016040523d82523d6000602084013e610ad9565b606091505b50506001546040519192506000916001600160a01b039091169085908381818185875af1925050503d8060008114610b2d576040519150601f19603f3d011682016040523d82523d6000602084013e610b32565b606091505b505090506000886001600160a01b03168460405160006040518083038185875af1925050503d8060008114610b83576040519150601f19603f3d011682016040523d82523d6000602084013e610b88565b606091505b50509050828015610b965750815b8015610b9f5750805b610bbb5760405162461bcd60e51b81526004016105f090610e26565b505050505050505050565b610bce610c69565b6001600160a01b038116610c335760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105f0565b610c3c81610cc8565b50565b610c47610c69565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b33610c7261084f565b6001600160a01b03161461084d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105f0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610d2f57600080fd5b919050565b600060208284031215610d45578081fd5b61043582610d18565b60008060408385031215610d60578081fd5b610d6983610d18565b9150610d7760208401610d18565b90509250929050565b60008060408385031215610d92578182fd5b610d9b83610d18565b946020939093013593505050565b600060208284031215610dba578081fd5b5035919050565b60008060408385031215610dd3578182fd5b50508035926020909101359150565b6001600160a01b03988916815296909716602087015293151560408601526060850192909252608084015260a083015260c082015260e08101919091526101000190565b602080825260149082015273556e61626c6520746f2073656e642066756e647360601b604082015260600190565b60008219821115610e6757610e67610ec2565b500190565b600082610e8757634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615610ea657610ea6610ec2565b500290565b600082821015610ebd57610ebd610ec2565b500390565b634e487b7160e01b600052601160045260246000fdfe2c76e7a47fd53e2854856ac3f0a5f3ee40d15cfaa82266357ea9779c486ab9c3a2646970667358221220d77a6bb4be2ab32acc2919b5a082b1390d769a8c928af6bcc73e3ea99d8e8c1864736f6c63430008020033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/coordinape-protocol/contracts/soulkeys/SoulKeys.sol:SoulKeys",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 141,
        "contract": "contracts/coordinape-protocol/contracts/soulkeys/SoulKeys.sol:SoulKeys",
        "label": "protocolFeeDestination",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 143,
        "contract": "contracts/coordinape-protocol/contracts/soulkeys/SoulKeys.sol:SoulKeys",
        "label": "protocolFeePercent",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 145,
        "contract": "contracts/coordinape-protocol/contracts/soulkeys/SoulKeys.sol:SoulKeys",
        "label": "subjectFeePercent",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 169,
        "contract": "contracts/coordinape-protocol/contracts/soulkeys/SoulKeys.sol:SoulKeys",
        "label": "sharesBalance",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 173,
        "contract": "contracts/coordinape-protocol/contracts/soulkeys/SoulKeys.sol:SoulKeys",
        "label": "sharesSupply",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}