{
  "address": "0x3a21271AE29511106fB4D4061E3f32867F0F8a90",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isBuy",
          "type": "bool"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "linkAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "protocolEthAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "targetEthAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        }
      ],
      "name": "LinkTx",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "baseFeeMax",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "linkTarget",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "buyLinks",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "linkTarget",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getBuyPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "linkTarget",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getBuyPriceAfterFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "supply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "linkTarget",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getSellPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "linkTarget",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "getSellPriceAfterFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "linkBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "linkSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFeeDestination",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "protocolFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "linkTarget",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "sellLinks",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fee",
          "type": "uint256"
        }
      ],
      "name": "setBaseFeeMax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeDestination",
          "type": "address"
        }
      ],
      "name": "setFeeDestination",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feePercent",
          "type": "uint256"
        }
      ],
      "name": "setProtocolFeePercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feePercent",
          "type": "uint256"
        }
      ],
      "name": "setTargetFeePercent",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetFeePercent",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xef361c58c7033a1a1da2ce74e61e5624ab70eff71d550538c476eb73893885ad",
  "receipt": {
    "to": null,
    "from": "0x63A256Aa04A0eEEc85c32df9765bc83C68999E9f",
    "contractAddress": "0x3a21271AE29511106fB4D4061E3f32867F0F8a90",
    "transactionIndex": 1,
    "gasUsed": "1029673",
    "logsBloom": "0x
    "blockHash": "0x411ff683822f70ecf3e8397633dfd912760e4186e6542c7c39afabc328db327f",
    "transactionHash": "0xef361c58c7033a1a1da2ce74e61e5624ab70eff71d550538c476eb73893885ad",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 6307352,
        "transactionHash": "0xef361c58c7033a1a1da2ce74e61e5624ab70eff71d550538c476eb73893885ad",
        "address": "0x3a21271AE29511106fB4D4061E3f32867F0F8a90",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000063a256aa04a0eeec85c32df9765bc83c68999e9f"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x411ff683822f70ecf3e8397633dfd912760e4186e6542c7c39afabc328db327f"
      }
    ],
    "blockNumber": 6307352,
    "cumulativeGasUsed": "1093662",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "6ee3a06ce8b3fafebe18a1c175737d16",
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isBuy\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"linkAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolEthAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"targetEthAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"}],\"name\":\"LinkTx\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"baseFeeMax\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"linkTarget\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyLinks\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"linkTarget\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getBuyPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"linkTarget\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getBuyPriceAfterFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"supply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"linkTarget\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getSellPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"linkTarget\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"getSellPriceAfterFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"linkBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"linkSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeDestination\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"linkTarget\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"sellLinks\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"setBaseFeeMax\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeDestination\",\"type\":\"address\"}],\"name\":\"setFeeDestination\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setProtocolFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feePercent\",\"type\":\"uint256\"}],\"name\":\"setTargetFeePercent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetFeePercent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/coordinape-protocol/contracts/colinks/CoLinks.sol\":\"CoLinks\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/coordinape-protocol/contracts/colinks/CoLinks.sol\":{\"content\":\"// SPDX-License-Identifier: None\\npragma solidity ^0.8.2;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract CoLinks is Ownable {\\n    address public protocolFeeDestination;\\n    uint256 public protocolFeePercent;\\n    uint256 public targetFeePercent;\\n    uint256 public baseFeeMax;\\n\\n    event LinkTx(address holder, address target, bool isBuy, uint256 linkAmount, uint256 ethAmount, uint256 protocolEthAmount, uint256 targetEthAmount, uint256 supply);\\n\\n    // LinkTarget => (Holder => Balance)\\n    mapping(address => mapping(address => uint256)) public linkBalance;\\n\\n    // LinkTarget => Supply\\n    mapping(address => uint256) public linkSupply;\\n\\n    function setFeeDestination(address _feeDestination) external onlyOwner {\\n        protocolFeeDestination = _feeDestination;\\n    }\\n\\n    function setProtocolFeePercent(uint256 _feePercent) external onlyOwner {\\n        require(_feePercent <= (1 * 1 ether / 10), \\\"Fee too high\\\");\\n        protocolFeePercent = _feePercent;\\n    }\\n\\n\\n    function setTargetFeePercent(uint256 _feePercent) external onlyOwner {\\n        require(_feePercent <= (1 * 1 ether / 10), \\\"Fee too high\\\");\\n        targetFeePercent = _feePercent;\\n    }\\n\\n    function setBaseFeeMax(uint256 _fee) external onlyOwner {\\n        require(_fee <= (1 ether / 1000), \\\"Fee too high\\\");\\n        baseFeeMax = _fee;\\n    }\\n\\n    function calcBaseFee(uint256 price) private view returns (uint256) {\\n        uint256 fee = (price / 10);\\n        if (fee >= baseFeeMax) {\\n            return baseFeeMax;\\n        } else {\\n            return fee;\\n        }\\n    }\\n  \\n    function getPrice(uint256 supply, uint256 amount) public pure returns (uint256) {\\n        uint256 scaleFactor = 100;\\n        uint256 sum1 = supply == 0 ? 0 : ((supply - 1) * (supply) * (2 * (supply - 1) + 1) * scaleFactor) / 24;\\n        uint256 sum2 = supply == 0 && amount == 1 ? 0 : ((supply - 1 + amount) * (supply + amount) * (2 * (supply - 1 + amount) + 1)  * scaleFactor)/ 24;\\n        uint256 summation = sum2 - sum1;\\n        return summation * 1 ether / (16000 * scaleFactor);\\n    }\\n\\n    function getBuyPrice(address linkTarget, uint256 amount) public view returns (uint256) {\\n        return getPrice(linkSupply[linkTarget], amount);\\n    }\\n\\n    function getSellPrice(address linkTarget, uint256 amount) public view returns (uint256) {\\n        return getPrice(linkSupply[linkTarget] - amount, amount);\\n    }\\n\\n    function getBuyPriceAfterFee(address linkTarget, uint256 amount) external view returns (uint256) {\\n        uint256 price = getBuyPrice(linkTarget, amount);\\n        uint256 protocolFee = price * protocolFeePercent / 1 ether;\\n        uint256 targetFee = price * targetFeePercent / 1 ether;\\n\\n        uint256 baseFee = 0;\\n        if (linkSupply[linkTarget] > 0) {\\n            // don't add base fee to first link\\n            // use max fee for all buys\\n            baseFee = baseFeeMax;\\n        }\\n        return price + protocolFee + targetFee + baseFee;\\n    }\\n\\n    function getSellPriceAfterFee(address linkTarget, uint256 amount) external view returns (uint256) {\\n        uint256 price = getSellPrice(linkTarget, amount);\\n        uint256 protocolFee = price * protocolFeePercent / 1 ether;\\n        uint256 targetFee = price * targetFeePercent / 1 ether;\\n        return price - protocolFee - targetFee - calcBaseFee(price);\\n    }\\n\\n    function buyLinks(address linkTarget, uint256 amount) external payable {\\n        uint256 supply = linkSupply[linkTarget];\\n        require(supply > 0 || linkTarget == msg.sender, \\\"Only the links' target can buy the first link\\\");\\n        uint256 price = getPrice(supply, amount);\\n        uint256 protocolFee = price * protocolFeePercent / 1 ether;\\n        uint256 targetFee = price * targetFeePercent / 1 ether;\\n\\n        if (supply > 0) {\\n            // don't add base fee to first link\\n            protocolFee = protocolFee + baseFeeMax / 2;\\n            targetFee = targetFee + baseFeeMax / 2;\\n        }\\n\\n        require(msg.value == price + protocolFee + targetFee, \\\"Inexact payment amount\\\");\\n        linkBalance[linkTarget][msg.sender] = linkBalance[linkTarget][msg.sender] + amount;\\n        linkSupply[linkTarget] = supply + amount;\\n        emit LinkTx(msg.sender, linkTarget, true, amount, price, protocolFee, targetFee, supply + amount);\\n        (bool success1, ) = protocolFeeDestination.call{value: protocolFee}(\\\"\\\");\\n        (bool success2, ) = linkTarget.call{value: targetFee}(\\\"\\\");\\n        require(success1 && success2, \\\"Unable to send funds\\\");\\n    }\\n\\n    function sellLinks(address linkTarget, uint256 amount) external payable {\\n        uint256 supply = linkSupply[linkTarget];\\n        require(supply > amount, \\\"Cannot sell the last link\\\");\\n\\n        uint256 price = getPrice(supply - amount, amount);\\n        uint256 protocolFee = price * protocolFeePercent / 1 ether;\\n        uint256 targetFee = price * targetFeePercent / 1 ether;\\n\\n        if (supply > 0) {\\n            // don't add base fee to first link\\n            uint256 baseFee = calcBaseFee(price);\\n            protocolFee += baseFee / 2;\\n            targetFee += baseFee / 2;\\n        }\\n\\n        require(linkBalance[linkTarget][msg.sender] >= amount, \\\"Insufficient links\\\");\\n        linkBalance[linkTarget][msg.sender] = linkBalance[linkTarget][msg.sender] - amount;\\n        linkSupply[linkTarget] = supply - amount;\\n        emit LinkTx(msg.sender, linkTarget, false, amount, price, protocolFee, targetFee, supply - amount);\\n        (bool success1, ) = msg.sender.call{value: price - protocolFee - targetFee}(\\\"\\\");\\n        (bool success2, ) = protocolFeeDestination.call{value: protocolFee}(\\\"\\\");\\n        (bool success3, ) = linkTarget.call{value: targetFee}(\\\"\\\");\\n        require(success1 && success2 && success3, \\\"Unable to send funds\\\");\\n    }\\n}\\n\",\"keccak256\":\"0x7bb74ffbac5de5dd0ad644f7ec43613fa70d839e5a3b7c9626b6cdbb20c89688\",\"license\":\"None\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6111348061007e6000396000f3fe6080604052600436106100ef5760003560e01c806306ae39e9146100f45780630f026f6d1461013f5780632267a89c1461015f5780633a910e2c1461017f5780633fb7d3d1146101955780633fc68b81146101aa5780634635256e146101c05780634c5dc5a1146101e05780634ce7957c1461020d5780635cf4ee9114610245578063715018a6146102655780638da5cb5b1461027a5780639ae717811461028f578063a4983421146102af578063a8d1b822146102cf578063bae70112146102ef578063d6e6eb9f1461030f578063f2fde38b14610325578063fbe5323414610345578063fce4dcdf14610365575b600080fd5b34801561010057600080fd5b5061012c61010f366004610f2e565b600560209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561014b57600080fd5b5061012c61015a366004610f60565b610378565b34801561016b57600080fd5b5061012c61017a366004610f60565b610421565b34801561018b57600080fd5b5061012c60045481565b6101a86101a3366004610f60565b6104ac565b005b3480156101b657600080fd5b5061012c60035481565b3480156101cc57600080fd5b5061012c6101db366004610f60565b6107c2565b3480156101ec57600080fd5b5061012c6101fb366004610f14565b60066020526000908152604090205481565b34801561021957600080fd5b5060015461022d906001600160a01b031681565b6040516001600160a01b039091168152602001610136565b34801561025157600080fd5b5061012c610260366004610fa1565b6107ec565b34801561027157600080fd5b506101a8610924565b34801561028657600080fd5b5061022d610938565b34801561029b57600080fd5b5061012c6102aa366004610f60565b610947565b3480156102bb57600080fd5b506101a86102ca366004610f89565b610975565b3480156102db57600080fd5b506101a86102ea366004610f89565b6109aa565b3480156102fb57600080fd5b506101a861030a366004610f89565b6109df565b34801561031b57600080fd5b5061012c60025481565b34801561033157600080fd5b506101a8610340366004610f14565b610a13565b34801561035157600080fd5b506101a8610360366004610f14565b610a8c565b6101a8610373366004610f60565b610ab6565b60008061038584846107c2565b90506000670de0b6b3a7640000600254836103a09190611092565b6103aa9190611072565b90506000670de0b6b3a7640000600354846103c59190611092565b6103cf9190611072565b6001600160a01b03871660009081526006602052604081205491925090156103f657506004545b8082610402858761105a565b61040c919061105a565b610416919061105a565b979650505050505050565b60008061042e8484610947565b90506000670de0b6b3a7640000600254836104499190611092565b6104539190611072565b90506000670de0b6b3a76400006003548461046e9190611092565b6104789190611072565b905061048383610e23565b8161048e84866110b1565b61049891906110b1565b6104a291906110b1565b9695505050505050565b6001600160a01b038216600090815260066020526040902054801515806104db57506001600160a01b03831633145b6105425760405162461bcd60e51b815260206004820152602d60248201527f4f6e6c7920746865206c696e6b7327207461726765742063616e20627579207460448201526c6865206669727374206c696e6b60981b60648201526084015b60405180910390fd5b600061054e82846107ec565b90506000670de0b6b3a7640000600254836105699190611092565b6105739190611072565b90506000670de0b6b3a76400006003548461058e9190611092565b6105989190611072565b905083156105d75760026004546105af9190611072565b6105b9908361105a565b915060026004546105ca9190611072565b6105d4908261105a565b90505b806105e2838561105a565b6105ec919061105a565b34146106335760405162461bcd60e51b8152602060048201526016602482015275125b995e1858dd081c185e5b595b9d08185b5bdd5b9d60521b6044820152606401610539565b6001600160a01b038616600090815260056020908152604080832033845290915290205461066290869061105a565b6001600160a01b0387166000908152600560209081526040808320338452909152902055610690858561105a565b6001600160a01b0387166000908152600660205260409020556000805160206110df83398151915233876001888787876106ca848d61105a565b6040516106de989796959493929190610fc2565b60405180910390a16001546040516000916001600160a01b03169084908381818185875af1925050503d8060008114610733576040519150601f19603f3d011682016040523d82523d6000602084013e610738565b606091505b505090506000876001600160a01b03168360405160006040518083038185875af1925050503d8060008114610789576040519150601f19603f3d011682016040523d82523d6000602084013e61078e565b606091505b5050905081801561079c5750805b6107b85760405162461bcd60e51b81526004016105399061102c565b5050505050505050565b6001600160a01b0382166000908152600660205260408120546107e590836107ec565b9392505050565b60006064818415610854576018826108056001886110b1565b610810906002611092565b61081b90600161105a565b876108276001826110b1565b6108319190611092565b61083b9190611092565b6108459190611092565b61084f9190611072565b610857565b60005b90506000851580156108695750846001145b6108e9576018838661087c60018a6110b1565b610886919061105a565b610891906002611092565b61089c90600161105a565b6108a6888a61105a565b886108b260018c6110b1565b6108bc919061105a565b6108c69190611092565b6108d09190611092565b6108da9190611092565b6108e49190611072565b6108ec565b60005b905060006108fa83836110b1565b905061090884613e80611092565b61091a82670de0b6b3a7640000611092565b6104169190611072565b61092c610e4e565b6109366000610ead565b565b6000546001600160a01b031690565b6001600160a01b0382166000908152600660205260408120546107e59061096f9084906110b1565b836107ec565b61097d610e4e565b67016345785d8a00008111156109a55760405162461bcd60e51b815260040161053990611006565b600255565b6109b2610e4e565b67016345785d8a00008111156109da5760405162461bcd60e51b815260040161053990611006565b600355565b6109e7610e4e565b66038d7ea4c68000811115610a0e5760405162461bcd60e51b815260040161053990611006565b600455565b610a1b610e4e565b6001600160a01b038116610a805760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610539565b610a8981610ead565b50565b610a94610e4e565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038216600090815260066020526040902054818111610b1a5760405162461bcd60e51b815260206004820152601960248201527843616e6e6f742073656c6c20746865206c617374206c696e6b60381b6044820152606401610539565b6000610b2f610b2984846110b1565b846107ec565b90506000670de0b6b3a764000060025483610b4a9190611092565b610b549190611072565b90506000670de0b6b3a764000060035484610b6f9190611092565b610b799190611072565b90508315610bbe576000610b8c84610e23565b9050610b99600282611072565b610ba3908461105a565b9250610bb0600282611072565b610bba908361105a565b9150505b6001600160a01b0386166000908152600560209081526040808320338452909152902054851115610c265760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e74206c696e6b7360701b6044820152606401610539565b6001600160a01b0386166000908152600560209081526040808320338452909152902054610c559086906110b1565b6001600160a01b0387166000908152600560209081526040808320338452909152902055610c8385856110b1565b6001600160a01b0387166000908152600660205260408120919091556000805160206110df833981519152903390889088878787610cc1848d6110b1565b604051610cd5989796959493929190610fc2565b60405180910390a160003382610ceb85876110b1565b610cf591906110b1565b604051600081818185875af1925050503d8060008114610d31576040519150601f19603f3d011682016040523d82523d6000602084013e610d36565b606091505b50506001546040519192506000916001600160a01b039091169085908381818185875af1925050503d8060008114610d8a576040519150601f19603f3d011682016040523d82523d6000602084013e610d8f565b606091505b505090506000886001600160a01b03168460405160006040518083038185875af1925050503d8060008114610de0576040519150601f19603f3d011682016040523d82523d6000602084013e610de5565b606091505b50509050828015610df35750815b8015610dfc5750805b610e185760405162461bcd60e51b81526004016105399061102c565b505050505050505050565b600080610e31600a84611072565b90506004548110610e46575050600454610e49565b90505b919050565b33610e57610938565b6001600160a01b0316146109365760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610539565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610e4957600080fd5b600060208284031215610f25578081fd5b6107e582610efd565b60008060408385031215610f40578081fd5b610f4983610efd565b9150610f5760208401610efd565b90509250929050565b60008060408385031215610f72578182fd5b610f7b83610efd565b946020939093013593505050565b600060208284031215610f9a578081fd5b5035919050565b60008060408385031215610fb3578182fd5b50508035926020909101359150565b6001600160a01b03988916815296909716602087015293151560408601526060850192909252608084015260a083015260c082015260e08101919091526101000190565b6020808252600c908201526b08ccaca40e8dede40d0d2ced60a31b604082015260600190565b602080825260149082015273556e61626c6520746f2073656e642066756e647360601b604082015260600190565b6000821982111561106d5761106d6110c8565b500190565b60008261108d57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156110ac576110ac6110c8565b500290565b6000828210156110c3576110c36110c8565b500390565b634e487b7160e01b600052601160045260246000fdfead9f55a41a915706e0b499306a3aabd261f9a4ba53f5a1d36981d40083063a52a2646970667358221220ba488b5b2e3f4116e5bfc227b74753f4805590ae67e573faa35792201c0aa1fb64736f6c63430008020033",
  "deployedBytecode": "0x6080604052600436106100ef5760003560e01c806306ae39e9146100f45780630f026f6d1461013f5780632267a89c1461015f5780633a910e2c1461017f5780633fb7d3d1146101955780633fc68b81146101aa5780634635256e146101c05780634c5dc5a1146101e05780634ce7957c1461020d5780635cf4ee9114610245578063715018a6146102655780638da5cb5b1461027a5780639ae717811461028f578063a4983421146102af578063a8d1b822146102cf578063bae70112146102ef578063d6e6eb9f1461030f578063f2fde38b14610325578063fbe5323414610345578063fce4dcdf14610365575b600080fd5b34801561010057600080fd5b5061012c61010f366004610f2e565b600560209081526000928352604080842090915290825290205481565b6040519081526020015b60405180910390f35b34801561014b57600080fd5b5061012c61015a366004610f60565b610378565b34801561016b57600080fd5b5061012c61017a366004610f60565b610421565b34801561018b57600080fd5b5061012c60045481565b6101a86101a3366004610f60565b6104ac565b005b3480156101b657600080fd5b5061012c60035481565b3480156101cc57600080fd5b5061012c6101db366004610f60565b6107c2565b3480156101ec57600080fd5b5061012c6101fb366004610f14565b60066020526000908152604090205481565b34801561021957600080fd5b5060015461022d906001600160a01b031681565b6040516001600160a01b039091168152602001610136565b34801561025157600080fd5b5061012c610260366004610fa1565b6107ec565b34801561027157600080fd5b506101a8610924565b34801561028657600080fd5b5061022d610938565b34801561029b57600080fd5b5061012c6102aa366004610f60565b610947565b3480156102bb57600080fd5b506101a86102ca366004610f89565b610975565b3480156102db57600080fd5b506101a86102ea366004610f89565b6109aa565b3480156102fb57600080fd5b506101a861030a366004610f89565b6109df565b34801561031b57600080fd5b5061012c60025481565b34801561033157600080fd5b506101a8610340366004610f14565b610a13565b34801561035157600080fd5b506101a8610360366004610f14565b610a8c565b6101a8610373366004610f60565b610ab6565b60008061038584846107c2565b90506000670de0b6b3a7640000600254836103a09190611092565b6103aa9190611072565b90506000670de0b6b3a7640000600354846103c59190611092565b6103cf9190611072565b6001600160a01b03871660009081526006602052604081205491925090156103f657506004545b8082610402858761105a565b61040c919061105a565b610416919061105a565b979650505050505050565b60008061042e8484610947565b90506000670de0b6b3a7640000600254836104499190611092565b6104539190611072565b90506000670de0b6b3a76400006003548461046e9190611092565b6104789190611072565b905061048383610e23565b8161048e84866110b1565b61049891906110b1565b6104a291906110b1565b9695505050505050565b6001600160a01b038216600090815260066020526040902054801515806104db57506001600160a01b03831633145b6105425760405162461bcd60e51b815260206004820152602d60248201527f4f6e6c7920746865206c696e6b7327207461726765742063616e20627579207460448201526c6865206669727374206c696e6b60981b60648201526084015b60405180910390fd5b600061054e82846107ec565b90506000670de0b6b3a7640000600254836105699190611092565b6105739190611072565b90506000670de0b6b3a76400006003548461058e9190611092565b6105989190611072565b905083156105d75760026004546105af9190611072565b6105b9908361105a565b915060026004546105ca9190611072565b6105d4908261105a565b90505b806105e2838561105a565b6105ec919061105a565b34146106335760405162461bcd60e51b8152602060048201526016602482015275125b995e1858dd081c185e5b595b9d08185b5bdd5b9d60521b6044820152606401610539565b6001600160a01b038616600090815260056020908152604080832033845290915290205461066290869061105a565b6001600160a01b0387166000908152600560209081526040808320338452909152902055610690858561105a565b6001600160a01b0387166000908152600660205260409020556000805160206110df83398151915233876001888787876106ca848d61105a565b6040516106de989796959493929190610fc2565b60405180910390a16001546040516000916001600160a01b03169084908381818185875af1925050503d8060008114610733576040519150601f19603f3d011682016040523d82523d6000602084013e610738565b606091505b505090506000876001600160a01b03168360405160006040518083038185875af1925050503d8060008114610789576040519150601f19603f3d011682016040523d82523d6000602084013e61078e565b606091505b5050905081801561079c5750805b6107b85760405162461bcd60e51b81526004016105399061102c565b5050505050505050565b6001600160a01b0382166000908152600660205260408120546107e590836107ec565b9392505050565b60006064818415610854576018826108056001886110b1565b610810906002611092565b61081b90600161105a565b876108276001826110b1565b6108319190611092565b61083b9190611092565b6108459190611092565b61084f9190611072565b610857565b60005b90506000851580156108695750846001145b6108e9576018838661087c60018a6110b1565b610886919061105a565b610891906002611092565b61089c90600161105a565b6108a6888a61105a565b886108b260018c6110b1565b6108bc919061105a565b6108c69190611092565b6108d09190611092565b6108da9190611092565b6108e49190611072565b6108ec565b60005b905060006108fa83836110b1565b905061090884613e80611092565b61091a82670de0b6b3a7640000611092565b6104169190611072565b61092c610e4e565b6109366000610ead565b565b6000546001600160a01b031690565b6001600160a01b0382166000908152600660205260408120546107e59061096f9084906110b1565b836107ec565b61097d610e4e565b67016345785d8a00008111156109a55760405162461bcd60e51b815260040161053990611006565b600255565b6109b2610e4e565b67016345785d8a00008111156109da5760405162461bcd60e51b815260040161053990611006565b600355565b6109e7610e4e565b66038d7ea4c68000811115610a0e5760405162461bcd60e51b815260040161053990611006565b600455565b610a1b610e4e565b6001600160a01b038116610a805760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610539565b610a8981610ead565b50565b610a94610e4e565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038216600090815260066020526040902054818111610b1a5760405162461bcd60e51b815260206004820152601960248201527843616e6e6f742073656c6c20746865206c617374206c696e6b60381b6044820152606401610539565b6000610b2f610b2984846110b1565b846107ec565b90506000670de0b6b3a764000060025483610b4a9190611092565b610b549190611072565b90506000670de0b6b3a764000060035484610b6f9190611092565b610b799190611072565b90508315610bbe576000610b8c84610e23565b9050610b99600282611072565b610ba3908461105a565b9250610bb0600282611072565b610bba908361105a565b9150505b6001600160a01b0386166000908152600560209081526040808320338452909152902054851115610c265760405162461bcd60e51b8152602060048201526012602482015271496e73756666696369656e74206c696e6b7360701b6044820152606401610539565b6001600160a01b0386166000908152600560209081526040808320338452909152902054610c559086906110b1565b6001600160a01b0387166000908152600560209081526040808320338452909152902055610c8385856110b1565b6001600160a01b0387166000908152600660205260408120919091556000805160206110df833981519152903390889088878787610cc1848d6110b1565b604051610cd5989796959493929190610fc2565b60405180910390a160003382610ceb85876110b1565b610cf591906110b1565b604051600081818185875af1925050503d8060008114610d31576040519150601f19603f3d011682016040523d82523d6000602084013e610d36565b606091505b50506001546040519192506000916001600160a01b039091169085908381818185875af1925050503d8060008114610d8a576040519150601f19603f3d011682016040523d82523d6000602084013e610d8f565b606091505b505090506000886001600160a01b03168460405160006040518083038185875af1925050503d8060008114610de0576040519150601f19603f3d011682016040523d82523d6000602084013e610de5565b606091505b50509050828015610df35750815b8015610dfc5750805b610e185760405162461bcd60e51b81526004016105399061102c565b505050505050505050565b600080610e31600a84611072565b90506004548110610e46575050600454610e49565b90505b919050565b33610e57610938565b6001600160a01b0316146109365760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610539565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610e4957600080fd5b600060208284031215610f25578081fd5b6107e582610efd565b60008060408385031215610f40578081fd5b610f4983610efd565b9150610f5760208401610efd565b90509250929050565b60008060408385031215610f72578182fd5b610f7b83610efd565b946020939093013593505050565b600060208284031215610f9a578081fd5b5035919050565b60008060408385031215610fb3578182fd5b50508035926020909101359150565b6001600160a01b03988916815296909716602087015293151560408601526060850192909252608084015260a083015260c082015260e08101919091526101000190565b6020808252600c908201526b08ccaca40e8dede40d0d2ced60a31b604082015260600190565b602080825260149082015273556e61626c6520746f2073656e642066756e647360601b604082015260600190565b6000821982111561106d5761106d6110c8565b500190565b60008261108d57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156110ac576110ac6110c8565b500290565b6000828210156110c3576110c36110c8565b500390565b634e487b7160e01b600052601160045260246000fdfead9f55a41a915706e0b499306a3aabd261f9a4ba53f5a1d36981d40083063a52a2646970667358221220ba488b5b2e3f4116e5bfc227b74753f4805590ae67e573faa35792201c0aa1fb64736f6c63430008020033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3820,
        "contract": "contracts/coordinape-protocol/contracts/colinks/CoLinks.sol:CoLinks",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 14604,
        "contract": "contracts/coordinape-protocol/contracts/colinks/CoLinks.sol:CoLinks",
        "label": "protocolFeeDestination",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 14606,
        "contract": "contracts/coordinape-protocol/contracts/colinks/CoLinks.sol:CoLinks",
        "label": "protocolFeePercent",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 14608,
        "contract": "contracts/coordinape-protocol/contracts/colinks/CoLinks.sol:CoLinks",
        "label": "targetFeePercent",
        "offset": 0,
        "slot": "3",
        "type": "t_uint256"
      },
      {
        "astId": 14610,
        "contract": "contracts/coordinape-protocol/contracts/colinks/CoLinks.sol:CoLinks",
        "label": "baseFeeMax",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 14634,
        "contract": "contracts/coordinape-protocol/contracts/colinks/CoLinks.sol:CoLinks",
        "label": "linkBalance",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 14638,
        "contract": "contracts/coordinape-protocol/contracts/colinks/CoLinks.sol:CoLinks",
        "label": "linkSupply",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}