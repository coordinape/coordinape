version: 2.1

orbs:
  node: circleci/node@5.1.0
  path-filtering: circleci/path-filtering@0.1.5

parameters:
  hardhat:
    type: boolean
    default: false

jobs:
  static-checks:
    docker:
      - image: node:20
    resource_class: large
    parallelism: 2
    environment:
      PUPPETEER_SKIP_DOWNLOAD: true
    steps:
      - checkout
      - node/install:
          node-version: '20.11'
      - restore_cache:
          name: Restore pnpm Package Cache
          keys:
            - pnpm-static-pkg-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Install pnpm package manager
          command: |
            corepack enable
            corepack prepare pnpm@latest-8 --activate
      - run:
          name: Install Dependencies
          command: |
            pnpm install
      - save_cache:
          name: Save pnpm Package Cache
          key: pnpm-static-pkg-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - node_modules
      - run: pnpm typecheck
      - run: pnpm lint:check --format junit -o reports/junit/lint-results.xml
      - run: pnpm prettier:check
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit
  hardhat:
    machine:
      image: ubuntu-2204:2023.02.1
    environment:
      CI: 'true'
      DOCKER_GATEWAY_HOST: 172.17.0.1
      HARDHAT_FORK_BLOCK: 13500000
      IMAGES_AWS_BUCKET: coordinape
      LOCAL_POSTGRES_USER: postgres
      LOCAL_POSTGRES_PASSWORD: postgrespassword
      LOCAL_POSTGRES_DATABASE: postgres
      HARDHAT_GANACHE_PORT: 8546
    steps:
      - checkout
      - node/install:
          node-version: '20.11'
      - run: git submodule sync && git submodule update --init
      - restore_cache:
          name: Restore pnpm Package Cache
          keys:
            - pnpm-pkg-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Install pnpm package manager
          command: |
            corepack enable
            corepack prepare pnpm@latest-8 --activate
      - run:
          name: Install Dependencies
          command: |
            pnpm install
      - save_cache:
          name: Save pnpm Package Cache
          key: pnpm-pkg-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - node_modules
      - run: ./scripts/setup.sh
      - run: ./scripts/ci/manager.sh test --hardhat
      - run:
          command: pnpm typecheck
          working_directory: hardhat
  cypress:
    machine:
      image: ubuntu-2204:2023.02.1
    environment:
      CI: 'true'
      DOCKER_GATEWAY_HOST: 172.17.0.1
      HARDHAT_FORK_BLOCK: 13500000
      IMAGES_AWS_BUCKET: coordinape
      LOCAL_POSTGRES_USER: postgres
      LOCAL_POSTGRES_PASSWORD: postgrespassword
      LOCAL_POSTGRES_DATABASE: postgres
      NODE_TLS_REJECT_UNAUTHORIZED: 0
      SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION: 0
    steps:
      - checkout
      - node/install:
          node-version: '20.11'
      - run:
          name: check node version
          command: node --version
      - restore_cache:
          name: Restore pnpm Package Cache
          keys:
            - pnpm-pkg-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Install pnpm package manager
          command: |
            corepack enable
            corepack prepare pnpm@latest-8 --activate
      - run:
          name: Install Dependencies
          command: |
            pnpm install
      - save_cache:
          name: Save pnpm Package Cache
          key: pnpm-pkg-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - node_modules

      - run: pnpm cypress install
      - run: pnpm cypress verify
      - run: ./scripts/setup.sh
      - run: mkdir -p reports
      - run: ./scripts/ci/manager.sh test --cypress --reporter junit --reporter-options "mochaFile=reports/cy-test-[hash].xml,toConsole=false"
      - store_test_results:
          path: reports/
      - store_artifacts:
          path: reports/
      - store_artifacts:
          path: /home/circleci/project/cypress/videos/
      - store_artifacts:
          path: /home/circleci/project/cypress/screenshots/
  jest:
    machine:
      image: ubuntu-2204:2023.02.1
    environment:
      CI: 'true'
      DOCKER_GATEWAY_HOST: 172.17.0.1
      HARDHAT_FORK_BLOCK: 13500000
      IMAGES_AWS_BUCKET: coordinape
      LOCAL_POSTGRES_USER: postgres
      LOCAL_POSTGRES_PASSWORD: postgrespassword
      LOCAL_POSTGRES_DATABASE: postgres
      PUPPETEER_SKIP_DOWNLOAD: true
    steps:
      - run:
          name: check node version
          command: node --version
      - checkout
      - node/install:
          node-version: '20.11'
      - restore_cache:
          name: Restore pnpm Package Cache
          keys:
            - pnpm-pkg-{{ checksum "pnpm-lock.yaml" }}
      - run:
          name: Install pnpm package manager
          command: |
            corepack enable
            corepack prepare pnpm@latest-8 --activate
      - run:
          name: Install Dependencies
          command: |
            pnpm install
      - save_cache:
          name: Save pnpm Package Cache
          key: pnpm-pkg-{{ checksum "pnpm-lock.yaml" }}
          paths:
            - node_modules
      - run: ./scripts/setup.sh
      - run: ./scripts/ci/manager.sh test --jest --reporter=junit --outputFile=./test-results.xml
      - store_test_results:
          path: 'test-results.xml'
      - store_artifacts:
          path: 'test-results.xml'

workflows:
  static-checks:
    jobs:
      - static-checks
  hardhat:
    when: << pipeline.parameters.hardhat >>
    jobs:
      - hardhat:
          context:
            - CI
#  cypress:
#    jobs:
#      - cypress:
#          context:
#            - CI
  jest:
    jobs:
      - jest:
          context:
            - CI
