name: CI

on: [push, pull_request]

jobs:
  skip_duplicates:
    name: Skip duplicates
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@v5.2.0
        with:
          concurrent_skipping: 'same_content_newer'
          skip_after_successful_duplicate: false

  lint_and_typecheck:
    name: Static checks
    runs-on: ubuntu-latest
    needs: skip_duplicates
    if: ${{ needs.skip_duplicates.outputs.should_skip != 'true' }}
    env:
      CI: true
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: actions/setup-node@v3.5.1
        with:
          node-version: 16.x

      - name: Cache node_modules
        uses: actions/cache@v3.0.11
        with:
          path: '**/node_modules'
          key: nodeModules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - run: yarn --frozen-lockfile
      - run: yarn typecheck
      - run: yarn lint:check
      - run: yarn prettier:check

  chromatic:
    name: Publish to Chromatic
    runs-on: ubuntu-latest
    needs: skip_duplicates
    if: ${{ needs.skip_duplicates.outputs.should_skip != 'true' }}
    steps:
      - uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0 # Chromatic needs git history
      - uses: actions/setup-node@v3.5.1
        with:
          node-version: 16.x

      - name: Cache node_modules
        uses: actions/cache@v3.0.11
        with:
          path: '**/node_modules'
          key: nodeModules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - run: yarn --frozen-lockfile
      - uses: chromaui/action@v1
        with:
          projectToken: ${{ secrets.CHROMATIC_PROJECT_TOKEN }}

  test:
    name: Test suite
    runs-on: ubuntu-latest
    needs: skip_duplicates
    if: ${{ needs.skip_duplicates.outputs.should_skip != 'true' }}
    env:
      CI: true
      DOCKER_GATEWAY_HOST: 172.17.0.1
      ETHEREUM_RPC_URL: https://mainnet.infura.io/v3/275c8fc2ec294d6aac6bfc881d9a9dff
      HARDHAT_FORK_BLOCK: 13500000
      IMAGES_AWS_BUCKET: coordinape
      REACT_APP_INFURA_PROJECT_ID: 275c8fc2ec294d6aac6bfc881d9a9dff
      LOCAL_POSTGRES_USER: postgres
      LOCAL_POSTGRES_PASSWORD: postgrespassword
      LOCAL_POSTGRES_DATABASE: postgres
      LOCAL_SEED_ADDRESS: '0x21DF875603Ba765a15F9ae20e633D2DAe42952d9'

    steps:
      - uses: actions/checkout@v3.1.0
      - uses: actions/setup-node@v3.5.1
        with:
          node-version: 16.x

      - name: Cache node_modules
        uses: actions/cache@v3.0.11
        with:
          path: '**/node_modules'
          key: nodeModules-${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}

      - name: Cache hardhat/node_modules
        uses: actions/cache@v3.0.11
        with:
          path: '**/hardhat/node_modules'
          key: hardhatNodeModules-${{ runner.os }}-${{ hashFiles('**/hardhat/yarn.lock') }}

      - name: Cache Docker images
        uses: ScribeMD/docker-cache@0.2.6
        with:
          key: docker-${{ runner.os }}-${{ hashFiles('**/docker-compose.yml') }}

      - run: yarn --frozen-lockfile
      - run: yarn cypress install
      - run: yarn cypress verify
      - run: ./scripts/setup.sh
      - run: ./scripts/ci/manager.sh test --all

      - name: Save Cypress artifacts
        uses: actions/upload-artifact@v3.1.1
        if: failure()
        with:
          name: cy-artifacts
          path: |
            ./cypress/videos
            ./cypress/screenshots

      - name: Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./coverage/lcov.info

      - name: Save coverage report
        uses: actions/upload-artifact@v3.1.1
        with:
          name: coverage
          path: ./coverage
