{
  "settings": {
    "react": {
      "pragma": "React",
      "version": "detect"
    },
    "import/extensions": [
      ".js",
      ".jsx",
      ".ts",
      ".tsx"
    ],
    "import/parsers": {
      "@typescript-eslint/parser": [
        ".ts",
        ".tsx"
      ]
    }
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2018,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    }
  },
  "plugins": [
    "react",
    "react-hooks",
    "@typescript-eslint",
    "import",
    "jsx-a11y"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:jsx-a11y/recommended",
    "prettier"
  ],
  "env": {
    "es6": true,
    "node": true,
    "browser": true
  },
  "rules": {
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/no-empty-function": "off",
    "@typescript-eslint/ban-ts-comment": "off",
    "react/prop-types": "off",
    "no-console": [
      "warn",
      {
        "allow": [
          "warn",
          "error"
        ]
      }
    ],
    "semi": [
      "error",
      "always"
    ],
    "no-warning-comments": "off",
    "@typescript-eslint/no-unused-vars": [
      "error"
    ],
    "import/extensions": 0,
    "import/no-unresolved": 0,
    "import/no-extraneous-dependencies": [
      "off",
      {
        "optionalDependencies": false,
        "peerDependencies": false
      }
    ],
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          [
            "sibling",
            "index"
          ]
        ],
        // define material-ui group that will appear separately after other main externals
        "pathGroups": [
          {
            "group": "builtin",
            "pattern": "react"
          },
          {
            "group": "internal",
            "pattern": "@material-ui/**",
            "position": "after"
          },
          {
            "group": "parent",
            "pattern": "{assets,assets/**,icons,icons/**,components,components/**,config,config/**,layouts,layouts/**,pages,pages/**,routes,routes/**,recoilState,recoilState/**,services,services/**,styles,styles/**,theme,theme/**,utils,utils/**,hooks,hooks/**,forms,forms/**,ui,ui/**}"
          },
          {
            "group": "object",
            "pattern": "{types,types/**}"
          }
        ],
        "pathGroupsExcludedImportTypes": [],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "import/prefer-default-export": 0,
    "react/jsx-filename-extension": [
      1,
      {
        "extensions": [
          ".js",
          ".jsx",
          ".ts",
          ".tsx"
        ]
      }
    ],
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "off",
    "no-empty-function": "off",
    "jsx-a11y/click-events-have-key-events": "off",
    "jsx-a11y/no-static-element-interactions": "off",
    "react/react-in-jsx-scope": "off"
  },
  "overrides": [
    {
      "files": ["**/*.stories.*"],
      "rules": {
        "import/no-anonymous-default-export": "off"
      }
    },
    {
      "files": ["{api}/**/*.ts"],
      "plugins": ["unicorn"],
      "rules": {
        "unicorn/filename-case": [
          "error",
          {
            "case": "camelCase"
          }
        ]
      }
    },
    {
      "files": ["**/*.graphql"],
      "parser": "@graphql-eslint/eslint-plugin",
      "plugins": ["@graphql-eslint"],
      "rules": {
        "@graphql-eslint/known-type-names": "off",
        "@graphql-eslint/no-unreachable-types": "off",
        "@graphql-eslint/strict-id-in-types": "off",
        "@graphql-eslint/naming-convention": [
          "error",
          {
            "types": "PascalCase",
            "InputValueDefinition": "snake_case",
            "Argument": "snake_case",
            "FieldDefinition[parent.name.value!=Mutation]": "snake_case",
            "FieldDefinition[parent.name.value=Mutation]": "camelCase"
          }
        ]
      },
      "parserOptions": {
        "schema": "./hasura/metadata/actions.graphql"
      }
    }
  ]
}